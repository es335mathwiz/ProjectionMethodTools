(*  *)
Get["ProjectionInterface`"];
Get["paperFocus.mth"]
Get["thirdRecursion.mth"];
zSubNow = Nest[doRecurIneqOcc, {}, 2];
zSubNext = Nest[doRecurIneqOcc, zSubNow, 1];

zSubNext01 = Nest[doRecurIneqOcc, zSubNext, 1];


(*

modSymb=Unique["modSymb"];
modClass=Unique["modClass"];
zVarNames=Flatten[ProjectionInterface`Private`redoGenZVars[numZs,1]]/.ProjectionInterface`Private`ridTSubs;
numZs=Length[zSubNow]
xVarsNoT=Drop[Flatten[genXVars[numZs,1],1],0]
xVars=Through[#[Global`t]]&/@xVarsNoT
thePath=genPath[numZs+1]/.
{Global`qtm1->(xVars[[-1,1]]/.Global`t->Global`t-1),Global`rtm1->Global`rr[Global`t-1],
Global`rutm1->(xVars[[-1,2]]/.Global`t->Global`t-1),Global`eps->Global`eps[Global`ru][Global`t]}
xTp1Vals=MapThread[{
#2[[1]][#3[[1]][Global`t],#3[[2]][Global`t],0],
#2[[2]][#3[[1]][Global`t],#3[[2]][Global`t],0]}&,
{Drop[xVars,-1],Drop[zSubNow,0],Drop[xVarsNoT,1]}];
xTp1Subs=Thread[Flatten[Drop[xVars,-1]]->Flatten[xTp1Vals]];
xTp1Eqns=ProjectionInterface`Private`subOutPiecewise[
Thread[Flatten[Drop[Drop[xVars,-1],1]]-Flatten[Drop[xTp1Vals,1]]]];

zZap=(zVarNames[[-1]][Global`t]/.Flatten[Solve[thePath[[5,1]]==Global`rUnderBar//Global`numIt,zVarNames[[-1]][Global`t]]])//Expand
zSubs=
MapThread[(#1[Global`t]->
#2[[-1]][#3[[1]],#3[[2]],0])&,
{Drop[zVarNames,-1],zSubNow,xTp1Vals}]
zEqns=ProjectionInterface`Private`subOutPiecewise[zSubs/.HoldPattern[xx_->yy_]->xx  -(yy)]
theEqns=Join[
	({xVars[[-1,1]]-(thePath[[4,1]]),xVars[[-1,2]]-(thePath[[6,1]])})//Expand,
{Global`discrep[Global`t]-((thePath[[5,1]]/.zVarNames[[-1]][Global`t]->0)-Global`rUnderBar//Global`numIt)},
zEqns,
{zVarNames[[-1]][Global`t]-(Global`eqvdIf[Global`discrep[Global`t]>=0,0,zZap//Expand]//Expand)}//Expand]
*)
(*
thePos=Reverse[{1,3}+#&/@(3*Range[numZs])]

},
With[{
},
With[{},
With[{},
With[{
},
Print["theEqns=",theEqns//InputForm];
newWeightedStochasticBasis[modSymb,(theEqns)//Expand];



*)

Get["prep.mth"]
Print["without expectations this takes about 3 minutes on a linux box"]
(*compute z1 for time zero constrint and time t+1 constraint*)
Print["now for two"]

aPath02=genPath[2]
try02={
((aPath02[[5,1]]>=0.02&&zzz$1$1[t]==0)||
(aPath02[[5,1]]==0.02&&zzz$1$1[t]>=0))&&
((aPath02[[8,1]]>=0.02&&zzz$0$1[t]==0)||
(aPath02[[8,1]]==0.02&&zzz$0$1[t]>=0))
}
Export["prettyEqns02A.pdf",
MatrixForm[(try02[[1,1]]//myN//FullSimplify)//. latexSubs]]
Export["prettyEqns02B.pdf",
MatrixForm[(try02[[1,2]]//myN//FullSimplify)//. latexSubs]]

try02Func=Function @@ {{qtm1,rutm1,eps},try02}
try02Vals[qtm1_?NumberQ,rutm1_?NumberQ,eps_?NumberQ]:=
{zzz$0$1[t],zzz$1$1[t]}/.Flatten[Solve[try02Func[qtm1,rutm1,eps],{zzz$1$1[t],zzz$0$1[t]}]]

aPath02ExtFunc[qtm1Arg_?NumberQ,rutm1Arg_?NumberQ,epsArg_?NumberQ]:=  
With[{tp=genPath[2,1]/.{qtm1->qtm1Arg,rutm1->rutm1Arg,eps->epsArg},
tVals=try02Vals[qtm1Arg,rutm1Arg,epsArg]},
tp/.{zzz$0$1[t]:>tVals[[1]],
zzz$1$1[t]:>tVals[[2]]}]
hmatApp02[qtm1_?NumberQ,rutm1_?NumberQ,eps_?NumberQ]:=
With[{tp=aPath02ExtFunc[qtm1,rutm1,eps]},
Join[hmatN.tp[[Range[9]]],hmatN.tp[[Range[9]+3]]]//Chop]






projResults=genProjResults @@ ({modSymb,theEqns,modClass,lucaBasis,simp}=genProjComponents[2])
num02=genPolyFuncs[modSymb,projResults]

aBasis=projResults[getTheWeightedStochasticBasis[]];
{{qLow,qHigh},{ruLow,ruHigh},{epsLow,epsHigh}}=aBasis[getRanges[]];
theStatePoly = aBasis[getTheState[]];
nodePts01=theStatePoly[getXformedChebNodePts[]];
nodePts01Subs=gtXFormedChebSubsNotStrings[aBasis];
numEpsilon=Length[Union[nodePts01[[All,3]]]];
numOuterOther=Length[nodePts01]/numEpsilon;
ptsSByEpsilon=Partition[Sort[nodePts01,#[[3]]>#2[[3]]&],numOuterOther];
zeroColloc=ListPointPlot3D[ReplacePart[#,3->0]&/@ ptsSByEpsilon[[3]],
PlotStyle->{PointSize[.04]}]

redExport["prettyrr02.pdf",r02G=
Plot3D[aPath02ExtFunc[qtm1,rutm1,0][[5,1]],{qtm1,qLow,qHigh},{rutm1,ruLow,ruHigh},
PlotRange->All,
PlotLabel->
{"\!\(\*SubscriptBox[\(r\), \(t\)]\)[q,r,0]  constraint for two periods"}]]

redExport["prettyNumDiff02.pdf",numDiff02G=
Show[Plot3D[(try02Vals[qq,ru,0][[-1]]-num02[[-3]][qq,ru,0]),{qq,qLow,qHigh},{ru,ruLow,ruHigh},PlotLabel->
{"\!\(\*SubscriptBox[\(z\), \(t\)]\)[q,r,0] - \(\*SubscriptBox[\(z\), \(t\)]\)[q,r,0] constraint for two symbolic less numeric"}],zeroColloc,DisplayFunction->$DisplayFunction]]




redExport["prettyhapp02A.pdf",happ02AG=
Plot3D[hmatApp02[qtm1,rutm1,0][[2,1]],{qtm1,qLow,qHigh},{rutm1,ruLow,ruHigh},
PlotRange->All,PlotLabel->
{"\!\(\*SubscriptBox[\(H\), \(2\)]\)[q,r,0]  constraint for two periods"}]]

redExport["prettyhapp02B.pdf",happ02BG=
Plot3D[hmatApp02[qtm1,rutm1,0][[5,1]],{qtm1,qLow,qHigh},{rutm1,ruLow,ruHigh},
PlotRange->All,PlotLabel->
{"\!\(\*SubscriptBox[\(H\), \(5\)]\)[q,r,0]  constraint for two periods"}]]



If[NumberQ[aPath01ExtFunc[.1,.1,0][[5,1]]],
redExport["prettyrr01lessrr02.pdf",diffr01$02G=
Plot3D[{aPath01ExtFunc[qtm1,rutm1,0][[5,1]]-aPath02ExtFunc[qtm1,rutm1,0][[5,1]]},{qtm1,qLow,qHigh},{rutm1,ruLow,ruHigh},
PlotRange->All,PlotLabel->
{"\!\(\*SubscriptBox[\(r\), \(t\)]\)[q,r,0] - \(\*SubscriptBox[\(r\), \(t\)]\)[q,r,0] constraint for one less two periods"}]]
]





redExport["prettyhapp02A.pdf",
Plot3D[hmatApp02[qtm1,rutm1,0][[2,1]],{qtm1,qLow,qHigh},{rutm1,ruLow,ruHigh},
PlotRange->All,PlotLabel->
{"\!\(\*SubscriptBox[\(H\), \(2\)]\)[q,r,0]  constraint for two periods"}]]

redExport["prettyhapp02B.pdf",
Plot3D[hmatApp02[qtm1,rutm1,0][[5,1]],{qtm1,qLow,qHigh},{rutm1,ruLow,ruHigh},
PlotRange->All,PlotLabel->
{"\!\(\*SubscriptBox[\(H\), \(5\)]\)[q,r,0]  constraint for two periods"}]]




Needs["simpleRBCModel`"]
Needs["AMASeriesRepresentation`"]




kVal=kk/.Private`kSSSub//.Private`tog//N;
kLow=.01*kVal;
kHigh=4*kVal;
sigVal=sigma//.Private`tog//N;
sigLow=-3*sigVal;
sigHigh=3*sigVal;
thLow=.9;
thHigh=1.1;
aGSpec={1,{10,kLow,kHigh},{10,thLow,thHigh},{10,sigLow,sigHigh}};

notpsicExt=Private`psicExt;

Print["aGSpec=",aGSpec];
(*00*)
solnSubsExt00=
Private`makeConstraintFindRootFunc[Private`hFuncExt,{Private`bmatExt//N,Private`phimatExt//N,Private`fmatExt//N,Private`psiepsExt//N,notpsicExt//N,Private`psizExt//N},{}];


solnFuncsExt00=Private`subsFuncToVecFunc[solnSubsExt00];
solnFuncsExt00Interp=Private`makeInterpFunc[solnFuncsExt00,{1,3},aGSpec]
solnFuncsExt00PF=Private`makeInterpFuncPF[solnFuncsExt00,{1,3},aGSpec,1]
solnFuncsExt00RE=Private`makeInterpFuncRE[solnFuncsExt00,{1,3},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]

ZZksExt00=solnFuncsExt00RE[[8+Range[4]]]

Print["done one"]

(*01*)



solnSubsExt01=
Private`makeConstraintFixedPointFunc[Private`hFuncExt,{Private`bmatExt//N,Private`phimatExt//N,Private`fmatExt//N,Private`psiepsExt//N,notpsicExt//N,Private`psizExt//N},ZZksExt00,{},{{.2},{.3},{.2},{.9}},{1,3}];

solnFuncsExt01=Private`subsFuncToVecFunc[solnSubsExt01];
solnFuncsExt01Interp=Private`makeInterpFunc[solnFuncsExt01,{1,3},aGSpec]
solnFuncsExt01RE=Private`makeInterpFuncRE[solnFuncsExt01,{1,3},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]

ZZksExt01=Private`prepNextZZksPForRE[solnFuncsExt01Interp[[{2,4}]],solnFuncsExt01RE[[8+Range[4]]],ZZksExt00,1]


Print["done one"]


(*02*)

solnSubsExt02=
Private`makeConstraintFixedPointFunc[Private`hFuncExt,{Private`bmatExt//N,Private`phimatExt//N,Private`fmatExt//N,Private`psiepsExt//N,notpsicExt//N,Private`psizExt//N},ZZksExt01,{},{{.2},{.3},{.2},{.9}},{1,3}];

solnFuncsExt02=Private`subsFuncToVecFunc[solnSubsExt02];
solnFuncsExt02Interp=Private`makeInterpFunc[solnFuncsExt02,{1,3},aGSpec]
solnFuncsExt02RE=Private`makeInterpFuncRE[solnFuncsExt02,{1,3},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]

ZZksExt02=Private`prepNextZZksPForRE[solnFuncsExt02Interp[[{2,4}]],solnFuncsExt02RE[[8+Range[4]]],ZZksExt01,1]


Print["done one"]



(*03*)


solnSubsExt03=
Private`makeConstraintFindRootFunc[Private`hFuncExt,{Private`bmatExt//N,Private`phimatExt//N,Private`fmatExt//N,Private`psiepsExt//N,notpsicExt//N,Private`psizExt//N},ZZksExt02,{},{{.2},{.3},{.2},{.9}},{1,3}];

solnFuncsExt03=Private`subsFuncToVecFunc[solnSubsExt03];
solnFuncsExt03Interp=Private`makeInterpFunc[solnFuncsExt03,{1,3},aGSpec]
solnFuncsExt03RE=Private`makeInterpFuncRE[solnFuncsExt03,{1,3},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]

ZZksExt03=Private`prepNextZZksPForRE[solnFuncsExt03Interp[[{2,4}]],solnFuncsExt03RE[[8+Range[4]]],ZZksExt02,1]


Print["done one"]

(*04*)


solnSubsExt04=
Private`makeConstraintFindRootFunc[Private`hFuncExt,{Private`bmatExt//N,Private`phimatExt//N,Private`fmatExt//N,Private`psiepsExt//N,notpsicExt//N,Private`psizExt//N},ZZksExt03,{},{{.2},{.3},{.2},{.9}},{1,3}];

solnFuncsExt04=Private`subsFuncToVecFunc[solnSubsExt04];
solnFuncsExt04Interp=Private`makeInterpFunc[solnFuncsExt04,{1,3},aGSpec]
solnFuncsExt04RE=Private`makeInterpFuncRE[solnFuncsExt04,{1,3},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]

ZZksExt04=Private`prepNextZZksPForRE[solnFuncsExt04Interp[[{2,4}]],solnFuncsExt04RE[[8+Range[4]]],ZZksExt03,1]


nxtPr[ZZksExtnnm1:{_InterpolatingFunction..}]:=
Module[{},
With[{solnSubsExtnn=
Private`makeConstraintFindRootFunc[Private`hFuncExt,{Private`bmatExt//N,Private`phimatExt//N,Private`fmatExt//N,Private`psiepsExt//N,notpsicExt//N,Private`psizExt//N},ZZksExtnnm1,{},{{.2},{.3},{.2},{.9}},{1,3}]},
With[{solnFuncsExtnn=Private`subsFuncToVecFunc[solnSubsExtnn]},
With[{solnFuncsExtnnInterp=Private`makeInterpFunc[solnFuncsExtnn,{1,3},aGSpec]},
With[{solnFuncsExtnnRE=Private`makeInterpFuncRE[solnFuncsExtnn,{1,3},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]},
With[{ZZksExtnn=Private`prepNextZZksPForRE[solnFuncsExtnnInterp[[{2,4}]],solnFuncsExtnnRE[[8+Range[4]]],ZZksExtnnm1,1]},
{solnFuncsExtnnInterp,ZZksExtnn}]]]]]]

Print["done one"]

Print["doing nestlist"]
theResRE=NestList[nxtPr[#[[2]]]&,{ig,ZZksExt03},10];

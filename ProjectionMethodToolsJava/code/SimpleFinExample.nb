(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    707059,      13754]
NotebookOptionsPosition[    692630,      13277]
NotebookOutlinePosition[    693250,      13300]
CellTagsIndexPosition[    693207,      13297]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Simple Example", "Title"],

Cell["Gary S. Anderson", "Author",
 CellChangeTimes->{{3.6172005766837215`*^9, 3.617200602415076*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9, {3.6181659633773193`*^9, 
   3.6181659731273193`*^9}, 3.618166013126069*^9, {3.6181660574148192`*^9, 
   3.6181661332398195`*^9}, 3.6181663014170694`*^9}],

Cell[CellGroupData[{

Cell["Luca\[CloseCurlyQuote]s Simplest Financial Market Model", "Section"],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"daSubs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "ProjectionInterface`Private`EquationValDrv", 
      "[", "\<\"qq$tm1.times(-1).times(rhop).plus(qq$t.plus(forInt3).plus(rr$\
t.times(sigmap)).plus(ru$t.times(-1)))\"\>", "]"}], ",", 
     RowBox[{
     "ProjectionInterface`Private`EquationValDrv", 
      "[", "\<\"qq$t.times(-1).times(phip).plus(rr$t)\"\>", "]"}], ",", 
     RowBox[{
     "ProjectionInterface`Private`EquationValDrv", 
      "[", "\<\"ru$t.plus(ru$tm1.times(-1).times(rho$ru)).plus(uu$Shock$tm1.\
times(-1).times(adj))\"\>", "]"}]}], "}"}]}],
  SequenceForm["daSubs=", {
    ProjectionInterface`Private`EquationValDrv[
    "qq$tm1.times(-1).times(rhop).plus(qq$t.plus(forInt3).plus(rr$t.times(\
sigmap)).plus(ru$t.times(-1)))"], 
    ProjectionInterface`Private`EquationValDrv[
    "qq$t.times(-1).times(phip).plus(rr$t)"], 
    ProjectionInterface`Private`EquationValDrv[
    "ru$t.plus(ru$tm1.times(-1).times(rho$ru)).plus(uu$Shock$tm1.times(-1).\
times(adj))"]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6180477957619686`*^9, 3.6180600832269883`*^9, 
  3.618163298575569*^9}],

Cell[BoxData["\<\"\\\"c:\\\\Program \
Files\\\\Java\\\\jdk1.7.0_51\\\\bin\\\\javac\\\" -cp \
./;ProjectionMethodToolsJava-0.0.1-SNAPSHOT.jar;Jama-1.0.2-1.0-SNAPSHOT.jar  \
-target 1.7 ./lucaMod.java\"\>"], "Print",
 CellChangeTimes->{3.6180477957619686`*^9, 3.6180600832269883`*^9, 
  3.6181632986118193`*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"goodQkArray", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucaMat", "=", 
  RowBox[{
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.617627763020282*^9, 3.617627766890321*^9}, {
   3.617627799922654*^9, 3.6176278399040537`*^9}, {3.6176278824864836`*^9, 
   3.6176281084647675`*^9}, {3.6177381889885225`*^9, 
   3.6177381911185436`*^9}, {3.6177383746603785`*^9, 3.617738413470767*^9}, {
   3.6177385310319424`*^9, 3.6177386394130263`*^9}, {3.6177959800565042`*^9, 
   3.6177959979666834`*^9}, {3.617797284849552*^9, 3.6177972872395763`*^9}, {
   3.6178012830255404`*^9, 3.617801310705817*^9}, {3.6178068828165636`*^9, 
   3.6178069017467527`*^9}, 3.617807018587921*^9, {3.6178943096991043`*^9, 
   3.6178943124091315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.13387113268194584`", ",", "0.04938370437445493`", ",", 
     "0.`", ",", "0.059994568933253896`", ",", "0.`", ",", "0.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.08`", ",", "0.`", ",", "0.09718925656664626`", 
     ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.13387113268194584`", ",", "0.04938370437445493`", ",", 
     "0.`", ",", "0.059994568933253896`", ",", "0.`", ",", "0.`", ",", 
     "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478596419687`*^9, 3.618060133152232*^9, 
  3.618163317346569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5354845307277833`", ",", 
       RowBox[{"-", "0.5354845307277833`"}], ",", "0.6172963046806865`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5354845307277833`", ",", "0.4645154692722171`", ",", 
       "0.6172963046806865`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.618047859751969*^9, 3.61806013325099*^9, 
  3.6181633173665695`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"lucaBasis", "[", 
    RowBox[{"setAllWeights", "[", 
     RowBox[{"lucaMat", "+", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"200", 
          RowBox[{"Random", "[", "]"}]}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], "]"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"simp", "=", 
     RowBox[{
     "JavaNew", "[", 
      "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"\
", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"res1$1$1", "=", 
     RowBox[{"ComputeInitialCollocationWeights", "[", 
      RowBox[{"lucaBasis", ",", "lucaMat", ",", "modEqns", ",", "simp"}], 
      "]"}]}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"res1$1$1", "[", 
       RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
      RowBox[{"polys1$1$1", "=", 
       RowBox[{
        RowBox[{"genPolys", "[", 
         RowBox[{
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
        "Chop"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
       "*)"}], ",", 
      "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"1.`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.618047861231969*^9, 3.6180601344698377`*^9, 
  3.618163332059069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ushk", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, 3.617539650968808*^9, {
   3.617539771520014*^9, 3.617539771530014*^9}, {3.6175447381456804`*^9, 
   3.6175447847461467`*^9}, {3.6176152216606865`*^9, 3.617615223130701*^9}, {
   3.617729256863103*^9, 3.6177292659831944`*^9}, {3.6178125174749517`*^9, 
   3.6178125207149844`*^9}, 3.617897909905138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478620519686`*^9, 3.6180601348486176`*^9, 
  3.6181633325328193`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175390631259155`*^9}, 3.6175396509788084`*^9, {3.617539771530014*^9, 
   3.617539771530014*^9}, 3.617726982672346*^9, {3.6178125554353313`*^9, 
   3.6178125576453533`*^9}, 3.617897982661892*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.617539651018809*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.617703168939221*^9, 3.617703170609154*^9}, {
   3.6177251642891626`*^9, 3.617725171869238*^9}, 3.617897983211898*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478621419687`*^9, 3.618060134939875*^9, 
  3.618163332587819*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.6175396510288086`*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.6177251761492805`*^9, 3.6177251785693054`*^9}, 
   3.617726984322363*^9, {3.6178134560223618`*^9, 3.6178134697124987`*^9}, 
   3.6178979837519026`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.617539651048809*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.617725218189701*^9, 3.61772522000972*^9}, {
   3.6178134784125853`*^9, 3.6178134801226025`*^9}, 3.617897986241928*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.1720033044948844`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.017319066954171472`"}], "}"}], ",", 
   RowBox[{"{", "0.1021642000083067`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08715817144074917`"}], "}"}], ",", 
   RowBox[{"{", "0.0871581714407492`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.10216420000830667`"}], "}"}], ",", 
   RowBox[{"{", "0.017319066954171493`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17200330449488438`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862211969*^9, 3.618060135036133*^9, 
  3.618163332640319*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.6175396510588093`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252370898905`*^9, 3.6177252404999247`*^9}, 
   3.61772699007242*^9, 3.6178979869219346`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.6175396510688095`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252488600082`*^9, 3.6177252514100337`*^9}, {
   3.6178134902427034`*^9, 3.6178134918127193`*^9}, 3.617897987691942*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.08472361378071384`", "}"}], ",", 
   RowBox[{"{", "0.03403401316487946`", "}"}], ",", 
   RowBox[{"{", "0.031105181491203136`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.019584419124631255`"}], "}"}], ",", 
   RowBox[{"{", "0.019584419124631273`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.03110518149120312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.034034013164879424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08472361378071382`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478624319687`*^9, 3.61806013512614*^9, 
  3.618163332694069*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.6175396510788097`*^9, {3.617539780840107*^9, 
   3.617539780850107*^9}, {3.617725260960129*^9, 3.617725262840148*^9}, 
   3.6177269918424377`*^9, 3.6178979883419485`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.6175392088874583`*^9, 3.6175394582869225`*^9, 
   3.6175396510988097`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, {
   3.6177106269615965`*^9, 3.617710632491652*^9}, {3.6177252781303005`*^9, 
   3.617725279760317*^9}, 3.617897989161957*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862501969*^9, 3.618060135213647*^9, 
  3.6181633327428193`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.617539208947458*^9, 3.617539467326923*^9, 
   3.6175396511088095`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.617725307870598*^9, 3.6177269974024935`*^9, {3.617813504982851*^9, 
   3.617813510372905*^9}, 3.6178138325861273`*^9, 3.617897990611972*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rut", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.617539479096923*^9, 
   3.61753965114881*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.6177253085806055`*^9, 3.617813838136183*^9, 3.617897991391979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.12529172487167858`", "}"}], ",", 
   RowBox[{"{", "0.12529172487167858`", "}"}], ",", 
   RowBox[{"{", "0.012154639881830978`", "}"}], ",", 
   RowBox[{"{", "0.012154639881830978`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.01215463988183095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.01215463988183095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.12529172487167856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.12529172487167856`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862581969*^9, 3.618060135303654*^9, 
  3.6181633328040695`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175394824969225`*^9, 
   3.61753965114881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725310980629*^9, 3.617726995772477*^9, 3.6178979921219864`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175394837869225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.6177253135206547`*^9, {3.6178135164529657`*^9, 3.617813518572987*^9}, 
   3.6178979926919923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.06264586243583929`", "}"}], ",", 
   RowBox[{"{", "0.06264586243583929`", "}"}], ",", 
   RowBox[{"{", "0.00607731994091548`", "}"}], ",", 
   RowBox[{"{", "0.00607731994091548`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.006077319940915471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.006077319940915471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06264586243583928`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06264586243583928`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478626619687`*^9, 3.6180601353936615`*^9, 
  3.618163332831569*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.6175394860369225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725316300682*^9, 3.617727031702837*^9, 3.617897993301998*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.6175396511888103`*^9, {
   3.617539859270891*^9, 3.6175398592808914`*^9}, 3.617725318670706*^9, {
   3.617813531043112*^9, 3.6178135320331216`*^9}, 3.6178979939920053`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.1720033044948844`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.017319066954171472`"}], "}"}], ",", 
   RowBox[{"{", "0.1021642000083067`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08715817144074917`"}], "}"}], ",", 
   RowBox[{"{", "0.0871581714407492`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.10216420000830667`"}], "}"}], ",", 
   RowBox[{"{", "0.017319066954171493`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17200330449488438`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862961969*^9, 3.618060135574926*^9, 
  3.6181633330328193`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175396511888103`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.6177253196207156`*^9, 
   3.6177270480029993`*^9, 3.6178979946020117`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175396511988106`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725320590725*^9, {
   3.6178135365931673`*^9, 3.617813538953191*^9}, 3.617897995162017*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.08472361378071384`", "}"}], ",", 
   RowBox[{"{", "0.03403401316487946`", "}"}], ",", 
   RowBox[{"{", "0.031105181491203136`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.019584419124631255`"}], "}"}], ",", 
   RowBox[{"{", "0.019584419124631273`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.03110518149120312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.034034013164879424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08472361378071382`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478630519686`*^9, 3.6180601357336884`*^9, 
  3.6181633330978193`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.617539651208811*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725322270742*^9, 
   3.617727051953039*^9, 3.6178979958220234`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res2$2$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res2$2$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"1.`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6180478633719687`*^9, 3.618060135972458*^9, 
  3.6181633333790693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res3$3$1", "=", 
   RowBox[{"res2$2$1", "[", 
    RowBox[{"toOrder", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res3$3$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys3$3$1", "=", 
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
    "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"1.`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6180478638919687`*^9, 3.618060136324986*^9, 
  3.618163333702819*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command, GenerateModelCode, outputs lists of state variables, non-state \
variables and shocks along with an instance of the class associated with the \
model."
}], "Text",
 CellChangeTimes->{3.6175329697524137`*^9, 3.617900660424797*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oldBetap", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"get$betap", "[", "]"}], "]"}]}]], "Input"],

Cell[BoxData["0.99`"], "Output",
 CellChangeTimes->{3.618047863941969*^9, 3.618060136363739*^9, 
  3.618163333739069*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", ".5", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"modEqns", "[", 
  RowBox[{"get$betap", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", "oldBetap", "]"}], "]"}]}], "Input"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.618047863981969*^9, 3.618060136413743*^9, 
  3.6181633337715693`*^9}]
}, Open  ]],

Cell["\<\
One can also get and update (should be \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote], but it isn\[CloseCurlyQuote]t yet) all the model \
parameters simultaneously \
\>", "Text",
 CellChangeTimes->{{3.617531730237169*^9, 3.617531790921002*^9}, {
  3.6175318473302345`*^9, 3.6175318776722345`*^9}, {3.6179006868050604`*^9, 
  3.6179006931551237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"theOldParams", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"getParams", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "theOldParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175318845050344`*^9, 3.6175319564834347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.99`", ",", "1.`", ",", "0.5`", ",", "0.5`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.618047864001969*^9, 3.6180601364624968`*^9, 
  3.618163333787819*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"theStatePoly", "=", 
   RowBox[{"lucaBasis", "[", 
    RowBox[{"getTheState", "[", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175336874341993`*^9, 3.617533734673255*^9}}],

Cell["The polynomial ranges", "Item",
 CellChangeTimes->{{3.6175338258124323`*^9, 3.6175338467320137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getRanges", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09718925656664625`"}], ",", "0.09718925656664625`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047864031969*^9, 3.618060136537503*^9, 
  3.6181633338165693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getOrders", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}, {
  3.617533906331788*^9, 3.617533915991788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6180478640519686`*^9, 3.618060136572506*^9, 
  3.618163333832819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPhiFunc", "[", 
    RowBox[{"#", ",", "lucaBasis"}], "]"}], "&"}], "/@", " ", 
  RowBox[{"theStatePoly", "[", 
   RowBox[{"getStateVariableNames", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175341379817877`*^9, 3.6175341887334027`*^9}, {
  3.6176184695331807`*^9, 3.617618470953195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"2.`", " ", "\<\"qq\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"6.25`", " ", "\<\"ru\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"10.289203100491495`", " ", "\<\"uu$Shock\"\>"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.618047864251969*^9, 3.6180601366850147`*^9, 
  3.618163333869069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Join", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"lucaMat", ","}], "*)"}], 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{
       RowBox[{"getTheGrid", "[", "]"}], "[", 
       RowBox[{"generatePolyOrdersForOuterProduct", "[", "]"}], "]"}], "]"}], 
     "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6176160776422462`*^9, 3.6176161235027046`*^9}, {
   3.617616246203932*^9, 3.6176163025654955`*^9}, {3.617619782800314*^9, 
   3.617619787320359*^9}, 3.61789905024457*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "1", "0", "1", "0", "1", "0", "1"},
    {"0", "0", "1", "1", "0", "0", "1", "1"},
    {"0", "0", "0", "0", "1", "1", "1", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.618047864311969*^9, 3.6180601367962737`*^9, 
  3.618163333890319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getTheGrid", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.617626649969055*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{
    "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
     "ProjectionMethodToolsJava", ".", "GridPointsSpec"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm2`JavaObject5308795500625921]], "Output",
 CellChangeTimes->{3.6180478643819685`*^9, 3.6180601368312764`*^9, 
  3.6181633339078193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getStateVariableNames", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175357853313556`*^9, 3.617535796611356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>", ",", "\<\"uu$Shock\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6180478645919685`*^9, 3.618060136866279*^9, 
  3.618163333926569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.617534500160631*^9, 3.6175345117608633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"2.`", " ", "\<\"qq\"\>"}], ",", 
   RowBox[{"6.25`", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"12.5`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"10.289203100491495`", " ", "\<\"uu$Shock\"\>"}], ",", 
   RowBox[{"20.57840620098299`", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{"64.30751937807185`", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{
   "128.6150387561437`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", 
    " ", "\<\"uu$Shock\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047864981969*^9, 3.61806013712505*^9, 
  3.618163334181569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175345957204895`*^9, 3.6175345996202946`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047865001969*^9, 3.6180601371613026`*^9, 
  3.6181633342853193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}], "]"}]}], "//.", 
   "lucaSubs"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6177966373630776`*^9, 3.6177966786634903`*^9}, 
   3.617796709883803*^9, {3.6177967757344613`*^9, 3.617796776974474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047865071969*^9, 3.6180601371950555`*^9, 
  3.6181633343040695`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.6175346707167397`*^9, 3.617534680446253*^9}, {
  3.617534729073821*^9, 3.617534736143468*^9}, {3.617535094504675*^9, 
  3.6175350948646708`*^9}, {3.6175364743190355`*^9, 3.6175364745190372`*^9}, {
  3.6175365680499725`*^9, 3.6175365685399776`*^9}, {3.6175366308609433`*^9, 
  3.6175366319509106`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.7071067811865476`", ",", 
     "0.5`", ",", "0.7071067811865474`", ",", "0.49999999999999983`", ",", 
     "0.49999999999999994`", ",", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.7071067811865476`", ",", 
     RowBox[{"-", "0.5`"}], ",", "0.7071067811865474`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.49999999999999994`", ",", 
     RowBox[{"-", "0.35355339059327373`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.4999999999999999`"}], ",", "0.7071067811865474`", ",", 
     "0.49999999999999983`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.3535533905932736`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.4999999999999999`", ",", 
     "0.7071067811865474`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.3535533905932736`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.7071067811865476`", ",", 
     "0.5`", ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.49999999999999994`"}], ",", 
     RowBox[{"-", "0.35355339059327373`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.7071067811865476`", ",", 
     RowBox[{"-", "0.5`"}], ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", "0.49999999999999983`", ",", 
     RowBox[{"-", "0.49999999999999994`"}], ",", "0.35355339059327373`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.4999999999999999`"}], ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.49999999999999983`", ",", 
     "0.3535533905932736`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.4999999999999999`", ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", "0.49999999999999983`", ",", 
     "0.49999999999999983`", ",", 
     RowBox[{"-", "0.3535533905932736`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478656419687`*^9, 3.6180601376963453`*^9, 
  3.618163334840319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", "lucaMat", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}], "]"}]}], "//.", 
   "lucaSubs"}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{{3.617796291899623*^9, 3.6177962958796625`*^9}, {
   3.6177963821205254`*^9, 3.617796409490799*^9}, 3.617898737399439*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.09914105652431512`", ",", 
     RowBox[{"-", "0.009982544235962516`"}], ",", "0.05888646591720689`", ",", 
     RowBox[{"-", "0.05023713484307075`"}], ",", "0.05023713484307075`", ",", 
     RowBox[{"-", "0.05888646591720689`"}], ",", "0.009982544235962516`", ",", 
     RowBox[{"-", "0.09914105652431512`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09914105652431512`", ",", 
     RowBox[{"-", "0.009982544235962516`"}], ",", "0.05888646591720689`", ",", 
     RowBox[{"-", "0.05023713484307075`"}], ",", "0.05023713484307075`", ",", 
     RowBox[{"-", "0.05888646591720689`"}], ",", "0.009982544235962516`", ",", 
     RowBox[{"-", "0.09914105652431512`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08600165224744219`", ",", 
     RowBox[{"-", "0.008659533477085743`"}], ",", "0.051082100004153336`", 
     ",", 
     RowBox[{"-", "0.0435790857203746`"}], ",", "0.0435790857203746`", ",", 
     RowBox[{"-", "0.051082100004153336`"}], ",", "0.008659533477085743`", 
     ",", 
     RowBox[{"-", "0.08600165224744219`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478662619686`*^9, 3.6180601382288885`*^9, 
  3.618163335354069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"theStatePoly", "[", 
    RowBox[{"getStateVariablePolynomialWeights", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175382216625147`*^9, 3.6175382283435817`*^9}, {
  3.6178987697897635`*^9, 3.6178987712997785`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.13387113268194584`", ",", "0.04938370437445493`", ",", "0", 
     ",", "0.059994568933253896`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0.08`", ",", "0", ",", "0.09718925656664626`", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047866291969*^9, 3.6180601383376465`*^9, 
  3.6181633354390693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lucaBasis", "[", 
     RowBox[{"getTheNonState", "[", "]"}], "]"}], "[", 
    RowBox[{"getRelevantWeightsNSP", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175383075943737`*^9, 3.617538338314681*^9}, {
  3.6178987739598045`*^9, 3.6178987756698217`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0.13387113268194584`", ",", "0", ",", "0", ",", 
    "0.04938370437445493`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
    "0.059994568933253896`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.618047866321969*^9, 3.6180601383714*^9, 
  3.618163335462819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysVal", "=", 
   RowBox[{"modEqns", "[", 
    RowBox[{"updateValDrv", "[", "lucaBasis", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sysVal", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sysVal", "[", 
     RowBox[{"getTheJac", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175400669839687`*^9, 3.6175402734860334`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Java", "::", "excptn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A Java exception occurred: \
\[NoBreak]\\!\\(\\\"java.lang.ArrayIndexOutOfBoundsException: Submatrix \
indices\\\\n\\\\tat Jama.Matrix.getMatrix(Matrix.java:297)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateCurrentVarTime.doValSwitch(\
NonStateCurrentVarTime.java:62)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateVarTime.evalVarNonState(\
NonStateVarTime.java:40)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateVarTime.evalVar(\
NonStateVarTime.java:26)\\\\n\\\\tat \
lucaMod.updateValDrv(lucaMod.java:60)\\\"\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6180478671219687`*^9, 3.6180601391439614`*^9, 
  3.618163336090319*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"$Failed", "[", 
    RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6180478672219687`*^9, 3.6180601391714635`*^9, 
  3.618163336096569*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"$Failed", "[", 
    RowBox[{"getTheJac", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6180478672219687`*^9, 3.6180601391714635`*^9, 
  3.618163336100319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"biggerMat", "=", 
   RowBox[{"nxtWts", "[", 
    RowBox[{"lucaMat", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Dimensions", "/@", 
   RowBox[{"{", 
    RowBox[{"lucaMat", ",", "biggerMat"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.617541767748976*^9, 3.6175418089993887`*^9}, 
   3.617541841180711*^9, {3.6175418807711067`*^9, 3.617541912431423*^9}, {
   3.6178990734148016`*^9, 3.6178990740148077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "216"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478673919687`*^9, 3.6180601392102165`*^9, 
  3.6181633361153193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"thePolys", "=", 
   RowBox[{
    RowBox[{"CreatePolynomials", "[", "res2$2$1", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
      RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
      RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
      RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}, {3.617899263634715*^9, 3.6178992952650313`*^9}, 
   3.617899529273444*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"before genPolys in createpolynomials 1\"\>"], "Print",
 CellChangeTimes->{3.6180478674119687`*^9, 3.6180601392802224`*^9, 
  3.618163336131569*^9}],

Cell[BoxData["\<\"before genPolys in createpolynomials\"\>"], "Print",
 CellChangeTimes->{3.6180478674119687`*^9, 3.6180601392802224`*^9, 
  3.618163336207819*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["thePolys"], "Input",
 CellChangeTimes->{{3.6178998659148397`*^9, 3.617899868424865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5`", " ", "ru"}], "+", 
    RowBox[{"1.`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "uu$Shock"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478676419687`*^9, 3.618060140577826*^9, 
  3.6181633362590694`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sysPolys", "=", 
    RowBox[{
     RowBox[{"ReplaceVariables", "[", 
      RowBox[{"lucaMod", ",", "thePolys", ",", 
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
   ";"}], ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
   3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
   3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}, 
   3.6178994558446503`*^9, {3.617899508525177*^9, 3.6178995206352987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".00"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}, {
   3.6178999614757957`*^9, 3.617899961835799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnHuQVdWVxu/wEAQ0RA1m1AhmKMDRGtqICHr08Gyadzc00DxtmgbRkkqm
ZpIxitKilTB/pEYZKxGJ8TnG+GC07bSgRy62j8wkTkYbeeNrdGImsRCfExVl
zF7rW9v17Xtr+KfLz1X7rP07+66z93fO3me0fHvOyh6lUumC3qVSzy/+nvHy
zEePHn21vPnCWwa9ftUz5VL411ys+vuHN3WuOUB6U3F//xPb1hzYncQfuuu7
q4ZO7U70laGd35C+WuO7qujtiV7Sf5Wv255X1rsSXfOpEt+d6Npf0lvBJ4lX
njnnD87Nz5503X//6CnV642z11uNM8eDM+vgXDm+q4reTnqzcWYdnL3eZJxZ
B+fK8d055wPOfF1wZh2cq+jlaT/75p6d459MOLMOzl5vNc5et34lOjhX1tsT
HZy9HjlXaT/RwblyO91JPDhzPDhzPDhzPDi/9MipDx689LGkbng9jmevx/HM
7YAz6+BcWW9P2gdnr9t9ySvrXYkOzpXjuxMdnKvwSeLBmePBeVkY548k49nr
sT5zPDizDs6V47uq6O2JDs5V4nOv1xln1sG5Sv6kjzPOXo+cuR1w5nhwfjHw
/3kZ/QFnr9t1k3hw9nrk7HXjQHqjcfZ6jXHmfMC5st6V83XBuXI+3TnnD86s
g7PX43jmeHB+Pug/gZ6Bs9fHZeDs9ciZ2jHOXq8xzl6vM850XeNcuZ32vEr7
OecJztw+OHM8OHO/wJnbAWeOB2f57xsytA/OXo/PQY4HZ6+PM86V47tIN26k
DzHOpI8F5yrtJzo4V8mf9Fg3mAM4czw4c/vg/Jrw1/8fx7PX43jmeHD2uvUr
aQecOR6cvV5j+Xp9TAbOlfWunK8LzpWv251zv8CZ48GZ48GZ48H5gNSThLPX
I2eOB2eOB2fWwbmy3p7oyLdKfF6l/ZzzBOcq+ZMe6wbr4EzXtfFM7VvdWCHP
x4Qz6+Ds9WbjzPHgzDo4V9bbEx39qxKfV2k/0cHZ603GmXVw9vo48EnaB+cq
enmvzPeMGzh73a6b6ODs9cjZ643GmePBmXVwrhKfV9a7SI91g3VwrtLfRAdn
5gbOnA84z5L1S8LZ65Ezx4Mzx4Mz6+BcWW9PdHCuEp9XaT/RwblyfHeigzPr
4Oz1OJ6r6OUWWY8nnL0eOXM8OLMOzpXju6ro7cl1wblKfO711ca5Sj6JDs7c
Djh73eoq6a3GmePJr7P2ya+zfMivs/bJr0s4s05+XcKZdXCuEp9z/uTXmU5+
HcV351X6m+jk19l4IL/O4p8ZsW7Ygc6Xy9e27Z6+otfTOm+NPp7XSyWNz70e
fSpuh9rnOkb66ozaT3Sff73l733I+oLiLU+KT+qqv26p9N76312x5sAr5QHL
zj/nrnLkoHru9dUFxVv+FJ/M93w79WgnyR/tV8vft1+fUby1T/HJfa+WP/O/
5ow3i6NHo6/7F3+W21qKfSuveu7o0T103WWmez9zfnHe/QNfOHp0Z+KrQ2cf
9Zshz/+0+KPh3wrTOX5/uO6vEr8dOscPDe2Uk3joiP8sXHduMTzo/2rxgUPp
Ul33bSi83mzxlX3pDQXrp0p8Mh6gO/6lhcXpkmcSD5396j3CIYmHzvGDhXMS
D93n01iMkvvo49uWm474zwPPecVeGSe557bCdOazVsZhkg90jse4ZZ8c49Pr
y20cQu+h4xnjjf1kjCvWMX5Yx3iALuO5ycaD1y+x+w6d7zu3j/vo21li98u3
s8Tui49fZPyZAzhD/1zzB2fn97atMM7eB451ALq0s9A4s28MzqyDM/Se2i9w
hi79qjfOXl9gnNnHBmfWwZl1cGYdnP11I2fozNnziZzh98p9XGCcvQ88xziz
bwzOrIMz6+DMOjhX9s83FKyDs89/qnFm/xycoQu3GcYZek+NB2fon+t9B2fo
vXScgDP0T0N8g3GG3yvtZ8bZ+8BDjDP0I6GdicYZuvR3hnGGLs+XmcbZXzdy
9vHnGGfo0t/cOLN/Ds7Qhedk48z+OTj7+OnGmf1wcPb5NBhn6D103IIz/F6J
H5+Bs/eBh2TgDJ05Q5f7O8k4Q/8kxF9onKFLPrXGGbrwv9g4+/ga48z+OThD
7xv0gcYZuoy3c40z9GO0HXCG/nGIP984+/7OMM6+/fHGWfK7Ieup8eAMHfmD
M/Qjmic4Q0ee4Az9wxB/snH21z3bOEMXnqcZZ5/PqWPBGfpJ4e/hMeDs40sl
cGYdnH2eI40z9M/1dwHO0Jkz9H7hb2ac4ffyePY+8Awbz9BlnIzJwBm65pmB
M3ThPyoDZ+hvhfivZOAMXX6/8M83FF4/PwNn9s/B2cdflIEzdOEwIgNnn3+e
gTN0/Z1m4Az9Te0vOPv2Z9h6BH4vc/Y+cOQMXX/vxpl9bHBmHZxZB+fK/vmG
gnVwZh2cfb+mG2f2z8EZ+jHaDjizfw7O0IXzYBvP0LlusN8Lzl5fYpyhC+f5
xpnbAWfWwZl1cK7sn28oWAdn1sGZdXCGLuO80Tizfw7Ovr9zbDxD1+eUjWe+
LjjD75XrNhln9o3BGbrMK+YaZ99Og3F28W1zjDP7zOBc2T/fULAOzqyDM3Th
M8k4s38OztDleT3bODMHcIau6wjjDL13iF9mnOH3MmfvAy8zztCF82LjzD4z
OLMOzqyDc2X/fEPBOjizDs6sgzPr4Mw6OLMOztDxuwZn9s/BGX4vc/Y+cOTM
/jM4sw7OrIMzdF1PGWfOB5y9folx9voq4wxdxkOLceZ8wNm3s8I4+zxbjDN0
qcPzjDP08NxsazHO7BOSL6f6ioz8N9HblmfksyWcWSffzHTyx0wHZ9bJ70o4
s09O/pXp5FPpfWnNyI+y65LvZOMEPIePevb9G/74VFnyabV58jvue5C4vu78
6rB9T9/bpeuC+TZPhk8u897oF01+5wfbe7RAb7F58nHq00o7q6KP8fxbd4//
Ruo3ev8t+oQjNH/2i5C/6ItsPfKY5q/1zdYjnD94In/lafNk5A8fz55rV19f
nPBZ6r+tXvjmnQ1bt6veajz/d/TkH974d2Xl32g8J/ab23npyTtUn2s8+32/
55l9vgt9jvHsfuvRzfd277B1KHhumt96fG1N6sdOp+9CwXO/5s88ff7RF/L5
R/8N+SMePJE/+6LIn32hWyl/q7f/tPamU/9qa+LPv3fFy99b9MpW4w/O1027
eMmmTdvMpwXngSNuH7+38XHNf7Fxvr13afjJA59QfZFx/ps3mgfM/80TNv7B
udjx1Ls3/6Cw/oLzLvLHwLn1y/l/ibPPP3J2+X/Jf0P+7HP+jPIHZ59/5Pyk
5s/+29v6nlCfI8Z5bfi9PJr4nP3D7+JR4w/Ot4b605HUhzP/8uNPB4/+peqR
89aPFr6+7N1fJj5n7UuPP3fbg52J/3ZJFf8N7zll/TXdOCN/aX+WcUb+Os80
zj7/euM8QvNnzsif/bcpmj9zPhTu+33whYzzgHB/79d+jTHOfx3u4wMJ57rw
u34o8d9Whd/vFslzXYNxnhB+pw+XZd44zTi/EH6PDxsfcN7pfK1xxvmw5i/6
BON8nMs/+pxnufyj/4b80S9wXqn5s1+B/Hk8v6j5ox1w7h3yuRU+p80fJoTr
3pb4nONC+3ck/pv4qHcm/tvVYVzdbf0C51vC+LlH84z1uTOMk38xPw2cXyCf
DZz7af7SzreM8yTNv6/mD87IX8bDRPKT79T4Mcb5Kpd/9Dk3af7sCz2m+bPP
eWXI/1L19+psPD8c9H9IfM45IZ/ryuy//TrE/1DbGWecx4X+/sj4gPPi0M5N
mudE4/zjkP/NOs4z8t+u1HlbX/Pf7tD8xX8rGeetmj/7nI2af0n/gTPyL2n+
4HyR5s8+5xKXf+R8i+bP/tvPRc95PF8u7dh6E5wXyXXNJwHn/5I8VR+2DZyv
kH5ZPDi/LRzyATrewLlXe+CWn6x8wPmg+loyz4/+212av/j8o2w+vFrzP6Lx
4NxE+YMz8mf/7duav/AcZZz/oPkfr/cFnA/Jfc+Z83YZ54n/dof8LhL/bb38
jhL/rVV+d4nPWSu/08R/a5Dftfqcg23dMUjqgHI7x9Yd+5yflhvnQvOX59TF
xvl2zV/ipxnn6zR/0afaugP5gz84T9H82ees1/zZfztJ8z9R6oOtR3ZJ3U78
N+EDfZFxvkKeCxbv/YqHlM8U43yOPHdUn2ycJZ/7VZ9onD+S55rq42kd/Yjy
mW2cX9L8RZ9pnCdr/uxzIn+5L43kVzyk+lwbz9/S/KVuDDfOJ2r+7Cd/qPl/
Q8e/fScg8xBdPy4wzk/IvEV5zjfOZ8k8J/E5fyrzIs0z+m/Hyzwq8TnXybwr
8d/edfsGov+2p4r/Vqf5QwfnxzV/9t98/rXGGflLO9EX8vlHXwj5f6T3EZwP
U/7gvEPm1con+kI1Mg9PfKE7Zd5u1wXnE2Seb+MBnK+XdYHo6+YZ5w9kHaHj
rcE4r5J1h7YTOc90PuEC47zd5T/fOCN/0ecZZ+SP64Iz8mef8wbNnzkjf/bf
Vmr+7HNulnViwnmnrCsTzgNkHZr4b5Nk3artLDbOH8s6V/VFxvlyWRcnPudB
WUdbPr5upP6brnOF27roCyF/iV9qnPtr/qIvMc7IX/gvN86faP7ye59nnJH/
Ee2vvR/R/Hk8qz+T+G/Hue/rWoyz+icJZ/5+EpzVn0n8t8Nu/1D0384U/yfh
fKvz2SLnnZq/6JEzfx8Izshf4lsz8ossH3BG/sJ5pXFG/vhdEE99f73Uno+7
VNf2TYdfBx3tgAO/F1B/TJ9frRm1nx/WcUXfm+nvaz77ruZ74Ltl+G9y3Rb7
3hK6zHOm2D416DJPmGP7W1nH98zQ+wQd+yu7qujtpkuey22f2gjihu+ZffxC
2w/IOr5nrhzfnXP++J7Z+ZNtcX8r5wOel6nPdoxyBs/LnP8W9/1Bl/sbz3OA
Dp8NPFkHz8p6u+nS30XG0+cTeV5GPiF4sg6e/rpLjSfnA558XfDkPPE9cJX4
8nr10/4U2l9mnKHL73GhcYbe19930yXPJcaZdXCurLebLvnPNc5eX2yc15Mf
CM6sg3PldrqTeHD2euTM8eBcJV7rBnyzuF8b+jH+uqZjnPv9DjHe73eIut/v
wHp70j44+zytnuTQfb3qSnS/34Hb6c59PnFfts+nmc4nie34/Q5JvL5f2KLt
zzHO0GWdPsk4sw7O0MEHnKFLPjON82ryFcEZuvxephhnn+c04+zbn2ycfT5x
/3vlfLpNl3nmZOPsr7vIOEOX+mncqsWrj32P+kI1xhn6ntDOSNu/Ax39B2ev
R87Qe7v70mV6TzcO203H93W4jm8nM86V9S7T5X5NMM7+urXGGXo/vS/gzP0C
Z3/dOJ6rxJc3qd81JOijMr//vTk7FPo72/gjvn/4/zNsPw7i5e/osbgviAcv
v48+7oPC/UK85D/Lfi+Ihz+J++jzOZv23aP9Qdtwf337tXbfEd9fxxvuO+Ll
fl1E+/SbsxPC37hPH/HHaj4l9w/59LL9+5y/39ef5J8zT7/fP/LEuPLtZ4U/
BwDxw7ZhvCH+gXDfv2LjEPHq+9k49PnU07kBaD+OTx8/js4TQHzcf03jjc4Z
sPG2DeP2NvU5X5PfqY1P6JL/dKsbrGO8QT87tD/QxpWPv9D2/fn4ko0T6DL/
P9PuD3Txl0bZvj/of3J6V87XxX2E7sdDd+6vO9X2/fk8hxh/jgdnbh+cf+r8
2HHG2etx/zvr4Az9g3Dd821/JbcPzhwPztD1e2zjDF2eOxcZ58p6V+7bmW6c
/XWn2P5K6F8PV6sxzj7/eM4A9O+EdgbbeKb2rT5frr7lJ/6+mM6cffxC48zt
gDPr4FxZb0909K9KfF6l/ZzzB2focl8ajTN0GZ8zjTP0D/X3Ds7QX9PxAM7Q
79P5gx/PHbqun0vjuUN9mwU0njvUN1tC47mD+5X4t348d9Dvoj3R/XhO4vPK
epfpMn+uo/EMvZ7Gc/Rp/Xju0Lo0O/PjOfLx4znmA87Xkw8Jzl6P+7Khy31Z
ZJy9Psc4s08LzhwPzqyDc5X4vLLeZfrHVDdYB2fmAM6sgzN0uV+LjLOPj5zZ
L/V1Y3vCmXVfN7ab3+XrRtR93WC9PcnH140k3vxSqRtLqW4k+SS6rxuxHV83
tpvv7esG4udR3diecPa+Xzy3YcSXfcJ1kSd0cCb/jfh3VdHbk+uCZ5X43Ovx
PAHfTjy3gXXy3/Q9+KUZ+W/KrSEj/03jVxhP6IO0LnVtrb27c82esv/OsKHo
U/+Lf1xzIPUtf/zbk1+r2/h8og/+7OCDnWueNl3m7Y1F/YJJ79dt7Eh8yyfr
jh+ycehTid943ilT5w6d+uvku8fdH46feKDzxcSH3Ljs1SVDp+5O/MZZv1r7
vTUH9if+5LE1p9zYuebVJP70kP/OxCd8Npw/8B+JPjv065lE3xLuS2ei997x
+oCNQ/898QO3Bw4vJv7hVY88MPZA5y7T9f1FMTrw2Z/4ge/qfn/2Az8I+m8T
X+6a0P6ziT4g5Lkt8evu3bz/SN3GFxKfraXXlYM2Dt1l+mfazulrvlZzoHNf
Er9/V/vUoVNfyfm6DwZuz5l/1Vs5XB7G8xOJPi3wf8n8os+UT5+Q/76c47vc
+RIdet3Fxb8F/cnEz3nnhC3/U7dxL/kwS4v7r57ec+PQl3P2kf45/C4O2nof
7xFW07r+D/Ic1/7yenzY2MO07sa6b3XF9fXobe/SOlr+1hQf0Hr5tPB3SPH7
KuvcP1Zczw7a1lJx3VoqvU3rU/k7rriP1qEfaX9bab0JP2FwxXXlsG1Pa13C
Oki4TclQl3h99BOtSz7+/GyI1iWOn6N1yccPzwqtS9BlXXBhdq7WJW5nl9Yl
Xs/epHWJ17MztS5B/732q6/WJY4frHUJ6xThNil7TusSr8tQl3gd97DWJY7v
pXUJ+qea/5Nal3g99X2tS9DlO6ia7DytS9S+1SXou3U8oy5hXSDXnZpdq3WJ
9eO1LvG6BnUJuvyuGzPUJegyDs/NUJe8PjHbp3UJ+qt631GXeF59mdYl1qdr
XeL5POoSdMl/boa6xO08p3WJ572HtS5BlzozL3tA6xLPV2/WusTzKH0O2nNZ
fJ6m4lr/XtWeIzR/sP0O/X079jum96Ta3+VZf//81d/dgmydvof184GVxdC7
/1xn1ifzB5mHHEzeG+7X9/Veby16hHY2lvn5uCzcxweS5+mp+t6cn8tbhHPy
fu09uS9l/56ovhiN7+VUl3nI8mJtuO7mMr9vuiOMt3uT52Yh4yF5P7Vb3+Oz
/qw7N6nDvjM/Vsah6X1UnyXjNnl/NNTtJ4rvm46E+n9XEv+G6Mn7I+H8RKLf
K7+v5H3Q6W4fUHyvdFB+p/a8xnfdZ8jv2vSBQZ9VrJQ6kLz3+YXUjeS9z0H9
TgO6rCMaiq1yX8r8fme63Mec9ZLUq+T9zpVS3xL9kNTDZF5xrn53we99PtBz
ovx7mcHZGKnDZf/+YkyxVuq26XtD/Mhih9R50/to/v3kuUDvcer0O9iy6XIf
G4rvyO+I4muKPWE8bEzey9wjz6Oc85wqzy+aR9UWO+R5l/s8JxSnyfMxec+C
71L8dWdYvYK//TXpV1Yvz2XT9fvY7GZ5jpfZn98rz31+L1OMlXkCvX+pKbpk
XmF6yL9tcnE29jG59xf4fvsW/Wvzrm3bA8/1yfuLWpnPJPopMv9J3l/cJPOl
5L1AL5lfmf6QjKtih8zHcn5PhO9q+H0H6jn75yO0nkN/X5/LJ+r3S+zDo85j
/oDvbw9onWffuK/WefalF2idZ//5FK3z0MUvmpahzrNfijrv5w/zM9R5jked
5/nMZq3zPJ9BnWcddZ7nOajz7KOizrM+U+s8dN2vlH2s9ZznIW9pPWe9Wes5
+5z3aT337ddlqNt+3rI0G6J12/mHRxdlrVq32ZdD3fbxc7J2rc88X1qg9Zn1
nlqfWUd9Zv/wsNZn1lGfOU/UZ+93LbP6zL4Z6jP7gajPHH+s1mfW/1brMOsv
ax1mXw51mOOnaR2GflR11GFuB3WY/T3UVT8PXGh1leeNqKusX6B1lfWnta6y
PkrrKnTxT5qybVo/2WebrPWT/TrUT46/UesnXxf1k/26stZPn099drWf92rd
W2jfnWLei3ML8d0p+2D47pR1fHfKvhy+O/Xx8Vw7nm/jO1L26/AdKft1+I7U
rxfmxX2Frp0me16zX4f+eh9sgfWXfTb0l3X0l3X0Fzr2TaNf0GX8x/2/Xl9o
/fLfK8Z++fVF3Mfn1xeLrV/sj6FfrKNfbn3xBX/0y68jGi1/Xl8gf+hahy1/
Hx/z9/k00bmd0X/z5wxE3Z8zENcRfr8/1gsL6ZzJjmT/qff34n3H/Bn7ZHFd
7/vVWfs+Prbvvgf70j50zDPluufE/d1uHjuPzu9qzuT3Pp3O72rOtgd9JJ3f
1Vzl/K7m7KvhL5/f1aznWX2dzu9qzk4Jf/n8ruZsRPh7WuHP6cL884Rt/pyu
6BP6c7qiT+jP6WrOemue/pwucOBzupqrnNPVbOd0gZv/jmKyfZ8P/Q3had/n
Q3816MPt+3w/Xx1p3+dDv1Ju/IXg5v3Ds+x7e+gyP7zAvreHjv1u4OOvG/f3
Qf+dXNa+t4e+WtsBH/99S+SA+S3v12M/EBzYPwQHjgcHnm+jv+wr+n1J92i/
Rlp/2VdEf6HzPjvo8l3BcPtd8Hwb/WLd73OJ8230i+ORP8/DkT904TOe9qFs
yQ8pH+TPfqPnr/PttnriH+fhnn/UPc/oQ3qeHfbe0PNE/Hy7Ls+TcV3W0b6f
58f9TexPes6YZzYRn+12LpbktaHw8424TwTPU1lHz7X64J/7K2zfLvuBqHt+
PhDPr2A/ENdlPxDXhX6M5nMe+YEhfN1yy8c/xxdbPvx8Rz7s++F355/XMU/v
p11C537j+cvne3ck80z2A5E/dMw3/LlAsR1/LlDU/blA0Q/05wJFPxD98v5b
A51Ls0V9iTrrF/ts6Bf7gfg9sh+I/rIPif76+UMtnTMTfT/0F3oPbQf99d9v
z7Tnpu9vrXHAfGNk0EcYB++PxfMfoPP5D9BxvgE4+PnMNJtXQMf3A+Djv6/O
jA/7geDj/b1xxof9QH9uCb7rnmR8/j8/UNqfYdzgX8l70jG2/vL+WDzPAbr0
d4Jxc/5eaaJx877ZGOMGPXBumxTPNXLtxPMcoB8X/vts0+Uv5l2vjQFn9gPB
2X9fHc95cPl8MU8DZ+j4Dh+cofM5D9B5/ubzj+cPYN6yW5+D6Bf7gegX62gH
8wE+x8DPZ2ZY+9Bl/F9k7bNPCG5+njPNrovnOHwhO6fCzSsW2Pjx31vOtnyg
H9H5BvLh+Qny8fOQuO+e5yeeT/QDPR98V9lE88YOe457bnG+4blF3XOLPqGf
H0KPPL2/F/c7s0+IPL0+z+a3/rvEOH/geQvyZx35Q8f+buTPfiB+Lxw/qopP
6MdPnP/48QM/cBmNH/h1SzI/740+np/3Rt2Pt6j78Rb9PT/eYrwfb9En9PPk
2I6fJ0ef8BrywXR/Ivtg+nuJHNh/Ix/MdPLBTCcfTPsVz5mEjvsCbl6P+6+9
Hvdf+/bjOZPsK5JvpnziOZO+/XjOpI9vZJ76fG8taN+0zXv/DzFkBFA=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJytXV1sXcdxPrYohZZdR42s1E7tgC7SxhWCoAgKtGBxJOWl6GNQOFDeIhTx
Qx/a+KEFghaFhKCF+1AgBloUeYktoAUqQC1IwIYtyD42C8kSXTEWbYrk1Y/F
q5iWaJKSqB/qh/ph7zkz3w73m7O65wq5D9p7hnNnZ2dnZ2e/3T16/i9+/Ocv
PZpl2eD6LFuX4bNUULk9fu7fVk9fyomuz9meev6e6e9F9PX/lJCPZ6a3lb9N
7RpPyEnx49nRE/xBLtsT9SbsmWoX2zm0d1tv/K6/avtxcf/lh9SH6bAz02G3
W0xP+FWwf4/tcn6V6C/w98X+Fn7P9QY5CX0a8gd/TvlVyv4sH3YebygnRU+N
39T4Svq5Pt9KjIuk3VL8DeV0s3PTdqXiQ4rezT5N7d9VTkP/TNonMY5SdNi9
oZ5Jf+7WLvbbXv056N+j/7Df9tqPKXq3eN50fkn0Y9KfR2A3jg9FXDaOMz3a
J2XPpvH5Ye2cqjflz87f6vUJdh4hOeBL0VPx+dflP73mUWyfZD7TzW8btitl
55GE/JHBzj+rq6uvvFtf70iif3v158bj8dc0P/Zqz655ZkP+hJ2TcSPE21Se
yfyJelN5USp/65ZH9RxXG8rplk+m2sv2gZ0pDjz8OoXkz3WxZ9O4l8rHel2X
pfw51NfQnmH8No2ftfZv7Zzpkrc07t+Enbvm+T3aP7luajjPdovbqXVuar5z
8bNL3Gi8zoUcylfnuvht4/Xmtnr6w8bnXvOcpnlsb+sa8+em8S2Vt88l6Cl9
Uuti8Lu4AbkN/aGb3zb2/y56NpQf/NnVu62+3lR7r/eYJ3TDJZL4TMrOibjX
dL7rFid7nZdJn67zYGr8Mv16yj4Pa//3mvH3vxf/rpueD7tOaZznd/ETp/+2
+O8P7Z8J/SG/VzwzJb+f++Uh5TTVPzWue60XeptfbajKuWJutfwcT+VjiTxn
LtDb+vv+6rnF/pbdr/5+m+hTg1n0Mf51tfWG9jp+fXb8F6p6Z4Ld5Pm4iwMd
O+z5h+WFQuxxN/CPlIr3IT6cOLhGfof/svIvRvUaLn14EPSny2L99+HPQf8X
Kv73izuVXgtBzt3qeTrXkseja++jVTmVb6zK0cAvcg+58XhP5S/H9gj0qli9
FvifrEqsH2z+Av2Rqlwm/tT6q130kd1uVPV9lm+pnluBX9pzRu1zbm1/ZaX/
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
wXZO4W/I6+5RvyOvE3+4HOgrFf52x8Vn4BcrJF/G70mXbwxrf7A/PzivW0r5
c8E4Z7wvaHrGdvb5hsYNZ0+er4G78XoQ+NvvkZ7AORV/C/QY5zzs8KIbalfQ
CeeM4/Duq3mL9EzhnFqm6EUKfxO72jlMPe/lzn3hGX8HHf3C+7axPoYfSn+3
iwFpN/OrfD43vniQ9QT/C6QP6hO/vRPoun8HuUzXOOD5hb7QlQ59FmW8RP6/
sH8h4bfIw1n+sPrJF5wn5PX1tpV+zfk/y9H94iLeN8Y8O6Pzna1/la7rHZvf
Fa9UObfd+JJ5f5H58zhf4/Mts04fpg+U1hn6qGA99TnXcyld5cOe31N7sz1l
HmmRPsed/Ova37of6Opl/mGNJ5IPXAn6Cx7X0v76zNG/Lvo7O2vcZf6c6Vn0
aX7/XeSNknzEfXxwXvRQHv/d7Cz0A13lpOgy/5539Kz2s7T9cWmP5oF+f3NF
41+9HLPDfBQ3pw42ox8vHtd2kz4506uiY2f8rlm7RpSf+3fc0eej+cPkQH+u
9/FIjtcnbjePd8ZpQfe4dz0/1gtGx/ngb2u7Y/528UWlj8/flO7srPIDv/D9
Vy6lnT/RZ+QVa/Ol1fL8hMg5HOjQm/WB/lwv9BR5nzv6t6nerPaztH066iej
p/i1LOLfGf9TtfW2Cxl/lt/K74cUf2s5O8vfXw90xQF1/2WM6KOFTOyWp2l9
yfHO+7/d7CD8c45f6UGf/doulKBjHyHeTzB77q8dj0vKb/l2LNf0jOUaXcbj
os6/vO6eOnhGfkf6v65xxtaDcb57hM4jpe7de7r0y0dOz3gfyOjf7Py760c/
zb+cZXvX4sZV8XJ5f3/f/Zr7+5nkgQdcPPkiMa+JfU45/jPk5zLvfuz8aiWy
o9Gz2k+3+Lzo/EfKqYPsP8rn6l1O6CN28edRxS6XE/q3i29VpY0veR4pUMb0
YfXb0+Q/p3W+sLxL7PZpzvyoV/9OdvB+8kwmfrKjep+D4eQi95ju73zo+lf0
NZxW8rRD0J/G74LTk9oV6KL3Rcev9nJ2flrbdZ3kyPMF1158ezqSZ3Ybj8Zr
kJ8zP9arL0d+ZHaW+t+O6esTOG0nD0YZ6z+dc7vm1D9Zz5d1fF6qSstjYR9t
X+Af1/Eg8ixOpuwm/TGheR3nmf4+mvJrP9q6TH+fkAN84BDxH1B/Pkl+8qHS
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-1.0408340855860843`*^-17, 
   1.0408340855860843`*^-17}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.618047870751969*^9, 3.618060146434045*^9, 
  3.618163339676569*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0nXegXVWV/+/vvvt6TQEVdNSRGkqAB9KkpvfeO+kdQiCEEgihhCSUEAIh
tNB7h1BC7wqKio6io2MZxzYzdmccR89vfdZae59z7zsvBHH+uK/ce8655+y9
ynf1ITOWz5u9eMby+TNnfKbfshmnzps/8/TP9F26TN6q+n+Fwv+bJ6+GzxT4
OykUwo8kef/99+fzg38++O/f86sqmTNnTpW+oX/yV/rfPDvyd/qrOvu5vuT/
Qmknn8394NPrcr569v/5t+rppV18wuqcW5xXuYQ18Ypzd30HOvxdm/NV0zKf
633rXU7PvPv/Ot1Ibt/P/yu/iulBpcpn1c/84D/HK+Y9vB5ZqArfoO9NsRP/
FK9Un/Mt8ncx53qT7Nw/xi9t8oOg6vAYOznx9/FLW+wv2KH89vLOnmhn/yZ+
bZvfMl87ZD/7LW+Xcs6dYOf+Kn5zt8y5ffaqSnp9ruoDzv33+L3dnfgu7Ver
53Oun59LfOPtAj+PF6h4WLtejV5r0L6lpN/epaS3XY/38i45zi750/g8eQd1
0Z+1yS2j6/TaEw6pTsYeXJ2MOrA6XHtnF//XeL976ht1ycbBdqF5R9Uksz9f
k5xyRI2eOHR/XchSvBt/4h/FNz6lb9Qna33JzulVl6w4qS5ZfkJtctpxtXqV
EQeUUkroSIl+V/8S7+rTfs2zT7SlWzeoPrlkYH2ypn99ckHfOj1/tDwq16zJ
ecwxdsHvxZv8rL7RkJx2bE2y8Cg9MdkyujHZPLIhuXp4Q3L50Aa9wLiD9bM8
5h9t1/xOvMnP6RuNySnt1cmUQ+2ad09pSu6Y1JTcOqExuWqYXXOi7A102NnN
+oW/HW92b32jKZnYs1qe0gj5mbnNyfbZzcnjM5uTh2Y0JZtG2MWnHFad9LWL
5930KLv2N6NI3MevDTG6ukreOrU1eX1JS/LKopbk0VOak2tH2bWnt9cIweq1
83TDSLv21+OC5HHYZ+1Tnr0x+dLSluS9M1qTb53VlnzjzLbk3eWtyROzmpPr
ZSdW9bFt7W9fuLNv/Gpcqf1TIdOavDSnMfniwqbk68uak++c1Zr8eFWX5N9W
d0l+fH6X5OtntCVPzWlObhzbmKx2AmIJwr7kfdsI+7Yvx+fbL32WLsmL8m1v
yrd99dTm5P0zWpIfntOa/GJ1W/K7S7smf7isW/Jr+f3NFW3Js7Jxt4xvTC4S
0g0M5RtWqM/51uH2rW/HZ9wj/daqpL29PWybrCc/u+t7r8xrSt5Y0JR8ZWlz
8i25mx+c3Zr8/Py25DcXtSX/s65rkmzsliRXd09+t7Zr8u2Vbcnz81uS24RG
Lx1odzWiRylsdW18Xl/ut+Ibe8TlLiEVZXP5bkh0mpDhAhEdZxxfm1zQuzZZ
P6guuXZEfXLr2Ibk3kkNyaPTGpNnZzUmz4tCeWluk573zeUtyfdXtiY/lfv8
1UVdkv++rEuSXCH3uknudetuSXL9bskf13VLvnt2W/LSwpbkzkmNKgiM+UtK
KXId4eqOq9gS7zkPUOWpoHZ72Dfiun8yo/n4OiEXf+x/1NuHfBC5pxxenSw+
piY5U+Tdql61yaX965Irh9Qn18nj3yKPf8/EhuSBKY3JI7IEnPeCPP5Xl7Uk
PzqvLfnDpfLIV8vjbumeJDfJI9++e5LcsFvypw3dku+f25a8Khx5j4iUy4fU
R/E0YJ9IBnlP3uQaLA8+5UkIf+5X44J9yi/Ac08X0Tb+4JISraitsm3n+UfJ
ukwW8TZLtMWiY2z7z5M1uLhfXXKFaJRrh9cnN49pSLbJOtw+vkHPe3xGY/L6
oubk2yuEYS7skvzlcp5fnv223fX3/8r/PxTWfUMk0v1Tm8rEKOcHAZH38K7y
fvL2229/ZceOHbwKRf1Z9Zuvf/3rcSHyiCJPXfrivByJokK975nKHyOC2UdU
64KMNH7yBTMeDVhiwD6lZKQoRB5ophDPwqNrktNFUZ57cm1ykcimDcI7V8mG
bxpWn2yWBeTceyY3JjtEknx5WWvyg/Paislv13YVAfCjVYi21uRlYY9HRSts
E0Fz1VCjFVSS7VMQvx2fr/R/s14v7JT7PuGQAwJDFq88SYDCF2qS+UdWJ9Pk
pscYs1Xr0n2qbOl49ZflGy7LO0G04wyhz/kidpYdV5OcLZe5UC63Rl6XCA9y
3noRFzcL7T0iawMvIZBfW9yiSueOiY2qRdcIrS6T5YePuU1ESjEZLNyeol4D
Dx0fpWEnzFa5Prx3hK3Php2uj/63Vwfowr0gBy6WZ0POnHl8TbJYoMwp5Txq
FFeVXbaC/eya9BX0OUwOQ4zA2vOOrElO/YKxLeJrhbw4b7Xo4k2Ciu4SJHP3
5CYFBJcMqE/OPLEWcGhi1/DhQJFGUBivwUZpeYS2s4WqiY/qy7N+JwfvzNr8
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
uFfu9QG5Z+79YTeZ+Q1tPcprSn0JoS1r+biI7ids2wqG6I1v2b5XRNzPIZvp
S4tk6b64sEn08lsic95cYK835jcmr8vrncWmo5FwGne90qXbts6l2wm2b2vz
pJuAa8F8753ekry1uFmv/NTMJo1uEul9eKr5TR+T1+PT1UFYZNcE0AUz5JEp
6XMjpe/JoC/WiL3D7LhmsCmXq2XPNsrrqgGylv1t//jN/3zGMexvdi/ZO97j
vEtkH845QWDv0WH/uur+gc5QVPNl7+SzZIUIu3PlOMDFJaKNNsh3IOC45s2+
d/A9wMZ4SXA/O2N7sn2aGa3yquYfEXVsE29jMPB62iXJC7N9616c3VhoS17A
rzKrQV/PCYrawUsED1CXw7+6tBl5mPy7SL8/XeaRcyDdnbqD9VHEucy7JL7R
uTezT/Lfl3VN/mNNF43HE5OGG19d0Kzeb33UyY3J3RMbkjsmNCT3TLJ0hvsA
zfICPD84yQyZh83W0a1E1iu0A9aNUr2l4o4lZJvQQ1fKtl0hS3u5sMYGea3v
a785j/f4jGPYOnQNXhFIAZKAbfl8zcmC444z0ThPtm/GobYHMw9Dd5XUSuVz
2PaiXsbCV8g1uRbkdfPIdDshRXjsmRkNslxiS7trRf7X92r4WcPe+QesJv8V
+VmVPC3E3aTbG6QinPdNkZ4/PrdV4Z4md1zX3ez723ZP84o6JIS5vFwT+a4h
8t0nUg7so6D+LwIgfyug8mcXtKm5+95y4cglLcnzc5s1esOd3DquQeNZW0el
+QikptwmeA53/R3jUlwHNIQV7xa1xv4ZFjSMYaLQ9k/3TF7rZE0vEzZZ27s6
WdunWv62/VjXtzruKarsCmdV3U9nYz6/4CQ7fulRJd1DgCHYg/dQaYjR1XIM
7Mu1OB8Wh562jap18VGnYlMYTVCH7d0zzmQ73bsqc5Swdy7DZP+EG5OvLGlS
tPFLWdX/gdc0Kae78ZvA9V9d0rVTqXmc7d7qyH4NWcjRyyMZ5vXUDKb3Y6JN
cF8Xk+TG3cS0V8vgqm7Jf6+rYNLThEkFuzwtpvdDImpDcgn5EhuH1ifXDLME
nC3yul5eW0fWJzcIPsGSvMmBvYJFBYy2iID4611eskFsGJt7aW9kJzLz4l7V
sryX9GIzquV92zjZdPlMtl2eIbPh8p5cQUBwOO5MkatsMnJ24edN1vL+ObLB
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
CQYSp2b7tGNrAol7xHdP9XxzHrVKABtIPBRn8rcCCK+Y1YR9udb5mUKzzZma
GRLTKUsP0f7t09NKilfmQt6vzGvkR5PQWXR/z02DGu8uBUOYNfZfazM1fmCG
G/Bud02+d06bdpTDRMdSIiVieA8LJ4VFH7iv1Vf3imkbFvIH9EMZiHDkKDAW
uUscYYPwBzRsJr8tpmbtaLusjsgBk3vMQUbEHOsuP4Kfh7C8HBcq2fPk886w
6C5Q8dAobz/ljKIUiw7bZArpZ+e3JW8K1VIegnlCXAOhpvB1v1z4mke0eY0s
iu6Sp5EAzQN6m6xocYChYmPfkqos/OeEbRC/62VZrxtO300KpbaNqS9YzIvj
qcwFkFKHhbrP0LGLxU8oDcMDFP9S9Ij/nHPJjiJ3nYjhZKdjoARO0uBvz1ax
au2d13uFmiErgqyLcWngxI6Zwe/eWAV9CtWGYA1ZyyEcF7IRDFR49A8rjZ6Z
Aij+tK6rpoqTOwjVkjwAgBJNlUG55mPBVTIw9vJsjqsOJYCAoTKQAc6ts0S7
IW1BGOf3NorFQWXUWqtGGAiCc6BUrj3mwBC2F7otGKoAYYx3I64z7FtVLjSz
ToNB8Y1/cGKHEokkqLl6hTla6KOKUxYYRBgZWQRinGxtuXbZC58Hc4sxvlOl
dn8oMA90CNsjDmgoote0NWjS7EzwAak1FGKQ8UefDSJgwd9JweItVrBoMvMz
ajzR42KN975AFhKVJoPqMs+yP/8koc/jzKWKvwsDDGc9XIjTAIf9OSfUaIRx
jUe1if+QfaVfm4EKQNwnpprbVSBuCQosqiurq3dpMTn7xnyDBbgLSMv9sxfh
qtklBGmE2GqEOMHQGIQoYitrEISeZzXeVXWoo3NUQu+93NDYTb8x+BJw2SMI
0fD4XnGtZ/MaOAZhG/IbFAkcYsAWsvSeL7KTQqgk6FcbgZaDgTwx2tOIcEAU
hyYfW/VEFoEUMiKlePfUX7KqVexVI0QiCctj10BTeNaga9eIMU95B30DMWqI
2dtKjDsocl9sdRQIdXAFkZZSIq3SdfWcP8tIkvfwkuJmukGrk68dRmsAau0x
57VCeaiX4nl1JV9Kgije1tDwBgqkbJz3QAtUUxLnpgSPkj6ko1yr6B4kUrbu
yaR4gVshSIKKRffnx5ZBFsSe2eChMZJuaLXw81C7f6WbW/KbfaFWlfDfnbIn
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
Zd6gjqwPGBlVNb5nSI5s6KC2+3t4DCbMjLgsQmWiGCYdUh6CG1nBs8H9Hrx4
QUsHnoVuiQNVuNYyiruslp674tLgDYIKhCbxScoqGOPurubyI9ONitHB6HYY
GIzOgqAnTJeby40FCo760MGaQgeq4dDPdJ26d2qTweGu6kPmEOofacJycS8x
uzK9leDfiT41NFueCfzh7v3Jap17iXYM2T+b9suW23wbviYUo0NSMC0xuOfL
R3N2cWhuI0Wx4kGNpOJpxvqSFo0b0o6EZDYKVO6f2iQr16DmnIdTfP/bIrwK
EDxyaaadNUGH4JLnf+Qenjux8Gt8A7Ph+Fp/72lPb4RFjVGrYqCu0AmX7sxK
zouvm+VcOKrTQF1v5VKWlOW8Twwsrd/z2j1u+aJeNreHJnPUVNBplsqmzd6Q
FM8AXeFu8qYx+G/x/dzpPlKuwSjfL3vNDmU4L3rLArxrJKqQP7WFkPpwixaR
lg1WB5Zpa9fBRu+0z8Fxi1aZbq6Sjhzq4HqI1zeGcZ4cN8U94yHZJScyVtS4
UU0ZZ7Z7FFY4sxg7heVBzey4Uu6JaxLSX3lSAMq7aw3Hv53flvx5vVUKkYPW
7uFhnheGpMQKHIl9jb2z1ZlU2+H2Nxsk+MOgtlV9PDHlE8kToivo+0pTEOAn
W4BdG5r4cQql/Bv61WhpPyn+VvpvY5zCRFSylUe79Arpfh6LzKYmN6lYmxPk
jwgRoNNzoZ+RN2FEx+JD04kUkVONu970UYXvyLHvntqs8ZpvLG9JvnWm9YQg
zEcc59k51hMCw4GcvGE9SiE7Gn/H+J7lQ4qIqJOhWwVrulDgvVABjY/mFq8r
eXVhi2aJQKYICyKBuPVhF2A+0Qob9VfhQFPXWXt75fSI3XbCpXmmbop9s/ya
utkKg/Ty5AXiBiGrMbSYVHdTb5vRDdfSBpLPaKSu879HmGv+Zm+IfNtYa7JK
MiXuFNwX5BWq/vTi7m/KatOFiqnwpJABOXBnwKnoVFKct44yME1ZEwD7Su/G
xvkAaPTpJaIyQm5ibFub4dA4KtqBMPI1m1Qe0rAqY1SdKU3nukLGts1jzz30
PdY/vMh+5oafEfT2FSE/4kR/opBvszXrITuec0B+ZKIGNzcYDDZF3OHuvWaY
+WPWaPdV7zD/ScW/NHKlUja0W8a7gGlN3yKsxdBEl6+5abjs40DBRIKLwMJU
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
Zds6qS17PCjhJ+Z3CKDzS4s6steWdGZvLuvMPqPLHYIjDdTqG0s7RXFRYlgV
2IAEKw7AdoiV8OGUP9zhLhQOSluTac7/dOUsqYduV+9aCa4T+9m+vzw8373Q
lnZDrPv4bbCveoRM6XZDBcPJAsn6qjjZVmFMx8l+Fu7EoLy+uHqPrbmx7nbP
OP1bYFVGKuLx1UM53KCyQQpAGCOcZY2cjVbJoY3q20Ha0nUUvbSx4Jtra6mx
lwG2Xm6y46txmCtsc1XwWogXe9BuhaD7xL8cerZX80rJBrrlwmB2ibb4Ni+x
IL6sQ8ZvgUKVSmAQUpwe+AbwyStlFBFac7oA4+zCoP676rB3zoZHHypU2P1N
m1zCKmQR2FgDqvQmEYY+7Sqn3q4hnummXfg4XAacWoSo141uFXKRp8/oyD6z
vCt7e1V39o3V3dl3zu/Ovr+uO/uHC3V64x839JP/vxZU6LPLO0W1ngmvAegG
v7glhLTXhpN16VAnJakTFXINaZGfXX24tcbIBJG6tTG5W0v626UGDd73ryBv
KnlZRlY7Q7ZHmwvnJtyhAvjaKjXJ+23BZ/skyjL3TWiyoi6ODSzTWwzPH/gR
kGpxdDcMa4wl93QCfqTpSbKWKs8SrZGnlU1D0jGAxJ0VGb4ibIG6KOWdf5nC
/AWO6O/jZ7QXaJLOEfWTEKTHmjcgVkPyieMBrvXNpVoCoU9JmrN9eqvg8AoP
+GSlLbhtfIs5IjXLnDq05FbTIPZCoH96tIYmTaIPVCty78yVyHpfiNB4a0Oh
TAqcpUqUOKCi5nORJqmuKrAvndnlH23KNg5tyW4JZ+LhEBm+vLgz+/LKruzH
F/XLfnVZ/+w3V/TPfnfVgOwP1+hAw/+4ekD2q039s59e3C/77tru7O3w3E8H
BxVeZwKsWrlhsDoiXsM6BXE3GrXguMbaLqi1Amu4DxdUznWp2WblVYYj9Jj3
9Q+q97asDK/OVvCBV4kbz9BOMqg8j9i83oOTmuqyBybanl9293idgw3hY5kt
7KC4W0c3VrO6lcSTyBSmBvk+Gen0RbyVjm3WKY6QTvo3VVzHQbYiYZ4nqaAV
bXXK84rWFkyTDqzK0XrpVFG+9/6oPz7iWtUULlPlCGrGF8IEc4GJ5UgXWP24
e0qriL1jt1N5e95oNZ+e2y6YWDuNY5fn+2QeJ4sYztUH+ENU0dUIhMUbJcIR
oapWn544O5Krz1Dn3TJSEBIvZbXoPdXUU7yVWrvXpVUfx4WkXnJV8LB3Tgnf
bl5H9uZZndm31nRn/3xJ/+xP1w3Isi17ZtlWVblsW/j7lj2y/7V5j+y3Vw3w
Y0eDXlio/uiO8GXhJ9hgW8NwjVJ1J4tlX4yqPVlYk6jM+4p90jHmk44qTrV4
jXcSOAPeD+RCMDkFgo42Km148PBYP3Ev8swsxWlDhfjts6BMP7Bk9OAkOlRB
oWwSiiW8eyfku1j5MkPvhd0RpkhTDkvWKyPwzyghPfMJTruVbYUmiS2iH3J3
FS9nuhtnNfPCMYvdiOOq9Yi3em/Uo/4FfkiV6ENyEihbr7SSNc1+ujDrrUKI
wONveqzACKax4KmGgA+s7U9G+socyR+zR9fmoemqRLDcwfZQrUzI15weJ72q
LDX22MZEsq3dXqlWJixOcZVmw3GGtsdxc4rcjzpZruyZJ2qx4oaxrdkDM9qz
54MSfGFFV/aDC/plvw6uJ7tpjyy7c68se3hvC8z6B90ZkP368v7ZT4KL+sbq
LsmPUB5CV04YES/TEnwGIN3rhLezURSJEtBSVSAtVbT10p8zjmus5YYikBgk
FaRVEXL2IHU7jIeUZQK5WRJZivoMZoMZOFuWGhS0b4YPtjfIaLhv3rCg+tjU
5hBtBYdkUV2aWflVSHTGQETa5Kq4zsy0uZ3JhyaTz3F3QPbODsCWpbXHqqWZ
6Id2dyTJdKUnasa7oxYor9UB8hZzkugLa4bkU2i+KrgQIiX+ljZteIzcZJOx
AvM/VIXvrOnKvhsu+rfO68y+kWCZgk1KkZrnAsILKRHSz3Mo1VdrAYkyltD9
R1H8lBb2nFTcKQsH5/4/rtikw4GDk55kZ01F0OOdXVAIeC0k+V87r5vMRVNs
mN0e2jvL7g6/t+yR/dmU4KcXdgut2WeC0wEhHyUAOfl6I9C66OO6x32R8Veu
OVkbzJRNqOwFN65w8h/MFeE4uxU4Ep5DnZ/A+ZIhGuIB79hjfUKEG2FnGoh5
Blq1tG2X2owDfTcec+XAweg8rSZdeBH6SY9PazbYRIX1mHRoPsk8Qnd9yzJX
X1+tFFp6M1Ba9yOH21SiTphMjLCAo5now580VviTpMDjB5akPbGCt6vZo1Ql
qh7aMyrHu62G5gtySlmt1LqcYYT6VqtrgdVK7wlloSRLUL3GWMG4/1eXdMt6
+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
jtLf/R9bcDFA\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lagrangian Characterization", "Section",
 CellChangeTimes->{{3.618161018883319*^9, 3.618161026312069*^9}}],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}], "+", " ", 
        RowBox[{
         RowBox[{"lambda", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
          ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"lambda", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
         ")"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6181615332420692`*^9, 3.618161582344569*^9}, {
   3.618164221779069*^9, 3.618164225962819*^9}, {3.6181642809460692`*^9, 
   3.618164297294819*^9}, {3.6181652195085692`*^9, 3.6181652329598193`*^9}, {
   3.6181653021635695`*^9, 3.6181653078635693`*^9}, {3.618166246271819*^9, 
   3.6181662568418193`*^9}, {3.618167466622819*^9, 3.618167470505319*^9}, {
   3.618167550833069*^9, 3.6181675542068195`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"daSubs=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "ProjectionInterface`Private`EquationValDrv", 
      "[", "\<\"qq$tm1.times(-1).times(rhop).plus(qq$t.plus(forInt3).plus(rr$\
t.times(sigmap)).plus(ru$t.times(-1)))\"\>", "]"}], ",", 
     RowBox[{
     "ProjectionInterface`Private`EquationValDrv", 
      "[", "\<\"lambda$t.times(-1).times(rUnderBar).plus(lambda$t.times(rr$t).\
plus(rr$t)).plus(qq$t.times(-1).times(phip))\"\>", "]"}], ",", 
     RowBox[{
     "ProjectionInterface`Private`EquationValDrv", 
      "[", "\<\"ru$t.plus(ru$tm1.times(-1).times(rho$ru)).plus(uu$Shock$tm1.\
times(-1).times(adj))\"\>", "]"}], ",", 
     RowBox[{
     "ProjectionInterface`Private`EquationValDrv", 
      "[", "\<\"lambda$t.times(-1).times(rUnderBar).plus(lambda$t.times(rr$t))\
\"\>", "]"}]}], "}"}]}],
  SequenceForm["daSubs=", {
    ProjectionInterface`Private`EquationValDrv[
    "qq$tm1.times(-1).times(rhop).plus(qq$t.plus(forInt3).plus(rr$t.times(\
sigmap)).plus(ru$t.times(-1)))"], 
    ProjectionInterface`Private`EquationValDrv[
    "lambda$t.times(-1).times(rUnderBar).plus(lambda$t.times(rr$t).plus(rr$t))\
.plus(qq$t.times(-1).times(phip))"], 
    ProjectionInterface`Private`EquationValDrv[
    "ru$t.plus(ru$tm1.times(-1).times(rho$ru)).plus(uu$Shock$tm1.times(-1).\
times(adj))"], 
    ProjectionInterface`Private`EquationValDrv[
    "lambda$t.times(-1).times(rUnderBar).plus(lambda$t.times(rr$t))"]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6180477957619686`*^9, 3.6180600832269883`*^9, 
  3.618161617790819*^9, 3.6181633405040693`*^9, 3.618164230712819*^9, 
  3.618164301643569*^9, 3.618165244699819*^9, 3.618165312657319*^9, 
  3.6181654570528193`*^9, 3.618166148693569*^9, 3.6181662772018194`*^9, 
  3.618166348452319*^9, 3.6181667244258194`*^9, 3.618167419852069*^9, 
  3.618167498723569*^9, 3.618167584489319*^9}],

Cell[BoxData["\<\"\\\"c:\\\\Program \
Files\\\\Java\\\\jdk1.7.0_51\\\\bin\\\\javac\\\" -cp \
./;ProjectionMethodToolsJava-0.0.1-SNAPSHOT.jar;Jama-1.0.2-1.0-SNAPSHOT.jar  \
-target 1.7 ./lucaMod.java\"\>"], "Print",
 CellChangeTimes->{3.6180477957619686`*^9, 3.6180600832269883`*^9, 
  3.618161617790819*^9, 3.6181633405040693`*^9, 3.618164230712819*^9, 
  3.618164301643569*^9, 3.618165244699819*^9, 3.618165312657319*^9, 
  3.6181654570528193`*^9, 3.618166148693569*^9, 3.6181662772018194`*^9, 
  3.618166348452319*^9, 3.6181667244258194`*^9, 3.618167419852069*^9, 
  3.618167498723569*^9, 3.618167584524319*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Java", "::", "excptn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A Java exception occurred: \
\[NoBreak]\\!\\(\\\"java.lang.ArrayIndexOutOfBoundsException: 6\\\\n\\\\tat \
lucaMod.updateParams(lucaMod.java:38)\\\"\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.618167503754819*^9, 3.618167587110569*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6181675037585692`*^9, 3.6181675871168194`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}]], "Input",
 CellChangeTimes->{{3.6181643453198195`*^9, 3.618164367401069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lambda\"\>", ",", "\<\"rr\"\>"}], "}"}], ",", 
   RowBox[{"{", "\<\"uu$Shock\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6181643680648193`*^9, 3.618165246744819*^9, 
  3.618165314527319*^9, 3.6181654624048195`*^9, 3.618166150662319*^9, 
  3.618166282487069*^9, 3.618166351033819*^9, 3.618166729779569*^9, 
  3.6181674218440695`*^9, 3.618167504179819*^9, 3.6181675875280695`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"(", 
     RowBox[{"someSubs", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tcl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"targ", ",", 
                 RowBox[{"{", 
                  RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
               "]"}]}], ")"}], "\[Equal]", 
            RowBox[{"(", 
             RowBox[{"acl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"theProd", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                  "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
          RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
         RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}], 
     ")"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"goodQkArray", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{".1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lucaMat", "=", 
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9, {3.618161722942319*^9, 
   3.618161723452319*^9}, {3.618161909353569*^9, 3.6181619098635693`*^9}, {
   3.6181620653648195`*^9, 3.6181621299798193`*^9}, {3.6181622242498193`*^9, 
   3.6181622724773192`*^9}, {3.6181626066898193`*^9, 3.618162706914569*^9}, {
   3.618163099793569*^9, 3.618163117742319*^9}, {3.6181639572090693`*^9, 
   3.6181639768615694`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5354845307277833`", ",", 
       RowBox[{"-", "0.5354845307277833`"}], ",", "0.6172963046806865`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5354845307277833`", ",", "0.4645154692722171`", ",", 
       "0.6172963046806865`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.618047859751969*^9, 3.61806013325099*^9, {3.6181616993773193`*^9, 
   3.6181617291360693`*^9}, 3.618163342770319*^9, 3.618163985067819*^9, 
   3.618164233046069*^9, 3.618164303884819*^9, 3.618165247179819*^9, 
   3.6181653149173193`*^9, 3.6181654632348194`*^9, 3.618166151066069*^9, 
   3.6181662833683195`*^9, 3.6181663519100695`*^9, 3.618166730669569*^9, 
   3.6181674224015694`*^9, 3.6181675050473194`*^9, 3.618167588348069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"lucaBasis", "[", 
    RowBox[{"setAllWeights", "[", 
     RowBox[{"lucaMat", "+", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Random", "[", "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], "]"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"simp", "=", 
     RowBox[{
     "JavaNew", "[", 
      "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"\
", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"res1$1$1", "=", 
     RowBox[{"ComputeInitialCollocationWeights", "[", 
      RowBox[{"lucaBasis", ",", "lucaMat", ",", "modEqns", ",", "simp"}], 
      "]"}]}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"res1$1$1", "[", 
       RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
      RowBox[{"polys1$1$1", "=", 
       RowBox[{
        RowBox[{"genPolys", "[", 
         RowBox[{
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
        "Chop"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
       "*)"}], ",", 
      "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.9090909041443984`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.9999999999999998`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2.6106543625299276`*^-10"}], " ", "\<\"ru\"\>"}], "-", 
    RowBox[{"7.40937176814319`*^-10", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], 
    "-", 
    RowBox[{"4.295973834492866`*^-10", " ", "\<\"uu$Shock\"\>"}], "-", 
    RowBox[{
    "1.2193025717163`*^-9", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}], "-", 
    RowBox[{
    "3.8118261715712306`*^-9", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}], 
    "-", 
    RowBox[{
    "1.0744910773186941`*^-8", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", 
     " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.9090909041443984`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.618047861231969*^9, 3.6180601344698377`*^9, {3.6181617018210692`*^9, 
   3.618161730527319*^9}, 3.618161934072319*^9, 3.618162757253569*^9, 
   3.6181631479598193`*^9, 3.618163249921819*^9, 3.6181633428253193`*^9, 
   3.6181633910335693`*^9, 3.618163486756569*^9, 3.6181635420978193`*^9, 
   3.6181636256565695`*^9, 3.618163698016569*^9, 3.6181638823703194`*^9, 
   3.618163940537819*^9, 3.6181639851178193`*^9, 3.618164233098569*^9, 
   3.6181643039360695`*^9, 3.618165247233569*^9, {3.618165314963569*^9, 
   3.618165333037319*^9}, 3.618165466862319*^9, 3.6181661514135695`*^9, 
   3.618166286782069*^9, 3.6181663529588194`*^9, 3.6181667341845694`*^9, 
   3.618167422675319*^9, 3.618167505901819*^9, 3.618167589185069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ushk", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, 3.617539650968808*^9, {
   3.617539771520014*^9, 3.617539771530014*^9}, {3.6175447381456804`*^9, 
   3.6175447847461467`*^9}, {3.6176152216606865`*^9, 3.617615223130701*^9}, {
   3.617729256863103*^9, 3.6177292659831944`*^9}, {3.6178125174749517`*^9, 
   3.6178125207149844`*^9}, 3.617897909905138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478620519686`*^9, 3.6180601348486176`*^9, 
  3.618163342854069*^9, 3.618164233138569*^9, 3.6181643039773192`*^9, 
  3.6181652473010693`*^9, 3.6181653150298195`*^9, 3.618165467393569*^9, 
  3.6181661519535694`*^9, 3.618166287330819*^9, 3.6181663534588194`*^9, 
  3.6181667346595693`*^9, 3.618167423162819*^9, 3.6181675065680695`*^9, 
  3.6181675894900694`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175390631259155`*^9}, 3.6175396509788084`*^9, {3.617539771530014*^9, 
   3.617539771530014*^9}, 3.617726982672346*^9, {3.6178125554353313`*^9, 
   3.6178125576453533`*^9}, 3.617897982661892*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.617539651018809*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.617703168939221*^9, 3.617703170609154*^9}, {
   3.6177251642891626`*^9, 3.617725171869238*^9}, 3.617897983211898*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478621419687`*^9, 3.618060134939875*^9, 
  3.618163342925319*^9, 3.6181642331960692`*^9, 3.618164304037319*^9, 
  3.6181652473598194`*^9, 3.618165315089819*^9, 3.618165467933569*^9, 
  3.6181661519885693`*^9, 3.618166287862069*^9, 3.618166353993819*^9, 
  3.618166735240819*^9, 3.6181674232228193`*^9, 3.618167506629319*^9, 
  3.618167589587569*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.6175396510288086`*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.6177251761492805`*^9, 3.6177251785693054`*^9}, 
   3.617726984322363*^9, {3.6178134560223618`*^9, 3.6178134697124987`*^9}, 
   3.6178979837519026`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.617539651048809*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.617725218189701*^9, 3.61772522000972*^9}, {
   3.6178134784125853`*^9, 3.6178134801226025`*^9}, 3.617897986241928*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.1720033044948844`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.017319066954171472`"}], "}"}], ",", 
   RowBox[{"{", "0.1021642000083067`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08715817144074917`"}], "}"}], ",", 
   RowBox[{"{", "0.0871581714407492`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.10216420000830667`"}], "}"}], ",", 
   RowBox[{"{", "0.017319066954171493`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17200330449488438`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862211969*^9, 3.618060135036133*^9, 
  3.618163342984069*^9, 3.618164233256069*^9, 3.6181643040960693`*^9, 
  3.618165247442319*^9, 3.618165315138569*^9, 3.6181654685310693`*^9, 
  3.6181661520223193`*^9, 3.618166288482069*^9, 3.6181663546013193`*^9, 
  3.6181667359095693`*^9, 3.618167423289069*^9, 3.618167506678069*^9, 
  3.618167589635069*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.6175396510588093`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252370898905`*^9, 3.6177252404999247`*^9}, 
   3.61772699007242*^9, 3.6178979869219346`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.6175396510688095`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252488600082`*^9, 3.6177252514100337`*^9}, {
   3.6178134902427034`*^9, 3.6178134918127193`*^9}, 3.617897987691942*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.08472361378071384`", "}"}], ",", 
   RowBox[{"{", "0.03403401316487946`", "}"}], ",", 
   RowBox[{"{", "0.031105181491203136`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.019584419124631255`"}], "}"}], ",", 
   RowBox[{"{", "0.019584419124631273`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.03110518149120312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.034034013164879424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08472361378071382`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478624319687`*^9, 3.61806013512614*^9, 
  3.6181633430353193`*^9, 3.618164233316069*^9, 3.618164304148569*^9, 
  3.6181652474773192`*^9, 3.6181653151860695`*^9, 3.618165469077319*^9, 
  3.6181661520523195`*^9, 3.618166289004569*^9, 3.6181663551463194`*^9, 
  3.6181667364795694`*^9, 3.6181674233615694`*^9, 3.618167506726819*^9, 
  3.618167589687569*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.6175396510788097`*^9, {3.617539780840107*^9, 
   3.617539780850107*^9}, {3.617725260960129*^9, 3.617725262840148*^9}, 
   3.6177269918424377`*^9, 3.6178979883419485`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.6175392088874583`*^9, 3.6175394582869225`*^9, 
   3.6175396510988097`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, {
   3.6177106269615965`*^9, 3.617710632491652*^9}, {3.6177252781303005`*^9, 
   3.617725279760317*^9}, 3.617897989161957*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862501969*^9, 3.618060135213647*^9, 
  3.618163343077819*^9, 3.618164233369819*^9, 3.618164304213569*^9, 
  3.618165247532319*^9, 3.618165315233569*^9, 3.618165469628569*^9, 
  3.6181661520848193`*^9, 3.618166289570819*^9, 3.618166355725069*^9, 
  3.6181667370970693`*^9, 3.618167423435319*^9, 3.618167506780569*^9, 
  3.618167589773819*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.617539208947458*^9, 3.617539467326923*^9, 
   3.6175396511088095`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.617725307870598*^9, 3.6177269974024935`*^9, {3.617813504982851*^9, 
   3.617813510372905*^9}, 3.6178138325861273`*^9, 3.617897990611972*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rut", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.617539479096923*^9, 
   3.61753965114881*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.6177253085806055`*^9, 3.617813838136183*^9, 3.617897991391979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.12529172487167858`", "}"}], ",", 
   RowBox[{"{", "0.12529172487167858`", "}"}], ",", 
   RowBox[{"{", "0.012154639881830978`", "}"}], ",", 
   RowBox[{"{", "0.012154639881830978`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.01215463988183095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.01215463988183095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.12529172487167856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.12529172487167856`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862581969*^9, 3.618060135303654*^9, 
  3.6181633431203194`*^9, 3.618164233429819*^9, 3.618164304268569*^9, 
  3.6181652475923195`*^9, 3.6181653152835693`*^9, 3.6181654701548195`*^9, 
  3.618166152119819*^9, 3.6181662900820694`*^9, 3.6181663562488194`*^9, 
  3.618166737614569*^9, 3.6181674234915695`*^9, 3.618167506828069*^9, 
  3.618167589826319*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175394824969225`*^9, 
   3.61753965114881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725310980629*^9, 3.617726995772477*^9, 3.6178979921219864`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175394837869225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.6177253135206547`*^9, {3.6178135164529657`*^9, 3.617813518572987*^9}, 
   3.6178979926919923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.06264586243583929`", "}"}], ",", 
   RowBox[{"{", "0.06264586243583929`", "}"}], ",", 
   RowBox[{"{", "0.00607731994091548`", "}"}], ",", 
   RowBox[{"{", "0.00607731994091548`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.006077319940915471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.006077319940915471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06264586243583928`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06264586243583928`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478626619687`*^9, 3.6180601353936615`*^9, 
  3.618163343161569*^9, 3.6181642334985695`*^9, 3.618164304324819*^9, 
  3.6181652476560693`*^9, 3.618165315347319*^9, 3.618165470764819*^9, 
  3.618166152151069*^9, 3.6181662906708193`*^9, 3.618166356826319*^9, 
  3.618166738218319*^9, 3.6181674235178194`*^9, 3.618167506876819*^9, 
  3.618167589872569*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.6175394860369225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725316300682*^9, 3.617727031702837*^9, 3.617897993301998*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.6175396511888103`*^9, {
   3.617539859270891*^9, 3.6175398592808914`*^9}, 3.617725318670706*^9, {
   3.617813531043112*^9, 3.6178135320331216`*^9}, 3.6178979939920053`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.49748737341529176`", "}"}], ",", 
   RowBox[{"{", "0.0853553390593274`", "}"}], ",", 
   RowBox[{"{", "0.0853553390593274`", "}"}], ",", 
   RowBox[{"{", "0.014644660940672627`", "}"}], ",", 
   RowBox[{"{", "0.08535533905932743`", "}"}], ",", 
   RowBox[{"{", "0.014644660940672627`", "}"}], ",", 
   RowBox[{"{", "0.014644660940672613`", "}"}], ",", 
   RowBox[{"{", "0.002512626584708348`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047862961969*^9, 3.618060135574926*^9, 
  3.6181633432228193`*^9, 3.6181642335535693`*^9, 3.6181643043948193`*^9, 
  3.6181652477498193`*^9, 3.618165315421069*^9, 3.618165471411069*^9, 
  3.6181661521898193`*^9, 3.6181662913470693`*^9, 3.6181663575300694`*^9, 
  3.618166738875819*^9, 3.6181674235490694`*^9, 3.618167507114319*^9, 
  3.618167590028819*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175396511888103`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.6177253196207156`*^9, 
   3.6177270480029993`*^9, 3.6178979946020117`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175396511988106`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725320590725*^9, {
   3.6178135365931673`*^9, 3.617813538953191*^9}, 3.617897995162017*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.2396462273235168`", "}"}], ",", 
   RowBox[{"{", "0.17213109493914455`", "}"}], ",", 
   RowBox[{"{", "0.12958170125270108`", "}"}], ",", 
   RowBox[{"{", "0.08884079540471804`", "}"}], ",", 
   RowBox[{"{", "0.10851076412872902`", "}"}], ",", 
   RowBox[{"{", "0.07352272139708974`", "}"}], ",", 
   RowBox[{"{", "0.02244406563121491`", "}"}], ",", 
   RowBox[{"{", "0.014230249435964779`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478630519686`*^9, 3.6180601357336884`*^9, 
  3.6181633432815695`*^9, 3.618164233619819*^9, 3.618164304454819*^9, 
  3.6181652478060694`*^9, 3.618165315497319*^9, 3.6181654720073195`*^9, 
  3.618166152228569*^9, 3.6181662919295692`*^9, 3.6181663580975695`*^9, 
  3.618166739482069*^9, 3.618167423579069*^9, 3.618167507169319*^9, 
  3.6181675900888195`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.617539651208811*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725322270742*^9, 
   3.617727051953039*^9, 3.6178979958220234`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res2$2$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res2$2$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.9090909041443984`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.9999999999999998`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2.6106543625299276`*^-10"}], " ", "\<\"ru\"\>"}], "-", 
    RowBox[{"7.40937176814319`*^-10", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], 
    "-", 
    RowBox[{"4.295973834492866`*^-10", " ", "\<\"uu$Shock\"\>"}], "-", 
    RowBox[{
    "1.2193025717163`*^-9", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}], "-", 
    RowBox[{
    "3.8118261715712306`*^-9", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}], 
    "-", 
    RowBox[{
    "1.0744910773186941`*^-8", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", 
     " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.9090909041443984`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6180478633719687`*^9, 3.618060135972458*^9, 
  3.6181633437428193`*^9, 3.6181642340873194`*^9, 3.6181643049360695`*^9, 
  3.618165248237319*^9, 3.618165315938569*^9, 3.618165472308569*^9, 
  3.618166152344819*^9, 3.618166292214569*^9, 3.618166358377569*^9, 
  3.618166739782069*^9, 3.6181674236890693`*^9, 3.6181675073218193`*^9, 
  3.618167590221319*^9, 3.618167675400069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res3$3$1", "=", 
   RowBox[{"res2$2$1", "[", 
    RowBox[{"toOrder", "[", 
     RowBox[{"2", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res3$3$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys3$3$1", "=", 
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
    "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}, 
   3.6181679893695693`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.9090909041443984`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.9999999999999998`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2.6106543625299276`*^-10"}], " ", "\<\"ru\"\>"}], "-", 
    RowBox[{"7.40937176814319`*^-10", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], 
    "-", 
    RowBox[{"4.295973834492866`*^-10", " ", "\<\"uu$Shock\"\>"}], "-", 
    RowBox[{
    "1.2193025717163`*^-9", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}], "-", 
    RowBox[{
    "3.8118261715712306`*^-9", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}], 
    "-", 
    RowBox[{
    "1.0744910773186941`*^-8", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", 
     " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.9090909041443984`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6180478638919687`*^9, 3.618060136324986*^9, 
  3.6181633437815695`*^9, 3.618164234106069*^9, 3.618164304954819*^9, 
  3.618165248256069*^9, 3.618165315974819*^9, 3.618165472327319*^9, 
  3.6181661526460695`*^9, 3.6181662922558193`*^9, 3.618166358400069*^9, 
  3.618166739810819*^9, 3.6181674240265694`*^9, 3.6181675076255693`*^9, 
  3.6181675905263195`*^9, 3.6181676830838194`*^9, 3.618168004470569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.618167852917569*^9, 3.618167853883819*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxtnXd8FdXz/gMERFDpIIJIbyJdiiAngB96kxqKooAUqUpRIyIivRMpERAQ
pHekqAQ2XHqHAKEkQBqBNEiBBEIgXzlznmd/nJ/+c195u947++zsnJnZOWuZ
fiM7f5Hdy8urZE4vrxz/fpa52f7PrKwHDj6f56iTmTTBO2jgmB2/7h0eT762
TK8avZZlD9qUt9DE4aEx5O3UT/0O7/MKur967MDyrSPJ7/3d6d2eG545X+jv
CSWv92jFgncjnjhyfDD51JqJ6c+KpxnuIb88tNGnFzqnOF7mH/CWHQrN+F+x
RByvwO8c2d4tbvodfD95rm8CPir1KBT2kE8+sXr/+R0nzfGR5PnHbG05puxq
Zc6XvMWhwAfen19URh/yV+Kabr7ZJBx/kw8ZvfZWg7N3+Td0XbXce236mBzU
GZ+t/nn32mcLslFn8Fvb1xZd2DsLdpJXi08dP3DhU+oMPr5is6gGZ9OpM/ip
z+e3zpvrIXUGL/7bre03myRRZ/ALO3pW++zBPeoMPqJS2mPvzyOoM3ixxhVm
dVl7iTrzvNZ+u2BM2V3UGTw6+OLk2pWPUmfwBpk1Np7fcZ06g0+c9vSVwwOj
qTN4ZP6+jUo9cq8H9Gv+fkj7519mp87gcZ2fTRw0zYs647NcRKvBv7d8Rp3B
vyq55NzoiU+oM3hQjzt1W/z9iDqDv/FLnWVvpiRTZ/B/lufIEdItgTqD+xZa
dd7veDR1Bo8v9F0D9fUN6gzeLvuANQU2H6PO4F5zNmwY1nCbgs7gA8qHPY2K
4n9PvnjZx7Xae0VQZ/CM8nsGbJh7jzqDV+/x2pmf3kiiztAp5uz6NO/Ps1Fn
8Leu/tYlLOM5zx98cMGEv7fVecq/8bm3/QelfxqWTp3BvWdMn9plbSp1Bl83
fev1toEPqDN486zW65Leu0edwcPHxny9aGU4dQbPuJbzxzFlg6kz+KpaaYeS
3ttAncHL/5r/t6T3TlBncN++Hfdsq8PrQZ6/Yd65tSvfoc7gYzwjDs3Zm0Cd
weMrDPEbUzaFOkOPGQO/W5m3hxd1Bu+bu+na2JhM6gy+tfm8vIHvPKEu4E8n
3Pxqru8j/o3P1jr+JFNn8Bo6zsRTZ/AzOp5EU2fwizpuXKPO4EV0fDhMncGT
dBzYg7/Jf9b3+2XqDF6+/ef7Ag9FUGfwmSFH4op1iqXO4Ok1Cs9rOJJ+S77x
4dHKg+o9tPw52On+fNH88kufOy/7c7DzR8PotLTgDMufg52UMbU/OZk33fLn
YMdnx8TDyz5Ktfw52Cmp74v7lj8HO39p/79r+XOws1H7+W3Ln4OdSO3PFyx/
DnZ2aL8NsPw52PjnafWyPwcbPwyz/DnY+S3urcKrY+9Y/hzsZBszoeWzbxIt
fw52dj8f9WG1n1Msf/53/Tlc9mrPNmmWzh5neY2GkbWmZlo6e5y4L6e18nYe
Wzp7nPrrrmwLSX9o6exxpkSUK7KxZrKls8dZp69XnKWzx2mmr0uUpbPH2a/1
v2rp7HFitM5Bls4ep6vWc796WWeP0e2KpbPH2aX1ibR09jhFp18eNa1AnKWz
xzmQu2Tn5PNJls4eZ9TZs/Glljy0dPY4Zf1/nNLu08fUGecR8VlYHfV1BnUG
r7G86tICm9OoM/j4q996RUelUGfwXyrMPTus4X3q/PL3uPcD+CJ9/C3qC/6r
5uf49//7T+ne2wKhM9gMOZ46g8+R76fO4O+KPdQZfJ7YT53B/eR8qTP4e6IP
dQa/LXra/qwqiv62P6sxcr1sf1aH5Pra/qxKij/Y/qz+Ev+x/VmtF3+z/Vl9
K/5p+7MKEX9Wlj+r3eL/tj+rJnK/2P6sJB7G2f6sJsv9aPuzMvev7c/K3O+2
PysTH+z4rIZJPLHjs/pH4o8dn9XrEq/s+Gx0u2PHZzVZ4qEdn9UYiZ92fFZe
Em/VyzoHqxsSny2dg9UfEs8tnYPVPon/dnxWZr2w47My64sdn9VDWY/s+Kwk
HmbY8Vn5ynpn5xtqp6yPjpVvqCxZT+18Qy2W9dfON1RNWa/tfEMtkfXdzjdU
zUs6H7DzDfWskc4fqDP4Sck3qDO41DvRPE9wk8/Y+YZqI/mPnW+oZ5Iv2fmG
2i75lZ1vqP6Sj9n5hpol+ZuPlT+rdMn3LH+OVNMlP7TzZ1Va8kk7fzb+GWr5
c6TqKvmqnT+r/JLfqpf9OVIlSj5s+XOkCpP82fLnSNVM8m3LnyPVesnPLX+O
VLkkn7fzZ/W35P92/qyGSb1g58+qtNQXdv6s4qQe8bHqQdVY6hfHqgdVwQq6
3qHOrJOkPqLO4NOlnrLrQRUu9Rd1Bi8t9Rp1Bg+T+o46g3eVepA6g5v6kTqD
55d6kzqDH5b6lLqAj5N61q4HVRWpf+16UN2XetnHqgdVK6mvfaz+hspeQNfj
1Bl8udTv1Bl8sNT71Bm8ro4DR+3+hjrxh+4nuPml4Vk6PlyizuwfSL+COoOf
kf4GdQY3/RDqzOOlf0KdwSdKv4U6g9eW/ozd31Ax0s+x+xuqvfR/fKz+hlon
/SLqjH8/R/pL1Bm8kvSjqDP4BOlfUWfwUWN1v8vu16nG0h+jzuAJ43Q/jTqD
h0n/jTqDN5d+HXUGvyL9PeoMPl36gdSZ9kj/kDrzvpd+o92vUx9Lf9LH6tep
zdLPpM74zOmt+58+Ryr/WDF0b6KDz3J9a8RVzp0jCPqDd7ywrNPDJzmCzN8K
fMwPnVKfFXftAC/fLPucdyNilfX9aqEc71jfr1rJ8Y71/aqK2AM7+TvX/I8t
qjCHnN93UXiQdbyzb1vqRy/WR+t4FSrcsexX3eV8fVImxQwbHnrfwef8WrVS
Zx/OEWT+VuDDH2cMXpYao6zj1QLhjnW8WiLfQz/Hf1fxy0Hrvm7sze/Hv8+3
4EyBF/UpjoO9dYTzb/x378n3+FjHO4NOZ7bKm8s7yDreOX7j0vu1r7IPRnvj
hTuWPWqEfI/PD2WiA7Oy3Pj3S8ixnZfOZgu6/oXfsaysu/zdyG/2/ZsnuxzH
T8k/4+D2il5B72/KfyErK4rHb+qf+lGeQlkOOI5/sHDx4mJZmU5ZfdxtHj//
6jefeo48JcfxV3KX2HF+xxPnhv7dqzx+bNvMb/zGPSbH8f+MX3lyWr80p7w+
7jyP7+VMXFC78iNyHL8iqVyUKpzqVNLc4fGqTs7NcdeTTT0SEAjeyvTzcTy+
55WTnZ48mPWAx4NfNH3pEnI8r0/BeiUD9/jFkOP45QH9+l7oHOmUEjt5/N+N
2tx60VcBZ5/c62r5F32Aq6IDj++Qt89H1X4OJsfxgasuFjk88IjzjujM42cO
3bfxRR4LjuOHeb377Yu8q65cRx5fqXu2g20DHXIc7zc/dcPNJhfUNfETHv9o
yogZtStfIcfxd4Mimj375qYaL37I42v13lZgY80IcuZBjweNmOt7R8FvsW68
PzKg143DXvRP8I6d95wb1vA5/RC87rGG98rHZ9DfwIt/cDDbzeXp9Cvw51ub
lVjU4SH9BzyyzPG67b2S6Q/g895dsjzPgHj6A3hP0z/HdQdvkfZxzpBuYby+
4LtmHQ950X/AdQQ/0b1nseENV/B6gWe9nzz/Rf6G6wI+/PTAfhvmXqP+4Ik/
VH0eFRVJncHLLy5zevTEWOqMdXhHvsu5PKOzHOgMvvBn39J+FTKpM/h36WEN
a199TJ3BPx36eZe46Y+oM3iz23eGrf4ghTqDd1x3+bU919z7DvzNuTdVhcZ3
qTN4hOmfQ2fwbvtvtc2b6zJ1Bl/xruf4i/4DdAYvujht5fkdfyvoDJ5yJf6n
F/kbdAavlSNxTsOR4dQZfFCJ6F4n896lzvzdOqGVem5IpM7Iax75fON7vu8z
6gx+Y/fTr6YVyKDO4AcrT5ylDqdRZ/A1Oh9Lpc7g03TcTqLO4Nd0vI2lzuC/
6zgZRZ3BL5v+OXQGP63j0nHqDD5dx5MABZ3BE3QcOEudwaP087JQ6sx++Kp1
caWWRFNn8Ii/ftu3rU48dQafPbhNs3fuJVn+HOx88PVbm8LaPrX8OdgpFbPi
8MJn6ZY/Bzs5epW72W77Q8ufg517uo5Ltvw52AnQ90WC5c/Bzufa/+9Y/hzs
dNF+ftPy52An2vTPX/bnYGeH9tvNlj8HO8naPw+rl/353/pD++FVy5+DnThd
10da/hzslG3yWUtv557lz8FOz+49Ci/s/cDy52Cndf31SQUyUyydPc7ENQee
xtZ/YunscQYUa1ZkdewjS2eP02rWseq9lqVYOnucnrr/c9/S2eOU1dfrrqWz
x5H6OsLS2eN8ofW/YunsceJN//xlnT1OjNbzT/Wyzh4nVusWbOnscXpofW5b
Onuc/rofGGPp7HGWhRb/IzYmwdL53+//bvpfgYeSLZ09Ts5c3iu98z+izqhj
jl7+rH16uXTqDL6x1Z2B26+kUmf2pQOH/FsvJ1Fn8EjdN46jzuCb9fdEUWfw
GH38DeoMnqD5Kers9dI//wRCZ5BgOZ46g1+X76fO4H+IPdQZPEzsp87gM+V8
qTP4OtGHOoN7RE/bn1Ue0d/2Z3Vfrpftz2qNXF/bn9VQ8Qfbn9Ug8R/bn9Vj
8Tfbn1WpEO2ftj+ri6Z/bvmz8hX/t/1ZRcv9YvuzKin3l+3Pqpvcj7Y/q5Zy
/9r+rPrL/W77s/pR4oMdn1UniSd2fDb6PLDjs6ou8cqOzypN4psdn9X3Eg/t
+KyKaD0P2/FZ1ZV4q6z4rK6Z/rkVn1UrieeWzsHqE4n/dnxWi2S9sOOzkrmF
ZDs+K7Me2fFZlZb1y47PqpGsd3a+oRbJ+mjnGypJ1lM731D7ZP218w31XNZr
O99QJQ7p9d3ON9SxbDofsPMNtUnyB+rM403/3Mo31HLJT5SVbyipH2PtfENN
lfzHzjeUyZfsfEM5kl/Z+YYKlXzMzjfUY8nf7PxZ7ZZ8z86flZ/kh3b+rJpK
Pmnnz6qg9s9Ldv6sJkq+aufPqqXkt8rKn9VHkg9b/hypQk3/3MqfVWHJty1/
jlTtJT+3/DlSmXzezp9VX8n/7fxZjZd6wc6fleRRmXb+rPZIPWLXg6qJ1C+O
VQ8q7wm63rHrQbVY6iO7HlSt6+l6yq4HVXhXXX8pqx5UE6VeU1Y9qOpIfUed
wbuY/rlVD6rZUj8qqx5UUVJvKqseVFlSnyqrHlQlpZ6160HVUOpfux5U3aRe
tutB1VDqa7tfpE5IPe5YfSFVUt/vN+3+j9oo/QG7z6N26ziwwe7nqG+lX6Gs
vo3aLn0PZfVh1ALpn1Bn8NOmf271W5S39G2U1VdRK6UvpKz+iQqU/pKy+iRK
6qYndj9EPZJ+l933UDOkb+Zj9TdUgPTfqDP6dV2kH+JYfTlVe6ruqzhW/009
lv6M3WdTIV/qPo+y+mmqivSLlNU3U8ul76Ss/pjKLf0r6gzezPTPrX6XaiL9
NGX1tVRv6cspq3+lvpX+nrL6VGqh9AntfpTaKf1Gu++k7krfknric8KaLWEF
H7j9zEXnioW38k9w+mzqWrj6ELefufX7tjn8yyc6Y/s9WeJ/7Bn1RB+6zqjW
r5z8J4N+G3ZlV+vyre8793/4dVzWtnTG4VTTp90yK/bO+2secr3LU/Ot+XuH
P3AG/9qw27Albr9xkOl3BVv9wwnG/rZnnuQ5e9XtE8L+aefrXBo98Tr7GLA/
5bV7pZetPsV+EewPCmkeOqasvwM9Q439LYsVi3tW/Bj1hP07up6uX6HxVcbb
Q3+1WLN3+F2ndOMJU4rfcftv+Hw+pZ3fkINu/y254LbYVv73nP2/LI9ducvt
974aFPGaf/lY55vfE3xD1rl93dLDi9QM3Rvr1N3e+MRry9z+bYO3Wncp3zrO
SQqcXb/5vBTq2fH4+HHDQ+Ocnov+bp+ay+3HbjZ9rV5W/81j7F/7ycQ+5/ve
pJ43jP2LFwYV31jzIvWE/WWr5+iTN9du6gn7C6c93TZnbyD9E/YvOjZh28k+
l6gn7F89r0nyg1m3GW87Gft9q2UVn3XT7XPm7LRxxvDQSGfaxpV9fPa6/be3
n4Vt2Ts8ymm+78HpcZvc/hvrvKOq0dYVT6hz+x4fpbbyj3YCg+dtivJPo84D
vL8t6l/+jvNt+O3ib01Lpc7jd25uGLr3jlP3fo0Znb5Pos6/fHq7T/nWMU5E
elbS67fjqPMD09eKtPpvuYz9u8u+vsY7/xXqXMrY3+bPpUGBhw5RZ9jf7vtf
CqmvNzEOwP6kUQPahGWco86wf3q2lEELt4RSZ9jf9o5vt5uJUdR5obE/+ORf
40bljKPOv+j7KMw5c6PZtvar3f7bYX2/3HSm3/N/e/Jit/8m98Ut539pkbP/
mZlOnVlP6+d0D6nzhmU3Mlv5hzuBBX4eWml0MnUOavVGaf/yEU5Kk3V79p9L
oM5XHzVtHro3wvmyV4uFlffFWM8XQp0rVv9tkbF/uo4DJ6nzEWP/RH2/T6LO
sH+Pvq+PU2fYL/sCrlJn2N9kxa75NZ5HUGfYf3RSwV2eIveo8zVjf7tBX1/q
9t596lxSX/dLToHXYrJ6zXX7b+309b3snC1eb+SCSY+ps1zHK87MSlNvHR/3
iPrKfR3itNDP91OoMz6zT30Rf+5TZ7lPrzvf6zhzjzrL/XjDSdXxJJI6J5m+
VozVfytl7O+q/XYndW5v7L+v/fMg1zXY30774SXqDPvf0/Me4dT5urF/b6Nh
iYUrxlBn2K9Kn3ljw4cJ1Lmhsb9/9qIBv1VNps5ttD1HnB4fzvh4sN8TKx8+
5hRsez1oxYg06pxHf/9J57xvlZpX+qVS58Ha3047M/VcUBL1Pab96qwzW98X
cdQZn97a/6Op8yHtJxedNO3nYdQ5GXM9Vv+tg7H/gtZzG/OHLcb+alq3C9QZ
9jfW+oRRZ9i/Ts+JRVPno8b+6tcrtMloH0edYX/oLc+eY7WTqLPH2F/64tct
5jdJpc7h2n5/Z/mIamvGDky36rvVju/48QW39HpInUdoezY7hWae+SmyQzJ1
fqiP3+Ws0POECdR5hz7fvU5Rfb1iqO8w/T37nTn6uoRTZ3zm1vpftvpv+Axi
/817jdhfWM+FnqDOj439JTW/Rp1HGfsXb31nwN8tIqkz7C+lj79HnbcZ+zeM
u73u9tj71Hm4sT9Af08Kda5m7A9bef7hpM5un7O8sTdCuNWv2K+Wy/dQ57Xy
u2qH/C51vid2qspiJ3X2lfNSK+W8qLNc39WqmuhAfS/LdVd1RTfqHG/6Wues
/hs+n+j9a5ep82fG/qlyHanzH8b+fHLdqTPsDxA/oc6fGPsLiF9R51vG/m7i
h64/G/t/Fb+lzhLPL6pK4ufUubSxN1LuC+ocJPeR+kDuI+rcT+47M58ZTZ29
5T5VneQ+pc7r5L5WTeS+ps6tJA6oXl/pOECdE0xfK8Tqvx009sdKnKHO+JT9
g9HUGfZPkzhGnWH/dIl71Dmnsf+sxEnqDPtNXKXOLYz93SUOU+f6ErfVMInb
1PkVifOqg8R56gx7j8i6QJ03yDqiGsk6Qp2/k3VH9Zd1hzrLunBZNdN6HqTO
JWRdU6/Jusb6boDpax21+m/vG/sTZN2kvrmM/eNknaXO+MzSdcF96gz7P5J1
nDr7GftnyLpPnWH/OckTqPNbxv6CkldQZ5NHqX6Sh1BnR/IWdU3yFuq8XvIc
1UHyHOoMe2dIXkSdkySPUvGSR1HnQ5J3qb8u6byLdbS/5Gmqv+Rp1DnR9LVu
WP23EGP/AMkDqfNBY/99yRupL+w3eSZ15nMSyUupc7Kxv4XksdQZ9s+UvJc6
LzD2n5c82c2fJa9WCZJXU+fvJQ9X/SQPp879JW9XOyRvp85tJc9XDbR/nqPO
sPej8bouoM6ST0apN6WOoM6mblKrpO6gzhtNX6uz1X/zN/aHSV1Dnf2M/aYO
os6w39RN1Bf2H5A6izrjM7vUZdQZ9reUOo46exv7Z0vdR51NnavGSZ1InSWe
xKmrUldS53ekDlUeqUOps8SZWBUodavrz1LnqoD3dJ3LfAj2+kldTJ1NH0DN
kzra6tvHq1NW/62Dsb+r1OnUuZ6x39T11Bn2vy99AOoM+/2kb0B9Yb8jfQbq
jE9vXRe4fc4gY3956WOwX2T6MyrbvP8dWLvH7b9hni5B+iHU+Yb0T9RW6Z9Q
58NmLjFcxwF/9t82S39GrZf+DHVeKP0cNUT6OdTZ2KV8pP9DnUubfldTq//2
qrF/oPSXqDPsN/0o6gz7k6V/RZ1hfz3pd1HnLcb+76U/Rn1h/2fST7P1dLy/
yndrzt7sQdA/r+G35mqdeV3Mp5N55IJnwaVoZfXx1FtHNXes49XP0t/zsb5f
5ZHf9bHmzVTah49yn72a3e67OknCuY8V/77utAI5Vu3Kxjlb8NlD4s7XW5yD
+7XB97T+aljBFe6+ePAcU5zg6BB3Xzx4l6DXG+7L95hzIeC/P+29ckYrd188
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
4r5R6PrUPMf8P3pfT/8=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
          "]], Polygon3DBox[CompressedData["
1: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
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

          "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnHtUT1kbx0OopBgKCancLyVpkFtIueRSkku5JEK6uHuZ3MYYl8ilBpmJ
kRTGfRiX0Bi5DSO0YpBLYUR3lFF439/37LPWOMtz2L3n5/drve9fv7U+61nP
2ef57f3svb/P3qehb7D7uPI6OjrmFXV0Kvzn1yb0fs3CpCenmvSd1Ltpt9un
isrffpb0d1pXv5R71VV8kNGI/ipepVuffDl+oenoGiqe8FN6XxVf+OPanM9h
r22cav/rdkMR5/QLJt1VfGqQywsl48P7P2pb3JSKMxUHKv7qbs/6t5u/UPFv
0+q7qfi5kJxcOT/7auiAWyQt6KfiVsu6ydprKs5RdSfgvdaE7/VU8bUpaU+U
9M/bb3njrG2ctz9HDvsefIlBorOKH2pfPU+OU8+l7EtMu8A+IKxqHxUfnbBb
1k9GgwHg68xfwT6v9RbEP6T5fPAx1XaAN3DsDf7Gfi+4je5w8P4uBTlynHqu
rdNb8K0jrrqquHn2oFy597KtaA77upPbw77rjfMFpeHU/6JUf6Diqe44U/Ek
OWfctG3cUfG8uLEJ+O2QBNgbeIeAe27zAo/zCwRvP6GObJw1lTeU8q/U/EXF
M6qFC/iNWkHg2e0HyMZZ2/KzUv4vZoUizl+e6A2+fYV+gdy44+23FOdtJ9Ue
Tc2DFKfaSc1r1PjlzcMU5823VHzI9+Wcp9Tdn3n9U3mDl2vb/FJW8jNvPHmf
q+71krr3d5qKs6Y4tb8rK/1Z3ftB3nmKd1xcmepvDHv3LcNVPLa6m6L/b1nR
JZRaD/DOg7x+1J3/lXovTfVzdes/SvnnfS4Vh/X3W2N8/TbuGsbLzUc74Gcc
8+/O/Bsy/+L4asjGlzUbX1b6yfAz+OoV8JdfrQc3eBEMfjQzEON3vZ9z3j/H
9RI2rs9+ZFxTfjI6J8LeK6In7O8efZit4vtZOy0l7ZyX2RV+sl8mwM+kod/D
T/5dY/D65Q3xvh37PZfVkf7PPw/vXN8WPO9IG/yPHpGZ4A+6TER/rjJcp4eK
V3jQ4bmKm7aMhn3l6cHo5ydT3pUq/1P9WewnDST9JK3CEfAgryLY3y08Lfvc
waaG4DXLB8Le9lJz2C+2cgVPtTMAD6h7UqNxtmriBF6rtznGS0blO9mlGadU
PqHsxfbksva4s/bwxlnbOBVnvbvb0J+j3Nv1UvE3U5bjvdYxfXgx04cPMn3Y
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
aE/JPWjqvXj1OqXqDrx1hKfsnruT5J67+SYh/p7hQv4X5/FHPw8VxmnVr8B9
w/U0qvNT6y6xn6yU9BOqDuVD9Aeb/sI98aGbhfsLcy9Vl81jIYw3YtyIcane
OJDNm1Q9VKlz49Q+i9LleM91KKXLUXme0q+i6lrDvmSuM7iL+ztZ/5rSwag4
W0nWCWKcqXGt1D1TpXQn3rxE6T9UXvIg7hsqpSNR6xxqnUzpQp5MR1ou0ZE+
Nh6l60nxuVnsuRPZc4cQ/i9+4n5/o+T7YGX1/Nun5jF3yblB6T6ONw9oaj8u
1ZFE3YYav5Rupm7dlWq/7sljeK7lDzth/2vgE9l7dusK3sC+3rSx8HOto6/s
+spEMo/bs3l8q8Mf4Cn+FuBZ9+OFc0RsvzlfUnej1sM27P7gKXZ/cBu7P0jp
UdS5i2UVhPeaqTcV7fmx8xeK3oNT93eoysr3pnjzG3XfTbz3Oovde63I7r1u
vxoP3sCoPPhQby/EIVVyPyiU3Q+i1qWUrkXdX8vlrDvzxu3wFuF/HN9/BPyf
mlssrG8JvcsiT7gv1sZK+E5UtH/fTzrnIF1XU/eeTP90wfja1SQdcbCKHZ/9
oXW7ON7Fe/2VJPf63xDr0tVeVrC/emmhsO8+dfC9dfhPknX4p54fGKiwDib9
noO4HtPUvR7qHhPvc6n7O/lmBRiPsfnbwGv5fiX7XeKfOb+3c66ZPvpDyNRo
6Gyx5/+SrTtT+pU4v1yXzC+839Gl1skUX9b1HnhxkQHiH+qxSbb+Qo13L2L+
VUq/8j1ZE3G2m2UJnWqKWzj6M6VfUftx6rnq/s4AlYe59as+xnjfC8+Og+8a
1VM2DyilX21wEf7Hvys9hP/71q6ycaDei/puobbpV5dfCt89cFyXKNgbJOd8
aD0Tx9Yz1P19t+Bw8FH5V/C+yWZ5iuowvJxaj/HqWlQ/qTY6AvzG+F/gp6VJ
oWz/zNNJAbeflA7uHlPyQV1LnB+PXZwCHmk7Fjym0yXZvMEbH6lOJdZZKL2l
anXhexStl0aA1+415LPoWrzrdt79L3Xfllo/KPVdQaX2I9p2nkpTcaB0IW27
xyq9tyLWl3nj/G8q5z0f
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{340.8631105226031, 122.61545252265445`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-2.5619830802029346`, 2.5619830802029377`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4032523210083827`, -3.078998644796519, 0.0255003710911432},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.6181678890370693`*^9, 3.6181680058093195`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.6181678576525693`*^9, 3.618167858658819*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nH2wXlV1h9MSEIHpOG1FSkIIkOLHtFM6oOBYZldxmEQLCJ0WnaYgCRgU
rjgObTUBzCDt1BY79Ir0VtppJ1g+TABL6a0Or5zkTQKGD685IblJbsKFG+EC
4Ru02g9i+571W5v17Hfzz5n3x86+6zxnnXX2WXutc9yyK8675BfnzJkz/+A5
cw76v+Nxe8/6twMHXmp0PGFwnG4+deW3/358ZL/rlw5+TzXfOvxXVo9MPe36
usHvHc2La/7kU4uWzLj+0uB321xi/076isHvh218i/F90/uud7/vaebYf9Jf
P/XKyy6Yuux3bHyS/nI3Ptn8CfMnsyfBHhs/g/FtsvNNON9kfBL46HcCT/8t
ruSsIzlLXwvO0slZOjnH8ZmzdHJ2e6afPHfeySucs3RyxvzOGfY4Z9jvnHG+
zhl8nDN4OmfxI2fpK8BZR3KWTs7x+mTOcXzmLJ2cpU/9xTmn7fyrZc5ZOjlj
fucMe5wz7HfOOF/nDD7OGTxTvD9nmuPBWTo5SydnHck5+nvmHMdnzlHPnKV/
Y+nK09+z+Y+cM8Y7Z8zvnGGPc4b9zhnn65zBxzmDp3MWD3KWTs7SyVk6Ocf4
kTnH8Zlz1DNn6deu/YPDvnnlec4Z450z5nfOsMc5w37njPN1zuDjnMET/txW
/Lmt+LPue/pzW3CM8Zj+3MKP+9Dpz20z8fpFd31g8Yfgzz4e/uzzw5/bij+7
XfBnP1/4c1vx57bCWc95ctZziZz7Fc79Cmf5KTmTL4/k3G/mfGLqZ795ytP3
Rc79Cud+hbPbA879Cud+hbPzAWfn6Zzjuilzjs/5zDk+lzJn+p04x/s+cyY/
5xj0zFn//d3ESQv2/uxDPfHDeOeM+Z0z7HHOsN8543ydM/g4Z/CkP6eKP6eK
P6eKPydyjudZ+DP9Dnrhz+mpo07vX/noeT38+0TO/P/w51TxZ65XEs6X/pwq
/pyGc27TwuHx2eM64nOFc1vh3KaLh8fnCue2wrlNb2y56Mf/dczSHrlU4nOF
s9vD+Fzh3FY4Ox/GZ/HkeqPgzOcz1hvpjuHrjfQCOEsn5zi+WG8UnKVff/oZ
N/7ufyzrkd/z4Iz5ud4oOMN+rjd0vlxvFJzBk+vnij/PVPx5puAsnZylD/fn
mYJz9K9i/Zx+7abtd375whXw55mCM+bn+rnizzMFZ5wv188Vf54pOGu+Y4e/
DxacpZOzdHKWTs5xfPE+WHCWftuLKx584C2XO2fp5Iz5+T5YcIb9fB8sONPf
8T4onsxvFJylXzz0/Xl/wVk6Ocd5ivxGEZ+jXuQ30jdOuPrluR//nHOWTs5R
L/IbaRk4w37mNwrO4MP8RsFZ/5+cpZOz9NuH5+sKznGeIl9XcI56ka9LT5xz
5tUnrvu8c5ZOzlEv8nUFZ9jPfJ3Ol/m6gjN4pk3v+tKJU+MvNDo+MDju9byk
dOWX7HfCeJ8X4zl/6g+f368v5td4/62/A93nk/0Y73ZiPO1JsCe9eu3Tl49M
vdjo+Prg+Lh+J+gcn14ePl6626d/J84a53lgzC97Nb9+69/RfszD8UW+C/PQ
Hrf/6uN+1DtwIOd1vzT4PdXsumTlAwcOzPrfnRr8nnRd43eb/t5vve2HBw7s
8/HvG/ze5rrGS1feQuMXDY4TRT5Duv6Oxu8Z/H7QdY2Xrn+n8ScOjo3rGi/9
nXbU+O733RYfxnrxPXV1T+M1D8fH99frevO68X59uutyd5Ku8QtM744TPn6h
jZOu8dInOw4+fmfHwXWNlz48Tk+4HuP0RDqlu44+vruu21zXeOnd35n18Xad
XNf4XaZf1fmhj7+m80PXNV66/FbPjWvgt9Lpn9Lph9Lpb573hl9Jp/9Ipz/E
vEX2B+m87tJ5faXzOsbx+XpJ53WRTv7SrwZnPYfJWTo5Sydn6eQsnZylk7P0
d4NzzANlztLJWTo5SyfnOD5zlk7O0slZOjlrXUPO0slZOjlLJ2fp5CydnKWT
c8yrZc7SyVk6OUsn5zg+c5ZOztLJWfpwf24r/txqHvhzq78Lf1bemP7cVvy5
td/057aIG9K7338Jf26beUP9uTX+9Oe24s9txZ/b5pSh/qx56M9thXNfOjj3
K5z7Fc79Cue+/SbnfoVzv8K5X+Hcr3DuVzj3m8mhnPv23CfnfoVzv8K531wF
znqPIWfp5CydnKWTs3Rylk7O0sl5Tvgvc5ZCztLJWTo5Sydn6eQsnZylk7Pe
Cyv+nCr+nCr+nCr+nCr+nCr+nCr+bOdxPf05HT3cn1PFn1PFn1PFn1PFn1PF
n9Nwzq10xucK57bCua1w1jxFfK5wbiuc2wrntsK5rXBu047h8dn/PeJzhXNb
4dymVcPXGwVn6TuHrzf0d7nesHxmsd4oOEs/fvh6o+Ac982u53ojHTV8vZHm
D19vFJylk7P0k4evN3xerDcKzsoDDffnmYKzdHKOeeNi/Vzx55mCs/Th/jxT
8eeZgrN0cpY+3J9nKv48U3CWTs7SyVl5NXKWTs7SyVk6OUsnZ+nkLL3yPmic
b+D7YHrH8PfBgrN0cpZOztLJWTo5Sydn5SlXgbN0cpZOztLJWTo5S2d8ll7J
wxScpZOz9KPBWfpj4Cx9PjhLJ2fp5Cx9JTgrX0fO0ieH598KztLJWTo5Sydn
6ZX8WMFZOjlLJ2fp5CydnKWTs/QdNq946sg859d/8I4nFo8+X7xf37nqoweN
LnqheL9WHprv13u237Nk0ZIXizzka5an5fv1YScdfcP4SJlvXFHJH15j9h8L
nrKf79eyn+99MY+eeU6Z/Xy/lv27wXPDd868ZXxktniP1pE8X/nlu55dPPpM
wfOt6588YnTRswXPhSNvP2lq/NmC52lHL/n9RUueK3ie8+BVfzoy9VzBc20l
/9Y3+5mv2G32k6fsJ0/ZT56ynzxlP/MVHzP7mec8+GN3fGVkqsy/HfO/e9aN
j+wrOOtIzmed/+HXFo/+qOB88dwvHDm66KkiX3HVv659/9T4UwXnr10wvXTR
kjLP+VIl/3aI2T8fnBeY/eQs+8lZ9jNfIfvJWfaT841mP/MVXxvcR3sKzhtt
n4mcX7P9GHLWkZxvv3n3/ywefaLgvH7xLy0cXfRkwXnyxx88Y2r8ySL/pjot
cv662U9/3mT2k7PsJ2fZT86yn5xlPznvNPvJef7gum8rOP/e4Po+VuSFuuu4
veCsumFy1pGcu/t0V8G5ux93F5xfruTfFpj99OezzH6+38l+cpb95BzPP3OW
/eT8frOfnD8ysGdTkX/r1nUPFJwPG8y/pci/XWr763yP7vZlHy04x2PmvGHg
J1uLuPFKJf92ttnPvNA6s5+cZT/zFbKfnDeb/XyPlv18j+6b/eT8xMD+0Uqe
c03B+bMDe9YWnF+3ugRy/vbgfMeLPOflg3nuKzjHI/NvOmbOc2/p7Cfnn5r9
5Pw5s5+cZT/zQneZ/eQ8YvaT82+Y/cwL2XkW+bfuvfu+Ii/0L93fLfJCz1g9
Bzl/vDuvIv/WXd81xXr4se66F+vh/ZX8Wzxmzp80+8n5m2Y/Oct+cv5js5+c
Hzf7C382+8m5i+dbi/do3T/kvL67jwrOqoMh57ndfVpwvrW7rwvOi7s4UHB+
vpJ/u9/sZ/4tHjNn2c/3aNlPzgeb/eQs+8n5TLOfnE/t4nbB+S1dnC/eo2Uv
3+9UP0TOX+yeO8X7XfdceKzgPK97rhWcVYdEzu81+48E50PMfuYrdCRn2c98
xUqzn5xlPzkfbfYzX2HrqIJz061bCs63deucgrPs5Xu06mnIeYPVLTEvNNqt
0wrOL1TybzvMfubf7jf7yVn2k7OO5PyK2c/3aNnPfMXfmv3kbO8FBedV3Tq8
4Ly8W7cXnD/arfMLznF9lDl368l9BWd7byo431HJv42a/eS80uwnZ9lPzrKf
nHUkZ9lPznPNfnK299wiL9TFk+cKzsd276EF5y7OPFv6c/eeW3CWveRseYBK
3r7Mv51t9jMv9D6zn3kh2b8dnGU/Oct+ctaRnNeb/eRs+ZmCs+rpmH/b3eVP
Cs4brS6RnNd2+ZmC841dPqeIz2ZXwbmbt8y/vdXsJ2fZT86yn/k32c/82zqz
n5xlv+YFT8+/if/hprPuy45FPkQcVmEeHVdiHpu/0JUnrORd3U7Vn+n/q/9d
46Sr/jPWUZV98dLZ3yqdffFxfK5njvtLuZ5Z+hff86v/fsL3c1+8dPZrY37f
x4I9vu8C+32fAOfreW1wQ/3frPeriqd08pROntLJM+5LZJ5xfOYZ39syT+lv
zL/3jWfuXe48pZMn5k9xH9TtSXHfbrbgifNNcV9ktuhjBTfUZe4rOEtnHaR0
cpZOznGfJ3OO4zPnqGfO0g859vYblp5xoXPGeOeM+Z0z7HHOsN8543ydM7g5
Z3BzzuJIzswLijPzWOIsnZzjvlnmHMdnzlHPnKW/be4zJ8zOP985Y7xzxvwp
7t9PF5xhf4r7o9MFZ3BzzuDmnPX8JGfp5OzPW3CWTs5xHzJzjuMz56hnztJP
bs/57L7nz3LOGO+cMb9zhj3OGfY7Z5yvcwY35wxuzlnrEXJmvT7rp9nHyvpH
1qeSM+v4Yj3fRBGfpV9/2j+9+5X0AeeM8c6ZdVXiDHucM+uDxBnnm+L+9ETB
Gdycc9zHzusN5vtjf4L2Y3MfhcYfh+sS6xF2oI9e9Qj5erEuVbrG8zrG+p2H
0Xev94B8fVmPGetccz1mrNds/LrHek2Nz/7gef1Hr/v10RVvR93hWO9G9O9j
fq9Lw/zuP6y/i3VgY0V/L/jgOwDOx/2NdWexLifXncX6Er+++G6AX1/3T/gb
vifg/pbifr/7G74z4P7m/hzrLLLfxrqA7J+x/iX7Ieud5Vex/iv7Fet2Y/2u
9Own0tdfu/O/l99yrl83jPfryzpKXUfY49eL9YC6Ljhf5w9uzhnc0C+U6+vF
WfpCcI71RJkz68djHf9E0V/JOmgdo545Sx//x7FLd235hHPG+KLekZxhT1FP
Rs44X+fMOkFxBjfnzH4FcZZOztLZLyydfazSyTmOz5xjnV3mLP0Pl677zDt/
+knnHOfJnDF/UddIzrC/qBtjvzDrLlG3VHBm/0fsl5suOEsnZ+nkLJ2c4/jM
OdYtZs7S208fcdyywy9xztLZL4z5nQfscc6wv+hjJ2fWsbJPmJzZTyPOXrcC
ztLJWTo5e10GOMfxmXOsA82cpZ/9Z5dP/sOCTztn6eSM+Z0H7HHOsN8543yd
M+uCY73dvoIz+5Nif+as9+fGvr7ZgrN0cpZOznF85hzrajNn6Vuue+Srk789
4pylkzPmdx6wxznDfueM83XOrLMWZ3Bzzsrn8XsC0slTOnnGeTJP9t/oGPXM
U/rxS448/itr8ncbpJNn1DNP6fyeAOx3njhf5wk+zlO6eKqeT/m6rj5u0uvP
pHf1XK3XS0nv6o8e8foe6V2d2kbUo+y3fZ57LV/VeJ7Q8ttJ+9BxX3pD0r6p
9K7+5aGkfT7pXf3R1qR9Keld/deOpH0U6ecOfu9OyvtLP2Lwezqp3k55NtUB
6TsE0jdZXUmsZ5ptVM8S629UjzOuug/P46neQfvB0g+1/WftX0oXL+23Sbf6
o6T9IelW9+T7AdLj9woe93xdp//A67GkXz34vdnqq7agnui7vp8qvasj+6Hv
n0nv6vi2+36P9K6OcpfvT0jv6lUfT/q+r/IRdxrfWLc03Xymq7Pw/UXpdp18
P0n6ocZd+x+x/ndvUv2T8iffH/z+nu+fSe/qRncm7fdI7/ZP9qa43zNh99Ge
FOuAVRes70fm93fltWL9peoxW88rxPe7h5tY36Z6t34T67FUn3VPE+taVOdy
T4p1GKrL6KdYN6A6godT3OfWvneb4r6s9ml3pLiPmPuB4n6Y9sfUh5TfT/Vc
Vr1vrP+dbFSfGutVW12HJtZXPuL3fawH3NjEejXVr93bqB4l1qds8PqJWE/x
kO/3x/3/rb4/Hferd/h+atxf3e37f3E/cNrrbmMd7jb5teuKY7GuUXWOm5pY
h6e6vPFG9R/SVS+jeoVYv7DV99fjfvt23w+O+8M5XklX/YLqWWN9a45X0ldZ
vIr1gqofzPFK+q2IV9KXIV5JX4B4JX2XxSvdr7FfJ8cr6SsQr6R/BPFK+iGI
V9Lj93Ye9fX2RsQr6S9ZvNL+rvcPIV5pPWbrAD03Gzw3fb8W/Re+DsH+qe8H
a31ifuvrZ6xbGu3vYnzaM4gro27PzsHva73fQ8+7m+w+7+LWGtefs3/fxa37
sO+21vsr9Dy6q+PjfQ7SX+14Wr3mWte759HNqFPcZ3Vwt9p1e9T17vp9z/s3
9DzabPet+hCkH2b1wqqbl3623c8/sbgu/T/t/GN95LRxWJNiPd+0c4n1Z9PN
HVYHp34YPe/2dv7vfR3eh9TdL96H4P2j3f3V3GF1596H192PjepKY53src35
dn1iXefNKdYdqg7xu0l1ctK7+LPZv5Pkz/Eunvj9EOuStnmfjJ7j+l6T+j1i
/8pu76+I/RbbvR8g9gds9fp16Ypfl1mckH6Z+VmsW51onuz8OcU6S9VdjqdY
F6g6wU1eByZdfqm6pViHtS3Fvib1OU2jP0f9OrvRT6L+kh3e/xD7IbY6v1i/
/xDqy1VvvgF1uqrbvTbFulLVmd6bYh2k6iI3pli3pzq+R1KsM1PdWZtiXZTq
pCa9jyv2dU01sQ67SYfe0sWrmyxexX6vPY36lGLf0qTVka9x/ScWxy60+1X6
BYhjek6tQxyT/rLFsc+bf0m/0uJYrFeeTP9scUz1tdLvRxyLdUY5jkk/FHFM
ut6vXrU4Jv01xDHpT9n9sNzimPSLEMek32b3ifri/L5HHJN+LOKY9OUWx9Q/
I/02xDHpd1scW2rXR/r5FscOCfXH+xLjmPQvWBzT+sjr4yyOKV7pOf4K4pX0
UxGvpK9CvJLe2H2o50/sX9nSXGHxSvoV5k+xTn027US8kn4L4pX0xYhX3p+E
eCVd97n67rR+sPVzoz4x6YpL6muSrrikPhzpikvqG4l9JBua37K4IL37fXcT
6/L3p+9YvIp15PvThy1eqe5Z+lEWr1SnK/1vLF6prlT6QRavVAcpvbF4pTo8
1Nf5OknrK/bHSWffVuznyPWQ0tnvKZ19W8gXedyUzj5Z6eyD8/Uh6h5jPWCu
e5TO/izp6s8SB3Eih5jnyRyks69KOjlIFwedb+zbyOcrnefLPo9Ybz1bnG/s
9831tNEvcp2QePB8PZ+D85XO85X+Ljtf2e/5Itgf+2Kz/fH6ZPuj/06xPqaw
UzrtlK6+QtkTeWR7ol9ke+J9k+tUZBf/rnTx0fzRv/L88f7L9Qr6O/IrjY/3
Jb9DNdYb/h2qsd7w71CN9YZ/h2qsN/w7VGO94d+hGusN/w7VWI/xQfrw702N
9YZ/b2qsN/x7U2O94d+bGusN/97UWI99K7JX/UHxO1RjPeniqfMgT88jgad0
8pROntKL/iDTGWc8DwZu88LvzE06uUknN+nkJl18xEF2kYN0cojxMnOQTg7S
xcHzPqazH0Q6zzf2LeTzlc7zlb4KcVV/n+cV430+L+kn4Lyk67xkP89P9qMf
reivoP2ef0Ncjc+fbGfsR892Spedvv42nf0IPA/ue61CXI1xOv9d6fq7mp88
NL/0VYir+neMq76utvExnu5vfuH/f67+ci+uM/L3N2KcVdzN3wfwfSuLe3Ed
s6/ox/e+FsTfGL/z/NKPQVyNz+W8PpP/8u9K5/pAutZR8TkxXdgT7/tsT/y+
QY5X0rUu4rqWdvJ7A+TF9Z50PrcC39V/3otxebLgGe+bN/XvmM51nX9PBfdv
tHtb4rqc5xvXoZPFeo7xNq6PJorz1zoqPr/FJfenx+dS5hDjdOYQ+9UyB+nk
EO/7zAH7SlhnNwWHuD7NHOJ6MHOI67UHsd7S+ovrmKbgE5/PmU98XmU+Md5n
PjG+Zj4x/uW4GuNZfo+K72E5LoX11+q/9jgme9k3Gp/LOf7E9Vruk5Wuvm/v
/w1xOc+P55TPH9d9eX7p7KeTPj+cd65n49+VXvRpmn4K4ltcb2Z7pLNfVTr7
VaVrfSI7dZ1pp3TaGftZs5/HOqgc38K6ePVXe3Gdt6+wXzrtl871FddT8X1+
tjiv2A+azys+z/N5SWf/ZnwPznEsrvdzP6Z0+g/XudEvZ4vz5ToxXqdZX/+I
g9YX7GON6443fW8nrF8yB+nkEN/73/T9qPC+mNdR8b0n97HG957MTTq5ed8/
uElnH6t09rFK57qR61b9Flf1pf4cu0xJaA==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
          "]], Polygon3DBox[CompressedData["
1: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
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

          "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnD9oFFEQxjeGtRAbsTEmEQUDsbCxO0wQNQoWEUwUtbAJHGihURBBUngQ
bSxsBAubYJOggiCiKRRTiFgJamOMoihqEbSIhUb8E72XHSFvd7zsn/d23u6X
JuTHY2/u2+/mTWbf3LqBwb7qEs/z2nzPa/77+8XniYcdI68mvPmf2vzfn7ZI
4y8D/tUfXX2/82hX3vEUlUNnuzrfmK6sgc7wc1E4/GyHw892+Pq5863QGToX
hffNDrZBZ3N8MuDYB+3ojH0Qfi4Cfw4/Q+cCcegMXmY+tZB7UyXnj1Ue6O4i
Tn25GS0/JF3fsnTh+kZcmj7g/+fnVP0Z9sNVrS6l9U+19XnH7wrP6nMn7X1J
47qfiV8L/Kxz+DkbPxP/EvgZ+0U2/Mfvev82rNvaoK+r811z0eulvS9pHDrb
4RtUnzys2+6gf67z08x6ae9LGtf3Qfp/CvtgtlzfB0ln7IPws4tc9zM9p4Cf
obOLHDqb1RN9jHQ8bv8NetrxLeqHbPxMnKvT4Ods/Eyc29fg52Q8bl8Ifraj
M/pvyXjc/ht0Tsbj9ivQ50zG4/bfsA/a8TP2wWz83KhfAT/b0Rl+hs7g2XNu
jlhanK5w0rM2s7cdeprX+e7Qr1bobJ7r85V5x1NUPn3yXWQfQFqcrvNtPW8i
6x9pcYLb4R1Mn5Pj0uIHt8M3HuxHfjbIqa+16tijduhsXud7Qf2cdzxF5aRz
P/N8R0qcrnPSGfWzWU79w29+dP9QSpyucOiZjn/00a8GB5fOmxTdXpESDzg4
OLjO6bnS5h179o8OH2n4vIPWNx+/funC62po/ayqT3oT1yd0/fEHY09OVQZC
11+mXnef9frnijr3cij8uur8QAQXcn+Jnzj782KUbrc2vX9W11lKnKb5CtXf
DvvzjNKnWhodOL5zpOVAPQ9IiYfjPd/fpoqT+idNQR7T1x9W/avkeYyufzvI
YzpfnlMeG9Py2L/vPROexyhOLo/dLGgem9T2U9KhVrJ8ddmPPte3NahbpMQp
jXNzW2U798jNCUqL0/R9lxZnXvclK324OTJpOseNH3NYyTg37yYtTtO8qPkW
edWOPou9TqPvVeDWDzHn1dPWRXT9O8w5bdvzUxRPL3Oe2ZU68ANzzqFs82jd
zDleV+6jae76/H5nyvOW1B9YyZwnTDv3TdcfZ87R2f48Ujzc9wlI/1xQ/GXJ
b5jHXBwv2hzrH1Fbb5s=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{340.8631105226031, 122.61545252265445`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-0.49999992857142866`, 0.49999992857142866`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4032523210083827`, -3.078998644796519, 0.0255003710911432},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.618167883325819*^9, 3.6181680060093193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.6181678619638195`*^9, 3.618167863386319*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
KN/e7RZPDB7PPFpt1XJtm1mficHjmUd7+pXl1nhEEYPHM4+u+LRyc/n398Tg
8cyjj78weEBLBBODxzOPVg0ZKXe09hExeDzzaK/2pSqzzuwhBo9nHn2EyZ8P
Hs88WuHBh+cWSwOpweOZRy96Z5u7uPodNXg88+gaL9WDy95+ogaPZx69blnB
aX8qhho8nnm0xrzXCzXU4qnB45lH92na9b5yTKQGj2cenTFmXcz02iRqsOdY
Wtop9mjr4mKW51jaMs7iCUctj+U5lv56dstxwx8ZLM//rt+nLVnUey6V5TmW
bvu0ZtieVQksz7H0uhUzN16eF8HyHEsry6QtMRO7xPIcS9cw+fPBnmPp5YG2
NxUPx7M8x9L3VgQ1hQ3/yfL87301HJ8+pSCd5TmWVlzsuPeMTi7LcywdfcPn
ftyNIpbnWFrn2G6+kyWf5TmWvn6vsmeWSjl6hn1M5tWlSlXGtegZ+GSdMe6f
MivQM/Az/M4Rd3bx0TNwp8kvx9PReegZuIbj3tEm8Tz0DPzmj+kz5Tlx6Bm4
Rd2rnbFnbqJn4H1vBvLn4Bn4/s64domxaegZeKynbPdBxVz0DHyE97T+QscS
9IzX16y/KitagZ6Bn1p0SnTR5Rr0DFz95oPrR3oa0DPw2roC+6SoZvZ4JlOJ
fQca5rayxzNpKCxsoTCsiT2eSUfnVfWnU6rZ45k8J+cs8vlKKXs8k7yZD2ep
muayxzNpeX7pexOPZPZ4Jv0DThu+anNlj2dSjMmfs8Yz6fvQUOO6RDZ7PJMF
X0rszm7is8czWavnYzbNt4o9nsnfEbs2F9Y1sMcz6cCRGW/wuIU9nkmZjKMK
k+Lb2eOZdB3xVaqvpovlmUeGL/KJMIvpYs/P5NXq1jvJoW3s+Zk04hiYzHza
xJ6fSS0XvTNqk6rZ8zMZU1s9sUq0hD0/kwGu0x7v/pbGnp9J5QIFM6sQDnt+
JmWY/DlrfiYLFqdtE2kpZM/P5O6l1KXFnEr2/Ex+4Y/gnYloZM/PJGf5O/kd
ta3s+ZlMcftnSXt3J3t+JsXKJUxdpXvZ8zM5dnRO4qihQlzWeoP0XlAwtHTt
H4K13iDD0yreXNv8m2CtN0ieedMmtd1tBGu9QebLtFXaf2kgWOsNUmGphFZc
ehnBWm+QD6vmFot9zSBY6w3yrNyH6/PNfNAz8JtM/py13iCHNQbFkQ18irXe
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
76i1nUNEZXBdh+sC5jnm/wEU27wY
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmXfgT9Ubx++55yqbkJGVVDIy27QnWjYlSUilIi1piRJpqaRBhewRoiVN
TSuRVREZZcsoJb/X+/e+f5zv87rne+/93HvuOc/zfp5TrcsdLW9PkyR5lT8R
OwN7FHZVSJLVWZLU47gUtg//nEN/Y3gBrTL9GfY7WiVdi/2KdjR8mHO/gcvB
Afs1rax+BLuEVh0uiF1MOxY+Evs97Xi4EHYRrSp8BHY37Sb4JOxd3Hc2tzkL
3k5rT//x2C208+Gq2IW0KnAB7FZaC/g47N1c+y7XNoH/oF1NfzXsGlpDuDT2
Z9op8NHYnbTO8InYlbST4ZLYpbQT4MLYIgWSZDh8AVwIfgE+D76d33qb3zoT
Lkn/SPovgYvCL8EXwqXhN+CmcDF4BHwRPJBrv+LaS+Ey9L9JfzN4Fa2uvg22
BP2vwRfDR8GjUp9/L9e+z7XnwD/SatNfHLuCVgcugS3F+a/Dl8HLaDXgoth7
uPY9rj0b/oF2Iv1FsPP1e/Ah/r8H7gHXxO6gXQ+fgN1MOxeugt1EOweujL0G
+yj37Mdc6gQ/Dj8Mt4YfhO+G28APwffAHeD+8P3wtfAA+AG4IzwQfhB+Bv4a
/hiuwTPdB3+OfY7+b+FP6W8LPwzfCz+dejznwTfCQ+GBcCv4AfgueBvP2o7j
6tjrsI/R/xD9XeAn4QFwV/gp+DH4BngI/Ch8M/wcPATuBj8NPw7345k+gs/n
ng/A8xLPkwfhjxPPgQHwl4nnxnraWVxfAXsH/TPoH8zxbxw3wVbE/kRrBJfB
rqWdBpfD/kI7FS6L3Ug7G66EXUc7HS6P3UBrDB+DvZX2D884gd+5BT4Ij4fv
p81NPIcfhj+FX9b3gT9JPD8fhecnnnvv0Ibx/3Oxz2O/07fQmHD8N3Yc5/4O
X8b/jsXex/EHib/V4/IRied/S477wX24ZrbeDx7G/ysyVydwfLXGLV+nc+h/
OF+n78EP5WPyLnwvXAGeCT8AN4Bn673g4+B34NHY1dx/Kb81nP4rOV5If1+4
GjwLHpE/02L4Hq1VeAZ8BxzhyXBvrXl4KnyX1iE8HX4iehyay+dovdH/Nn13
woXhafAj+fd6H+4FZ/AU+HY4hSfBt8EBngi/BF8FL4I/l7+A/5E/09rjPXZq
TsEF6D+gbwUfAf8Ffwgf4Jw/4aG0xTzbVfTNox2mf7/O0byg/yXNWfr/o38f
PA3ux//Wy5/p22s+wo9Fr0H5kE9pR9L/t3yP/CbX7oafpC3inCvpGwwvgC+H
Z9Ne4fzNmgvwfs7fA0/XOqF/AzwTHgJvhIfQFnLtFfQ9BS9JPB9m0Z7knE30
9c/XwgfwM/DFWvPws/Al8hfwPrgXXAe7V2sMrq1nZ449m9pnHpAfhOti39V6
4rde4NpDHD/C8SnYf7U24EYa4wL2R/KZBQrY1yi+HKY9Bp+mdaB5D9fXmqM9
BDfEluf8t1K/VwV4XOqxOgYen/ob/SWfDtfDlqN/bOoxnKMYxbM9z7MVpv/F
1H7moNYJ3AD7J02BvZbmF+c8lTp2R3ho6hiawk+kjlNDaRfAX3DPWdhS3P9Z
fevcb3wED8x91Fz4KfhCeD78InwFvAB+Ab5cvgAeBjeDv4Gfhi+Cv9Q8kU/i
/i/Cj+Y+6kP48dzXzZNfhMvA/0mU8JyPw6drTcCD4DPgL2jF4X855x1safkW
eHDmePSp1mPmePQJPCj3jR9r7snXcv5wuCz3HJN6zWoMbqX/RublLo67c1wj
f9ee9HcN1j5tNCeDtU9rze1gzdJO6ytYg7TV/A/WRFfKZ8Ll4RZaO8H66GrF
+uBYfSN8bbAmaq95HqyVOsKtgmN4V7gjXD8/p0WwjzkLbgSX1NjADYL9TSO4
drAv7AC3DPZVZ8IN4S28f0l4Jn3b4aXwM9H+spniVLCfawjXgotoHcB14JPg
G+D2wXrherht/gyXKY7ANeGWcDO4oOYpfEawzzgPPj1YX1wKnxvs2y6WDgn+
tpdIz8AnyL8n/qa6TwO4ZrB+6Qy3y59HY9s02LedDtcL1p5XKc4Ga8zr4NbB
Oq4T3AZO8nGrHzzvrlC8C/ap58CnBvvF0+C6wbGiqWJ6sK89Fz4tOFY0hk8J
9m314BODfXB9uEbwXJYemBO8LqUBPgpel4qtc4P9h/TD7GCd+yz8RLAmUFx+
P9dL0h6Dg9eEdMW7wWta8fo9uG9qLTEx2A9Jl04I9mHSe9PhIczv8zj+LFpH
309/73yO9YA7B/sV6f+pwbpvhOZJsF+U5nw7WJ92hzsF+znp7Wlw/9Rxf0aw
P5sOjw/W1y/LzwTryjfgEZqTGl+4fHB8OxYuh22ReXykQaTfB8OPBMecGnBV
7F/Bc+OkfK1pvp0JHwNfCDcO1ggXwGcF6/pu8HXBuc5N8PXBvnM8PCo4JkyD
xwXnIq8rVuba701ppFwTviL/E5xzSB/2h5um1rR9g2POBPj14Fg0EX4D7g1P
gt/UN8r8rKliKX0bab8lHhPlZf/Sfg/2z/8lvla/Oyw4Pk+Gx8AtuX51sA/v
mz/nKxz3gV9TXIPvgkfKD8N3wq8qpsAD4CnwWPg2+EX46WCt9yE8C27F/dcE
+9v76R9N/6scd6V/N/ZN+rvBe+DRcHfFJHhM9HzQ+47m+Eb6d2HfoL8t/Etw
zJXuGMM5rwXrgrHwSLg15/wUrA+lIz6j/8Ngnap18UGwvtR8mxmsm+Q3esGX
wr3gHsHx6m749uB4dRd8W7AevAe+I1hH3A53D9YRd8A3Ba8VrYsbgmPabXA3
eDnPVovjYtjm2D7096T/W44r5t9UumYm/ZPp/5XjM+V3Uq9rrdNJwbpmFjwF
7gm/AD8F3wo/Dw8Njqt3wrfmc6w3fAt8CzwMflJzkvtvw77OWL2cOedZAveA
99H/FtwZ3gqPgtfKL3NtAezP4f9hNwnYggWs76XztwfroiODv9URcNS76Dy4
EHY9rRBcJPerJ2GqBc8Lxdziwdq2Jnxc8DzlMPkn8bflZ5LDiZ9dOifDbqIV
g0tj/wiO9UnwHJREOKT1wIUDudGp2I30F6XvqOD3U06RYjfQCsPFsL/RisAl
gnV3Lbh6sMavDR8frM3rwCfA12S+Xjq5Y/4bL8PXZr7XCPi6zM/6Ctwm8zhK
p3XIPC7SG+0zj5f0z/WZ32ck3Cnz2n4tek7cwO92yH2a/GGF4LzqOPgY7H7l
GJx3cuZ87nj6K2H/pZ0AVw7O7arDFbF7aZXgMsFrsSJcKnguVIbLBq9FabOi
wWtXeUFJ+b3M14/l2d7InCf/CD+fz/Vv4VGZ8/Zl8A7OPZFrq2C3Y3fLh9G6
5HNoF+f8xfEu2g+0OfSvo39HdF1kFX1LgmsVK+HF8KDoHF/1kE9S6xblPl/C
5RLnHbqf7ruZ9nf+u7/SPk7tP+VHy+bvO5m+Ranji/KjJanHWeO9GK6aODeR
Nlyj5wzW4D/By4LrLivgRcF1HeVWX8Gf8XxFOT4YXddRzvJ17qO+h78JzmvX
wSv1ztg/aOs15/Mx2ZS4tqQc6svgnGAtvCK4zqR86ovgvOEX+MfgfOJneHlw
zelHeCE8l+c5pO8fXTdaTv8Cjt/MXJdZEZ1DKM+aH/z7m/Nn+DNxHNqaj6XG
9Pe870Di+LQ+j6fKhbek1n7SgP1zPalc79c8Fku7rUqtP5Xbrkmtl5RTr0yt
weQMVqfWtMqFH4keN41f72ifr9zwi9RzXr7rj9R6Vbl233yeKA7cqZw5cZ64
IdcAysF7RccL+d1lqTWt6iEdomOT4uo10fF0rdZ4dExch22X2Vdqrko/67up
Xqr5q3lYMB/Dvfnc1vfdY3f1/zHcl8/Jnfn4lqC9lrlupRrUOXrnxLXNc6P1
g7Re5+gYoXh+Q3Qc+RXbJTpeKE+/JTpGK0//ifOaJK4t6Bn25/Ps5uj4qDh8
o3KnxHn3/NR+Q/Fibz4Pt+XX7ciff3P+jfR9N6XW2KoNbkytjZWLrUutwfSt
f06tgVWLWJHHAn3ftan1sOoGP6bWb6pF/Cb/nbi+oTV0EdwkuIakMbkPrhcd
7xT3+mTOSbTWnssc41Vr6pc59yiWx+QunH+N/DzntUpcF12e2kep1vELXDdx
/WQ7fHbi3HNHam2voLQtdS6g+vbO1PmL6tv7UucpBfI4r/s3l4/Nn1+18V35
/Jcm3Zs6x1H9fH/q3Ee1btUhVBP7RD4cvjxxnfxAvqZUJ/8ndW6iOvl/qfMa
1WkPpc4xVZdWLfMZeBD3OZw6x1SNV4FS+ZHypH35XJRvPj1a86tOXlNzKHEt
XXNaPvMg7el8DU5NPZc1HzbIF0Tr01ex27Qm5Sui9xOWwd8pXnNcJT9Hfkjf
92TsJM4pDh8dfF/d/9vg++r+Wldvp9YGE/nzXua4otixNV8/+u3puS+dlvqd
5J+25P5pZ76+emaOi/KBAzLHV2mv8tFzQ3XXLDqvV53/yOj8WjlQgehcXrX3
ovIFifcLCkfn5qrHxug6gGrsxaNzTO0jHBFdE9AeSsnofFN12lLR+bLqt8dE
5/6qzVaKzvFV760SnZtUynWi5vzNiv/ReYrq7WfI3yXeyygTnQur3ntsdC6m
Orzypikaa3Rc2WhdofdvDb8F/4I9KlrHqqZaOlr3qj7ZlvZS4jpSwWjdqzEp
BN+cuL5aIro2ohrs0dE6WbW46tFaWrWXitF6VbWjatHaW3WYytE6WfWlctH6
XLWgqtGaXLWgItE1GdV+P0qtYaS7tsLNE9dmL4rOU6RJFkoTJda350fr4R+w
F0Zr6eXYC6K1tLTKxbThieNg0+h8Svlcrei6tGpiqgONgocz/r+nzv1V730r
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
          "]], Polygon3DBox[CompressedData["
1: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
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

          "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx9nHt8VcW1xychhIBQIg8FeSRaqFxFQbQYlHCOFRWtVV56raCmKiggYnt9
Vb2eLeID36LWUlTSe61vNEofWA05QlstqAmCiGglCgK3RQkI4RGS6ZrZa+09
89ube/8on3zvuPbav7PO2jO/M7OPvHzW+CmFSqm+7ZVqp+z/fd52m1pK/z7z
ya+Kl4aoKUP/s575shXfFbp8HfP3b/1tW20K73v5pD0u/wfza8b0bKpNiX/1
Jc986fLPmKuxjy5xeCC8oduutZXOeMm/YWTxPytTrtu34uxdLpc81417uCUt
zrI/TC8Y5fBG5r9Z1qV9Gr+xvqZkVEqcsZ9P6OzyAxsX7zP38xvQuWhTyFFn
xXwN6CzjUedi5leDzoXCfZ2DdsxRZ+Goc8RBZ4mPOkueDaBzCfM86Cz3+wzo
LONRZ4l/Huh87oqZO20c0Hkic9R5LHPUWXg56DyO+XTQWcZfAzqfz7wUdBaO
Oksc1FnG9wedo/Ggs+jwF9BZxqPOwlFniTMedK742fmbDX8KdB7JHHWW8Q2g
s3DU+RTmV4HOMn469I0RzLGeT2a+BnSOOOh8kuQDOkf5g87CUedIH9BZOOos
HPtG+Z861xPPzwedxzJ/B3TOhjz4AHQW3gd0rmA+BXTm8eoq0Fn43vM9nVWG
+Uegs4xfBTpLPtg3hH8IOjPPYn8WvgB0Fo46S3zsG1WHDVhJ18svQJ2Zo848
PqgHnZlnUeeLmGM9S5ypoPPkkKtdvs7BZcxXg84SB3WW+0KdhWM9S/6os3Cs
Z+Gos3CsZzXigq/N9VBn4aiz8A9BZ+Goc1uF5cFU0FnGYz3rcDzWcyAc61ni
fAQ683VVP9BZxqPOzAPUWcajzsJvAJ2Fnw86n/THph02Dug8jDnqLOOxPwvH
+caJzFFnGQ86BzIedRaOOgvH56Bw1DnKH3QWjjpH+oDOQ5lfDzrLeKznrfXD
96XpvIk5PgdlPOosHHXezBz7hozHvrGFOeosHHUWjjpLfJxvRPmDzsJR50gf
0Fk49g3hqPP7149S5u9fg84fMl8KOgvHdYrww0Bn4VjPwi+Hev6AeSPoLBzn
GxIHdZb7OgJ0lvFrQGfhqLNwnNcJR53luqjzC3d82c78jfX8LPO/gM4yHutZ
OM7rnmOO60EZj+vB55njvE44zp+jfEBn4fgcjMaDzsJxnRLpAzoLx74h/FzQ
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
+82+ZuNX3OfrWfXEJV/tMXr28/VUH5Sv3JvwYwsO4r8VqOvuNvkn9VRvm/xx
Pkz52PxT9Bxk8k/R8wqTP/qipOfjJn+cp9F9Npj8cR1N6/znt5RvrU3xOXtc
u/P/anHdQfFzu5b/K6Ez8W9ueeKbhP9G8+CLC67aTjpnH/B1Lt94+lNNRuej
fJ1Lene4a4fReYyrc+FB/De67rMmf7oPr98S72ryJx1ed3WmPG43+eO6g8Zv
M/mjzsQnmvwV9FviNv8UnW3+OB9u1Tq4+j9WU5wS1PnCG95fS/wRz68oUur4
2bPWk55DvfVde6WKH+72BfH8j0DnnR+sbySdq7z1XTulLp34ylekc9Df1bmd
Wrdy/X9vMjof7+rc6SD+W3vV+EuTP63vPL+iSAUTTP60Xvaea5TnsSZ/rbt6
OhMvMfmTPi+BzjtM/kot8fqD5K/1w16/JX1s/hTf05nq6X8O/GN5ZYrPufWv
Q96sRL+ikQIMPOt3tF7u5fXhahrY4YyHSecqbz7cg9Z7a65/g3Qe6/mcnZX6
9M4gTzrnPf+tkyp94Om/vWt0LnN1bta5VP+tWZe9YvJv07M8nZu03m7yp+mA
p/M6zl/roz2dKX9l8kefk/IcY/JX4L8RX2fyx3VHN6Vs/tg36PN67I07N1Lc
i1DngYPf+JJ4jVfPB7T++Y/f2UA613g60/0/Mar/58QbPf+tRefeOuHWdZWF
qsar5/06t3HAujWVxSrr6dyiy0p6/XCV8St6uzpTX0j139p0yzyTf5ve7ulM
4weY/EluT+cWzl/rd73+TPxJkz/Vv1fP9H2vNflT2Xn9eb/WNn+tZ3n1vEfr
jiZ/rf/T05m+5y07O1ifDXV+d0hZU6Ke6XlT/uk13xo/09OZ+BvjF2yrRN+e
5qlnvP/3fyZ8zlZd9+kZe7cm/De6rxl1P9iS8IWoPlL9N5LngMkffSH6/v/N
5I8+J83nbP7ov1H+i03+uO4gfqbJH31OyvMTkz/WM9XhNSZ/rS8r9XVWr3Y+
z1wP/bfglrOn7EnoTPc7+u7bmhP+G12v8/LHdif8N7qftfqlXUZnr29oXVc9
ctl3CZ0pzrRffrozTedU/436Y43JP6lznc0f5xtal9n8UWe6bheTP+pM//0n
Jn/030h/mz/6b8SnmvzR5yRdpvzgcRM3j/7b8Ve83Gau1w903rtwWaup57dA
53c+//RAwk+murqv946WSvwdinSYeGFJi9H5cF/nXL/HyvYbnfuDzqn+G31v
bf4pOh9r8kf/TfKn//8Q0Nnmn6Lz/SZ/nCeTnjb/FJ1t/im/93Usn2n9pUuh
nn++dK+Ji7+PZNdOnlNo1nd50HlES9fChC9E97Nw/oICWt8Fd/s6Z4oqji4w
67vuvs51V699w/qceyt8nVP9N2oLnU3+Kb6QzR/XIxTnY5M//t5H404x+Sf9
irzNH+uZ4tj86d/V/nokM83kT/Fxn8DXg0tT/bezVy4oTvM5X5t2dHHCf6P8
upcsbj8K9wlQHjc/N6q90fkBX+fLvhi9oijhV2h9/o82XlA0Cn+/pjip/hvp
vNnkn+JznmPyT9H5dZM/+hU0rqfJP2WfwC0mfwXzDRpn80+uo3Onm/yJ4+8j
+RGLO6XpPHDdqE4p/lsw98YVHUel9OdtPS403F9f03XHL/6yxOh8P9TzknEz
SxI+J9VB36a9SZ+T4qT6b6SzzT/pC6kBJv8UnW3+6L/R39tN/im+/QUmfwXr
FBr3pskffU6K39/kn/TfgqfOvPB7aToXfP1llzRf6Io7Z3ZJ+Jx0vXeP3Nc5
4b+Z72d+TueE/0Y6z7u0tHNKPWeaDyxI+pwU/6Q0/43ayHyTf4rPqTdR/ui/
UT5XmvxT6vnvJn+d2L8UHG/yR1+Ixj1i8k/6GLk9Jn/i3UDnJS8eKE3zOb/h
/XXoc5aNubc0zX+z+xJJZ/j9Onvn5u6lRmeo57rpMxZ3HYX7BEjnho6Zrml+
8kH8t+veNPkn/bfGf5n86b5f8f23cpt/yu8j403+KX1jjsk/pZ5nmvyTfrKy
fhf6b8aPMDzpe+iRxu9K2VfwkdEBPxe63krD0Ucl3f9sdCCOccQnRC77LS+B
+Owf+uekiJ/I3DsnSPyHzFe7+5npfiSOt2+c+Ej2J71z8fS5V/B4b984fY8k
jnfehNqP8Ab/e7cw4u5+ZspT4nv7xp08V7n7mWl8Zciz3n5m4idz/k+7+5mJ
j+I4eK4nzz4hnjtbwvxp2L/6NnM8/y5+Y5m/Pzy7NOTBNH9/eCBxZsD+cOGd
4fyOcDi/k4+4vz88/xZfF8/9SZ64P5zHq+WwP1zi4zkpvq+Enn9mPs7dD0zP
yznGT0Odqe/cFvK8d95E/ENzPtfVOeb+OSnz+0HIy726jcfnvfPvhSorcYpd
nQvV2Nv5uh/5/mFVxF2daZ12a8izZa7OTp6ezvH9+ucdnDy9ffhOHE9nRzdv
33V76svGN6P+6p1XJa6Ye+/TEJ+N4njnhR3ez9U55lnv3F/MA68/EO8YcnXA
Pe/QXmU7MF/t+4eKua8z8SK+rne+0smn3tU55uVePce82jv/7oz3dHbie+eF
e1AfDP0x/5w78fKQB57OPSI/LevpHPOrvXPZxEeHfJCnczy+wTvHSvzHfN1m
V+ceqvyskFd59RzHGeqdf4/5r70+HPOLPJ2d+/LOV8bc19kZ7+kc80Gezvu1
/ofxwZR6xNNZ/DHi3vMu5uXeewZiPtTTmfiGkJd654Xj8dWezsS/DLna7eq8
Xz/M4/Oezk4cT2fiX4W8wdPZuS+vb8R8rKezc19e34h5k3f+3eGezq06Z/0u
Befc6bl5Qtr591b2x0hnnG+cmHaOPh7v178z3jun6cTv489PovHevIXGTw/H
XzfVn7foYWnn7uP4/rl7J77Hxc9UcE5c/EzkrXqWxP/In//kUs/vt+o6Hp9f
BfOiYWnn+uP79c/1O+M97txvA8yjTkx7D0A8/rplML86Me39AE78p2DedWLa
ewNiPRu98780fkja+wScevDq1ok/1ud1i0KfthHqOfd6yP36dHgDzJOFwzx5
4WscH+pNxpdP9esq9F2T9aOFY50Ih3nyZRy/ET73OH//8404fI6xDvB58XXz
N/ifSzQedNbHsR9bB33jWObzoT+If/sB9AHmweGwHmGexe+1xLkCvr+Sz2Zf
5zKJDz5AncTB9Yjk3we+XzJ+NXyPhOP3Ra6L6xEZfyPUv1wX63m18S1xviF+
Js43aL22ljn0W+FZqGe9huNPg3Ufj89P8XWexdf137dDeUo+8LuDxEGdJf8s
6BzlD+u+KB9Y90Uc6jni0Gci3X4C9Xyo8SdVcn3dnTn0jYhD34g46tyN+Qyo
5x7MoW9khONzRzj0jSgO1nOUD9RzT+ZroJ6FYz0LfwbqWTjWs3A4HxqMZx8S
zl9HHN4/EPHV/rpbeNDbX3fnx4U8D+9zyE/g8VP8dXcpczz/nhUO57KjOPD+
KLlu4vw7+67BWlh3C8f3kwjHdbf4t3AuO5A8J0I9W78UddbsQyrwN5zxa6Ce
H2WOfpHEuQbqWcaDX5QT3uTX8wbha6BvRPlAPct1sZ5l/MdQz8LfgXoWjs9B
iY/1/DDzCb7OOfEDUWfh78G8op45zG8zwqE/RONhvhr6sfTHNl/PiIOeZcz9
9TXlKRyfd5L/J6An82A56CnjUc+VzH8Oeq5iDs+73PDQd9UdM/dpV4cRzMcN
HL3X/Z6eyr7fM4e0eXVYwfsVP944a6Mz/hEb54DWi995aHkivtk3B/ty2Z8M
vr6+6jt3/nBKOD6Y/9Bz+93vNfuTwcCJzcr9/oo/Wfiz+UUuzzBfP3Okp4/s
F118ywbvvLz4cg9uHbzP7W/s7wVrP9y8w+2T4vudMf20rx1eLnGu/WzNClc3
6wfSfcF5nMiHvGJl7T73fsX3e3DnHd79iv85VQ8oSss/2/m9Di4XH7KP+36A
ApUNQr+rqvO8+p1RnoUqb/0x+vf1pm5bauPx1Za3U+rRW7qscnjkK+54pEuc
p+PLrXy6pp3LxX/73UsTOqTw7O1/ao7fC1GsVCfjF7VTwRE3bdoaXVd8JPp3
2j01a2qd8eJHDRk5Mr5uvP+trOPZG4ojXhT7UV+576M4jP2fYlWdeXzCulqH
W1+F1g0zt0yP4/SIuD5rV5c4Tku87+iVefM7unV4Ap/LQ39Azuvh/Ec4zn+G
Mcf5PJ/vw/4Wrpd7JNdNw8Lzero+bb1M/+JzQc7Z1aetf+lffC4IXwB9bAjz
/3L7WNtB9gs5cWDdmrHrKarrYuhvzIPxbn8z5w9DXv2039/C9SDV/0duf6P1
qV3HlShV4/e3cDxdf4vfx4Qv9PpYvO7L/8DtY8IpL+X2MYdjH6sJee73bh/T
vA6i+53j9jGHr3b7mKwHqU4q3T5mzq0Z3lGpi6GPHc/7baa6/UrH67L73X4V
c3WV26+cOBm3X+lovRb0dvuV5vVUgcof4vYrWY8UqmCR269Id7seKVLBXLdf
OeuX7W6/kn049O8Kt1/JeNL/f91+FY/P3+r2K83rAtKzv9uv6L+36wjqQ1Pd
fkX/cxjP54e6/UrH+zq8fuWM997zQ/Vm56vUJ091+xX99xMNp3+vc/tVPL8N
znH7lczf6N9F0K/499Cg7YajvN/v5Ll8KHxPT2F+Hsyf7byF+lXRjUd582SZ
z1TD/HkVj4c6D38npedRc/txq93npvyOtvfBz739V/b5SJ9Lxc5J9c74Rnlu
Ng+5YnPEqZ5u5/32j28fG7+PiP772fw70ZtfLXLPQYS/c+3X+q51Pd9z4ijL
23Tu/hcf3eQ+9+X5eOu3D+2IONVH53CfeaP33qSiiFdNHH1UgctLeF/67mvb
4v0JJSpv+U7Sb2l9PopfrAL7exDl0+/7+a/c63bg/eGnH/tckzM+/J2I+J7R
2/ZEnJ4fg83zjq773hsj4vcXEZ8cctX0u18VuHxMyF84ZtiWFvd5el7It97U
67e7Il6qquz47Tp32jndF0fX7aXyZxreqofUPPVtYyXGb9NDejXcsr3Sic/P
5cPzd7Tbk8LrfrHg7DYnfvo+bXmOF6jSKe77mlr49xTi93c4JPl7Cn1el++u
P1Dr8K94/Kufzd3t8kbDC1X1rjvv2VYbx8/Y8a9qPWNS33mV8fh6G3+/ztwz
+JQvKjF+q1748tkvflOJ+dBya+7SI5pTeH3luqrWyvi68rtGzd6bJ7j7IcPf
Nehz124fED+Z6nbgtFzydw0a/+SSJa21cZw65lWbnvlFs8Mz1scuVNmqTj/9
tjaOs8GOpzrdtWj+Boefb3mLrnu57Mn1lTEP49P1Ry3/5F8OD+Obftlywu7K
+Loy38gV97z5QCXmTzpccviGAkcHzXH08AGzvfnMIp6H4D4T+7wmXfe4/cp5
Lu92+5WOfVfYlxtyWmeNcvsYrfdtHNLP62Nm/cj7Sx9z+5jzvFvi9jHxG5u1
nuv2Ma272vH0uc31+1iWn4+5m90+puN9lV4f0+wHEr/Q7WP0Pz2Y73L7mPh1
e7Ve7fYxeZ7S59DH7WMSh65zmtvHnOfpPrePyf5D0ufvbh9zfDCvjwmn8YPd
Phb7VIHXxyh/+5zdTusCt4/ResBy0vN1t4/R/0zg5/Vhbh+TPIl7fUzF/tVN
bh+T5zjp6fUrh891+5Vmf4meV9PcfiWcxte4/Up8Knr+HnD7lfhRs82GTKdf
iR9F/eZet1/RMJsPfc9ecfuVxKHP9z63Xznzk6zbrxze7PYrzf4JfV4D3L4k
nJ7zj7p9Sfwi0uFrty+JX0TP22luX6I+YnlHFXh9qY39oksS+ydDv2iPznn9
SngLzYfdfkX52PkP9d3xbr+S/Emfzm6/Ek7/Xur2q5jnToZ+tYrHT4J+NZz3
d5XDuYAK9nPysB+SfRvc3xvOA5PvMai2cZLvi2iw8zo87yk+UnK/dGMF+1ew
jzdzCu8zhH2Pwak8/gXYxyt+F77nROLge+3eZj8H3ztXG3I8/95Yy/PPB3wd
qmwc0uFIOJdtOekwGvbfvpV2jlXiUF/EfZ48PrHPk+e9eXzfCMdJvEeulq8L
56RUwPNkPH8asI8E53zDfWI0Dy1377dQlVpO91vhn/MNfSHM3/GX8Hwoj8/A
+dCIw7nFwO6nwvfziF+E55E7qCbLKc9Bbp6x7+SfH4l9p8vwHCXzo718aF56
DvtO3j7hbqrccrpuP/e68Ty2zIsf+1H+59Wiy+z8kOIc4caJfaohsI7LpL6H
Kt53geezxKfC/f+51PdQkS6p76Gi50Xqe6gkTvJ8VtfU903pyL+qg/3nC1Pf
N6VjfwnOB8m+CDy3Evljq+B80EH8q1zqe6goP94nUIXn3cS/Qj1rmKOeNexf
4fkgG6dY5Xv5eoa+VlLPDPtOeH5NfK2y43zdxKdKnKsSvwvP+0h8fJ8D+1oa
fT+eJ2fxPJrMnzNwroR9rfwc2IdvefKcVDivJh0UPHfYp8rgOTLm+iWoE/HB
8NyN+F1wvimKj9+7j8N5exaep+H8nOYtc/370pZTP8NzdpbjewhjXwvfxxit
C+Dzinww2P8v8/86rGfxweD81AY7P085B2F5ynsp2e9K6CnzeXwuHxbyHOiZ
s/Nquu5h/nXLLE8558K+WQ7eUxQI7w7x7Xw1Jc6jPC+FfML9/Mn3X6k69qPw
PKx9LifHN1iO8yKqD/ap/PdLxPu68/3993iE/hXNP2Gfdlb8qynwPtvbwudp
3evw/oGuvO/Xu24R/45j9lnB+xbEv/L6WzHvZ8Zz+sWqnP2rjJdPexW0D5+n
dV6/os+buf/eCfGp8H0FxMeG3M8z9q8Geee76fl7LnOvD3fjfcIt9Nx38++l
8mexT+Wdf4+f1096z6n4+f6k95yKuf/9/X/8qy94f6x3vy3R/ttSrx5i/+o9
735lv26BKvXud7/Ofcn+lTePauF9vC3UN/x9vHssb9MLPR3Ev6Iy93SIfSr/
vRYxr/P6cOxfNcG5admX65/rj32eau9zj/2rLJ7rnxHyGjzXz/5V4ly/jYPz
mTbe14rnylv1a5ajPq06J76Tp0+rzvB8I3F+X+Yh+J4Evt9SPO/M8cvwubwo
7Zy+jn0t2J8W7TO8GMYfxNcK9xNS/8Fzhexr4bwux/v3sE9Gzy+IHz43KT7k
OYR9LTzvrOS5hudDZb8Z6iAczx2Lr7UU5m+WJ3XbLr4WngsWXwvykedgbijM
x8S/wveMCYc8I18L3tMb+lrUn+H9hOE+rpTztuJrwft1s+JfoZ7idw2BdesF
zF+B+RXvLwrQr5B9R2WwHmH/Cs/J5sTXwnOyj7APBudkQ/8qeb9D5oU+lX/u
VeInz71mxKfC+aTwlw9yv3juddVBzkvKfqE+oEMD+2Awfw79LnxPl/hd+J58
4ck+ln6OVfZNJXUL/S58jpP+DexHoZ8j/hXUeeR3vQq6iQ54jlX8LnzPZ2Xa
udR/AzKWzhc=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{340.8631105226031, 122.61545252265445`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-1.1151314007790332`*^-9, 
    8.888733273728235*^-10}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4032523210083827`, -3.078998644796519, 0.0255003710911432},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.6181678793408194`*^9, 3.618168006120569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.618167871875069*^9, 3.618167872705819*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxtnXt8j/X7x4eRopwrkRyjEkIOkfcckjMNGUmSIucQ2ldCOUeMaSFEzoyE
kuWeDybHMbNhm8M2s82wk40Z++V9vV+v++H9q38+jz27+3yu+3Vf9/W+ruu+
3nfVBo32/bSwl5dX5aJeXkX+/awW1/X3goLbDj69vBvlp0/xDv1s/I6f9oy8
Qb6hWr/6/ZYXDt1cotzUkTFJ5N3UtEEH//AKvbXmy89qdownT93b47W+Gx84
n+rviSFvdmfloteu3nPk+AjyWQ1u5j6omGO4h/zc8BYDTvtmOl7mH/B3u5Wb
885zN3G8Ak88tL136uxr+H7yQhOD2lW5EwN7yMf/s2Zf+I6j5vh48oHjt707
vvoaZc6X/P0DIbe9Pz6jjD7kpVJbb4lrdQV/k48bt+5Ss5PX+Td0XbPCe13u
+CLUGZ+d/nrt/MBFhagz+NXt655d8kEB7CSvfyNr8mdL7lNn8Ckvt0lodjKX
OoOf+HhhxxLFsqkz+As/X9oe1yqdOoOf3tG37sDbydQZfETtnLveH1+lzuBl
W9aa13PdWeoMXmfdpEXjq++kzuB3I85817DOYeoM3i6//qbwHReoM/jsWfef
OPhZInUGTy39UYsqd9zrAf3eeTOq68NhhakzeJrvg6lDZnlRZ3zWutph6C/v
PqDO4OMq/3hq3NR71Bnc0+da4/Z771Bn8NKLGy1/PjODOoOHrChSJKp3GnUG
9yu3Otz/SCJ1Bk8p91UzNfYidQZvV3jw2jJbwqgzeIP5GzeOaB6soDP4iJqx
9xMS+N+TL1v+3htdva5SZ3CvWrsHb1yQTJ3BG/YpeWLaM+nUGTpdP7khx/vj
QtQZvHL0zz1j8x7y/MGHlU3bG9zoPv/G559d36o6bUQudQYvNmf2zJ7rsqgz
+MbZ2y50DrlNncHbFXRcn/56MnUGv/Jl0tjAVVeoM/jd80W/GV89gjqDz34j
50D66xupM3jdn0r/nP76P9QZfMBH3XcHN+L1IC/fvMSChnWuUWfwSZ5RB+bv
SaPO1KPW5/7jq2dSZ+gx97OvVpXo40WdwT8u3npdSlI+dQYPbvtDiZCX7lEX
8PwpcV8s8LvDv/Ep8SeDOoM30HHmBnUGl3iSSJ3Bz+i4cZ46g5fT8eEgdQaX
OLAbf5PP0vd7JHUGf7nrx3+EHLhKncG/jzqU+lyPFOoMfq9++R+aj6bfkm/J
PlxnSJNsy58jHL+HgQtrLnvoPO7PEc765ok5ORF5lj9HOJnjG354tESu5c8R
js+OqQeXt8uy/DnCeVHfF7csf45w9mr/v275879xRfv5ZcufI5x47c+nLX+O
cFZrvw2y/DnC6a/987h63J8jnAnaD2Mtf45wVqW+UH5NyjXLnyOcIuOnvPtg
4k3LnyOcXQ/HvF3320zLn/9dfw5Wj+7bKcfS2eP8XL95/Bsz8y2dPc6NYbM6
eDt3LZ09TrP154KjcrMtnT3OjKs1KmxqkGHp7DHXK9XS2eO00dclwdLZ4+zT
+kdbOnucJK1zqKWzx+ml9dynHtf53/PSup2zdPYYfeItnT3Os7Mjx8wqk2rp
7HH2F6/smxGebunscb44efJGlR+zLZ09To2Ab2Z0GXCXOuM8rg6MbaTG5lFn
8PorXl1WZksOdQafHD3JKzEhkzqDL6614OSI5reo8+Pf494P4IH6+EvUF/wn
zU/xb/wTe6xKdNcK20OgM/gcOZ46g8+X76fO4K+JPdQZ/AexnzqD+8v5Umfw
10Uf6gx+WfS0/VnVEv1tf1bj5HrZ/qxC5fra/qwqiz/Y/qz+FP+x/VltEH+z
/VlNEv+0/VlFiT8ry5/VLvF/259VK7lfbH9Wa+T+sv1ZfSf3o+3Pqoncv7Y/
qxS5321/VsslPtjxWQ2TeGLHZ6NPph2fVQmJV3Z8VuskvtnxWU2XeGjHZzVG
4qcdn1VpibfqcZ0j1EWJz5bOEWqtxHNL5wi1R+K/HZ9VJVkv7PiszPpix2dl
1iM7PiuzftnxWZn1zs431HZZHx0r31APZD218w21RNZfO99Q9WS9tvMNtVjW
dzvfUHXO6nzAzjdUQQudP1Bn8KOSb1BncslPeJ60R/IZO99QHSX/sfMNZfIl
O99QJr+y8w1l8jE731Amf/Ox8meVLfme5c/x6jvJD+38WVWWfNLOn9UoyT/t
/Fl1kXzVzp9VHclv1eP+/K9/ST5s+XO8ipX82fLneNVa8m3Ln+PVesnPLX+O
Vyaft/NnZfJ/O39Wpl6w82dVReoLO39WyVKP+Fj1oGom9Ytj1YOqpNQ71Bl8
vdRH1Bl8qtRTdj2odkj95eZthteReo06g1+S+o46g/eSepA6g++V+pE6g5eS
epM6g5v6lLqAj5d61q4HVW2pf+16UN2UetnHqgdVe6mvfaz+hsqTepw6gy+R
+p06g/eXep86g1fVceCw3d9Qyb/qfoKbXxruLf0H6gw+RPoV1Bn8hPQ3qDP4
89IPoc7gx6V/Qp3BTb+FOoNL3XTf7m+oBOnn2P0N1Vn6Pz5Wf0P9Kv0i6ox/
/630l6gz+EvSj6LO4KOkf0Wdwat+qftddr9OdZH+GHUGz5ig+2nUGfyS9N+o
M3hb6ddRZ/BI6e9RZ3DTD6TO4G9J/5A6g6dJv9Hu16nu0p/0sfp1apP0M6kz
PgtL/9PnUJ1vXo7Zc9PBZ62P6qfWKV4kFPqD+55e3iP7XpFQ87cCn/x1j6wH
FV07wOu1KTz/taspyvp+9b0c71jfr1rJ8Y71/aq22AM7+TtRAWGBteaT8/si
hYdaxzsHgrPaPVofrePVGeGOZb/qJefrkzk9acTImFsOPgPeeCPr+4NFQs3f
Cnzi3byhy7OSlHW8miXcsY5XS+R76Of4714ZNmT92Jbe/H78+4qLTpR5VJ/i
ONj7inD+jf/uNfkeH+t4Z9jx/A4linmHWsc7Zy6efbNhNPtgtPeqcMeyR42Q
7/H5ulpiSEGBG/8Co8J+O3uyUOiFT/3DCgqu83cTJ/7xb57schw/q/Sc/dtf
9gp9c3Pp0wUFCTx+2ydZ7Z4qV+CA4/jMJUuXPleQ71TXx13m8QHREwd4Dt0n
x/HRxSvtCN9xz7mofzeax0/onD/Rf8JdchwfMnnV0VmDcpya+rhwHv+BM3VR
wzp3yHH86vQaCap8llNbc4fHq0ZFt6ReyDD1SFAIeAfTz8fx+J4nj/a4d3ve
bR4Pfsb0pSvJ8bw+ZZtUDtntn0SO45cFDfrotG+8U0Xs5PG7WnS69KivAo7j
w7yiaz7qA0SLDjz+3RL929X9NoIcx29ffabCwc8OOS+Jzm6/f/gfmx7lseA4
fpfXa5Me5V2N5TryeL/3C+3vHOKQ4/gZC7M2xrU6rc6Ln/D4ojNHzWlY5xw5
js8OvdrmwcQ4NVn8kMc3/yC4zKYGV8lx/M67Q0Yt8Lum4LdYN5qODup38aAX
/RPc13f3qRHNH9IPwZuENU+ueSOP/gZe6a39heJW5NKv2G8IblMpsFs2/Qc8
sdqRxl29MugP4Ite+3HFU4Nv0B/A+5r+Oa47++Q57xWN6h3L6wu+Zd6RqEf9
B1xH8Env931uZPOVvF7gTzfJWPgof8N1Af/y+GeDNi44T/3BM79+9WFCQjx1
Bn91abXj46amUGeswztLRRbzjCtwoDP40m/9qvrXyqfO4P/LjW3eMPoudQYf
OPzjnqmz71Bn8HaXr41Y81YmdQbvsT6y5O7z7n0HXnFBnKrV8jp1Br9q+ufQ
GbzXvkudSxSLpM7gAa95jjzqP0Bn8JpLc1aF79iroDP43XM3pj3K36AzeOMi
N+c3H32FOoMPr5TY72iJ69QZfE2jmNp9N96kzshrcn0m+oV/9IA6g8fsuv/F
rDJ51BncqTN1njqYQ53BJR/Los7gs3XcTqfO4Od1vE2hzuC/6DiZQJ3BI03/
HDqDH9Nx6Qh1Bl+t40mQgs7gWToOnKTO4Nd1fh5DndkPX70+tcqPidQZPPHP
n/8IbnSDOoMvGNqpzUvJ6ZY/Rzgtx76wObbzfcufI5yXklYeXPIg1/LnCKdI
vxpxXbZnW/4c4Ugdl2H5c4Tzk74v0ix/jnAGaf+/ZvlzhNNL+3mc5c8RTqLp
nz/uzxHOVu23Wyx/jnCytX8eVI/7c4QzVPthtOXPEU6aruvjLX+OcGq2Gviu
t5Ns+XOE88H7fcov+eC25c8RTsemG9LL5GdaOnucaWv/vp/S9J6ls8f59Lk2
Fdak3LF09jgd54XV67c809LZ4/TV/Z9bls4ep7q+XtctnT1Oqr4uVy2d//1d
rf85S2ePc8P0zx/X2eMkaT1/V4/r7HFStG4Rls4ep5/W57Kls8cZrPuBSZbO
Hmd5TMVfU5LSLJ3/tf+r2X+GHMiwdPY4xYp5r/IufYc6o445HDmwa26NXOoM
vqnDtc+2n8uizuxLh3z+b72cTp3B43XfOJU6g2/R35NAncGT9PEXqTN4mubH
qLPXY//8FQKdQSLkeOoMfkG+nzqD/yr2UGfwWLGfOoPPlfOlzuDrRR/qDO4R
PW1/Vk+K/rY/q5tyvWx/Vmvk+tr+rIaLP9j+rIaI/9j+rO6Kv9n+rKpEaf+0
/VmdMf1zy5+Vn/i/7c8qUe4X259VJbm/bH9WveR+tP1ZtZf71/ZnNUjud9uf
1RSJD3Z8Vt0kntjxWQ2W+GPHZ1VX4pUdn03fMt6Oz+oriYd2fFZltZ4H7fis
Wkq8VVZ8VudN/9yKz6qDxHNL5wjVX+K/HZ/VElkv7PiskmR9seOzKizrkR2f
VRVZv+z4rFrIemfnG2qxrI92vqFuyXpq5xtqt6y/dr5h+mkxdr6hyh/Q67ud
b6jNhXQ+YOcbaqvkD9QZPMz0z618Qy2X/ERZ+YaKlHzGzjfUTMl/7HxDybxT
lp1vqP2SX9n5hroo+Zidb6gcyd/s/FntkHzPzp/VBMkP7fxZtZJ80s6fVUnt
n2ft/FmNlXzVzp/Ve5LfKit/Vu9IPmz5c7yKMf1zK39W5STftvw5XnWR/Nzy
53jVRvJ5O39WAyT/t/Nn5S/1gp0/K1Nf2Pmz+l3qEbseVM2kfnGselB5TdH1
jl0PqgVSH9n1oGoh9ZRdD6rGvXX9pax6UM2Sek1Z9aB6U+o76gze0/TPrXpQ
zZP6UVn1oIqXelNZ9aB6uE3Xp8qqB9ULUs/a9aBqKvWvXQ+qnlIv2/Wgaib1
td0vUqFSjztWX0iV0vd7nN3/USulP2D3edQIHQc22v0cNVP6Fcrq26hd0vdQ
Vh9GBUj/hDqzH27651a/RRWWvo2y+ipqpfSFlNU/UX9Jf0lZfRIVJX0qux+i
sqTfZfc9lOmb+Vj9DbVU+m/UGf26ztIPcay+nKoufRXH6r+pMOnP2H02lTdM
93mU1U9TDaRfpKy+mfpF+k7K6o+pJ6V/RZ3B25j+udXvUm9LP01ZfS3VT/py
yupfKdPfU1afSpk+od2PUsHSb7T7Tuqa9C2pJz6nrt0aW/a2288MPPXclQ4B
ac6Azb3K1/vc7Wdu+1/nIgE1bzpfDbr3Y0DYA+qJPvSbYzo+cfSvPPpt7Lmd
HWt2vOWkf/3ThILgXMbhLNOn3TYv5dqba7O53j3V4IWFe0bedob+1Lz3iB/d
fuMQ0++KsPqHU4z9HU/ce+pktNsnhP3TwxudHTf1AvsYsP9ayeSqy9ccY78I
9jeIahszvnqAAz1jjP0fPvdc6oOKYdQT9of2Ot60VstoxtsDf7Zfu2fkdad6
yykzKl5z+2/4LDSzi//n+93+W0bZ4JQOAcnO34tXpKza6fZ7nwy9WjKgZorj
/0uaX9R6t69bdWSFBjF7Upwm21v+U3K5279t9kLHnjU7pjqZId83bftDJvXs
fmTyhJExqc4HgXu7ZhVz+7FbTF+rn9V/8xj7f/1wav/wj+Ko50Vjf8CS0Iqb
GpyhnrD/qXpF+pcotot6wv7GOfeD5+8JoX/C/pVhU4KP9j9LPWF/8A+tMm7P
u8x428PYP7BuQcV5cW6fs2iPTXNGxsQ7czat6u+zx+2/vfggduuekQlO+z9u
H5+w2e2/4bPwYdVi28p71Llrn3ZZHQISnf0RP2xOCMihzoO9Jz0bUPOa43/l
csUXZmVR58m/bWkes+ea0+RW/Tk9/pdOnRcPuNy/ZsckJyG3IP3py6nU+bbp
a8Vb/bdixv7fqz+91rv0Oepcxdjf7vdloSEHDlBn2D/if4vLqbGbGQdgf/6Y
wZ1i805RZ9i/sFDmkCVbY6gz7O9+za933M0E6rzE2H/+6J8TxhRNpc6L9X0U
65y62Ca46xq3/3ZQ3y9xztzkgBe/W+r23+S+uOS0z4n//q+5udQZn/KcLps6
b1x+Mb9DwBVnf5lvh9cel0GdQzs8UzWg5lUnq9X63ftOpVHn6Dut28bsueoM
79d+SZ0/kqznCzHOOav/Fmjsn63jwFHqfMjY76Pv9+nUGfb/re/rI9QZ9o/U
z22jqTPs91m5c2H9h1epM+w/Or3sTk+FZOp83tjfY8jYs71fv0WdK+vrftYp
VzKpoN8Ct//WRV/fSOdUxSajF02/S53lOp5z5taeeenIhDvUV+7rKEee72dS
Z3x66/hzizrLfXrBmazjTDJ1lvvxopOl40k8dU43fa0kq/9WxdjfS/vtb9S5
q7E/R/vnfq5rsL+b9sOz1Bn219fzHleo8wVj/58tRtws/3ISdYb9PlVPPLPx
7TTq3NzY/2nhZ4N+fjWDOnfS9hxy/N6e895Q/3tWPhzmlO98IXTlqBzq/JT+
/qNOuN8rDc4NyqLOQ7W/HTdz3enUN0z71Ulnvr4vUqkzPr21/ydS5wPaT844
udrPY6lzBuZ6rP5bN2P/aa1nMPOHrcb+ulq309QZ9rfS+sRSZ9i/Xs+JJVLn
w8b+BhdqdcrrmkqdYX/sJc/usIbp1Nlj7K96Zmz7ha2yqPMVbX+As2JU3bVf
fpZr1XdrHL/Jk8tu7ZdNnUdpe7Y45eeemBbfLYM6Z+vjdzor9TxhGnXeoc93
j/Osvl5J1HeE/p59znx9Xa5QZ3wW1/pHWv03fIay/+a9Vuwvr+dC/6HOd439
lTU/T53HGPuXbntp8N728dQZ9lfVxydT52Bj/8YJl9df/vIWdR5p7A/S35NJ
nesa++NWhWdP93X7nDWNvVeEW/2KfWqFfA91Xie/q3bI71LnZLFT1RE7qbOf
nJdaJedFneX6rlF1RQfqGynXXTUW3ajzDdPXOmX13/B5r4i+LtR5oLF/plxH
6vyrsf8Zue7UGfYHiZ9Q5w+N/aXFr6jzJWN/L/FD15+N/T+J31JniednVC3x
c+pc1dh7Ve4L6hwq95FqJvcRdR4k953aIfedG5flPlXd5T6lzuvlvlat5L6m
zh0kDqh+X+g4QJ3TTF8ryuq/7Tf2J0ucoc74fKj1T6TOsH+mxDHqDPtnS9yj
zkWN/SclTlJn2F9G4ip1bm/s7y1xmDo3lbithkncps5PSJxXnSXOU2fY65F1
gTpvlHVENZd1hDp/JeuO+ljWHeos60KkekvruZ86V5J1TZWSdY313WDT1zps
9d/eNPanybpJfYsZ+yfIOkud8flwhl6XqTPsbyfrOHX2N/bPkXWfOsP+E5In
UOcXjP1lJa+gziaPUgMkD6HOjuQtKlLyFuq8QfIc1VnyHOoMe2dIXkSd0yWP
UomSR1HnA5J3qfSzOu9iHR0geZoaLHkadb5p+loXrf5blLF/sOSB1Hm/sf+W
5I3UF/aHSJ5JnfmcRPJS6pxh7H9H8ljqDPvnSN5LnRcZ+09Knuzmz5JXqyTJ
q6nz/yQPVwMkD6fOn0jerjZK3k6dO0uer+pq/zxFnWFvzcm6LqDOkk8mqCpS
R1BnUzepX6TuoM6bTF/L1+q/BRj7Y6Wuoc7+xv5GUgdRZ9g/Seom6gv7Q6TO
os74LCR1GXWG/e9IHUedvY39c6Xuo86mzlWjpE6kzhJPUtVxqSup80tSh6q/
pA6lzhJnUtQKqVtdf5Y6VwW/rutc5kOwd4rUxdTZ9AHUIqmjrb79DXXM6r91
M/b7Sp1OnZsY+29LXU+dYX9j6QNQZ9g/SfoG1Bf2mz4DdcZnYelLUOdQY38N
6WOwX2T6M+regnf+Xrfb7b9hni5W+iHU+aL0T1SQ9E+o80EzlzgmUvdb2H/b
Iv0ZtVv6M9R5ifRz1Cjp51BnY5fykf4Pda5q+l2trf7bk8b+T6W/RJ1h/2bp
R1Fn2G/6V9QZ9jeWfhd13mrsN/0x6gv7P5J+mq2nU+yLUpfm7ykcCv1LGJ4k
OvO6mE/H+/Bpz6Kzicrq46mywh3reDVN+ns+1ver4vK7Pta8mcp++07xk9GF
7b6rkymc+1jx75vMKlNk9c5CnLMFX/B5aniTpUW4Xxv8z45fjCi70t0XD15s
hhORGOXuiwfvHfp08z9K3eVcCPja+x+smtPB3RcPntFkc9H+09x98eBTEtOj
+4/HPhcP9av0wfxfCyW5++LBR6/tGd9leySfw4H/3Kbhrb6d9vC5EXgr7y+j
VPmDfE4Afn1JId+o9efZ1wa/0HNw/7Cr7rwg7qdDaf9EXTvqRT3BK4f/snby
Nvd9DuCR5a+UW3nC3f8OXr1HPf8xRfOoJ/gX8yZfadMqh3py/Q871r7CxEzq
Cf6Cd8N+4R/dpJ7ge/xPvTz+zDXqCb4u/lzSGzO5D4s8ZNWLXrkRx6gn+Op6
3w0PbrScz7HAd/T+pmtG+GnqCT5paPtdG9Lc5w3ga/6e+fT279x+N3ixd1N9
nirnvncA8Wntr169+3gK6N98Dta470TPIfd9DuDpl7vte+W+u/8dvFWln6vl
N7pLncHnv39j1qkR2dQZPGZR81ur16VTZ3DfZaU2JYWkUGc+/yy99ct59dx9
huDlSy36bqDPOeoM3jCj9sSNC/6kzuA5dfMWPZ95gDqDt3nl0HZPhfPUGbzY
ynfmtfzJfX4DPqz2pv0/1nbjBfgQv2Jf3euXQZ0R753Ro/Pj0x9QZ/Dmy0p3
Lh7rvs8BvOSWvwftfiWPOoP3Syqh55mhM/N9vS8gkzqD39T7C/i+EfI5ep+C
u28WvJNeL+KoM7i3fg/JceoM3kO/bySAz7nBn9b7OE5TZ/DI/OJlH81BQWfw
8CeGtnz0HBk6gzdedHz01GPunDp4l/k/nhlZN4s6Y/2MeevS2lEv5VNn8AUF
P7y9IqmA87jgdSbUfaq1313qDD7hN/8x5RZlU2dwiUvp1Bm8po4zqdQZPFTH
E3cfMvheHTe475Xr/yEdH/6izuDbdBwIdecMDF+l73f3+Tp4o+SX/9rZw32+
Cx70xdybj/JY6Az+zYMJC3c1yaDO4G946rwa/4D7Xplf3y3atXNe1zzqzOfe
xx4m1q7gvjcDvF3r5b+dmJlDncEDJqc8t8rJpM7sf+v75SZ1Bu+v/d/dVw+e
rv08jjqD99D+fJI6sw+p/XY652DAT2v/dOdFwN/QfniJOoPnv9dx+KN9ItAZ
fGDM1pU5025RZ/BPGhZPqVM8izqDV8jdO/398BzqjPyu/Jl9mTMmu/uykd9h
/zv0x/FhgSO//72t6/84HvvocV1w/Mcln+rrt9vd343j7X30OD74XT/n1Vvu
vm8cv8TaX4/jxU/c/eA4voG17x7HL9H+4O4Tx/FLrf34OP4j7Q9R5Dh+hbVP
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
ni/4kmfz16decOc2wU/UyxrnPyGZeSH0SGp2qNenPdz9p+DHt3YY9WJhd/8p
+IDWy0ptGeLmE+C1X1nbptLxZNoPHrdq4OQhs07TfvAup7s9OyvUjQvgH06t
4nd28jXaDx4YVKHWJxXTmOfhPK7rfeXu/k3wQL0/3Z3nAB+g97m76wH47TMd
Wz76/yzAHvDaqT5PhryUQnv4PYWbRT16TzV+F3ad1P7j7mcED9R+4sZl8Ns9
P/nrV4+7fxC8fJNtbZdtz2C+gt/5SZ+X2x/nXNCwViuemebug0O/5b/fQxUU
8t/voQoK+e/3UAWFJPzne6iCQrb+53uogkKu/+d7qIJCbpn3UD3+vqmgkPD/
fN9UUMj5/3zfVFDI2v9831RQSMx/vm8qKOS/3zcVFGK/bwr2Yr/b4++hCgrB
e6igJ/tF5Xo908Lb3e8G7lvqt+5Jw936kPvP9DyAOw8HnqDzxivUE7yPft56
1t0fZPgyvf/lD8YZ7gfSzxndvgn4iJ1PPB80yX1/FPg6/ZzdfX8U+KiMvPMx
fu77o8Dnfj3BqbHB1Qd8/ZOZ64bfucv7FnbNXbdg5YN/3HoYXJ4jJ1AH7j/Q
951bX4F/r8/3CHXgPlT9Po1Ani/4m5VfPTq1kvtcFryp1sfdRwbe8+Xv3+jx
qvseJ/DRWjf3PU7g81p9+/ByWB7jAn6/vH6eeJnnBb5Ox+czPC/wSB3nd7r7
zQ2foNeLA7Sf11M/d3P3Z4E3++DFuYfuu/uzwHteDxpTstM92s8+27jyfXoF
5TPu4Hde0e8zOUw7wWO0zut4n4AH6feThNMe8MoLg+Mfvecc9rCfpq/LfdoD
3mvjuu3/fP6QcY3vw5iWO2r7uYP8Xe6zzPj8vdwa0fx+8Bff21ftTpq7fwf8
51GVvlv5opcPvofvNzoU/Ps/n19y98sbXurJwTv8ihXyYX/fxNepZp6f8/Qm
Hjwjx4fiePA/zLw67hO+l+Ow/l1+D+6bFWIn3+PB+0nOi/HUntPm/W/4aNGH
9wn4Q9GTvwv/7S36u3P8hjeX60U7eB/L9aU9nBM288ywBzxE/IT2gI/V7z1e
R7/n+iN+yHUNfvqF+C3tBO8tfu7uAzK8udwXtJvxRu4j2g8eYuaEYT/4Mrkf
rfeTRDvfy/3r7t8xPEDud/o310+JD/+vf4X3DDy+zzrcWSBxhucL/oXEJZ4v
eG+JYzxfcJk/cd8bAN5S4iR1YB/JzPFCB/A/9fUKpA7sg0l8pg7gNSSeUwfw
jhL/qQP4NFkvqAPf4yXrC3UAXyDrkZuPGj5W1i/qAL5F1jvqAD5e1kfqAt5S
1lPqAz7YzLVCH3A/WZe5ToC3l3XcndMyPEbWfeoDXlbyBOoD3lHyCsYp7v+T
PMTdX2Tswj592A9ey8xb4njY+0DySeoMjv3m+B6u12aekO/lwLov+aq7/9ec
d0XJb/n94HmSD/P7wbeYOTp8P/gCyav5e+BHJA/n70LXEZK383fBG0me7+7T
NDxP6gLaA97SzJvBHvA+Ul/QHvCFUo+4+ygNl/f5u+8JwXVeK/UO7QQfJvUR
7eR7d6Seop+DZ0n9RfvBk80cF+zne5KkjqP94H2l7qP94EelTuT5gF+TupLn
BT+NkTqU58W+k9St7ryC4ZFS5/K8OH8ldTHvX/AhVXUd7dYPhu8w81Q4X/Bk
qdN5vuCLpK7n+YJvkz4Azxf8qPQNeP7gps9AHZBflLP6NuxHSb/Cfd+O4TOl
v0EdwF+dr/sh1IH9K+mfMJ6Cl5J+C+MFuLL2sYJ/ZeamoBu4n/R5qBv4l9IX
ct+3Y/gi6SNRN/Bt0neibuDHpE/lvj/K8HHS1+K+UehaxDzH/D+W3UbV
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
          "]], Polygon3DBox[CompressedData["
1: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
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

          "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnHlUVdUex0kxEZl8KU6gKDikMjiRiaYoAqKAgoA4YBqG4QCZUygOWM6K
AziApkUIZM5KlihkD4fSxOE5pKCB+ZwYE0nFfO9+zz5vPc/qd2DTOd17W/51
1/qsvfbd53v2/u39++69T6txEX7jaxkYGFjVMTCo/d/f0Is3GjzKvpM51Gyk
T/u+1zLr9/UqzX6c20dtfqr9269peMaX+YM0fMGna4v+Dpx63ifdhzfU8PxT
jfpp+NQpHg+V1Mcx+ibqbzcofKCGV9S6dl/J59rw+9Z/aPji3BbeGn4isqhY
F3WmdNAXnfe8ZgBukz1/sIbbLu2rVzor9b8vdZbXOT54M/gi46wBGn6wR4OS
v6KdlZZvgU9cYeql4W9n7MT/FrT0BV9n9Rt4icM26BnZYR74WIs08JYuA8Gf
ddsN7mg4AtzHo6xIjlPtcXL9Hfyzkec8NdyqcGixnD5OdaxQvvmkHijf5/LJ
MjmdKU7VQ3Kinbx6qq0z1U6Kqx1veTnVTqo8pef3m9qBX4vMQHnjUZHgAZ8H
gaeETgbvMaGprM687VEqbmhr3qfiKqVnQkcP8MuNp4AX9vCV1VnX4rNS9X//
IBo6v3FkIPj25fXKlOy3FNeX9bPa8ZYav7xxmJfzxjHe+YtXN22NFypu8HJ9
6c+6Fp/V/l+1/QF90Vntfqt2nqsvOqvtV6it89mpYeYo77dthIYnN/BWNC79
XXXmzeN48+6E5hPwvGtidwdo+NqLuXd0cTwq5Z9oy7dUqv1q+4RU+Q03HdBP
vht/HuPlyi9p4ONZeT9W3oSVF8dXKza+7Nj4ospT7aHKV/rZ4HnLZm/H+rPX
eedCDTd+GIF2fn13MsbvhtABWA8vHT0E5TMjglB+Yt6NB7q4vqJ4bu1DeK4p
QRXQM+/RMdm41KuFE3jxoc4o7x9/VyefSynemz1vieR5597tA90KyzPQH8KH
by6R65+kT0j0N7X71TBLE/CGtSajnU6nO6CdH9l6gl/qYgw+sflRreoc2HU1
+NJt61B+z06XmvmxL3WW1dko73PokODX3V3Dn72/TPABWL7vUE2fmZcHMv8q
lflXbzL/qmmPvuCReR3wv/uMV2B83WL+QBzzB0qZP9Di9Q/B/126D3xT02Hg
I7okgfc6MRm8n6GRrA9ZsGsx+PThLdCeCdOOgZe8nwju55CB8tdG/wTucaIN
dAuuawp/wCBrAeo38p0E/rWlOfRc1GlCidx86mS7EvXnFXyEeuzHmcr6OQ6s
/HVWvhMrP7JzOvj9Qg/Uf2HERbTHObif8FxOnmi/YXC4rJ5q62x5+BL43d3x
aGf3Zq1l/XOHHGfotmBDBfiaLtOEeibMB1/xjpHQnntLFB2/lUT76/12DNzk
pwq0/5iTMdq5+vZI8H1Gqagn1/ASyrdy9AK3TrEAj+uWIOs31kkaKvyv+0zw
/e524BeGbAL3vv4J2rPUvBL1J26+Cf6vhFC0p9DMAeWfsvbbs/Z713D8UnGD
t55wszuYN10GpaIe09qTXsj3W0vmzZs2vcB/LrcGD7lyAfU4l9cDN9/jC54b
PRjlDVd0BD+cvE/wh98Q6k9k/vkV5p8XMf+8T3wAuNlsIf4MaW0DvrNuCPih
EdngTv4HtBqfeevx+u48dK7XeCH4lV8zhH1P42Lwx93WC/3Q0gf8g+xg1LMz
fRn48vQK1DP6rQHgyZ1fB3+jZ1yN/PO7lkL9fX/JBT8/fJdOruvIeLsvG/xo
yx3gSSmO0C2n7SJwmyfrMe62+3QEr0yeIYzTk10x7i6/kgMdXrNfDj7MOx68
49yusvFWKR5LxCUqjonz0Q3pfMR0yGQ6fM50cBwTgTgcesEa9dSbtb5QTk/e
90XlX6KvskTiq1BxYy+xPuflbdsOAz8V8QjtnB6SqpP9WVvxuaJJE3CjPsHg
vcwb1cjvovJTKg+l+gmV71Pl9UVnqn+KeUcjSd6hVH/jHY9UPfm9s8CD4tzA
b3x9q1DJdZ1SOov19GT1mLB6eP0TXdO5YGRn6NzMZA34GbfXX+pcDZ0jPEtQ
j92ScvRP0+MroSeV30n9/+OsHsovsq2Xg/LDzp0FL5+zQfZ5eeOY2j6h2pzy
jfXdf9OWv8rrv+m7zvrivyn1v5TOlP9G5b9UfuHiNRv8Qf8c8PthXcC/mLQQ
fOKBAvDvLtcBf2/1GvDQ/oXgrd77Ubb9lP9G+TPUc1HxeWCzOSif7p/goeGb
i5shT1m6trswb7ptRPkmC7uVyv2v1Th/8E+yuuB/438YJesLacvnpPw3SmfK
fys+6Qb+PPwC+u224B4lcnGjgK1DhkvWIZGJ7uDzL8bgf1PL26Ieyuek8lbK
5+T1306uCwRPPhwCbuHaQVZnyn+j/GSq/eJ7uSN5L2qvh6nyNiWfgHe2FXyM
rWGDUN64jh94tvVVlLez+B7lR7TyAX967VUhblisl/XfKJ+Tij+jz0SDL57s
C75rXjq4rvmclP9GrYcp/43yOXn9N7t6o8Ftml0Ej+z2RZGcztqaB5OW2gn9
4cBOjPfFFv3K5MZFWq4wrpfOOoL3PnhtgTDuVluC7795DjzqbrSsz0nF25XL
Ognx8HYSyocFzpD12ag4Q+lAxYFn7PztJMn5WyrvKJC0Rzw3S82DFKfq6dx7
B/qz70QPvK9Sm5VoT77kvK6ow/wlk4X3sqI96v99qzn45VEu4F+5jwCfO2AJ
uNRndmY+M+VvUP2W8jkp/am4Qc37VBxuNO8h9Hk7qxL9NshwU418Tio+8/qc
lP/G6wv1fOVL/G9Us/r43/P7r9QoDxXbv0iS/+q7z0n1T6XiJK/PSfUTqjzl
C+mazpQvpO8+50v/TVn/jdKZ8t+Uaj/v+UzRDymV+CFUO6n9i3GO19EeH5dK
5F9P6k4ulRu/FFf7HIWu+YeknhOPQodLHeLhA1yyflSoZH9Qqv3UONU1PSkf
Wyl91NZZ7fldKZ0d2bmpT9m5qeZV3Dvm/V8qXlHlq5uPiPdVLbb2Af/2Xhx4
q3y3F/yTGcw/CWP+CcXJ9hM+GKWbeM/Umd0zTWb3TItvH4QOx/JbIj6sujVH
th9SvhbFKf+N8hX9o9zAo2LGo3xgiqesf6jU/XeqndT5PUq3W1OToXPxhI9R
z4qQN8vk5iOSm9njf/tXtob+OQMPl8pxqp3S95LG3gulJ3U+6q7ndPCpbX5C
+fHuvWV1NmI+gDHzATKr8gM5fULe+xHa4tS+DHV/ynbuPZTP/rgrdEir3VM2
PreTnNuZwc7tUHGe1zfmPX/I68/M9E8Gd226HO83zu+2rJ68+ugap/qt2v3Z
0DEG/c117EfgXu2Py9ZP+VdV9ZNvJP3EpckYgdcWfNrgqCSd1F8aV88S8fZ/
nNhvijAxE+a1jaPQn7vsMSyVm1+qG4dF/SluzebTLWw+jWPzKaUD1X7qeRtJ
4nACMU+J5Z/9dhr9La3ht+BTO79XpuT6YbT9O6g/8dkRxLcdq8zxv9R+itsh
a/AHHxeCDw0LLa4Jp/x23n1e6nkpH4Aqv/fdQOgQ3cAMOmQeuqpo3KDuhfHm
F70J34/ivOcxKD9WKZ9W7fjMe5+a0pnywZTaP1Xq3CnVz/VFZ7X9CqV0oPK4
54ddUf+kMZOGIj4/XFaj83VK6an29wR49aTOe5DfB0hKskCc2RM9TMOvpP7w
QtwrYvHNr4a+Je/+ha75k7zzCKVDAeGH8+43aet5qXNrVDxUu51i3P6Gxe2N
LG5T5xulPpi4XqV8AMqPos4DUOur3Y390Z4PDhpj3PkE1AFPSolH+bKOT1D/
9MRFwne9OP09teMblTdRebG2xikVZ3jjp1e3BOjW/too8LG7ElB+ocQPCWd+
iIGrcG5q45RGKN8vei50qJvWGjz0qZA/7hwbrtW8sjTPHM/VspYJdOg5+Nc/
zF9En60kfxz4+2XC/bjQJodk8zUqH6TytcYs/3KrIl+jfEUqzxV9RStJO0Wf
1j7LFTy7l5Dvf+Bk+0LedF+SN1U3DxJ1iyTiIZXvVDXP/tn4T+1jUuNdGs/N
WPvt2P5RgGT/aEPPGJQ3PfMV6k9aNBPv64RHFN5j13v3+mv4Ov9OsudwlFo3
hh3Mxnrmco5foIY/WblHNn6K+wvdJfsLVHnxPE9dyXkeah7kvT+S0Fw4d/d0
9gCU9/B7Dv4zy4/yWX40huVHSu2TBrF4nsbieU8WzzenRYCvyhsAPqSo8IXy
0u+dUvtB1Pqz+E0T8BaOO7Fv3r6hZalsXGLj0Z+Nx+tsPFL7L1dsx4IbzBL8
/5h184R9fAfh3PvZiYJ/u3dre9n1wKqrp8Ef//M42v9hG0vZ+CBdByZI9k1W
VtOPcowTfPKnKSFYJ6Rb3Zf18UKYz7Zdsg9CzVPiPegAyT1o8TxkfbYP8i3b
ByGfl2iPUvsO5Hp1dh54jqfwnY3ELMHPv8fuubtK7rlbJQo6B8QK8X919HiU
/+XAcPAdpnPAx8Uayfr8Uj8/VWE/n1p3VeXrSvehRhP9geonvD6n1G8cUoXf
KPJdjK+owoekOHWeipo37SRx+FEVcVgp/+2R5PynC5sveP0rXh+MmneovKmm
622pzraSdYKoMzWulbqfvpfoD2I+W1TN/J03LlF+BbW/adZAOJ/ssCQO5Zu4
Byp6ro/Kg6j1P+UXBTC+rJrf+6J8b6o95H6BQn4CpaeYx13+i+8bVnWeR637
mLp2j1Vb90/Vbj/lh4jrrk1s3dWfrbuodVQjyTzejc3jnzn/CH4xzAb8wc1U
WR+GWg87svuDMez+4Fp2f/DSuQBhff70CPII8fw2de5C+r7Ca/i+tPUdKn35
3hSvf07dd6vt/St47as5Qr6231jWt7wkuR8Uze4HUetSbflalD7p24T3+K7P
SPTPzNlPhTydyCtfDZ8JPmtmBfihuOayvha1ribvk24ZD962x0Bw99jckv9f
t/9bMt4tvcwxvk7dPwy+Y4xb0R+t/0W/a3WQLfi50wuEvDtz/wvr8C8l77e6
5weGKOyDifcB97H7gB+y+4C896eq2pev7nihylP+GLUOpO47BBLrKGq9ynsP
hfr+hlLnHHjPM/B+5yFjkAOed4pvDOYjr8dPahQHgoh5cP+ng8APtBPGhX0b
R/AtzNeKlfhalH9F+WzUPg6vf6X2dwaouMTtX3US7qHXnRaBeo5efC7rSziy
7wbkSr5fd/bgUfBXnI+gvHWct6wvsdFDeF+PX72F9ty085TVgfKvqHumavtX
1Ht/t1z4TmyTLfXB0wtb4n/PlAvfPXBZlyXUb5xT9EfrmRS2nqHu73tHxIKP
KT2L+nOalaCeWImfGcX8TLW/M0ytx3h9LaqfvDVksBBXH9uD346ZJetriftc
kWyf6x22z0XNj9MI/4r3vjPFpT6V6NtQ8dmU8BPU9rV41+28Ph7vfdv6Cvla
SuUjSp9z+LP3XrWlg77cY6V8MGpdR/3vfwBhOFeZ
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{318.91211802865433`, 148.08916957517854`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-2.5619830802029355`, 2.5619830802029364`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.07166010983093488, -3.3502533308964533`, \
-0.46975253855220195`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.618167876258319*^9, 3.6181680062818193`*^9}]
}, Open  ]],

Cell[BoxData["|"], "Input",
 CellChangeTimes->{3.6181678761395693`*^9}],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command, GenerateModelCode, outputs lists of state variables, non-state \
variables and shocks along with an instance of the class associated with the \
model."
}], "Text",
 CellChangeTimes->{3.6175329697524137`*^9, 3.617900660424797*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oldBetap", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"get$betap", "[", "]"}], "]"}]}]], "Input"],

Cell[BoxData["0.99`"], "Output",
 CellChangeTimes->{3.618047863941969*^9, 3.618060136363739*^9, 
  3.618163343819069*^9, 3.6181642341235695`*^9, 3.618164304974819*^9, 
  3.6181652482798195`*^9, 3.618165316012319*^9, 3.618165472378569*^9, 
  3.6181661526723194`*^9, 3.618166292294569*^9, 3.6181663584238195`*^9, 
  3.618166739842069*^9, 3.6181674241703196`*^9, 3.6181675076943192`*^9, 
  3.6181675905988193`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", ".5", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"modEqns", "[", 
  RowBox[{"get$betap", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", "oldBetap", "]"}], "]"}]}], "Input"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.618047863981969*^9, 3.618060136413743*^9, 
  3.618163343864069*^9, 3.6181642341585693`*^9, 3.6181643050023193`*^9, 
  3.618165248309819*^9, 3.6181653160535693`*^9, 3.618165472432319*^9, 
  3.6181661527123194`*^9, 3.6181662923683195`*^9, 3.618166358466319*^9, 
  3.6181667398770695`*^9, 3.6181674242090693`*^9, 3.618167507739319*^9, 
  3.618167590650069*^9}]
}, Open  ]],

Cell["\<\
One can also get and update (should be \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote], but it isn\[CloseCurlyQuote]t yet) all the model \
parameters simultaneously \
\>", "Text",
 CellChangeTimes->{{3.617531730237169*^9, 3.617531790921002*^9}, {
  3.6175318473302345`*^9, 3.6175318776722345`*^9}, {3.6179006868050604`*^9, 
  3.6179006931551237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"theOldParams", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"getParams", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "theOldParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175318845050344`*^9, 3.6175319564834347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.99`", ",", "1.`", ",", "0.5`", ",", "0.5`", ",", "1.`", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.618047864001969*^9, 3.6180601364624968`*^9, 
  3.618163343904069*^9, 3.6181642341810694`*^9, 3.618164305026069*^9, 
  3.618165248329819*^9, 3.618165316089819*^9, 3.618165472492319*^9, 
  3.618166152732319*^9, 3.6181662924620695`*^9, 3.618166358493819*^9, 
  3.618166739904569*^9, 3.618167424255319*^9, 3.618167507775569*^9, 
  3.618167590690069*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"theStatePoly", "=", 
   RowBox[{"lucaBasis", "[", 
    RowBox[{"getTheState", "[", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175336874341993`*^9, 3.617533734673255*^9}}],

Cell["The polynomial ranges", "Item",
 CellChangeTimes->{{3.6175338258124323`*^9, 3.6175338467320137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getRanges", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09718925656664625`"}], ",", "0.09718925656664625`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047864031969*^9, 3.618060136537503*^9, 
  3.6181633439503193`*^9, 3.618164234213569*^9, 3.6181643050560694`*^9, 
  3.618165248362319*^9, 3.6181653161335692`*^9, 3.618165472537319*^9, 
  3.6181661528598194`*^9, 3.618166292538319*^9, 3.618166358523819*^9, 
  3.6181667399620695`*^9, 3.618167424329069*^9, 3.618167507820569*^9, 
  3.6181675907350693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getOrders", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}, {
  3.617533906331788*^9, 3.617533915991788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6180478640519686`*^9, 3.618060136572506*^9, 
  3.6181633439865694`*^9, 3.618164234233569*^9, 3.618164305074819*^9, 
  3.6181652483835692`*^9, 3.618165316169819*^9, 3.6181654725785694`*^9, 
  3.618166152881069*^9, 3.618166292583319*^9, 3.6181663585438194`*^9, 
  3.6181667399933195`*^9, 3.6181674243665695`*^9, 3.6181675078630695`*^9, 
  3.618167590772569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPhiFunc", "[", 
    RowBox[{"#", ",", "lucaBasis"}], "]"}], "&"}], "/@", " ", 
  RowBox[{"theStatePoly", "[", 
   RowBox[{"getStateVariableNames", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175341379817877`*^9, 3.6175341887334027`*^9}, {
  3.6176184695331807`*^9, 3.617618470953195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"2.`", " ", "\<\"qq\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"6.25`", " ", "\<\"ru\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"10.289203100491495`", " ", "\<\"uu$Shock\"\>"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.618047864251969*^9, 3.6180601366850147`*^9, 
  3.618163344047819*^9, 3.6181642342885695`*^9, 3.618164305117319*^9, 
  3.618165248434819*^9, 3.618165316211069*^9, 3.6181654726135693`*^9, 
  3.6181661529273195`*^9, 3.6181662926220694`*^9, 3.618166358626319*^9, 
  3.618166740030819*^9, 3.6181674244103193`*^9, 3.618167507901819*^9, 
  3.6181675908113194`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Join", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"lucaMat", ","}], "*)"}], 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{
       RowBox[{"getTheGrid", "[", "]"}], "[", 
       RowBox[{"generatePolyOrdersForOuterProduct", "[", "]"}], "]"}], "]"}], 
     "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6176160776422462`*^9, 3.6176161235027046`*^9}, {
   3.617616246203932*^9, 3.6176163025654955`*^9}, {3.617619782800314*^9, 
   3.617619787320359*^9}, 3.61789905024457*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "1", "0", "1", "0", "1", "0", "1"},
    {"0", "0", "1", "1", "0", "0", "1", "1"},
    {"0", "0", "0", "0", "1", "1", "1", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.618047864311969*^9, 3.6180601367962737`*^9, 
  3.618163344082819*^9, 3.618164234307319*^9, 3.6181643051410694`*^9, 
  3.618165248456069*^9, 3.618165316247319*^9, 3.618165472652319*^9, 
  3.6181661529460692`*^9, 3.6181662926708193`*^9, 3.618166358648819*^9, 
  3.618166740062069*^9, 3.618167424449069*^9, 3.618167507940569*^9, 
  3.6181675908488193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getTheGrid", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.617626649969055*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{
    "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
     "ProjectionMethodToolsJava", ".", "GridPointsSpec"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject11918300237791233]], "Output",
 CellChangeTimes->{3.6180478643819685`*^9, 3.6180601368312764`*^9, 
  3.618163344121569*^9, 3.618164234327319*^9, 3.618164305161069*^9, 
  3.618165248474819*^9, 3.6181653162835693`*^9, 3.6181654726948195`*^9, 
  3.618166152966069*^9, 3.6181662927295694`*^9, 3.6181663586725693`*^9, 
  3.6181667400908194`*^9, 3.618167424487819*^9, 3.618167508003069*^9, 
  3.618167590890069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getStateVariableNames", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175357853313556`*^9, 3.617535796611356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>", ",", "\<\"uu$Shock\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6180478645919685`*^9, 3.618060136866279*^9, 
  3.6181633441565695`*^9, 3.6181642343460693`*^9, 3.618164305183569*^9, 
  3.618165248494819*^9, 3.6181653163210692`*^9, 3.6181654727435694`*^9, 
  3.618166152983569*^9, 3.618166292782069*^9, 3.618166358696319*^9, 
  3.6181667401195693`*^9, 3.618167424525319*^9, 3.6181675080405693`*^9, 
  3.618167590928819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.617534500160631*^9, 3.6175345117608633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"2.`", " ", "\<\"qq\"\>"}], ",", 
   RowBox[{"6.25`", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"12.5`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"10.289203100491495`", " ", "\<\"uu$Shock\"\>"}], ",", 
   RowBox[{"20.57840620098299`", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{"64.30751937807185`", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{
   "128.6150387561437`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", 
    " ", "\<\"uu$Shock\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047864981969*^9, 3.61806013712505*^9, 
  3.618163344400319*^9, 3.6181642346235695`*^9, 3.6181643054760695`*^9, 
  3.618165248791069*^9, 3.6181653166135693`*^9, 3.618165473001069*^9, 
  3.618166153223569*^9, 3.618166293200819*^9, 3.6181663589538193`*^9, 
  3.618166740374569*^9, 3.618167424761569*^9, 3.618167508263069*^9, 
  3.618167591185069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175345957204895`*^9, 3.6175345996202946`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047865001969*^9, 3.6180601371613026`*^9, 
  3.618163344447819*^9, 3.618164234683569*^9, 3.618164305501069*^9, 
  3.618165248876069*^9, 3.6181653166723194`*^9, 3.6181654730560694`*^9, 
  3.618166153247319*^9, 3.6181662932520695`*^9, 3.618166358978819*^9, 
  3.618166740405819*^9, 3.6181674248140693`*^9, 3.618167508311819*^9, 
  3.618167591230069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}], "]"}]}], "//.", 
   "lucaSubs"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6177966373630776`*^9, 3.6177966786634903`*^9}, 
   3.617796709883803*^9, {3.6177967757344613`*^9, 3.617796776974474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047865071969*^9, 3.6180601371950555`*^9, 
  3.6181633444828196`*^9, 3.618164234719819*^9, 3.618164305577319*^9, 
  3.6181652488973193`*^9, 3.6181653167098193`*^9, 3.618165473097319*^9, 
  3.618166153267319*^9, 3.618166293310819*^9, 3.618166359001319*^9, 
  3.618166740445819*^9, 3.618167424864069*^9, 3.618167508364319*^9, 
  3.618167591268819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.6175346707167397`*^9, 3.617534680446253*^9}, {
  3.617534729073821*^9, 3.617534736143468*^9}, {3.617535094504675*^9, 
  3.6175350948646708`*^9}, {3.6175364743190355`*^9, 3.6175364745190372`*^9}, {
  3.6175365680499725`*^9, 3.6175365685399776`*^9}, {3.6175366308609433`*^9, 
  3.6175366319509106`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.7071067811865476`", ",", 
     "0.5`", ",", "0.7071067811865474`", ",", "0.49999999999999983`", ",", 
     "0.49999999999999994`", ",", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.7071067811865476`", ",", 
     RowBox[{"-", "0.5`"}], ",", "0.7071067811865474`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.49999999999999994`", ",", 
     RowBox[{"-", "0.35355339059327373`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.4999999999999999`"}], ",", "0.7071067811865474`", ",", 
     "0.49999999999999983`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.3535533905932736`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.4999999999999999`", ",", 
     "0.7071067811865474`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.3535533905932736`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.7071067811865476`", ",", 
     "0.5`", ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.49999999999999994`"}], ",", 
     RowBox[{"-", "0.35355339059327373`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.7071067811865476`", ",", 
     RowBox[{"-", "0.5`"}], ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", "0.49999999999999983`", ",", 
     RowBox[{"-", "0.49999999999999994`"}], ",", "0.35355339059327373`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.4999999999999999`"}], ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.49999999999999983`", ",", 
     "0.3535533905932736`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.4999999999999999`", ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", "0.49999999999999983`", ",", 
     "0.49999999999999983`", ",", 
     RowBox[{"-", "0.3535533905932736`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478656419687`*^9, 3.6180601376963453`*^9, 
  3.618163345114069*^9, 3.618164235308569*^9, 3.6181643060960693`*^9, 
  3.6181652494448195`*^9, 3.618165317253569*^9, 3.6181654735510693`*^9, 
  3.6181661538548193`*^9, 3.618166293892069*^9, 3.618166359576319*^9, 
  3.618166740978319*^9, 3.618167425332819*^9, 3.6181675088530693`*^9, 
  3.6181675916825695`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", "lucaMat", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}], "]"}]}], "//.", 
   "lucaSubs"}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{{3.617796291899623*^9, 3.6177962958796625`*^9}, {
   3.6177963821205254`*^9, 3.617796409490799*^9}, 3.617898737399439*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Dot", "::", "dotsh"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tensors \[NoBreak]\\!\\({\\(\\({\\(2\\\\ rhop\\)\\/\\(1 + \
\\(\\(phip\\\\ sigmap\\)\\) + \\@\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\), 0, \\(2\\\\ rho$ru\\)\\/\\(1 + \\(\\(2\\\
\\ betap\\\\ \\(\\((\\(\\(-1\\)\\) + rhop)\\)\\)\\\\ rho$ru\\)\\) + \
\\(\\(phip\\\\ sigmap\\)\\) + \\@\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)}\\)\\), \\(\\({\\(2\\\\ phip\\\\ \
rhop\\)\\/\\(1 + \\(\\(phip\\\\ sigmap\\)\\) + \\@\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 4 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Power[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\), 0, \\(2\\\\ phip\\\\ \
rho$ru\\)\\/\\(1 + \\(\\(2\\\\ betap\\\\ \\(\\((\\(\\(-1\\)\\) + \
rhop)\\)\\)\\\\ rho$ru\\)\\) + \\(\\(phip\\\\ sigmap\\)\\) + \
\\@\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 4 \[RightSkeleton]\\)\\)]\\)\\) + \\(\
\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)}\\)\\), \
\\(\\({0, 0, rho$ru}\\)\\)}\\)\[NoBreak] and \[NoBreak]\\!\\({\\(\\({0.`, \
0.13387113268194584`, 0.04938370437445493`, 0.`, 0.059994568933253896`, 0.`, \
0.`, 0.`}\\)\\), \\(\\({0.`, 0.`, 0.08`, 0.`, 0.09718925656664626`, 0.`, 0.`, \
0.`}\\)\\), \\(\\({0.`, 0.13387113268194584`, 0.04938370437445493`, 0.`, \
0.059994568933253896`, 0.`, 0.`, 0.`}\\)\\), \\(\\({0.1`, 0.1`, 0.1`, 0.1`, \
0.1`, 0.1`, 0.1`, 0.1`}\\)\\)}\\)\[NoBreak] have incompatible shapes. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Dot/dotsh\\\", \
ButtonNote -> \\\"Dot::dotsh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6181633457515693`*^9, 3.6181642358235693`*^9, 
  3.618164306669819*^9, 3.6181652500198193`*^9, 3.6181653177660694`*^9, 
  3.6181654740623193`*^9, 3.6181661544460692`*^9, 3.618166294435819*^9, 
  3.618166360198819*^9, 3.6181667415958195`*^9, 3.618167425862819*^9, 
  3.618167509325569*^9, 3.618167592216319*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Dot", "::", "dotsh"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tensors \[NoBreak]\\!\\({\\(\\({\\(2\\\\ rhop\\)\\/\\(1 + \
\\(\\(phip\\\\ sigmap\\)\\) + \\@\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\), 0, \\(2\\\\ rho$ru\\)\\/\\(1 + \\(\\(2\\\
\\ betap\\\\ \\(\\((\\(\\(-1\\)\\) + rhop)\\)\\)\\\\ rho$ru\\)\\) + \
\\(\\(phip\\\\ sigmap\\)\\) + \\@\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)}\\)\\), \\(\\({\\(2\\\\ phip\\\\ \
rhop\\)\\/\\(1 + \\(\\(phip\\\\ sigmap\\)\\) + \\@\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 4 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Power[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\), 0, \\(2\\\\ phip\\\\ \
rho$ru\\)\\/\\(1 + \\(\\(2\\\\ betap\\\\ \\(\\((\\(\\(-1\\)\\) + \
rhop)\\)\\)\\\\ rho$ru\\)\\) + \\(\\(phip\\\\ sigmap\\)\\) + \
\\@\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 4 \[RightSkeleton]\\)\\)]\\)\\) + \\(\
\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)}\\)\\), \
\\(\\({0, 0, rho$ru}\\)\\)}\\)\[NoBreak] and \
\[NoBreak]\\!\\({\\(\\({0.17200330449488438`, \\(\\(-0.017319066954171486`\\)\
\\), 0.10216420000830667`, \\(\\(-0.08715817144074918`\\)\\), \
0.08715817144074918`, \\(\\(-0.10216420000830667`\\)\\), \
0.017319066954171486`, \\(\\(-0.17200330449488438`\\)\\)}\\)\\), \
\\(\\({0.12529172487167856`, 0.12529172487167856`, 0.01215463988183095`, \
0.01215463988183095`, \\(\\(-0.012154639881830936`\\)\\), \
\\(\\(-0.012154639881830936`\\)\\), \\(\\(-0.12529172487167856`\\)\\), \
\\(\\(-0.12529172487167856`\\)\\)}\\)\\), \\(\\({0.17200330449488438`, \
\\(\\(-0.017319066954171486`\\)\\), 0.10216420000830667`, \
\\(\\(-0.08715817144074918`\\)\\), 0.08715817144074918`, \
\\(\\(-0.10216420000830667`\\)\\), 0.017319066954171486`, \
\\(\\(-0.17200330449488438`\\)\\)}\\)\\), \\(\\({0.4974873734152916`, \
0.08535533905932739`, 0.0853553390593274`, 0.014644660940672613`, \
0.08535533905932745`, 0.014644660940672648`, 0.01464466094067264`, \
0.002512626584708369`}\\)\\)}\\)\[NoBreak] have incompatible shapes. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Dot/dotsh\\\", \
ButtonNote -> \\\"Dot::dotsh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6181633457515693`*^9, 3.6181642358235693`*^9, 
  3.618164306669819*^9, 3.6181652500198193`*^9, 3.6181653177660694`*^9, 
  3.6181654740623193`*^9, 3.6181661544460692`*^9, 3.618166294435819*^9, 
  3.618166360198819*^9, 3.6181667415958195`*^9, 3.618167425862819*^9, 
  3.618167509325569*^9, 3.6181675922575693`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Dot", "::", "dotsh"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tensors \[NoBreak]\\!\\({\\(\\({1\\/\\(2 + \\@301\\/10\\), \
0, 0.30864815234034326`}\\)\\), \\(\\({1\\/\\(2 + \\@301\\/10\\), 0, \
0.30864815234034326`}\\)\\), \\(\\({0, 0, 0.5`}\\)\\)}\\)\[NoBreak] and \
\[NoBreak]\\!\\({\\(\\({0.17200330449488438`, \\(\\(-0.017319066954171486`\\)\
\\), 0.10216420000830667`, \\(\\(-0.08715817144074918`\\)\\), \
0.08715817144074918`, \\(\\(-0.10216420000830667`\\)\\), \
0.017319066954171486`, \\(\\(-0.17200330449488438`\\)\\)}\\)\\), \
\\(\\({0.12529172487167856`, 0.12529172487167856`, 0.01215463988183095`, \
0.01215463988183095`, \\(\\(-0.012154639881830936`\\)\\), \
\\(\\(-0.012154639881830936`\\)\\), \\(\\(-0.12529172487167856`\\)\\), \
\\(\\(-0.12529172487167856`\\)\\)}\\)\\), \\(\\({0.17200330449488438`, \
\\(\\(-0.017319066954171486`\\)\\), 0.10216420000830667`, \
\\(\\(-0.08715817144074918`\\)\\), 0.08715817144074918`, \
\\(\\(-0.10216420000830667`\\)\\), 0.017319066954171486`, \
\\(\\(-0.17200330449488438`\\)\\)}\\)\\), \\(\\({0.4974873734152916`, \
0.08535533905932739`, 0.0853553390593274`, 0.014644660940672613`, \
0.08535533905932745`, 0.014644660940672648`, 0.01464466094067264`, \
0.002512626584708369`}\\)\\)}\\)\[NoBreak] have incompatible shapes. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Dot/dotsh\\\", \
ButtonNote -> \\\"Dot::dotsh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6181633457515693`*^9, 3.6181642358235693`*^9, 
  3.618164306669819*^9, 3.6181652500198193`*^9, 3.6181653177660694`*^9, 
  3.6181654740623193`*^9, 3.6181661544460692`*^9, 3.618166294435819*^9, 
  3.618166360198819*^9, 3.6181667415958195`*^9, 3.618167425862819*^9, 
  3.618167509325569*^9, 3.6181675923075695`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Dot :: \
dotsh\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6181633457515693`*^9, 3.6181642358235693`*^9, 
  3.618164306669819*^9, 3.6181652500198193`*^9, 3.6181653177660694`*^9, 
  3.6181654740623193`*^9, 3.6181661544460692`*^9, 3.618166294435819*^9, 
  3.618166360198819*^9, 3.6181667415958195`*^9, 3.618167425862819*^9, 
  3.618167509325569*^9, 3.6181675923513193`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.17200330449488438`", ",", 
      RowBox[{"-", "0.017319066954171486`"}], ",", "0.10216420000830667`", 
      ",", 
      RowBox[{"-", "0.08715817144074918`"}], ",", "0.08715817144074918`", ",", 
      RowBox[{"-", "0.10216420000830667`"}], ",", "0.017319066954171486`", 
      ",", 
      RowBox[{"-", "0.17200330449488438`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.12529172487167856`", ",", "0.12529172487167856`", ",", 
      "0.01215463988183095`", ",", "0.01215463988183095`", ",", 
      RowBox[{"-", "0.012154639881830936`"}], ",", 
      RowBox[{"-", "0.012154639881830936`"}], ",", 
      RowBox[{"-", "0.12529172487167856`"}], ",", 
      RowBox[{"-", "0.12529172487167856`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.17200330449488438`", ",", 
      RowBox[{"-", "0.017319066954171486`"}], ",", "0.10216420000830667`", 
      ",", 
      RowBox[{"-", "0.08715817144074918`"}], ",", "0.08715817144074918`", ",", 
      RowBox[{"-", "0.10216420000830667`"}], ",", "0.017319066954171486`", 
      ",", 
      RowBox[{"-", "0.17200330449488438`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4974873734152916`", ",", "0.08535533905932739`", ",", 
      "0.0853553390593274`", ",", "0.014644660940672613`", ",", 
      "0.08535533905932745`", ",", "0.014644660940672648`", ",", 
      "0.01464466094067264`", ",", "0.002512626584708369`"}], "}"}]}], 
   "}"}]}]], "Output",
 CellChangeTimes->{3.6180478662619686`*^9, 3.6180601382288885`*^9, 
  3.6181633460003195`*^9, 3.6181642359998193`*^9, 3.6181643068548193`*^9, 
  3.618165250211069*^9, 3.618165317951069*^9, 3.618165474202319*^9, 
  3.618166154579819*^9, 3.618166294579569*^9, 3.618166360332569*^9, 
  3.6181667417245693`*^9, 3.618167426020319*^9, 3.618167509493069*^9, 
  3.618167592358819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"theStatePoly", "[", 
    RowBox[{"getStateVariablePolynomialWeights", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175382216625147`*^9, 3.6175382283435817`*^9}, {
  3.6178987697897635`*^9, 3.6178987712997785`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.13387113268194584`", ",", "0.04938370437445493`", ",", "0", 
     ",", "0.059994568933253896`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0.08`", ",", "0", ",", "0.09718925656664626`", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047866291969*^9, 3.6180601383376465`*^9, 
  3.618163346101569*^9, 3.618164236088569*^9, 3.618164306919819*^9, 
  3.618165250278569*^9, 3.618165318003569*^9, 3.6181654743685694`*^9, 
  3.618166154606069*^9, 3.618166294757069*^9, 3.6181663604900694`*^9, 
  3.6181667418770695`*^9, 3.6181674260628195`*^9, 3.618167509668069*^9, 
  3.618167592395069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lucaBasis", "[", 
     RowBox[{"getTheNonState", "[", "]"}], "]"}], "[", 
    RowBox[{"getRelevantWeightsNSP", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175383075943737`*^9, 3.617538338314681*^9}, {
  3.6178987739598045`*^9, 3.6178987756698217`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.4545454520721992`", ",", "0", ",", "0", ",", 
     "0.26446280672898764`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0.3212867946939869`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618047866321969*^9, 3.6180601383714*^9, 
  3.6181633461378193`*^9, 3.6181642361235695`*^9, 3.618164306938569*^9, 
  3.618165250298569*^9, 3.6181653180385695`*^9, 3.618165474409819*^9, 
  3.6181661546273193`*^9, 3.618166294813319*^9, 3.6181663605125694`*^9, 
  3.6181667419008193`*^9, 3.6181674261028194`*^9, 3.6181675097105694`*^9, 
  3.6181675924338193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysVal", "=", 
   RowBox[{"modEqns", "[", 
    RowBox[{"updateValDrv", "[", "lucaBasis", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sysVal", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sysVal", "[", 
     RowBox[{"getTheJac", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175400669839687`*^9, 3.6175402734860334`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Java", "::", "excptn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A Java exception occurred: \
\[NoBreak]\\!\\(\\\"java.lang.ArrayIndexOutOfBoundsException: Submatrix \
indices\\\\n\\\\tat Jama.Matrix.getMatrix(Matrix.java:297)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateCurrentVarTime.doValSwitch(\
NonStateCurrentVarTime.java:62)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateVarTime.evalVarNonState(\
NonStateVarTime.java:40)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateVarTime.evalVar(\
NonStateVarTime.java:26)\\\\n\\\\tat \
lucaMod.updateValDrv(lucaMod.java:65)\\\"\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6181654746960692`*^9, 3.618166154892319*^9, 
  3.618166295092069*^9, 3.6181663608075695`*^9, 3.6181667421508193`*^9, 
  3.618167426382819*^9, 3.618167509959319*^9, 3.618167592675069*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"$Failed", "[", 
    RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6180478672219687`*^9, 3.6180601391714635`*^9, 
  3.618163346190319*^9, 3.6181642361985693`*^9, 3.618164307018569*^9, 
  3.6181652503685694`*^9, 3.618165318097319*^9, 3.6181654747085695`*^9, 
  3.618166154898569*^9, 3.6181662950995693`*^9, 3.6181663608163195`*^9, 
  3.6181667421583195`*^9, 3.6181674263890696`*^9, 3.618167509964319*^9, 
  3.618167592680069*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"$Failed", "[", 
    RowBox[{"getTheJac", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6180478672219687`*^9, 3.6180601391714635`*^9, 
  3.618163346190319*^9, 3.6181642361985693`*^9, 3.618164307018569*^9, 
  3.6181652503685694`*^9, 3.618165318097319*^9, 3.6181654747085695`*^9, 
  3.618166154898569*^9, 3.6181662950995693`*^9, 3.6181663608163195`*^9, 
  3.6181667421583195`*^9, 3.6181674263890696`*^9, 3.618167509964319*^9, 
  3.618167592690069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"biggerMat", "=", 
   RowBox[{"nxtWts", "[", 
    RowBox[{"lucaMat", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Dimensions", "/@", 
   RowBox[{"{", 
    RowBox[{"lucaMat", ",", "biggerMat"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.617541767748976*^9, 3.6175418089993887`*^9}, 
   3.617541841180711*^9, {3.6175418807711067`*^9, 3.617541912431423*^9}, {
   3.6178990734148016`*^9, 3.6178990740148077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "216"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478673919687`*^9, 3.6180601392102165`*^9, 
  3.618163346308569*^9, 3.618164236304819*^9, 3.618164307161069*^9, 
  3.618165250474819*^9, 3.618165318223569*^9, 3.6181654748210692`*^9, 
  3.6181661549773192`*^9, 3.6181662952208195`*^9, 3.6181663609138193`*^9, 
  3.618166742294569*^9, 3.618167426456569*^9, 3.618167510011819*^9, 
  3.6181675927975693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"thePolys", "=", 
   RowBox[{
    RowBox[{"CreatePolynomials", "[", "res2$2$1", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
      RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
      RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
      RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}, {3.617899263634715*^9, 3.6178992952650313`*^9}, 
   3.617899529273444*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"before genPolys in createpolynomials 1\"\>"], "Print",
 CellChangeTimes->{3.618167426510319*^9, 3.618167510065569*^9, 
  3.618167592846319*^9}],

Cell[BoxData["\<\"before genPolys in createpolynomials\"\>"], "Print",
 CellChangeTimes->{3.618167426510319*^9, 3.618167510065569*^9, 
  3.6181675928913193`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["thePolys"], "Input",
 CellChangeTimes->{{3.6178998659148397`*^9, 3.617899868424865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.9090909041443984`", " ", "qq"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "ru"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5`", " ", "ru"}], "+", 
    RowBox[{"0.9999999999999998`", " ", "uu$Shock"}]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.9090909041443984`", " ", "qq"}], "+", 
    RowBox[{"1.6528925420561729`", " ", "ru"}], "+", 
    RowBox[{"3.3057850841123444`", " ", "uu$Shock"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6180478676419687`*^9, 3.618060140577826*^9, 
  3.618163346349819*^9, 3.618164236349819*^9, 3.618164307202319*^9, 
  3.618165250509819*^9, 3.618165318294819*^9, 3.618165474862319*^9, 
  3.6181661551023192`*^9, 3.6181662952695694`*^9, 3.6181663609450693`*^9, 
  3.618166742333319*^9, 3.618167426581569*^9, 3.618167510136819*^9, 
  3.6181675929275694`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sysPolys", "=", 
    RowBox[{
     RowBox[{"ReplaceVariables", "[", 
      RowBox[{"lucaMod", ",", "thePolys", ",", 
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
   ";"}], ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
   3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
   3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}, 
   3.6178994558446503`*^9, {3.617899508525177*^9, 3.6178995206352987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".00"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}, {
   3.6178999614757957`*^9, 3.617899961835799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nWd0VUXbhpFelS6dAJEmCApKZ+gdpEkXI02QKl06CIIFpYn03mtCDiFA
ciadEAIJ6YWQEJpUAVFAVL7X/cx975X9vp9/WOtae53MufbsZ2bus2esNmJy
39G5c+XK1Txfrlx5/vNvtYyevq9eZerNLTaUvTYnTIf4NhxVOfdtPWa690a/
ienk9YJSTtZ9eEMfKlJq0cT0JPJ10YsKNE3L1g93zRjj2TWO/K+U2oM7RmTp
0dbnXCCPjNr50d5RGeb6EPKN1x8/1y1TDT9B/vlfbbeklU7Uucx/4C3LrFG/
34/F9Qq8wrCw8Krfnsfnk59dOaroR82D0R7ygAWF9pVO9EH7yXN5bGv828Bp
+L7ks2fcW1Av4ZgyfsiDDldITcwbpIxP8kpz5qzZ0T8SXHuFl158c2Wwjk2K
qr0t+iY9gze/PnXOYf/r9Ay+69cK0f57rtEzeKnny1p8Xy2TnsFvFE+6uu9F
Gj2D+9WpuST4chI9g3/dbuZbVw7G0TP4cb/vVz/Ic5Gewfv+Ui+luiuMnsFv
NdrUyjvSn57BB71z8qf3++6gZ3CPIlEf/n5/h4Jn8B679lQoXvY0PYOvqHoi
Ii4tjJ75fR+UWLS17kV67ratenJ820Cd+WLUgyo/36Bn8C75i6l6X2XTM7h3
yZOrmk3OomfwBq3PhK30u0LP4K8NLDz2wA8p9AweN3lIkdAxCfQMvnvFoWMZ
rWPpGfx2u993P6ofSc/gpe7UTeweoOmZ7dyQFDah2TF6Bm+Tv2O+x/VnK3gG
93hQ6qvp1U/QM/jDsDt/5v00mJ7Be6/t6orxPk/P4EneCR/0zHWZnhN8Kh65
8tkpfb/SK5/tn16nZ/CP6uzPc7TnNXoGnzN+26Hp067SM3i3pQ97/tg9jZ7B
K21t/fhgjSR65t89+cO6sJeX6Rl83tbAye79F+gZvErMx36/DQylZ/CFr/31
ok9xP3oGL772caUnIT/RM/ijyfmTfT7eR8/groR2wyddOkvP4P5NF//yWpMI
egYvV+DazuivL9Ez+JnPdxztPj6enodb/dxH/6k2zvSol03P4CN6tI2sXy6L
nsHX+8Q1mlnwCj2Dj4mqnrwqK5mewZta9SeensFLWHUmhp7BXVY9iaBn8MNW
3QikZ/CrVn04QM/gDa06sErBM7g87y56Bq921b9S48AQegZfdKRc0j9FL9Az
+JRWAedGHWO/Jd/mOcGzW1IiPV+2/O/XBUc2arHzjyx6Bs++6lf+4/AMegY/
8Sx/4KytqfQMvqT4QK81MxLpGby/9Vxcpmfwrlb/j6JncOnnwfQMXsnqz770
DJ7L6rfL6Bnc3+qfh+kZXPqhm57B7/TpXfjdtefoGbyLh3foy+wYegb/6Nny
1iPLJ9AzPVxtsrlL2xR6jrb4z7pe0c2v2i/JpGfwV573dg0fkk7P4Jdatej0
5XvJ9Ay+fcB3d9YWjqdn8Czrfl2kZ3C5L+H0DN7F8n+GnsHLWZ530zN4gOVz
s4Jn8HuWt1P0DN7f8hNGz+De4bef1R8XTc/gBaN2D5o3LI6ewZv69Dv56dIk
egYfsyFPyc5H0uhZvsXSll36xqzo+GYGPYNXGF+1ntevKfQMfveryTFzziXQ
M/iZLXrqT9tj6Rm8nPU5kfQMftq6PoiewU9Z3Juewau0O7H/s+WrWsIzeJBc
T8/gbvl8egavJO2hZ/BAaT89g9+X70vPOT+H/Za8m/ik5yzxr0aJf3oG/0Du
Fz2D55f7S8/gR6U/0DN4b+k/9Ax+XfobPYNvkf5Jz+C1pT8reObnS/+nZ/Cv
5XmhZ/Ab8nzRM/hOeR7pGTxWnl96Bn/tLet5p2fwBlIf6Dld6olaLPWEnsH7
Sf2hZ/AOUq/oGfyW1Dd6Bi8u9ZCewQ9I/aRn8DZSbxU8g3tKfaZn8EdSz+kZ
vKfUf3oGHyDjBT2DL5XxhZ7BXTIe0TO43C/2W/JCMt7R80gZH9UWGR/pGXyS
jKf0DD5Pxl96Bq8s4zU9gy+S8Z2ewQvKfICewZ/I/IGewV0y36BncH+Zn9Az
eFmZz9AzuKy/4ukZfKzMl+gZfIPMr+gZfJTMx+gZ/KXM3+g5ReZ7yl/me/QM
Xlrmh/QM7pL5JD2DH5H5Jz2DZ8l8lZ7BG8r8Ft7Il8t8mJ7Bq8v8mZ7BF8l8
m57BH8r8nJ7Bq8h8np7Be8j8n57B58l6gZ7B5bm4Rs/gZj1Cz71k/aISZP1C
z+C9ZL1Dz+D3ZX1Ez+CVZD1Fz+C5ZP1Fz+D+sl6jZ/A3ZX1Hz+B3ZD1Iz+B7
ZP1Iz+Dxst6kZ/Dcsj6lZ/CGsp6lZ3Cz/qVncLNepmfwLFlf0/MIWY+rLFmP
0zP4Ulm/0zN4B1nv0zN4cckH6Bl8rOQJ8ED+UPIHegYfIHkFPYP7Sr5Bz+Ar
JA+hZ3CpJ0n0DH5L8hZ6Bi8j+Qw9g5s8h57BTf5Dz+BxkhcpR16nTL7kzOuU
yaOceZ0y+ZUzr1Mm71KOvE6ZfIyewU2eRs/gJn+jZ3CT19EzuMn36Bnc5IHK
kdcpkx/SM7jJG5Ujr1Mmn3Tmdcrkmc68Tpn8U4XVXlgz3S9DL1iU1H1k3lC9
4EKfyaM+vqnhH7xb+PyIjz+7pc31Cjy2x/ojp3+O4OeD/9OoU6HtOsr5+cpc
7/x8Za53fr4y7cHnsP3PTuct5vmcnDmq4dpxvb6/Jur9s/XCnNcrw7Wj/cp8
X/Vkya0JE9Ov6qLDm7y7S4fqHSr4TlCDW9pwBT5z5Iqq9Weec16vDHder8zn
sJ/jc75uOfCnQJf9+Wj/0q+r3zjaJoKfj/Ybzvbj883nOK/XGX6b/D3m33Je
r4sOzLr4b392tEcZ7myPMp+j5le7EfDqlZ3rHr3WKrbOy+s6dfSciFevkvl3
55wv69v4E5sz57zvPetknWz9/qHisa9exfP6jxK+GRK08ho5rh/5rEbVtoOy
dHWrnTG8/lP3izwbZmeS4/p5ed9ZubFYhk6z/u45Xv9mQmbf44np5Li+UYXS
V7w/T9We1udoXn/pTvjOiPdSyHH9vQZ/1o08l6hrWfw4r1/26vCjjB8TzHpk
RQB4K5Pn43p8zs6OWV9mesbxenBvk0tXlOvZH25/9KhS+XVR5Li+avagBpXc
4bqKtJPX918ccKZzr1ByXF+uYrdNPz0K0Mniwe5vg0v43C/uT47r71wPO3zz
/BFdVTzz+hCvfqlrC+8mx/WLft7c7tnA9qqx3EdeX+r6s+Ejy68jx/WHglJH
7x11VKVIP+H1d3a+teXlal9yXP/lN/1n/d4qUM2TfsjrV+zt1DDm9WByXN+n
/NXK0TfC2W+R957Nm7LuUHg2+yf4+je6t/zgaRb7IXh243nnvup4lf0NfGO3
EWU370pjv2LO7NVl9IlXSew/4AVmvuM6Pyye/QF83pt18odMi2F/AP/F5Oe4
7+ADJgW3rfpLEO8v+DeNKurNHXx5H8HX1bl09/r1Nbxf4AtajV3bb+9u3hfw
m+cq/tBjuD/9gy/zb3vw2fRQegYvv3JGkfNnougZeW9kramD3151jZ7BO42O
em3S/Ex6Bv9rjnfvZWnp9Mz8edX67VuapNAz+Ph98x76rkugZ/BqASNaXXhs
P3fgJ3avLhe+NYqewaua/Byewcv/3u9AB09/ega/+3PKufbv7qZn8IDpDxbn
iV6r4Bm8X/7re3Yv8KVnXj9wb+Ma+YLpGbxXvdT1T7tF0jP4tVzFXoSviqFn
5L2J3YpWOTIki56Znx/+59vJJTPoGbxc8I3Uryen0jO4/H6XSM/gy626HUfP
4HOtenuRnsHvWnUynJ7Bj5n8HJ7BS1p16Qg9g+fa/G89aaTgGXyBVQeO0jN4
tjU/D6Rn8KUXWlb3SA+nZ/CyO6YsfexxkZ7B+zfvO+3TRnH0jLz3XHqP8MHd
rtIz+ILH75X+Yn8aPYM3LlB+5Iq8yfTM3Ntax8XTM7g8FzH0DO5r9f9Iegav
bvXzIHoGr2Lyc3gG/8Xqt2vpGXyA1T930zP4h1Y/9Kdn8NPWuj6UnsF7qIQ3
KvtE0TP4r4XyNpv1MpaewZs9rXz3k20J9Iy890a1xb2GZqbTM/imJp9tndoy
hZ7B+/Tsef+bjQn0zJzZyn9i6Rlc7lcUPYPLfQmlZ3CpP/70DF7Z5OfwzDzc
8rlWwTO4/P7lS8/g4ieInsEXWXlgJD2Dl/Id/3f55TH0DB4fGnN8xph4egav
dOyO1/BCyfSMvPfVZyeTh01PpWdwv/mba06/nEjP4BPWLp7x3Ttx9AwuOfxF
es75OeH0DN7Juj6QnsE7WvwoPYPLv7NbwjN4D7mensG7y+fTM7i/tIeec+be
F+kZfJJ8X3oGPyV+6JntHGv5pGfkvRXFPz2Dx8n9omfwknJ/6Rnc9Ad6Bn8o
/YeewU9Jf6Nn8G7SP+kZvIbJz+EZ3E/6Pz3z78rzQs9spzxf9AwueWwsPYP3
leeXnsE3y/NOz+C3pD7QM/LeplJP6Blc/MTSM3g3qVf0DC65ZSg9g/eQekjP
4L2lftIz+BOptwqewaub/ByewWtIPadn8JNS/+kZvLOMF/QMbsYXegb/QMYj
egZfKOMXPYNHynhHz8h7+8n4SM/gpWU8pWfwJTL+0jO45GmB9Aw+S8Z3emau
vt6aD9AzeEWZP9Az+AmTn8MzuKzjwukZfIHMZ+gZXNatcfQMbuZL9AxeQeZX
9Aw+UuZj9AyeJPM3ekbemynzPXpmnizzQ3oGPyPzSXoG7yPzT3oG95H5Kj2D
/yrzWwXP4JVkPkzP4NVMfg7P4L4y36Zn5u0yP6dncDOfp2f+LiDzf3oG/0fW
C/QMLs9FJj2Dm/UIPSPvLSfrF3oGXyrrHXoGvyHrI3oGXyLrKXoG/1HWXwqe
wVfIeo2ewc36jp7BzXqQnsHnyvqRnsHNepOewc36lJ7BN8h6lp7BzfqXnsHN
epmewc/I+pqekfd+KOtxegafIet6egbfKfkAPYNLHWhPz8zJJa+gZ/AKknvQ
M7iH5Cf0DH7C5OfwzHxbcht6Br8vuRA9gzeWfImewedLTkXP4Cbvomfm9pKb
0TP4Ecnf6Bl53beShzhzOfVAchVn/qaqSz7jzNmUn+Q8ypGnqYWSFylHbqb6
SO6kHPmYuiH5FT2DtzD5uSPvUkslT1OOXEtdlFxOOfIrVVbyPeXIqdQnkhM6
8yhl8kZn7qRMbkmftRqH/7b0XrDuvvXQqdRqN+jzV/O7QdjIbzuVmWXnmX4l
aqaG7gvRret+ntg72s4tkZNPvrY2slz7q+y3HX/92p17RKgeManfrR8fpLEO
FzM57YCXJfMW2JBs5xjRt3e3rRymu66Iq7agXcJ/5Yc+jvywtmn/xtgiF9MH
RXDdh/b/nVCmxLqhmjnGKdP+6IKlV0zJd4J5Edr/+ZMufzUKXKPhE+1vVDWz
1NGeO+kT7b8w9HHJP/86aY9rc78KKPl3oB4c1GHekPt2/jZ28I2dffzdOu5r
zyLr29o58LMPOi5fNU3rDZsKNt5d38572xfu5/fZm0H6u1qRfSqk2Llu4S/z
1CkwI0gvcC2fvHqJnd/G3fbdvC8uSE9r23llwfp2frtxwKjXOzUM1qMv5T+8
MPkyfXY3udYdR/6WZtofO2x65tUlwfSJ9k96cOv9TcdP0ifaP7td1OAHJ3bQ
J9qfdHjqFN8na9k/0f66s6qMju17gj7R/qHtPR7+dkCzDmwy7T9fYPXZ7xZG
2PX2x3mrK9bw12OuX22T7mfnb08mZMwcctVfZx10x5Qtaueci7u1HrZx42nt
m9UycE/IFXouXnt725T+Z/T+iX+lVZyYSs/b8+Wq9Wbxs3rTn2efr3nTzjnf
ue5VdMCFs/qH5XPLFg6Jo+eAoODH674O0HnqzBybO/USPSeaXMvDkb+NMu0v
Fnf6eujg0/SM9vsVmXKyTYED9Iz2e43ecuO92jNYB9D+N976eVLPPkfpeZtp
/9nhPdtE/XOWntH+mT/tvzHzUBg9B5r2r55b++CKjy7Q833zO+G0/F/mG7bY
zt/mWc+Lr07f6FO7wVE7fytiPRe++lLNLzrtG5hGz5us+uMy+xSS6blO+Rcv
q35wUvu1ebR43ZF4evb/Y/C14Y9P6oMXj28vMtDOOTslnInYesRPNz95dU6+
PHbO+YnJtY478jf8zvmnVQeO0zPa39t63pfQM9tvPdd76RntL2f9butPz7VN
+2vVcBcbkRhCz2i/KqTipi06T8+dTfuPPPvkQkiZWHp+aN33Azpvv5rrTv9s
529Frft7SP+RedOnYbt0eq5r3cfD+u6EvTH779v5WxfruT6qr1q/7yfQ8xjr
+T1m6s9lem5nPafe+lurzlyg51jrefTWU616Yuec8SbX8nDkb49M+11Wv91A
z8VM+8tZ/XMrx7W3TftnWf3QRc9ov7zvEUzPo037H67/6OXww+foGe0vOD9J
Txlwyc7fTPtX+bzdLniRnXPms9qzSXtsHFL5bL0r9NzO+rtbdamaFVq8l2zn
b22sz9+hC/imDjq4ONGRJ+8073XH0fNcq1/t1les5+IiPW+w+s8e0//P0bOf
1U/26kNWP7dzzliTa3k48rfCpv3FLZ8rOX/oYNqfaHnzoWe23/LjduTJO7W8
JxZOz3NM+/0KP/hl6OJoet5o2j/2uV/SB+sv0/Mp0/4Z45/563t2zjnbav9n
umXmD/sCgu38zdvis3SDCb3CGk1Ioue+VnsW6+ovimUfKhtPz1HW9ct1fet9
whh6bmN935W6tHW/Iul5qPU5q7W8rxVCz+ut9q/ToZb/U478bbbJ33Llgucd
pv3yXughevY37R9t8TP03N+0v8eJJT3ffy2MntF+uT6KnluZ9ivVbvyRw7H0
PMy0Xz4ngZ43mPYPeiu0gXuAnXPuF64Mp+fP5XNUd/kceh4if1eZv0vP2dJO
8x5sFD1PkO+lzPei5/viwVx/hp7znrC8Kfm+h+j5ism1qjryt12m/fJcnKLn
sab95j7S8yDTfnPf6RntN/2Enieb9teQfkXPd037G0o/pOeHct+V6bf07JZ+
rqZLP6fnHfJcqM/kuaDnJfIcKfMc0fMoee7UVnnu6LmTPKdK6pibnvvIc61k
/44PPZeVOqBKSR2g51STa3k48rcA034ZT+38bbtpv6lL9LzYtN/UMXpG+03d
o+fOpv2mTtJzb9N+uV92zlnatL+a1GF6TpS6rUzdpmfx463yS52n5wkyLigz
LjjyiqNK6mEwPb8r446aLeMOPUt7DikzTtHzHzKuKV8Z1xzraB/l7cjfEkz7
v5Bxk547mvbLfP4CPaP9Zlx25BVHlRnH6fk90/57Mu7TcynT/ucyT6Dn3037
zbzCfk9A5iHKzEPo+azMW1RrmbfQ89syz1E1ZZ5Dz1tkXqQqyLyInl+XeZSK
lXkUPS+UeZcaJPMurqMfm/fLXso8jZ6TTa7l4cjfupj2N5N5ID2fMe0380Z7
vmHab+aZ9Iz2m3kpPaP9MTKPpWe0X54LO+d8ZNo/XebJ9Bwk82pl5tX03FDm
4crMw+l5p8zbVYDM2+m5pMzzVRmZ59PzV7IuUItkXUDPT2UdYfrtAXoeI+sO
VVTWHfTc0+Ratx35m9u0/zVZ19Az2m/WQfSM9pt1Ez2j/ftknUXPS037zbqM
ntF+s46j59Gm/WbdZ+dCsk5UkbJOpOd4WVeqIbKupOeisg5VdWQdSs8dZN2q
smXdSs8vZJ2rvpB1LnOhz2VdrMbLupier8g6Wl2SdfR/5W8+jvzNrHPVKFmn
0zPaL/NwO38rYtpvcgB6RvtlPp9Oz3+a9v8sOQM9o/0ml7B/HzHtHyQ5hv3e
i+QzKve6Fxd/OGjnbyYPUTGSh9CzyU9Uc8lPnHmRGiB5C/M3k8+oSMln6PmR
ec9U1nGanutI/qM2SP5Dz5v+n/wt3rS/s+RL9Iz3A/tLHkXPaP+nkl8pR16k
JkneRc9ov8nH6BntN3ma06fOlaeJ54tCNzX8J4KLZ94X5HWpdd9eVLSb/d4X
PCQL5+eYfEx1k3xPOT5fmb/rfN9MbXPvLnKw4U1n7qq3C+d7y8jfUrZlfjo0
8zrfgwWfvKZJ8V6/3eT7zOBtDi/3HXvB3hcP3nvyJ4XvT7L3xYNXW3H8aP7O
6Xw/H/y3Ha96V6uKfYUnyENPf/i0xTN7Xzx4nb2qwdFt9r548OikzBnZvbCv
MIQ8rXiuLxv8c5r7iNn+XxYVbRy4i/viwafs+svnQZ6tfJ8ZfFB468xVWaf4
PjP46+++ql2qTRi4HmdytmXzbxX7PjabPsErfdE6YMEN+zwH8Aff/PDJxgB7
/zv4wXoTR/Tsk0Gf4HM6BuYbWyeVPsF7DC92cMlrifTJvzvr4x5bU+397+Bp
VYdmTh55nj7B5/d5+dbeUsH0Cd46f5NU13If+gTv3fDBpft5JtIn+LQxq8rd
n3ScPsFf3v5KL3s7iD7BP/a7Prv3XJ7bQD4spNrGlaNj6XmJydMaDntwOiD4
Gj2DR37YcezxRPs8B/B3L9d9c93QTHoGf+3unDPHGqXTM3h87gsfny+STM/g
uytWfO3G9Th6Br8zNqnL37Mu0jP4d5tm/vhebe57VeBDNtQ/EuN9mp7BWz1L
nzq9+i56Bp+5tNPNCc228T188LRWJY48qu9Pz+DdJ459I3QM+yf5kRaRkSv9
oukZPG++0m3rfcV9r6ZuuPSV5k9HPziRpXPug3Dpae/0KJ0Vke3Y7+DS3/zQ
dPLvrTIc+x1cevD+FSWLl011nE/i0m9b+wISdM79Di790tpfwPNGyDdZ+xTO
O84ncWkZL7jvVYGfsfZN+Oic+x1c+peq/+6/GOk4n8SlA619HN6O/Q4u3dLz
wd73+wY59jv8pz1PenySa1ekY7+DS8/3GvD9zdmxjv0OLn24c/47UTu479X8
vnBMF2/0R42WXTLpGdyjWL+g4v72eQ7g17p3OjfAI52ewX1Grf/8i+dJ9Az+
lVWX4ugZ/IBVZ1hXybtb9SScnsFTrbpxmp7Bm1v1YSc9g8+x6sB27isBH2I9
7/70DP7twcu/T10ZRs/gd2a9e7xVRjQ9g7+1u0vjpevj6Bm837fPV41zJ9Hz
JpODff4oz7ytdTPoGTz63uAJbQ/a5zmANy/Uv6p/bvucAfDC1feExKUl0DO4
PC+x9Awu/Z/1llz20QTRM7j0Z296Bk+x+m0/egZvZfVPb3oGn2f1wyB6Bk99
x6+jd2QkPYNv+efbha2+Z70lv3iz+ZXqLvucAfA/o+82LXglhZ43Iq87WiLh
n6Lpjv3vXi0rmv3v8I/rH60Lbnijsd3/cX1Xs48e9wXXr4n4dFb5m0mOffRe
Le859tHj+pGZPhUaB9r7vnH9Wcf+elw/zuonFx377r3M/n173z2ul/5g7xPP
+fn2fnxcL/2BzxGvP+PYp4/rm1v9YYdj/75XS/yLfoLrpV5hvx729Xu1DHDs
68f1aVZ/8CfPeb293x/XX7D6Q5jjHAD6YX/D9bVdm36y9/3FOT7fPh8A13do
O7/Wv/sBc54bwPvL/onrp9euv/TffYI5zxNgf2O/xfW73sjI+nf/YM5zBtjf
2J+3mpxzmnw++yf4Tvkc9kPw9tJ+9jdw44H9Ctz4ZP8BT5H7wn4C3kzuL/sD
uOzrse87+BDpb7y/4EWk3/I+gpv+z/sFPkqeI94X8LXyPNI/eJjUAXoGfyLP
Oz1vMXmmqTP0DP5S6gw9g5t6Rc/g0p8j6Rnc1EN6BpfnhfWW3MPap9mP+yt5
vdRnegY39ZyewU39p2dwM17QM7gZX+gZ3IxH9AxuxjV6BjfjGj1/bnJLM27S
M7gZN+kZ3Iy/9Axuxmt6Bh8s4zs9g0+R+QA9g8v6Yic9g6fLfIOewc38hJ7B
Zd10kZ7Bl8r8h57BT8h8iZ7Bs2V+Rc/gJWWeRs/gZp7m6M8uZeaBjv7sUmYe
6OjPLrVR5pOO/uxSLWT+6ejPLnVG5quO/uxSva1+O1Ll7M8u5Zb5sKM/u0zd
CHL0Z5faLPNtR392mX4e6+jPLmXm847+7DL9P9XRn13KrBcc/dmlMmTd4ejP
LmXWHfSMHPWwrGvoGTyPrGvoGbybrI/oGTxF1lP0DD5F1l/0DN5G1mv0DD5U
1nf0DP69rAfpGfyurB/pGdysN+kZ3KxP6RncrGfpGdysf+kZ3Kyj6Rn8nKyj
HXXDrcw63VE33Mqs0x11w63Met9RN9zK5AOOuuFWJk9QOeuG29QHH5WzbriV
ySscdcOtTL7hqBtuZfIQR91wK5OfOOqGW5m8xVE33KbOZDjqhlvdlzzHUTfc
pv5kO+rGf9ojuZBy5HKqmORLzvxNDZQ8ypm/qfGSXznzN9Ve8i76BE+XfIw+
wS9Knkaf4HUlf6NPcJPX0Se4yfeUI39TJg+kT3CTHzrzN2XyRmf+pkxuSZ/g
UyS3VCH+nXb7TUxmrug62LfQ7WLZukDvg99MTLdzy6YTfj/5y2+Zev2lN7O6
rIkmL7is4+A80em66t9XjvhNDCVP2/rTX5X3JOveAzv81mWNi/yQ383tTefF
68Aur3us8QxmTjgz76Ba1UsG6PcrdO3n2TWKfFpMw3Hlb+7TSb+3bZ/ud5k8
b8KW59Vd69Sa4ZnDPLvaOWTA5VsNt0WfVL3OzZs5MT3NzjObxF8u/0GoKtSw
wiq/ifSgt+Zr9N2NZRdUFav98cwDZ9bceLrT0Ks63Dp/4CJ5Z3Vn2KeN0vSH
1vcKIy83qFmueUWS9DHrvviR353yze711y/rfEHXiq7xPM+8LqXd1qKl2qzT
bsvDZfKiGxp+Uq3qfjXH53CzdL9E8pBfBlav2SBAfWD5SbN5yHdRH38WoR6b
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
lT8Z3dvepwye23dV/scL7H3K4KfnFhj2Yoh9jiLf31v94FBxf/u8RPDa++Nf
1CqTxH0B4FcDTndRU+O43w286PPjiaVrurmvEDx266rqNxof5z5Zvvc4rPCl
p/encN8xeEj+13/d9+IQx2vwZUcetphZMEDh+/I9txoNRrfPss/xAy/ZrIxr
SCt7HzH4+V4vc0/dlMzvC7541LU+3zyzz/EDbzLn3I4d/WP5vcDrl/g7POPH
Lfxe4CPW7ux+dNtWvh8L/k+x3m/2+u0kvxf4mvT0ibNVCMdN8Jreb8R2XXZe
4XthPj/+j+pFA6ra+3bBqxUtNDR+XiK/F3hKtV8P3k29zO8FXnXyocd5JkWz
/Vx3XB1xs3vAcbYffFu58qcix7nZfvBrXkGBJ+dEsP3gM95/WnV50EXHOQMu
c46ove+V83xrX3+MznnOgEvHWucDROqc+/1denuJLw5XmxLq2O/v0g1v7Sn2
28kox/u9Lv3px/ebZP8dy/erMX+WfmLvAwWX/hCq8fngi8Z/83HDx/a+S/BC
O65mLqoYz/e0Mc8caX0vzfeTwX2yY5dXbZboOL/LC+dNOc7v8sL5VI7zu7xa
Tvyf53d54fwrx/ldXjgvy3F+F653nt/lhfO4dM5zurxwrpfjnC7kdc5zurxw
bpjjnC5c7zyni9/LcU4XPsd5TpcXzj1T8IZ54xstDi5I9LXP4wKP6P3jxfvF
7f2A4PJeln0eF9/rsOaTwfQGfsT6PdpFb+DVrPWpvS+Y78NYv8Pa+/vA8+VZ
NNOnqH2+Fri8h2CfrwVeJmla5bo97PO1wIcHrbxU8tdk+gE/cGj/wper01k/
Mb9tXal59y23Ljj2N+0x3yuMHsAbW8/XGXoAr2p93wP0AH7YOm/kK35f8P4r
RkU87HzJsS9pj5pq+bH32YEHlBsTHjkuid8XXLzZ51yB93qwsdam4xmsn5gn
f2z93hrE7wX+k1WHT+ic+1yOqa+ter6S3wt8rJX/2PvlwStYv0va+9fARw0d
NPGz5SmOfSjH1NGOU6v0rnuF7Qf/o8H3MU0vZqqc/l3qoXXey26Hf5fytzyv
VTn9u1Rf6/wWX4dPlyqyrVuZ/HvTHD5d6iPrvlx1+HSpD5vps+N/z2L9xPx2
Q3iLemrqIf5d8F+/WzYkJMw+hwF8wei3T0W8Z+9v4u/1Q/zfaJE3W+X07Fad
u9eav61yiMOPW/0x12dk4VLXuf8F84S3zX4H1FWMp8/letZVZx6IzwFPN+/5
o+6Bd5X28LkGn2LyQPxdvvcu34t/F3yheLD3zzrO60B7wM37D2wP+G/ime0B
3y73hfMW8A4mD8y5z8Wlzf11nC/k0qY/OM4XcmnTfxznC9nnXaD9fA/cvGee
81wglznX2tdx3rXLnEe91nGutUvfkv7vOBfIpcuaPBDfC+OyeY4c59Ic0+a5
4/cCN88pvxd4RXmuWTfAcb4Evi/4FfO+N74vuJwns9dxzswxPUHqDOsk+Gqp
S/y+fA9c6hifa/AHJg+EB8w3PpR6SA/g+aV+0gO4qbeO80z26OlSn+kBfIDU
c9Yl8FCTB8IP37s272lzP6DhUTJe0A/4mzK+0A+4zPfOOM4t2aMPyfhFP+At
Zbz7rzwQ5zzAG/IrM27SG7gZZ+kN3IzL9AZuxnF6Ay8g4z69gc+QeYJ9rpHh
YY7zHMBVjvecVzhywtkB8Izri8v8hPM38IMyn6FncMlLg+kZ/LnMl+gZPFzm
V47zNNZpMx/7f3PC+Y6ccLDJCfG9wJua93XxvcCDTE6Iz8F8wMy3eR/BzX3n
5/N9UfOeKj4ffLjM5+kNPNjkhPi7GMcLy7rAPqfC8MWyjmD/Af/V5IRoD7jZ
P8L2gC+QdQrbA15C1jW8j+DYd5/Tj0uNkPWRw49LvSvrKZ1z3uhSZv3l8OYy
7/cGOby5lPz/FyId3lzKrPsc80OX+lLWiWwn5gkzZV3JdoJnyzqU7QTfIetW
Po/gf8o6l+0H/9a8Z4j2Mz+U9TLbz/ceZX3N9oN7yHqczwv4OFm/83kBx37w
nP3HrWpJDuDoP261VnIDR/9xq9yvWzmDzjnvdas5kks45r1uVU5yDJWzv7lN
fzvv6G9u9YHkIY7+5lYLJT9x9De3ipS8xTFPdpv+me6YJ7vVEMlz6AE5WOr/
zsHUCsmFnDmYipAcyZmDqXySOylHDqYiJadSjhxMFZBcSzlyMLXesf8a3Oy3
VY7z+lSG5GbKkZupWpKzKUdupiZLLqccuZnylxxPOXIz9Zrkfs7cTJmc0OmT
5x869k1rs59a/R/GdsoS
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
5+d4Ce68qPozT0n6JLl8geNjuXVJ2VQRfHhCOOUvz5qEIu/7/HUR9Bxd5I1x
KvUbLet/uXoQJy/Nf1W8+kaRdzeT5N1fjKivyW0JvdeXOJHul5mUJ35jgKk+
cOu/mgEfzfh9VR66WMJLcONwPPYf/ouB387yAf5+RTT02UszEbjj9ACMn3Pe
X/Y9VY635PKda4/fUn5UnuL5alceYZyGDG/JnVMuPlHKTzYLv07nd/wKyPfK
eglcxT93FvzzHME/h5+m+n6tUcSfr7s8TNYecrzxFsk4oWIcLm7h7jFx3+vC
vG/D8YQcXzfffwzG6T+P7r8MjugBPfy+nvhk+7P0uw9ekL/g+rKk41cV4+tI
5IOEPMencfUs7n0Azj9y9Tjp+0uquCi1vg/w8t0pv3AMOw+c61Ma4EK8sXGL
lZR/LWwley6U3tdTys+XVR6tNN9Rej9Rab7J8hVMvePXKOo3exNIefdQ42CS
f/qB6rnLOgJvbEP1zYvZnpDXP03fZdmI7La6XSfinUxoPywTvPTdpBjgDkHE
Sz9pTfHS7BKKz6PNKG/t9GtL6N9bMx3zPPP0MPDgyGeQX3VkKuaT25/u/2bf
WEf3xxm/wMUD95g6BcfPnDpK/dimbYnPrHMoUdYPGkp4iQzBS0jvuduLe+5c
PsjF/1x+xN0XC3o4FuN7JVLeNGEdnfc0ST/DeNHPwJ0XaV1edZ9rnsQeDhL2
kLPPm0X/UgNJ/xJ3Xrh3t4ZI3hF6LN4R8nxrRrzWke6kT1uKl6T1phhRb1o6
tS7ipaXz8oFbVTX74f0gfTEf6Xk/J84750c4v8nVZ7l7Q9WKp9J85h8BXut6
c9n7GnqCF9on4YXOS+qG2/+hbrhB3MfXFvfxO4r7+NUGvgOubkjxascXJ36o
Z1Vdj6uv7RL1tc6ivnbwJ+trRm0ciLfxJp5ZfzLdhzp4jd4N0LlEfPX0d7Re
XH2He9/+ydwhpLeSxcCb3rGFvNI6FMcvmeSUwzh+E6nOq7qXwfE50rqS6p4C
V2/i5iOtE4WIOlElCb9hIfgNaXyyQsQnXD/5SMl5HCPOI+dPp12tALzDVOIB
oqtoyd730ZHUd0aJ+g5XD/rE3Bfj6jKqdzAeincwHol3MB7HTqF80Eib5rm5
nmw/JNfvvfkYnZeQ5WT/zXcFQN6xCfGKvw0l+1xUP0Q2P+XiEClPZSXWscEz
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
ilw9neOd/gcZEv10
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-0.7190081555214578, 
   0.7190081555214578}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.618047870751969*^9, 3.618060146434045*^9, 
  3.6181633464485693`*^9, 3.6181642364360695`*^9, 3.6181643073235693`*^9, 
  3.6181652505923195`*^9, 3.6181653184285693`*^9, 3.6181654765735693`*^9, 
  3.618166155232319*^9, 3.6181662970108194`*^9, 3.618166362627569*^9, 
  3.618166744069569*^9, 3.6181674267278194`*^9, 3.618167511936819*^9, 
  3.618167594688819*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiments with \[OpenCurlyDoubleQuote]Reliable...\
\[CloseCurlyDoubleQuote] Paper Formula", "Section",
 CellChangeTimes->{{3.618160959152069*^9, 3.618160984829569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9, 3.6178019897616196`*^9, 3.618166324489569*^9, 
   3.6181663909538193`*^9, 3.618166519504569*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"making xx global\"\>"], "Print",
 CellChangeTimes->{3.6181674977085695`*^9, 3.618167583535569*^9}],

Cell[BoxData["\<\"beginning private defs\"\>"], "Print",
 CellChangeTimes->{3.6181674977085695`*^9, 3.618167583541819*^9}],

Cell[BoxData["\<\"why not numbers?\"\>"], "Print",
 CellChangeTimes->{3.6181674977085695`*^9, 3.618167583551819*^9}],

Cell[BoxData["\<\"why eval of shock t+1?\"\>"], "Print",
 CellChangeTimes->{3.6181674977085695`*^9, 3.618167583588069*^9}],

Cell[BoxData["\<\"done reading ProjectionInterface\"\>"], "Print",
 CellChangeTimes->{3.6181674977085695`*^9, 3.618167583598069*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6180478713919687`*^9, 3.61806014974806*^9, 
  3.618163346568569*^9, 3.6181666968058195`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"erfModEqns", "=", 
  RowBox[{"JavaNew", "[", "\"\<erfMod\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.61806031525755*^9, 3.6180603234682064`*^9}, {
  3.618060416971936*^9, 3.6180604203222046`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Java", "::", "excptn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A Java exception occurred: \
\[NoBreak]\\!\\(\\\"java.lang.ClassNotFoundException: erfMod\\\\n\\\\tat \
java.net.URLClassLoader$1.run(Unknown Source)\\\\n\\\\tat \
java.net.URLClassLoader$1.run(Unknown Source)\\\\n\\\\tat \
java.security.AccessController.doPrivileged(Native Method)\\\\n\\\\tat \
java.net.URLClassLoader.findClass(Unknown Source)\\\\n\\\\tat \
java.lang.ClassLoader.loadClass(Unknown Source)\\\\n\\\\tat \
java.lang.ClassLoader.loadClass(Unknown Source)\\\\n\\\\tat \
java.lang.Class.forName0(Native Method)\\\\n\\\\tat \
java.lang.Class.forName(Unknown Source)\\\"\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6181633494460692`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadJavaClass", "::", "fail"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Java failed to load class \
\[NoBreak]\\!\\(\\\"erfMod\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:JLink/ref/LoadJavaClass\\\", ButtonNote -> \
\\\"JLink`LoadJavaClass::fail\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6181633498648195`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.618060326300933*^9, 3.6180604215810547`*^9, 
  3.6181633498685694`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simp", "=", 
   RowBox[{
   "JavaNew", "[", 
    "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"erfSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"erfStateVar", ",", "erfNonStateVar", ",", "erfTheShock"}], 
     "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<qq\>\"", ",", "\"\<ru\>\""}], "}"}], ",", 
      RowBox[{"{", "\"\<rr\>\"", "}"}], ",", 
      RowBox[{"{", "\"\<uu$Shock\>\"", "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"erfModParams", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "adj", ",", "betap", ",", "phip", ",", "rhop", ",", "rho$ru", ",", 
         "sigmap"}], "}"}], "//.", "erfSubs"}], "//", "N"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"erfModEqns", "[", 
     RowBox[{"updateParams", "[", "erfModParams", "]"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "erfSubs"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"erfShockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"erfBasis", "=", 
    RowBox[{"GenerateBasis", "[", 
     RowBox[{"erfStateVar", ",", 
      RowBox[{"polyRange", "//.", "erfSubs"}], ",", "initPower", ",", 
      "theShock", ",", 
      RowBox[{"theMean", "//.", "erfSubs"}], ",", 
      RowBox[{
       RowBox[{"{", "sigma$u", "}"}], "//.", "erfSubs"}], ",", 
      RowBox[{"integOrder", "//.", "erfSubs"}], ",", "shockPower", ",", 
      "nonStateVar"}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erfMat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Random", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{
        RowBox[{"Length", "[", "erfStateVar", "]"}], "+", 
        RowBox[{"Length", "[", "erfNonStateVar", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"jj", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res1$1$1", "=", 
   RowBox[{"ComputeInitialCollocationWeights", "[", 
    RowBox[{"erfBasis", ",", "erfMat", ",", "erfModEqns", ",", "simp"}], 
    "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res1$1$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res1$1$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res1$1$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.618060388182133*^9, 3.6180603881858835`*^9}, 
   3.6180604673784685`*^9, {3.6180605404105606`*^9, 3.6180605613334846`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ComputeInitialCollocationWeights", "[", 
     RowBox[{
      InterpretationBox[
       RowBox[{"\[LeftGuillemet]", 
        RowBox[{"JavaObject", "[", 
         RowBox[{
         "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
          "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], 
         "]"}], "\[RightGuillemet]"}],
       JLink`Objects`vm2`JavaObject26449537665073153], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.9664760177870328`", ",", "0.0259652129029712`", ",", 
          "0.3535184256104845`", ",", "0.08622417473735201`", ",", 
          "0.574395693574757`", ",", "0.11325845950046978`", ",", 
          "0.6521525339109079`", ",", "0.4745703888958763`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.7210487573911574`", ",", "0.77524492364937`", ",", 
          "0.34637048718720004`", ",", "0.22275192856261897`", ",", 
          "0.6777047425003675`", ",", "0.487779520989696`", ",", 
          "0.8873891489351251`", ",", "0.27874612866489157`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.36697446331609335`", ",", "0.12946369252892165`", ",", 
          "0.20375013431320416`", ",", "0.3570215209140204`", ",", 
          "0.3104240047027256`", ",", "0.03715865485656954`", ",", 
          "0.015246346766916498`", ",", "0.828678726801327`"}], "}"}]}], 
       "}"}], ",", "$Failed", ",", 
      InterpretationBox[
       RowBox[{"\[LeftGuillemet]", 
        RowBox[{"JavaObject", "[", 
         RowBox[{
         "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
          "ProjectionMethodToolsJava", ".", "SimpleFindZeroStrategy"}], "]"}],
         "\[RightGuillemet]"}],
       JLink`Objects`vm2`JavaObject32293939880919041]}], "]"}], "[", 
    RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", 
   RowBox[{"polys1$1$1", "=", 
    RowBox[{"Chop", "[", 
     RowBox[{"genPolys", "[", 
      RowBox[{
       RowBox[{"res1$1$1", "[", 
        RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
       RowBox[{"res1$1$1", "[", 
        RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "]"}]}], 
   ",", "\<\"ComputeInitialCollocationWeights did not converge\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.6180603894634857`*^9, 3.6180604247963123`*^9, {3.6180604682410374`*^9, 
   3.618060472960165*^9}, 3.6180608146927567`*^9, 3.618163350006069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"polys1$1$1", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", ".2"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618060872189856*^9, 3.6180610057092867`*^9}, {
  3.61806144377633*^9, 3.618061444790161*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
sXSmBq8TKV9ges5UxptxeA7/z9J4fZSB7y/l8FyNq8UPrwd5SDIeORlv5of+
3gdGz9kcHoW/6mLpGG56u7IZ5fAc/r2X8biRweA55RCf2uvT+GGcWvz09cl4
s/wt/b0wTi1+ld+L/8+13j9fhXp1mlfvZ1NhjVCvTvPqz3d4fxPq1Wlefdn9
WeuFenWaVy/8qvRPoV6d5tXPVn64SahXp3n16Qd9Lc5ivbqUVz/wvmLBvveC
zPLqHsPnFMmO9DXLq/vOWF6pRayXWV69coOqlluKupnl1bWatX2vrL9olle3
sMmY9zhiDf2ccm39Txcq3HWin1N+VmMTItSroy/Ra1j2N+t5TZLM8upTazl6
CvXqNK/+ddjgruX7xpvl1Q9s+fJYqFenefXarueZUK9O8+oL/A5tE+rVaV79
hFXaTqleXcqr++xst1eoV6d59biIUtXa23ia5dWbHHartXuvi1lePXfgJIeZ
30+b5dWnjqt1ymnyHkbz6i4jnpwS6tVpXn3HbM8AoV4dPAOvHrNvilCvDp7B
36tHe9cL9eo0r74hs81PoV6d5tXL1Xi+SahXp3n1ISeL5/svL8osr746d2JB
x+phZnn1y+PuFhncPtAsrx7uma/EF6xXl/LqWR2dLbvGPzTLq2/57NDPstId
s7y67cfAa1vyjpnl1W0LOnXr2NSe0bz6lo17jwj16jSvvuBHLV+hXp3m1Uue
e5wi1KuDZ+D6LvOThHp18Iyf+53Vngj16jSvfuK+LxPq1WlefWz4s21CvTrN
q29r3mSXUK9O8+q3Dm7YK9Sr07x6wvvIA0K9Os2r57/cq3ZvrFeX8uq3giOH
NKly0yyvPrz9tAWdihw0y6tbTOzaskbDU4zm1W2v2+wT6tVpXn2M/c4nQr06
zavnm5szQahXp3n1Z4XP2wr16uAZ+N2rf48W6tXBM/ioPvy6RTP3aLO8+tR8
Vwvm2xppllffP/3fIjfOhJjl1T38BpYY5eFvllf3GWhdM/cSN8urVyqZUm/Q
s/tmefW4swVGW2O9upRXzzEeN7aZ5dUfusfUzqt7ntG8+qnMQ0+FenWaV+/T
6K2nUK9O8+r/tqmXJNSr07x6RLQmQahXp3l1xyWbYoV6dfAM/EmRygahXh08
w9/9T4dlu4R6dZpXP3bSf69Qr07z6j65le2EenWaV483/r1P0BfwxqtWNxxh
e4/TvPqPJdYT+9W4ymlefep44Tg5Fz0DdzN6vmyWV99pPC+4meXVWz4Z/kCo
V6d59eyfo22FenWaV/c1vr/BZnn1U11cRwj16jSv3nFhy4ZCvTp4Bu7YdddV
oV4dPMPfdz78SAlXy2BO8+ohzfWlx3f04zSvbqi50KrwFW9O8+rddeWa2ia6
oWfgVn0XzrCpeZnTvHrtGUc/r9kyxyyvvsc1b6tUry7l1ZdUnuAp1KvTvLql
jYe7UK9O8+rpwXsShHp1mld/NKdDrFCvTvPqBwvro4R6dZpXd4sZMFuoV6d5
9ZqXL+iFenXwDHzv0q/ThXp1XK+If0fMdNfDQr06zat/312kUan6Xpzm1UcM
utViynhXTvPqZ9v0iffvfp6s61y8G+0ZUfvVs61mefWpKaHrhHp1mlefcMvH
Q6pXl/LqRcR6dZpXTzrqZSPUq9O8+t0280YI9eo0r74zuvJQoV6d5tWbW0+/
KtSr07z6qSKP6gn16jSvXuBZmctCvTp4Br7YaXbtZcUS0TPEW/rjpaYVnR5x
mlcPmms3M9zjLqd59VdJt9N1vU5xmlff0XFTgTtRdmZ59U7FTiwX6tVpXn1A
rwbuQr06zat/4z0SpHp1Ka8eNTk7RqhXp3n1qz/PRAn16jSvvu7swHChXp3m
1Z3PrdcL9eo0r15hYcx0oV6d5tU3dW2cKtSr07z6mxJbpgj16uAZ+OjkhBSh
Xh08Q1xZXX3nJz28xWlevdX2Kh9/9LPnNK++ZvnoT57px8zy6mWN5/07Znn1
dtr9d4V6dZpXz9m33EaoV6d59YDGdUZI9epSXv2Mcb0RZpZXXzpnwyChXp3m
1esVOF5PqFenefWDMW8vCfXqNK+ee0lY5zwzy6vPXOpwXqhXp3n1yB45lqe7
PDfLq3cu2/+MUK8OnvHzNDZ/vjYn9nCaV28U9lZ//uVps7z6ilYn3IR6dZpX
/2vRh5tCvTrNq2eMdooR6tVpXt3z86gooV6d5tUPH80XLtWrS3n1tg5j9UK9
Os2rn597Z7pQr07z6kWtC6UK9eo0r76iyMQpQr06zau/SHBLEerVaV59oFOx
iUK9Os2r31s5NUmoVwfPGP/lCbeEenXwDL9nSbme84V6dZpXnx74/Y5Qr07z
6iULjnUW6tVpXj25duJwoV6d5tVd+a4hQr06zavvmtxukFCvTvPqd34tqSfV
q0t59WqRQZeEenWaV99x7q/aFR3jzfLq2QtWnhfq1WlefXzXcMv5e5LM8ur+
JeqdEerVaV69ZfLaar4LzfPqQ0YbwoR6dfAMvMDjCvuFenXwDK83dOK0m0K9
Os2r5zp4XxHq1WlePfptiSihXp3m1Z32PQoT6tVpXn1D4znBQr06zas3nrlv
ulCvTvPqx9qm6qR6dSmv/iu/9RShXp3m1f+JOZgi1KvTvHrcpYwJQr06zauz
pV2ThHp1mle/0eOorVCvTvPqxYuufCvUq9O8us/iizeEenXwDHzVs7B5Qr06
eIb/p29Z95JQr07z6kEe3YcI9eo0r352dNZAoV6d5tWXGq9/I83y6ldCHC8J
9eo0r17a4b9aQr06zauvnTvivFSvLuXV9cbrbq1ZXn1YkbzTQr06zat7Joyu
dtQzxSyvXn5Uwt9CvTrNqwcbr/dTzfLqG+s2DxXq1Wlevc0+271CvTp4Bm74
sH2AUK8OnuHffbcuDRPq1Wle/WTtWsFCvTrNqy/g4f5CvTrNq9du+Vgn1KvT
vPqBXxWmCPXqNK/+NeKfFKFenebVp517OkGqV5fy6uELqiYJ9eo0r96x62Jb
oV6d5tWjC82YL9Sr07z6roUHmwj16jSv3jX+0RuhXp3m1T90zXAW6tVpXt3p
Stm5Qr06PIfHiSW7Nmw6yzyvvufSLluhXh38A+9ezK3K+aPJZnn1w2d29xfq
1eF1gc/t3L6PUK9O8+p9LW0PCPXq8PrAkwbnKy3Uq9O8+oC/B2mFenWaV99m
69RfqFenefUfXt07bvRLNsur+7e+Fi7Uq9O8evMRwQOFenWcN+L/q5v38oFQ
r07z6uemr7km1Kub3i4pr16xw6KiQr06zasXjNLfFOrV4Tk8xjT12yzUq0N8
8P/WVC69W6hXh3Hw763y/Rok1KvTvPqaN2f3CfXq8Bz+n0+hg++FenWaV09Y
HFe50dTnZnn1LYUCdgn16jAOXmfonEdZQr06iYctbrP0gVSvnoX3+e0anZiv
QmGt+PoGrJMfYvXf9Qb3JA7ji00d8sk7NV7kehyvabHojOZQAnIYf+Cfp/rZ
j+F7AR2OH9kp7cC6+XHIYXzple0TyjpEi1yL4+N7j9lk1T8GOd4Hkzfy0Mo3
kSLX4PixQ0MXR9bVIIfxDSp2WRZyMVTkPjje3XWDb86PMOQwvmnjeqNr2kL+
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
L3hrw9VC9W4Eo094bN54xqBylQPQp8mzjjf+p/ahvK1P0afJcyofNMbrWnKy
F/psY/Scyntq27d+6H4PfZo8POd7YmuPTzh1FI+Ho4x/bwp/NqtGdTdLZ/QZ
apw/L/jnVke3b+jgjj57ep6ZnZf3kv+6U/W/C5M90afp9XV8W+VhD6f5+aBP
k+dUviv+yPLlY/3Rp8lzKt97LK7FzrdS/q2uZ8W2DxbGcpeU6NLLm4eiz9NG
z3H81l+HRk1zCESf5Y2e47nzlMGnhhXyQ48mzwl8QM8KnuvTnqBPeGR+dr1t
PR8Qn4m8Y9+iEe3sXcj8TOKTDxa6XTfuMvo0zcNY/rlvl6XPW7qgT5OHOP7L
z+d13tgH6NPkOZ4X7tVvcr0tT9CnyXMCL6qb9U+9OFzXiZ6f8RIXnOu3nxuI
Ph/tT3A48jvOMpPf6vr9CEGfrSeVi6j3O87yNVuctT0cgT7HRLvnDbT35w1G
r7l0YY8/+uy3ovHsRcmBvN6J9q/sPvugzw5VLoTbW4Xw7ncyRuf6eKJPK+P7
EsY7tJr6Mu6UO3o0+Y/g42fej56e6ow+4fGo8b6D4+jT5DmatztfsLftt414
vjZ58+eFx2b/vX2tF/o0+QnkezI7TYsd/hR9PjR6COEHrm+wzND7o0+nFoMt
PH7HeWQuf/Z1TTD6PB79dHbS7ziPN8x/tGipcPS5Y0XHiF95UfzUqz5Dq1+K
Qp+exteP5pExfgVPnJbybz2WfwhpNtCed3HoNvdU0GP0Oblv1K+GAy/zdjUe
flhxwQN9/hV99dSjhTe5bedZXy9n30GfC1p0d6g/0I337z6+2MTzF9HnAOP7
4sHvlVuX5rxkGXo0+ffi95evvjSj4Clc/8Bj5v3Ax2tG3kCfS6rcblvvd5wl
7w2vcHwaXoeK/DIvt/xopNOXQPTZyHF7xL3fcVZqk7D34d5Q9Gka78arf6ja
N7RmJPocOumUxYLfcZbRNrfI1mrQZ3Pj63jxIx2jUr5ejkGfJd8sOv0zj/MK
J5d45S2Q8m8iZ4337LP7sNENfYqvw3pXLN7i7E0n9DnE9HvZ3Fa/tt7wOIw+
xTjZikMtXQJjd+N6Uvy7WPbLyg7Wfa/gelL0wPLelfXjg1zRp+iNFVlwolP6
sofoEx6Pd72xZW5hKV8kvi/s9PesLutOh6NP8X1kw1JOfu9bBde9THzfWXTX
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
fzZxZjqvYR0jF1+HGU8jnfE+We5u+r3MFL9UnyDGyUz+8b5R8TriJjP5j0DP
ogdm8h+GnkVvzOQ/FD3Dz+k/5jl9WKQifvg+14tdV8QP3/eZxS9+f+TGfBTx
61m6GP9qRfwGJs5D1kIRfxZzE+PPUMSfxfuZ5rmYl5Pyb+LnQvSP9XviejhC
9B+HnsXPHdthPP5L9w2Jn1NmPOxVkupAxM8162J8IamuRjwOsMrG/xBN5zP7
SPKc4nFG5FL+DR4jFPFrxT5GEaJ/jF98X2j8eva3GP9URfwGJh5XWVdF/Fms
kRh/VUX8WfyQ6bgt5uWwTo+Lx3nRfyJ6Fs8Lon+sWxO9JYj+sV5QXL/FMyN2
xjou0Wec6F+6P0s8rzHj8O0JxHOM6F/Kc4rnTZEnol/xPMs+KOKX6hgjlPGL
fZNo/HrxfYkX/T9Dz+I6QfQv3ZedIsbfVRF/ljg/U1knI8d6M3EepjJjmB+w
Pg3WaWL8KehZXBeJ/rFeS/T/Qoz/OXoW112i/2Qyn5+L/pPRs7jeEP1LeU5x
HSjyF8Rzquhfut9QJX58jFDErxf90/gNTFz3iv6letEGYvxTFfFDnvMVM13f
Sfk3cR0u7q8h5d/EdTszLqNyMT64TmHGl7mrQ8/idYF4Xa9Dz+J1BDO+fE0d
ehavO0T/L8l8ThP9vyTz+RW7q4gf1s8ZpsvQnlL+beCf42d/jl/KDynjh3oY
Gj/UY6SJ/mmeM1PMy+H9jKL/TNF/OnoWr0NF/+noWbxuFeNPQ8/ida4Yfxp6
Fq+L2Sxj/GnoWbyOZrHG+NPQs3g9yHqSPKd4nS7ydPQsXteL/tPR88I/x8/+
HD9cp9D4pXrI2Yr4ob7otehfqoc08fcil/JvYp83sp+Lnh815U/E+DPQs9gn
T5w/GejZNH/eifFLeU4xHyXGL+U5Tf7fiv6lPKeY3xD9S3nOlD/GD/VFNH4t
g/hdlPGzP8evZ4PE+Pcr4jew+n+MH33yMop8F+Q/3/OShBcU/99CRb4rS1yH
vGUzFR6kOsnZhIuvL+ZXX5HxanlCszo0rAMc8m1hE3lfPhjvYT0yUd6XD8Zr
CqTVeCzrywfjO/UODJX35YPxo0qPKTVH1pcPxnsN6ewt78sH4+Orhv6S9+WD
8d1s79yW9+WD8Xf7bdDJ+/LBeJ/pdS/I+/Jhv9sJM/3kfflg/M6kZnU+yPry
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
vMhvI+t/CHx6Havim2X9D4HXsfyn3A1Z/0PgLyu7VP1T/8M3pP+hmJfmxcp1
3y/vfwh1ko3qTr0n738IdYb9225Lkfc/hDrJ2X2uFO5mbV4nWeLmgSny/odQ
JzkwQuMq9T+U6iR3k7wi1El+GvbBg8v6IkKd5JJjayeclfVFhDrJZNcCFh9l
fREh/hsrG9mPkfVFhDpJn7Wn+tjL+iJCneT62ccH+sv6IkKdZKGwm1f+l76I
4vcXvNe791/lfRGhznD6r3K15X0Rxe9HeL5ac+3lfRGhTrJHz1t6eV9E0+k3
k2+akdNhO/ZFlOokvUjeFeokJ29o9VTeLxHqJB8Y95OS+iVCnaRPk6IjD8v6
JUL8E13v790n65cIdZJT0ieOeyPrlwh1kh2aNyh6StYvEeokPQ3nZnjJ+iVC
nWStE11ey/slQp1k92uTyv4v/RLF7+94rn3vAHm/RPH7Pt7h/u4qsbJ+ieL3
g9y0r5nUL1H8PpHP+VRrjdQvUaqTTCd5Tg8xfivHJ82DZH0Uk8X4exj3VZT6
KEKd5GfrvNujZH0UIf6tFd7b5cj6KEKdZJ++iy/XkPVRhDrJUIvXP7vL+ihC
nWTDyXebyfsoQp3kMt8To+R9FKFO0lWfdFXeRxHqJN8XrpVb93/oo2iKX8fn
/33trLyPosl/Kh9l3N9T6qMIdZLRtaZsk/ooSnWSp0me00qMv+vNPtfjZP0V
F4rxOxr3F5b6K3qI8cdd6pG6XtZfEeokbSc97CrvrwjxLypZdbC8vyLUSbbK
jP22TNZfEeokPwUdurZD1l8R6iSdbD20y2T9FaFO8tW6/5rI+ytCnWS9c903
yvsrQp2k76ZCF/6X/oomz4nc27jPtQuZz0l82amu1ephf0WpTtKJ5DmTxfhn
G49XUt9FKzF+w6O96+V9FxeK8S9Yme9ZXVnfRQ8x/tXG3yv1XYQ6yU6rcgPb
yfouQp3kj1H3Vsj7LkKd5JPWS+rK+y5CneTz7PhJ8r6LUCdZvVx1F3nfRaiT
dJntXVDedxHqJJsZ55XUdxHqJIe/dDjzp76Lx0jfRZP/aK43nneg76JUJ+lP
8pxWYvw/o2Mqyfsxeojx+/S7ai3vxwh1ktuspr3Sy/oxQp1k7/w1j8n7MUKd
ZEGdtqe8HyPUSQY9Pva+mqwfI9RJBgxxjjwu68cIdZK1i78NOCnrxwh1kmeH
Lv9H3o8R6iRbNfi3prwfI9RJNr5bZM4EWT9GqJMs+/TplquyfoxQJxm88U6p
mf9vP0apTnItyXNCnWRoTEgheZ9GqJM84LLTXd6nEeokhxzsOU3epxHqJMss
+Fla3qcR6iQNVya+eCfr0wh1kqFHO9+X92mEOsmb26oekPdphDrJvR2aaHJk
fRqhTrL415lvTsv6NEKdZP5fmTOdZX0aoU6yqu51uVBZn0aokyy5eF6XTrI+
jVAnWWx5s2/yPo1QJ3mgxRUbqU+j9FP2j3lOH3aC9G+EOsmx1We3kPdvhDrJ
kj/KZsv7N0Kd5LvMbH95/0aok4xMDD8j798IdZIuwTeWyfs3uonxH3mwZ6C8
fyPUSQbvvzqvoax/I9RJWiQPTf85WOrfCHWSE4dXXfZJ1r8R6iTbX/i+uIes
fyPUSf61f+VRef9G8XPNLvV7ly3v3ygeB1j5rW3qS/0bpTrJOJLnFI8zbLrT
vu//S19HqJP82GrrTXlfR6iTjDWef6W+jlAnea90t3Hyvo5QJ3n8Z/VW8r6O
UCe5Oiu3sLyvI9RJHvOdtHCFrK8j1EmOsD3/zmK91NcR6iRvv+4XI+/rKJ5H
WGvj+krq6yied9j4lmf6yPs6iucpZllq7Ed5X0fxvMZeZJa/KPV1lOokL5I8
p3jeZJX3tPeS93sUz7Ps31UV7P+Xfo9QJ/nIJorJ+z1CnaRD79uV5f0eoU5y
fZv979rK+j1CneTEOvP85f0eoU5yzZ5WdYvK+j1CnaRP3qEFDWX9HsV1Duvj
VSR4kKzfI9RJzvTi5R7I+j2K6yjWwGE9l/d7FNdd7PWqjgvl/R7FdRq7bvOp
ehb2e5TqJNuTPCfUSf7wvrpG3gdSXDey5ze3D5P3gYT4n5ye1uB/6QMJdZKb
19SMk/eBhDrJaXO+35D3gYQ6yV5jErfK+0BCnWRslcTCN2V9IKFO8ua8Rq3n
yPpAQp3kov76F/I+kOI6n7Wqf/GAvA8k1El+zD+x81lZH0jxOoK566oY5H0g
xesO1vnlm1CpD6RUJ1mD5DnF6xqW9qFSB3l/SPE6iPnqPpXUy/pDitdNzDEq
Ol3eHxLi3/nkruf/0h8S6iTrRba/J+8PCXWSxwKu1JL3h4Q6yXtfBv+S94eE
OslVsUVvyftDQp2ktav/uMGy/pBQZ/j94JYik2X9IaFOcnKH80ny/pBQJ8nq
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
+6NqGS9+Zl2L85H0PMj+mxh43/dpND0PsmPtWItF7eLoeZC1KPnQqdq1BHoe
ZMHprWoFVEuk50E23ev6ySUHkul5kP2wr1vWMi+FngfZ3/eH+Kdb6+i6js1s
Fb919SNn4lnHRkZ2yl10eAcj6zp2+mvE5XkNPYhnHSs4WljHcuJZxzzGDXKf
/sKfeNaxzKJdrzzyCyGedazmw+bHy16PJJ517Lpx/RxNPOtY7/17urzsFEc8
61jK9Hz39t1KoOs6trrzumYdaiXSdR0rZ1y3J9N1Hbv5Zn5Nu4Iv6LqOXZ76
cdDZLjq6rmOLw1sU+bgilV6nsLEjPj1r3s2DeNazFxm1svL0zsSznunGvn3+
roAP8axnFYukRPR5408869kAj8gnZyJDiGc92zDL5+5H90jiWc9si4/TXAmP
Jp717GNq9IDhLI541rMDjwY9/e6aQDzrWYMjfp2uWSXS6xTmM7er28iTyfQ6
hY3vcb/Jr2Iv6HUK+6/EyWib7jp6ncKCVsfa3VidSq9T2LH0MoMsXNPodTfr
XmjTv1GlfYhng7BvTqmPIz2IZwNbdm+xocFnf+LZwK7NmJa4MTGEeDawpPKj
QuOeRBLPBlZk2uWUSjHRxLOBXbKuMeZpnzji2cC6lD0WueBBAvFsYPGvS/av
2iSReDawxXwn9zubTDwbWLGTvzouLvOCXnezkQ+62JbqqaPX3eyvemsqzliX
Sq+7WdbBe5qH7mn0ups9/C/nQOl36cRzFouelr9AsTx/4jOLFSr3+dMUfQjx
mcU6+WToPUIiic8s5vHgbeauZ9HEZxYbfmjmjDaD4ojPLJY5OyU5xTuB+Mxi
O7qPsdnbMpH4zGJ/VY4Kb3c5mfjMYg/f9e+rq/iC+Mxi16frXgT01hGfWWxV
pOWZGhtTaV6I9e48buxSjzSaF2JlnY5XCHqfTnxmsZRyMVGWjTNgXx/4u/iI
Ro5v7r2Lx31kgT8Y3mRpsfWxuB8q8JprXXMnFY3GfT2BF+q91GJW0wjcnxJ4
zNHNZUr3C8Z9FoGf09v99WCqH+5vB/yfkqPXlm/mjvu0AS88Mb1FiO9l3G8M
+NRqC86OHDke9nNFfrrmDdvsOVdg31zk7Rdal776yx33xQF+PqxGzsiQx7C/
FHyO+L6Co0f3GhHNy4r7vwJ/Oe7ho+aPI3AfU+C3bgQGJzwLxv04ga/5Hvds
80c/PlXcVxL4nlOBESOqPxE9SP1dsq4fKlBo4BzcRw14S1+75WG1L8O+tsi3
sBtnKiS7wf7ByA3n7DY+veoN+zEjb7Tp4d2O1n7ivlkv4PjMdz0tte3CvBDc
hxX4qPKWRwbs8OfiPnzIuwXa9EjvxnltcV9M4Alzlk5uv/w+7vcGPLScZeNt
D1xhv17kbZbkFW+1zQv2RUY+ZM7Sr4ucfMW/Kxv5tsozXgfsDxLjhzpTHc9d
u3ScZysf3N8U+P7jeZrAEx58kbhPJ/BBi6xftD51HfdLA75seJNuThV9Yf9m
5E55NVr8/BYI+2EjT7pTqpbNyzDY1xDWb9wlxMbP5uVN3AcUuG81y7wPRw/j
/mHALU4Fzto/JAz24UZ+ut7Epkur4f6UsA7nxa9bP9lc1B7284b1LQ9a3Lq/
de8Y3P/bxH3Y7RrpTYV6D9jfGvi+dXlHd8y+BPu9IR9QvvOmR6uW4n7DwKvm
2X1q438V980F/nnSjQlBt+7h/q/AJ3jbdVu5+gnuYwp8mt3DQ+Xq+OP+kcBD
355Zyt9G4D6IwDdF9Gu9f2407ueH8Vzl1zskx+K+dMDdNljXTRuSgPurAR9s
43razkeL+4QBf9W0SYVObeF6Afxo2JR61Ubf/7sR7JOH/K7j0tJlNzrivsvA
WSvLN+33uuP+wcCdDuaFpo96jPvgAt+9amnCgEN+uJ8rcK/6M4IurAjGfR+B
36pmOWSkfSzuXwi834djAT8LJuA+fMBfBpfqfn21FveTA7724i4Pm8wk3BcN
eIU1eS0sJqWw2uI+3OI8ZPvyH1x1ZZYb7icN/OPUpbYjW3njvsjAb09pUnPL
T1/c3xe4rrRl6WdpQbhPLfBKT0rlNQ8Ox/0XgS/v9k+qfwtpH0HgJSulj1ty
KQn3wwPulDUhpkbFFNzXDXgP/7hBQbte4r7XJq5jMQPSZwh1CLB/M/DCuXE2
pUcE4T7EwDtfC+w7q0M47qcLvGPTiTVe2GlwX0PgnaY9XNkx7Dnuzwc81rp1
dlq3l7jPHL5O0dFt+2t1rJe4b7SJ69nkw5sPCN/Xi/u8Ig+98PDJtz4aNlzc
xxf4jNWtO159EIP7/wHf0qtAoXh3He5jB3zwHfa0ybtU3EfZxA3s61u7JOF7
6lbifsDAD/sVHrUgNQ73vQM+w6bJsNL501lRcZ9gE89ij8s8XyR83wr73omc
63aevDe1QxIn6xb+elHlrtfzczqe9SxY2nqSB11vZ7GzbmXLu1Xzoed3tuLx
yMIf82Vg/wt4fWWf5xwzDn0cKIe+A5TDffKUw33dlMN9yH+Ox8WbcrwPlnC8
z5NwuI+Ocrjvi3K4T4lyuK+GcqVP2s85x4wrfUpc6VPiSp8SV/qUuNInjQd8
SlzpU+JKnxJX+pS40qfElT4lrvRp5s2MKz3Tvs05ZlzpWeJKzxJXepa40rPE
lZ5pPOBZ4krPEld6lrjSs8SVniWu9CxxpWczb2Zc6Zn2Z84x40rPEld6lrjS
s8SVniWu9EzjAc8SV3qWuNKzxJWeJa70LHGlZ4krPZt5M+NKz7QPc44ZV3qW
uNKzxJWeJa70LHGlZxoPeJa40rPElZ4lrvQscaVniSs9S1zp2cybGVd6pv2W
c8y40rPElZ4lrvQscaVniSs903jAs8SVniWu9CxxpWeJKz1LXOlZ4krPZt7M
uNIz7aucY8aVniWu9CxxpWeJKz1LXOmZxgOeJa70LHGlZ4krPUtc6VniSs8S
V3o282bGlZ6l/snEP+mfnGM2nrwvOF75vkjjyfuF45XvlzSevI84Xvk+SuPJ
+4vjle+vNJ687zhe+b5L48l8IH5gPlA/OE9wvHKeSOPJ/MHxyvkjjSfzCscr
55U0nsw3HK+cb9J4Mg9xvHIeSuPJ/MTxyvkpjSfzls43s/FKLo0nx2fSdzrH
jJPjM3JyfEZOjs/IyfEZOTk+k3jw+IycHJ+Rk+MzcnJ8Rk6Oz8jJ8Rk5OT5T
b2acrDdIf+kcM07WG8jJegM5WW8gJ+sN5GS9QeLB9QZyst5ATtYbyMl6AzlZ
byAn6w3kZL1BvZlxsn4mfaRzzDhZPyMn62fkZP2MnKyfkZP1M4kH18/IyfoZ
OVk/IyfrZ+Rk/YycrJ+Rk/Uz9WbGyfUg6RedY8bJ9SBycj2InFwPIifXg8jJ
9SCJB68HkZPrQeTkehA5uR5ETq4HkZPrQeTkepB6M+Mkv0H6QueYcZLfQE7y
G8hJfgM5yW8gJ/kNEg/mN5CT/AZykt9ATvIbyEl+AznJbyAn+Q3qzYyTvBz2
Zyb5N+Qk/4ac5N+Qk/wbcpJ/I32hMf+GnOTfkJP8G3KSf0NO8m/ISf4NOcm/
kThzzDj0ExE5yWea5y2hXwPl0F+AcrgfnnK4f5tyuA+Wcrhvk3K4z5ByuC+O
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
UsE5tHyLSxr+2//M8u3RYe4a/nuiZw1bx+HjEeS/MwZ9mJA7+xSC/HeSMamJ
5zdWl6vw37L129UbeTMUQf4bVMZ+CPH5Qv57bHUPd+Lzhfw3Os3pNPH5Qv77
uusjb+LzhfzXuuuiscTnC/mvYZbfrue2szX8N2fZl+qxdd0R5L91P47dVint
LwT57+2O/uvDTocgyH+vBTl0tbYOR5D/PooftoL4fCH/NW9/ahXx+UL+u8zy
+afMbljDf6Of7tcRn6+a4xjxY7M0I/H5Qv67r59VBvH5Qv57LPzGvEWeYZTr
Kfx3+bQVc6J2RSPIf8fuvDyI+Hwh/y2SH58HaPjv+fz3Di3/3RhbypX4fCH/
HT3/yiHi84X8t6XZzIPE5wv5r2W+fhZD/utRZ2Jv4vOF/Ne8smc48fmquYyE
X6c0nUJ8vpD/1mhcrdaGkk4a/ju4Vb0VxOcL+e8m2tcd8l+/V0fPbZ11kvXz
5XrdQRGWf62w0/Dfr0XvdCI+3zTVPqBHTfW9KhOfb0PVPqBHCX8fNSc+X8h/
9Ue/biY+336qfUCP5qWNWUd8vk6qfeCf8YQW7kZ8vpD/7to9Lpj4fJ1U+4Ae
vf/NrzPx+Qao9gE9mtq8RCDx+UL+G/t5ohXx+UL+Gx1f0I89TbU/GNDmFglv
zdd5aPjv84SIpcTn21C1PxjQ4fJ1FxCfb4BqfzAgd69ul4jPF/Jfe5tnF4jP
t59qfzCgteU/Dyc+336q/cGAsuWh8cTnu0C1PxjQcD+vIcTnC/lvyPpvscTn
C/mv5ZBRA4nPt+DfCv+9QPuiB6j2DQn91sj91rA2IRr+u/niH5nr/w7T8N9x
Q1s8SMqM1vDf1i9T0ojPV71vSKh3R9ts4vPtp9o3JHSu6PGZxOe7QLVvSKja
vXdZxOcL+e8Wj4HTiM8X8t+ZtN94gHo/Qb+OX2BOfL6Q/5b7VMOM+Hwh/30z
wFiE+HzBfoJKjXNeQ3y+kP8W7J8PNPw390u9rsTnC/nvW9qXG/Jfo2GLK/H5
Qv475ERadeLzbajaZ4xoTvfXJYjPV73PGFFtz1+iic8X8t8etB815L++b++2
Jj5fyH8HDq0+nPh8If8tQfsqQ/67uma6bqoV61es8N+wHRNl4vOF/Nc8ZdPx
CQF6Df9toupXrPDfNo2e44vV9Rr+22P78hbE/1uuwI/MP9cw1/o3/fsQTP3L
/Pv62iUbm8NWSZj6nfn3aZ0uWc88hvhj6o/m+pIreRVzSp3G1E/Nvx+dZts1
u1vmHn2+iesf9n682PhIPKZ+bf73l1Kh1ifzYV6Y+ru5PsfPx+dw+jpM/eBc
3xObWWvYpePMP86/72bWdDM3y4qn43nCdWcHmxZYjqPjMXJ9qjTy1zlfbmLq
Z+ffd/cjo34fa7YdU/871/2r+Aw3a+TK/PJcr2x0DMg94Mf89Vz/o5edy7FJ
V5kfn38/2h1zfOSw5A6m/n2ud33p+raNYwymfn+ul+zhUyTVK5KOX+b6vX2B
FTaH6THtJ8C/TzMm222PdHZm/Qe4rp+f53BNPs/6FXD9RqWsRmV/DWL9Dbju
0jlrc/qm66wfAtdvme4tI+cK0f4J/Pu6avGsc59q38K03wLXs0a/CnHvHEXn
+4jr573ybg0YeZ3O9yHX3+bWDHiSHkj1FK5Xb2Tnbd/4PP15ufN4YGT5LHfX
w76svwTXK2aPvLSmaiDrR8H10PpuMZVe6Vn/Cq6/jncMnpcUSft7ZHG98cb1
vmHBMaw/BtfHtbE7Ss73of002Pc+Dl1gvWLerSjaV+Qp13dcs9la6fF12gdS
4SBna/tYril0FdP+HlzvqY+yibXyo/encn22g+OBdX6H6frEc93OmJe99O1O
1m+Efe/jiUFRPZ6+CWD9SbieZTaq/MDJetbPhOtVg20Ke/SJZP1PuD5grvWb
T01j6M9d4R3rqzczDrVg65DN9fFGx6cjPsezfixcfxtcfDo5l4f2b+HxwLvE
mqu8znnQPjbKeU0v7o0MfD8ulvWH4d+nK0/tSlj2ZQnrJ8P1Xrajmj7veBLR
/jP8+/FUQJ59WJKB9avhevc9K3MX9Etg/W34951vit32g+lHWT8crifcyytS
sddFuj58P0Fd22c90pcJRrTfDv++iy+ceGCHLoH2seH7CZqXOqhMx6WJrJ8P
14v9FbVFfpSMLAr6//Dvu9pedvs31vZj/YK4vq3YqKWtnwSx/kJc/9DWzedF
ynU6TpnrLR46uvbFUYj2L+Lfj98G+1wY2iwR0X5HXD/UuIHlV7dkum6JXG/7
zfWEl0Uq66fE9duJlaqP2HSf9V/i36eG5CjdschA1q+J67VqjnrVyPY66+/E
9aExNplrW0bReT3k+tZV1gkJFW4h2j+K64GWzSKafbyDaL8p/n3dzHX9raoj
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
x7Gfw1sLC3jrVwFv/SDgrYsEvDXnJ/HWtgLeekDAW/cIeOtOAW8NE/DWoB/k
rZf+K96q5Ouaq/ovKfm6xgIOW/cHOWyZ/zGH/fo/4bBKvm6+oM785Q/WmZsE
debPBXXmr1V15uzKwR/o+UFgfXAhQf15NUH9ua+g/nyjoP7c7yfVn4/+wfrz
Kar6c3aZcAw990c9XxPeJ6hL7/SDdemfBXXpq36wLj1CUJceI6hLd1PVpbPL
iD3p+TvqeYnr1ZsI6tXL/aR69QWCevWVqnp1dsm4BD3XRj1OGXsJ6tjdBXXs
RwV17E6COvbBqjp2dv0Tbz8tOP9F/bn/xPmC+vbWgvr27ar6dnYZ8F567on6
OQY8VVX3zi49zqHnd9D72Tx+uB7eTVAPbyeoh/f8r+rh+fjREXquBH0O39dF
dfJ9f1KdPBbUyXcT1MmXS/p+nXwVQZ38RkGd/EpBnXyn/6hOnl0G1JKev6Be
n59XP19SUD+/VVA/f15QP39aUD8f+1/Vz7NLQpiej6Cer7iu/q6grn7o/1Nd
/ShVXT27ZORNzyNQj//n1du/EdTbP/+P6u3ZZUSvaD9/9XiMyE5Qh9/2v6rD
Z5cJdaH97dXP/0/r89mVg7bQvu7q5+RgA/UP/h9bh5J1
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1: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
Sj10j7pX3+T6A8B+8K7mU3gYvDW8E/wKPATeCt6hETXWWmuNVftbw6xl1ny1
9Rtcvz/Hfa0pXP8SvBfcCx5ofoL3hLfwb+DX4f3gbeCd4VfhoXAfeEf4W+s+
nz7OTw6NolYZUIX2vrVecif5aw33FrwsvABeHf6Tay6AD+dvmjVCw6hl1Az2
IrdwfWuOZ3H9ao3QDGqHravo/e6vR62z5m3C+L3wxnBX62Yjara125pubzCJ
8eEcb8e5weYz+CC4P7wb/AC8pc9iDYUfhHv7XdYE+CF4K+cW3hx+uB7P7hxs
AT9SDz22OtwLfhzu73fDW8GPwdu5FnBv+Nl61HZr/LbwM/DO8IZwv0ZoKLWA
mkDtpmZRu+xaRS/2KNdv61xzbkv7GfhgeHt4D3gKPBrewXvAb8Mj4AHw7o3Q
PGofNZG992TGR3I8kHN7Mv4CvAe8uWsKvwuPggfBe8HP1UM/bQpvBz8P7w5v
BvdvhKa0t1EzqTXbs592g8fBu8E31xeXnep31renerce/fX5XDPG+KpHbjfH
meusgdZCa6jaS401rylqptrrG66/i+MLuP4Q46Ueud+cYe6YAd9dRc2wdvwM
v1hFzjB3zK7H3ncPu5efqEXstS754rt61CJrirVlVj1ykTnD3PFK0Z/+Jn/b
a0X/Gf9qideLHv2zKfqNmfz9g1XUOGvdqzn2x/ym6K/m1SPXmGPMNYt7rqb4
DnuxX+qR68wx5ppf65FrzFHmqsU9TVP8BnsdNYZao00VvYQaQ62hxlCb2vNu
a+2tohe+sx652py9rrWzHlpOTbeWtRNeHm4GrwnfU49+eTl4Q/juemg5Nd0G
jdDMxqIxqZa+i/F1OO7AufXN1fDacHt4vUZoJLWSGsleaqkUudCc2Je/v4Pr
V+W4FefWcb/Xo/ZYk6xNP9WjNlmzrF1z61G7rEnWpvvgTeBu8MaN6Jntne2J
9R5+qEdtsaZZ2+bUw7+w5lh7bq9HP94SXrsRPYu9iz24XtMiPudzfBjnlvL3
qTngYfDv9tPwOfBouObz5/BLxqTwq/Qo9Cr0fE7N4fmcWPTCKTk8Ir0iPY3T
ctR8a/8+KfyxK3L4I7un8G9aFb2h/jiZsety+EFDUvgxekx6TXpQExg7I4V2
mMnnzBQ5wdxgDtgnhydm/VaPnZnDw9HL8TvPyeHRnF7q+1nqpxS19zuZ421S
6Lnrq+gvF/I5j+NDObdkIzSYWuy4FP3s5Tn8n91S+EtqBu89OIV/paelt6UH
dmEOT09vT4/u+Bye2LlFH12Qw0PQS9AzODiHh6GXoQcxKoeHoJcwER5homqE
N3EGhyNz5ChzlTnn+hwenPpL/aae0yPUK3SOL4KvzfHb9k3hh6l/zG3mOPWs
Gk+td2AKP1ANoZYYncLP9Jn11rzGubglh982PIVf6RyoF9WDzo05elDZb/vm
qAnWBnP83jlq8ILS3zSH91NTmutSxOf+8OFw9xR+yVA1t7Gdwg8ZBh/iXknh
vxyoRoNXSOG3qCHUEmqM7XPUEGuJGmNADs3Rq9S3gTl63i1LvTA/HJnDv1kv
hV+k5lB7qIF2ZuzsHH7Ktin8v3E5/Kp1U/hNaqZ+JZ9Zb4xB/cp+KWJTzaR2
UtPsmCOG9WP6poht65X5UM2wu3qcz1iOe6Tww4bnqGUrpvCnjIlj4FVTxIox
6N7cIUVsGmNHw6ukiL3FMeF3p4gVa7T5cYx7MkeNtlZb0/fKocHV4uNS+C3G
5FHwyili1ZgdD/dMEctqGrWNNX9P1yaH/7VOCr01Rs0Mr54i/xyaw09bE07w
4Tn8r7VS7MexJX+tnSKf6fHp9ekBjs7xOZbj1VKMqbHUWmqsPXLkBPfidily
xUopetMJnDsoR8yZG/1OY9H9P5XjY1P0ZuY36/PeKXodez7z+34p6rk9k/V4
rxS9lD2Y9X/PFL2ZPZL5f/8UesKezXq+R4pezh7CXvCQFPndnnC6uSNFr2jP
+BF8Qope0h7jPfioFPrBnuAD+JgU9feGHPVoWAo9Yo/1qbk3Re9lD/kxfGKK
3tIcYr0ZmiK32FN8CI9PUf/tId6Hj05R7+2x3jRfpqhP5gt7kVEp9Is9sHpn
5xS9sTnJ3LR9it7THtLctVOK3tIe1V62f4re1R7P3vfwFPXTHs5ecWyK+mkP
e5t7OUW/Zg9ob3xYivprTjO37ZKidz8xR3+3WQq/wB5LfTMyhX6yx1ePHZRC
D1mjrFWbp/Af7OHVOyNS6K/Tc/TCfVL4X9YQa8nWKfwle0T10MEp9J89/Cfw
SSl6e3vCz6ylKXrFu9V7VfSER5aco1eth20ucg9Ym/5exd7YIIWXpad1dI4a
67sSc7K11xyk931BFbnJPWevoyZwL7qH1AbWPPeWOVSvTs/O3KonrDes/3pM
Ds9Y79gcdmyOnKyX7Z40V5uT9Ord4+Yq30n5bsoceVyOHKWXbk41d7nH9Xb0
eNz7vsPxXY45cHyOnKA20dM3V1iD9Zbdk4trcy30pPpMf84ebVbRl/p96mdr
vp61elM/wX7cGDKW7K/VGK6Ba2FOs9+2XzfXWfP0Y4xpY3tJjr+vwqM4rWgk
3+2pEdROD/GZUtZuojkQblmunVBqru+irKnWYnsOew/f0ejv6Qe8wPENtfh7
/Re1ojnD3GFN1g/Rz7BWW3N9V2hOthZb83zXYA2yFqrB7CXMWeYuNZbvvtR4
ai978L5Fzw7OUcN8l6XGsba5X9V6A1NoCzW2Wrs759rk6KkXFn2vn+KnJ8fv
1GLMNfDaV2uxNtZ49fLbtaj9nXPo30+Lfu6Uo3/+pOhZPWT768+K/l8nh1/9
cy36401y9HsLatHvqs/tT+0n7R/Wz9HP/lqLfnm9HP7HL7Xop+0h7CX0dxf7
vbXwe/Vz9Wd956ufoH9h/+tvUmv7DP5Wewp7C/1c/Qd7UHtRf9N2OXpQe1F7
2P45NJD1rksKbWSNPR5eLkXtdQ+7l9dP4Zf6nWqTP2vxW9SMavFBKbSkc2Jv
pD/lXG2eQ+ssqkW/rz+i36yfrl/hM9oPfViLZ7fHsdexB+qeY009/qAWa71p
jt/+Ry36e9fIXsc1du18J6B/MK8W/oOeywD4h1r4Iavn8B/mlP7GNdPb0NNw
LX2/oJ+iX6SfMDuH9lCD2KvpoeilGCOr5biHvZIx4b39Tr0P/Rh/i9+pF6N/
7m9xzfVK+lQRC2pG36WpMdSSNv9cUr1SC//rjxy51ZxkbjKnmFter8W7AN9J
rAhPr8W7ilk5tJkazd7VmNKr0aMx1uxB7UWN6Z455lCvRA/GudWD04szRrd2
f+f4229q0Y+6Js7V17VYKz0bvRvndLMca6y345y79s6R955di7kzJn32GbWI
Vd/p+W7PPdQ7x2/Sv5lVi9/qPdXGC2vxXXpAekGu8TY5+qWjSn5Wq/pOZ0iZ
T/O3e1DvyXu6N/WU9Jb0i+yXfcfkuyb3YJ8cNXNcqV/WUmNePTax1DPnwN7c
mHVu1DB6K2oKtY2/ST8xpfitanL7h9YptPouOfqHNin8SjWs+rhjCm1rD6Je
7ZSiN1Hzj4YbKXoBNbn9RqsUWt2e11rZK0UvbM6032iXIpfak6o/O5de1Zxu
b/N8LXL9ySW+tkjRC6tBxpT6pzZRo6qnO6TQrvYM6vtlUvQS5hC19NIpcotr
aO+wRIq1VQ/YL9pPWq/teey16il6ITW4+n/ZFNp81xz9RNsU/uriNbF2plgr
c5jaOafIbUNLvfYZfBbX1NqxZIq1tqeyV2ieotcypvVvayliXQ9B7bFlCm/B
nstevkWKXszf7G/fMIX2UAOcAW+UQhuoIdT6m6TQFq6pXrTf4VrrQah1eqfw
JtT3u9diTu1V7MHVEpum0pvn6LU3TqFtnAO9ZmPKudGDUHttlcKbMMZdqzVS
xP7/AdvPUOw=
          "]], Polygon3DBox[CompressedData["
1:eJwt1mXcFlUaB+CH96W7u11KQYGlG5FOkZaQ7pBWylUBFcE1QBQxQRrpRnTt
xVwVXFBwXWPXFVFBkN7rhvlww/u/fveZmWfmnDNTbtD4ruPSUqnUNpVJ7cqR
Sp1PT6XqqdvkOllTqf+xoRlTqZfY22wN+zZcLqFqs0ryz/pG6VvNDrKN7CQb
zdaw99kr7Cc2jK1g77C1LE+2VKodu5stYwvZb/rGsfXsI7aF/crGsnXsQ7aZ
rWTvyVlUGZbOcjteK31T2RL2QFyvSrHqrL0/G8u/GDuGrWUfsE1sNTssF1I3
svysoOPdpu8+toItYT/qG8JeZG+xVeyUKs+6sglskPyDvv7sGfYqe4GtYV/I
hdVNLF9ciyqjrzMbywbEPVWlWEc2mvWV/2PsALacHWAvxn1WpVknNob1l7/X
148tY/vZ83FPVTl2KxvPBsaz1NeLLWG72DL2DevBnmA72FL2XzaYvcDeZKvZ
eva1XFrVZcXZd6yvvqfZPvZcPDdVlnVh49gd8jp9x+VSqg4rFueN88jF1J9Z
BXmtvmNyyWSuFWUvs4/l3Koiy8aye0ZNnWM8e4T9heVl7dkM9gxbxHYae0au
pTqzmixdXx19w9hcNo2lsdpsKLufTWVF2e1sAduQ/LZMrB4bweazu9iJmIOs
CevDOsRzU3/IlVULVlvOaGxdfcPZPDY9nlvcL7mcasiqycX1DdL3WPq1tfoy
+11VYN3ZJDY07p06J1dRtyTrt4CxXfXdy15ii2NOxlyQy6tG7MaYP/qm6VuV
rN998SxjXsplVQNWVS6ir4++h9h69iwrwUawpWwv28AKs97sQbaOLWer3PtP
5DyqEsvOiukbqO9RtpWtZNv1nZZrqo7sJpZfX0d9s9iz7K8sF2vJprDFbD47
ra5jt7E72WC5kL5u7H62kj0Zz8g5hrOV7F22jn3GSrI+bBrrE+vP2AnsefYG
285KspHsqWSOx153ytiJbBP7jO1gOfXdwiazJ9g8tkPf7zG/VSdWI/YSdSX2
AtWONZJzGNvC2EnscTaX5WMd2Ey2nD0Sv9fxJrHN7HO2k72v3pav2NxzsitZ
7G/sHZZB5WIp+TVjMxp7M+uPmrMDLJ01Z/1YM5bFeRuxMexhNpu9ri8Ta8EG
sJvZp6wE682mst7sVZbGmrG+rAl7j+VN9qvY1zqyi6oa68dmsnFxT1R1dgeb
w+6UL6ub2AA2m02Ifd311WAD2T3iRPa1c3Rhi9gr7DH2JWvD5rFV7EH2JsvO
2rAhrDXbwL6Tr1ONWbl4b8V90Fc3eTe2lN/Sl4O1ZUNZm7jvLCdrx4axtuyS
upH1Z7PY+HgW+nKx9mw4a8feYNlYazaYtWLHWWe2kG1kj7K/saysFRuUXMvH
rCjrkewHPdhXrC2bz1azBeyCqsr6shlsrLxJ30/y9cm+Ee/zreykXE21Ztez
LexnuapqxarEnqYqO16v5JmPkP+prxmbnazV2IvPqSrJ3Ii1NVLO4LnVYkPY
fWwKO6MqJr9jMhsmH3G85mwOe47dyzazE/INqiWrzI6y1vrmspfZQ2w/y8Ca
sttZU3ZWVWI92RQ2XP5IX5FkP53IurN/sOLJb4u+XuwTViwZG9fXk73L8iTv
6VGsU8w/9W+5QNwvVlo+r65P9pfpbJT8gbEFk2+GeCd3jfXLCiTv6Xhf3soO
svzJOzS+D7qwv7N8yTdDvPc7sw9ZYdYt2f+6xbuCTWZb2CG2ix1jndjDybss
9tPDrD6bxp5kM+JesalsG/uC7Ynnqw7JmVVpljfmgb7p+nawI8n74xy7i+1k
R9l+toK9IZ+3NxVhF+xNF9gMfbv5V+xArK3YO+STaVc/21Jn9V3UN1PYw4+x
12K9xZ4l/5p27Rv2D33n9d2tbxf/kr0a6zzmgnxCn/9SZ/Sd0TdF31ZwmO2O
vSnWl3w27eoWefX6jsQcZNljT2CF4t7HMeUL+rKzS/oOxnWzS8yhU5fZK/74
gVVQTVn5eEYxZ+R0lZtliBx7qvy7sYalzvvnaMxplkP9iRWOdR5zQf5FXwGW
KeZkzBn2GyvIMsf+Evs7O8Uys3OOd8m1zPJ79/Lj7PWYo6wnW8x2sqfZv1h3
9jjbzp4KU9/KBWNPYGVif4mK90n6te+w+DbLZk03MXYcW8TuiT1MfSPnj/XK
SsW7Ntac/EcyD+Ib7tO4N+wMKxyvqJincW6WL/YnVlLO6hyNnWMsW8jmxFqN
tSSfNrYQyyJ/7nfcoG8kf4CNYdvYKbmG6sCqx3shSs4Zz4kVkffouyg3UN1Z
PbabXZDrq26sLsvsWho6x2i2gM2KdRS/T05TJVlueZ+xl+VGqidrwL5gDYyd
zpayu+Oa47fIl/2O4ixn9IWzjKoUyxPPTf0oF1e1WEV5r+NdkhuqHqx+rFNW
0zkmpF/7Lo5346G417EIVAn/5ZI36vs+5plqwsqy/wM3E8pH
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmXXcVcUWhs+G2eD6/M5WbBQVlLQQpEUkpJW0C8XuuPb12qKoKCGgYkuo
qGB3YGELopRIK4ggYife5/2954/NPMw3Z8/smTVrvbOmwdBzBp1do1QqjeOf
mpSf56XS6Vmp9EsqlT4sU1erVOpRXSp9Cm8K94E/hgPuBb9N+yNp/zXtP6I+
Ud+T+k/gKrg3PAuuhvvC78F/8Ztu8Pvw3/AB8GfwFrQ5CJ4Dbwn3g7+At4MH
wJ/DW8H9q/27B+l3D8qZ1P9J2bXa736A+t1zj/1heJ/cY38S3jf3uKbDHXJ/
xzS4PbyI5xq4mvJnnjvhhrnH/hTcEf6F5y64EeVqyh94Fmf+7kcoW1Gfw4/C
reE1lD/yLOf5lmcDz1KeVTzreVZkHvv9lLvp3eH51zrM47u2512D+K5X4fnU
tYN/gs/Rd1TxbvhsfQf8C3yexguvhlvy26G0/xk+V3NA/bfwPtSfQP0quAV8
PLwArgcfDC+Fm8JHwovhhvAR8JdwA/hQ+Ct4V/hweBG8C3wY/AN8Bn1tQl+v
wPPgttR/D58G16J+PXw6XBt+A/4S3pc275Y9713g1+AFcHv4ZXgu3AZ+HV4I
d5DtwWvh/eG34O/gTvCMsteyI/wdfLJsgb7WwadqfeC18ClwgufDOzD+wbSf
C9eFB8Jr4FbwidVex+95FmbuczRlvdx9joJ3yD3f8+ChuX+3AD4x93zPh0+A
T9K6wcPYL+2p/wA+NLc9yBa+5MmqXK+/D4VfhY+j/CbzOJZV7Ej29JH2XoWX
ZLbJtTybVNour7Rvw7tqUz6QbLOrK22aUP8x5WGM4fgqv0N9NaL+JbgH9Y3h
l+Ge8I7w03AneGf4WbgzvBP8DLw/fC1PM/hp+roGbgo/BV8H7wY/Aw+hj23h
gvIC6reHJ1L/H7gu/BB8EvO+DdyCPXE59Q3gx6j/rrJ/FlX21prKuqysfNdX
lb+tqsznHoztM8qjc9v1J/DhuW35XXigxgt/Ch8B7w7Pho/KPa9LK3PbqLJe
h+S295nwIPhrnpvgrSvt11XWRf1rrH+WvIfehw/OvW/egwdrPuBZ8JG5fduL
8AHw1pX5757bF74Ad8vtM1ZV3rmusu5a/460+Yu61rW8/qsr87FvxQ471LL9
aq5kR99g23tTd1y1fcBc6o7P7W/egPvk9sfPw11z++DX4F65/cSb8IG5980M
uG/uffM63Dv3u7+QLcEry16DY+lrRdnzewy8rOx5PwquXZRKI2Rf2MOW8GSt
FbwZfA/cEA74NtkdXIbHay7hLeBJcBN4c/heuBFcB75P9gtvpK8rNK/wn/Al
+j74L/hSzTG8D+2/VWyCN4FvlV3DVfBIuD78B+0vhuvA1dSPky3Av1N/Ebw5
/C/lWL69PuU/PGPgnSg38twO70y5Dd89FW5bWWvFizbym/A9cDO4BI+DG8AZ
PB7eRb6FftcobtJXG/h7uEeV445iU2P5WXiC9rf8LHw33FQxgPZjZfu0/4cx
/092pzHDV2pceg9tbtQ6ww0L+/DW8A7wx/Ce8g+F41EbeC94ufww3Liw324L
14M/gfeCdy3sw1vBdeFX4T3gBvAc+Ui4PvyZ/Ci8MzwbbgHvBM+STcE7wp/C
zeG94W/gznBLeDXcFW4Br1IcgfeElykuwBl8tWwZLsFXwdvCNeDrZb9wgm+Q
XcM14WHaE/DW8OPyE/JbzOdjzGc7zRf1T2gfU98M/kqxCd4dXqIYBDcpHLPa
wXvAS+H94KaFY197eDd4seKg3g8/Kz8E36zvpq+X5Rvxg33kP6krM4aH4L3g
Z8uekxbso+fKnquW1Z6Dy+XnKadR/77eSf2T8IdaR/iZstdob/gp+COtF/x0
2WvdvNp74greU5Xb7q6EN82theT3tqH8ledmeFvK33hugbej/J1nBFw39/r8
Dw7K6bz/A9lAtdfwv9TXzj1//4E3Jq/bxXANyhfKto1WtF9ett88Gn6xbPtp
XW0bvIT2NXPP8UWKpbnn9QL432RffRlci3IFz6VwonyH5yj5Rdo8X7bt7VPt
NbyQ+hLlHzy3wttTruO5VvEr9/67Dt6Mcj3P9fDm2gOF/9+Tddy38Bz1gTsW
nqO+cHt4A9wbbgf/APeC9ys8dwfCXQr7lAFw18J+YaB8I+Uk+tqbvxXwRLi5
9mFhv9OPNp0Kj/sguHNhH9Qfbl34G7rDBxT2F4PgHoV90MFwv8Jx/Sj4N+bk
QtpvBv8Kny8brPJ4h9FvndzfcQO8BeWPPDfCW+rbCo/1MPlnysmK6frOwuM+
lPqehW36EHhAYc1xNDwQ3lPxAu5e2JcNhg8qrEWOhPsW9qeHwwcW3p9HVPl3
b9FXP/o6VvFDMZw9dAL8oeyqytpQcfOGZB1dg/rxydrwb+qHJ2vnRP2EZN1d
E74zWUv+Q5ubk7XtRnhEsrb9F74NHg7vTPtH4cvgzeGxyTFnM3g0fCacwWOS
tXMJHpWs5XP4nmSftCP8cHKcqYZvSY5jBTwy2T91hT9J9knd4E/h52RH8Dz4
Du1v+MVkHzwIXpzsb/rCc5P9i/zMF/DtuTXbs8nrvyl8U7Jmk469MdkWasH3
JeuOxRUN1jDcRppXMbMM35oc53eBn0iOsbvC05Jje0N4OvxVWE/KNhaHdabs
p1d4/IpN0qvtWOMl2ONPYW0mjbYorFFlSyvCOkoxdi78eGbbblkZm77ja/iV
zDazNmwzsqt18NuZ7X9lWAPLxs7iN3XgcYxzQ9nrt3FT/EXYxv7d1Hpbc9C2
luPqVvC9yfF2C/iu5NhSD56SHG93gh9J1hqN4CeTNcuW8N3JemdP+IXkeLUD
PDk5pkknPwj/HLZt7Z2/4DmZ907P8G8V17rDu2eOd9Lk0t6TkuPh1vD98HG0
aSP/Vm391RJ+LVnv7AE/D3cMr6P0Q5vwt0j/7BdeU2mt1uFxym8cELYl9dk2
bM/SUe3C3y491j68X6THHmJuX9L+YQwT4Zfh+vCD8IuaL/gJ+D3ZKHwTfIts
Ed4/PIeK7w9Q/4L2D/WdwjYmnTO87PiaU793+Nt1dm4W3lM6qzYPr53OznuF
10Ln7t3De1nn3N3Ce1nn2RvKPv/UrLbd6/whTd4qPM+yN51ntF7yn03D+0Jn
0ibhfa0zaePwXtO5tTPcOLNuuZn3j+IdtXn/ffDTsgN4EvwK3AC+A35UNgeP
hx+RDcF3wlO1xvBY+CHZMXwX/JhsCB4Bj4ED7hFea+mfidR1gN9J1tf7wK8n
6+tW8BvJmr0jPBOeAu8Hv5eszfeF34Un8P5p/H9b3n87/KB8Ijwavj+3vd0C
j4Y3gafCb8FN4MfhmXAz+GH4DfkLeAr8uvwIPBl+Tf4FfhR+E25cbc0rm3+O
MTxC/QztMdk2/CRcF74Nvks+Dh4JT5CfhUfBd8t/wWPgB+S74bvh6fB28L3w
U9pL8PnMW+/M6zIEbpu5/ZFwi8zvmRTWVNLJU8KaSvrwsbCukIZ8IqwlpCEf
D2sM6cNH4Ksy60bNXy/4s+T1VL9zktdzILwoec0HwF8mr6N8++fJ890DnpX8
TT3h2XpPWKdJ28uO+sMLqX8yHNOl86eHY7109Z1h3SXdPj6s2aTbnw7rQ2mu
Z8OaUJr8mbBWlG6fENZg0v9jwlpL2v6esE77gt8+ENaxOoPcF9aKOkeMCGtF
nUdGhTWezhpjw9pP54VpYX0iva190A9ekLyHtC4zkm2tHfxm8hoeDi9PtovD
4GWVmKg858rkNT8UXpq8/46AVyT7mGPg1ck2eCL8ffK+PB5eC+9VyzGlf25f
JXt4JdnPDYHXJPu2Y+Fvk33ecfB3yTZ+Erw+2X5PgTcka/lz4b+SNfU58J/J
9tsZ/jDZrveHP0i25S7wR8l7vT38ViXWa4+/nbxHD4GXwO+Gz6TSosr3Kj/5
c7LfPQv+PfnccB78d/K+PBn+IfnMcTb8R/LePRP+LXlfngr/mLy/T4N/go8P
r4V8wkz43sza9aPweUea9r+KA/BU2ncIx+KM9oPCeSf5rq7wdnANuEs4pySf
/HfZOqwEd6v4ZMWjgXCTzH61VmHdlhRTKJtT/xJ99Q73q3jRJ5yPUqwZEM5x
yV8NrsQ4zeUX4XOi9Oqp4fmXTz4F7pTZJx8RPt/Jzxwe7kv+pyis1argE8Lr
or17Z+7fvs94hobXTj787PBeli86B+6e2cc+TPuD4Pm036qwX96C+tPDNiCf
f17Yh8h3nRv2A/KHp4XtR/Hi83C+QmeEOeF8hfINF4T3hfbHa+G8h847r4Tz
HjpfvBrOeyhH8UY4j6Hzzuvh/IbOO2+Fcxc6Uz4fPmcpD/Nc+Pyoc/0n4fOO
zkEfh887Ost8Gj5T6Ez0djjvoXPWC/BtmfMkR4e1sfJIx4S1sXJEx8IHZM4R
nVg5X2ueL4eHZs5RXFfJycv2LwyfE3U2PzOsn5UTOAsenDkPcHJYbyt/9U44
96Kz3sGVdZRtHBKOicrDHBaOlcplHRqOocopHRSOs8pBnRTW58px9QvHXOXB
+sOtM+emDgzrNOXQ9gzrTN0LXBr2/9JOv4ZzdMq5fQ8/lzmf/xJ8deb8+cZw
blN3B8PKzuFqH11fdh5We61U5XymcuNvVvy81u7HsN6WDt8Qzmfq7mBi2C8p
b/9bOMeo8/sv4byi7hpmwMMz5//Xh3OPulO4tuy8sHT1D+FcqO4dZlNfh34O
1PjLjhW6N5lKm/Mz5///Dedadd/Rv3DO+hB4PvX3Zb7Dep7fHA2vYo/MC9/F
6N7qTd65UjoGvqZs3S+dvyB8x6S7sFvL3pPap/+E88m6T2leOL+g3z5ViWWK
g9eH+5KG0ZlU+lA6cXLYh+seRHlvnRsGF863an50ztFYND9b5T7DKq+vO4J3
dP6Rr+d3HQqfvcW/h3OzyrX+Db+TOd97UzgeKc+zfeHcR1N9C/UnZM75vA+P
zHynNjIcd5RfGhaOcdLbl4S1gfT5e+F7EN3rXRyOs9Ln48J+XnkbrY/mIae8
PRy/lGO5JRwrlYO6IRz7lKe6Gz4j873PjeH4qHzRHeF4oZzP8HB8VC5rl8Lr
r34Whu8Hdef4AfNTg3nqDm9X+DxcD74/HL90p/ZgOE7pvklzeYf2I+Uf4Vy3
ctfNecfn8BDq7w3HMt1tvRi+N9Q91KDCMX4IfFHY9+rccWVYM0ivXh3WGNKl
l4V1mnT7FfDBmbXru7m//VedGcOxWPr22oq/lS+6KqxPpGM/CN9J6S71mrAm
kWb+rOJX5atlK7IZ3QXcWHZsU4xbXvHnOiNfV3Z8VXxcRf0Tme9e14TvQHU/
+G34LlX3Zdp/8iFdpCsL53e0Hx8r+xtkV0toPyXz3e79Ze83zf+4suOT4tHq
8J2s7joXUl+/sk+Xhe9Vdec7K7wuuo/+uuz10Dx/E77D1Z3d0vCdr+6OR4d1
iHKh3Qrn0GUDsgWNpyV9zw7f8+rOWn1qjwyg/v9p5L9K
          "]], Polygon3DBox[CompressedData["
1:eJwtmmWgHdXVhu8Jsy+cydzgBAsahRgQIQGCBw0SoFiheAsV2uJQhUKxFoq7
uxWX4u7aBFqsuGvxYt/zfO/8OMk8s0b3Xnutd625i++w+/Rf9Ovp6dmJfyr+
/3G3p2dap6fnotLTc0JfT8/v4Z3h2+EL4enw8vAx8JHwQgN6er7lxF+z7yhs
H7HvGHh2eCl4L37rs309x8/PsYP4fY99T/b9DdtB/HZl+27sl3Luwti/w74H
+/6CbQb7P4M/5/cP7P9j393YRvX29GzMsUvXPT1bw69jHwj/EfuP4Ts572KO
X4R9PWzvxb5jsS0Kd+C94ePh0XWexXt67/3Ztx18M8ecx/n7wtvCN8HnwA/D
x8Lfwitz/CbwJK8N/wX7AfD28C3w+fBiHNOP7X3YdyK2/fj9iO1/sO9c7L+F
d4Jvgy+AD4R/At8FXwLvA28D3wifDY+qMzaOuWN/BPZfwY9gvxr74uybhe19
2Xcytj/w24XtO9h3EfZ/wqfCvYzfGhw7kuvtAL/P9RaA98C+JXwNx5/J8b+C
N4evgk/3/hwzJ9uHsO/v2B7hd5zjx75VsO3Y9PQ8AG8Kv83xv8a+BXw1fAa8
Lfa74Gnwa3Dh/n3wkdz/fXgk15gD28Hsu4JzZ8Hen+1Dsb+LfTT2ubD/mX1X
Yq+wN2wfjv097L3wAPiv8Afw0hw/O8f/iX2Xc/yScC+8P3w6/At+m/ku7DuV
47fj+e6FN4bf0H+43nLOD9ebjXN/yvEbw5dhPwX7UuwbwPZB7sM2GJ4VPgA+
Ex4B98EHwpfAg7jesmzfyvVmxbYb+zaCL+WYk7neT+AN4IvhE+Ffwj/wXeHT
4B14vvvhTeC34O3h++Dp8Jvw3hz/Q/gG+Cx4V3hD7w2fBO/E8Q/Cm8HvwH/q
Zv3cCy/I82wET3RtwkdgH8HzTodf4Hnnxf4u9mvgQfjPNPjP8M/hBzj+Co5/
Ar4Q7of9IXgI568OP8b5c3D8ePY/B7/Kb0W2h9eJD09jnxv7gZxzHNv92DeS
a93E729sv8v178b2PHwePIBz1+b4u+CT4U+x3+f78DuB8+dk32RsN/M7hu33
sN/TlzlwLp6H74SfhC+CZ+F6D8OT+f9l+BV+K7C9Oce9zvZ/+A2DhzVZH69V
iVcvcP758OzY1uF5hjbx91errN/nsJ8L92FfC/uQJuvplSrx6T3s18KLYN8A
+0Pw2fDX3PeBNt6cA38DPwjPhE+HZ+P4qRw/Az4NnhVeEx7GeK4Hz+T6c8Fn
8/9rzh+/CRzzAMefxfb/uN79XG8XeCX4Qngejn8NvgweyLHr+z5cbw34cccU
vhP7SfAnHH+v8Qb7CvoP9v7YD8f+S/hh7Fdh3wKeYiyC/6r/wmvD58DHwVfD
hzme8F3wevAyxgP4cPhR+Hj4e3hVrv8qfCk8H8+3Hrxknee/n/v3wUvAK8L3
wQ28uTEePonzB8DrwGOMF/ChXH9deCx8BHyY6wleCz4bPhbehPm6Sl+F/wXv
iH0d+Fz4eHhR7jfO/Mj9ulz/EOw/83mwX479YPinPg98GfwUfDFc8fyPwIM5
fzX4UXMm53+iz8JDsW8Ebw2vCp/G+X/j+K3gVeBT4aPhLeGV4VPgo+AfwVPh
s+Bj4MfgE+Aerrca11uM+403H3C/Gj4M++7wQxx/pfEM+ybwi9jnw36oMRJ+
EPvfsd/A779VctQJ3cRYY60xfHg387eEubskvg1g/CaYj6s8jzHlaraHdxJr
+jeZj5urPH/TZD5uqfJ+fU38wXjp+//JvGruY98anD9vk/F4pEr8nKfJeDxc
Jd4dx/HXsb20OYnj527ijw9Via9deAR8bZX8reZ5sMoxaqE/w+fBC8Krw4fA
55or4VXh+ZrMj/NnPvhBnfU8pSQ+zd4knt5VxZ/maKKf7q7i/wfzO8m1arzh
enM20RP3VPGvxZrkh+er6JFFm8Tz56roh0FN9Nq/q+iDWeFhnYyxY/19f94R
PgQ+CJ6tydhfU7X6rYk/z6iS7x1jx9ocpe85J86Nc6KvOSfOjXOiL+5ZkpvN
0eO6uYf3quFluxlTx3apTrTSgk3W/z+r6IH5m/jrk1Xy25JN8vFLVfTmEvCm
xt8q+mjxJvnXfKS+WqDJen2qij4Z3CRfvlxF7xhDLq/ik/rmIk3y67NV9Jxr
/jK2F+8kFgzEvibbT1TRA8ZwY7kxX212T4nWNGeaO41p/6jiw8a680pioTFx
p27m3Ll3zo0tzrlz7xwbC51j53pyJ7FFn3J+DizxNX1YX9bHzeX6oP56UIlv
6jM++29KfEmf1rddA2oJfVLfNMaoXVwjrhV9Vu2hz+g7jola03f23Z0TtZFz
4tw4xmoRx9ixdg7Vho6hY6lPqpWdU+dWn1L76VP61rqdaEtzurn55yW5Xh9x
Le1R4jvXluQuc9ie2DpNjneN+H76vL7vmlBLm+MXY/uAktyvj+gr+pDaWh/S
l/QJaxk1yttVNL3axZj8ZhXNZKzWZ/Qdc7Ta2RxtrjanW1sYw4xlrmljrTH+
rSoa3divJlAbbNVJbeOade3qs9YWxtB3qtQAxlZz5HtVagZz5zXwB1VqgiO7
8XF9XQ1mbWHOurTKO5vLjNnvVqlZjOXWAGp5Nb21wXXwR1VqgGPUGvCHVWq6
o+Hr4Y+r1EzHdaMZ/1Ulpqgl13LN+KyMbyGelSb3ds24dnYu0XRfk2IGdxMD
jAV7sf8L7OO70ed7w18aO7rR4h/AE7jeNt3kzzNL9MWt3Wj/D+GJA6Lf1Nbv
ex/4tm5qj4/g5dv8aKw6vSR/vgPfCS/Um3ytXrXeWBj+t3MP3wEvCD/j2HSj
p5eAn3dsutHTi6tTzXXd6OXB8IvwD7upB84o0bMfd1PvLIn9Bey3d1ObfIx9
EvYPuqknFsP+LPY34Nvg+eGZ+g58O7wA/LT5Ax4Fn1iiZ4whxpLzS/TchG5y
7T7wV33JgebCg+F+2Cd2U//sC/8P+/Ld1OL7wV+38cJc81v4W3hNeGF9F56F
86fBg+GjSvTMBvAQfaVEL6wPLwn/taQemgoPci3BFfwKfBM8D+8zg+uvBM/j
2sP+fV98WF++taTe3LkbvXZBif7/WTf1whUl+sOYZey6vKT+WNEcDv8O/o7r
bWZMgU8o0XvbNJn/9eFX+5Lzzf3Hl+jTKWoG1zbcA69sDndtwx342W70Xn+e
//G+6Per4QZ+wljpmoNr+DH4C/hxeIR1Q1/WgGthl5J6tQc98C/sy/WmHv4G
+wx4DPw6/Dn8GDwcfqkv/Y2n4JG9qY+/hJ+Al4JfgTtc79/m2t7Ub19hfxJe
ujfvOxT+xj5OST38PfyMubg39eJ38NPwMr2pF62h7RW8UlJbX9NN7foGPBa+
Fv4N/Ca8jL0eeCY8tjf1cT/Ge/5ONJH5yp6AvY6XS3oFszSJ72oo89XmPP91
8Mol9ZI1vr2Yl0pq/94m+cycbe62XrPf8UJJLT0GLuYe+DNzKXwE/Dm8AvaX
4BvguXi+p8wFxjh4TvhJ+Ab49/A7HD+O41+Gb4Tnxv5P7PeqWeAvsa+E/R74
SPgLeEX4GWM43OX4Rzn+PjUA/BX2KdjHwr3mPvhz7NfDv4PfhpcbkJ5Yj7m4
pFdmT8Le1H9KehWj4Fng3eFP+tJTsD/1Ykmv4Tr4t/Bb8LLwaLgyN8Ofcvww
+Ftu8ZPS9lO6qaV/Af+3Lxr9O+y7lmj3EfD38G7wh8afJuO1Wkn8m2ncd23z
W2JANKPaUQ1iL9AacJ6SGs7a0BrrgSo1mbWXNZ3n22+x1rNnt02Jj+vrGzcZ
z8kl8W+7OrX2S/x2YHsS4/wDbA/DO9YZ4xElNbBj7/PZFzytm36OOWWRkh6d
ucYxmr9kDh07ayqv91AntZZzskDJnDtX+sSCJXOqr5hzBpX0EMxF+sTwkppb
XzFHLVrSAzN3DahTa7+oPqgTo65o9aexyx7D4JKehb0Ha8Ah8Cmd1IaF9x1a
0qOzV2fM/HuVmGssNWZsVJJTjCXmlFVL5sxc8x9jfm9yzGfd5ICLqsRoc4M5
67FWD5rLzN/qdWuEbevkhMtbPWyu2ITjz6kSI3dmrj7Gfry9HGOOawf+pEoP
96RucszFVTSDuUfNcGOVnKaWcA0uW9Ijcm2awxcrqfHN7ebMxUtqVnOpPcoJ
8CXteJjjH23169bteI0vqakdv/Xr+Mbwdv3qP/Z0jJnGzs3q9K9WKunH9PK7
qUqPYO1uepijS3o29jbNsRdWyZHm3k05/3LfraT/Yk09tqQHZK29Xh3fGNbG
i03q9FMmlvRn7GGMKelh2duwhzyqpMdjr2d6nf6G7+y7P86+E3123mF1eN06
vjG0jXc+g8/iPewNDelNb0/NonZRQ9gbMceqLYzp82E/vJNYb49uyZKejr07
rzm09Udjq+8wrPVHY+FnJf6q/9p7M4deWUUzmFvtIT1Tpadnb2l6k3y5Qone
cgwcC9/R3tUGdcbaMXAszOH3tfWTuX1j7Bd0MsaO9YZ1xs45cq42bZKfnU/1
3UZ15sIxdqzXavKsPrNrzR7aoDY+ON7GDr8t2KMxhthDnLcdH99v1SaxzX3a
Vm7SP7Snaz/xdn5fV+l5XcDxd5jjq/TkL4KncPwf1Q8l/Us1qb0kn1mtumET
39WH1UvrNun/jSzRH+akca1/m6vUHEuXHKMWuU3NUKWHc14354xs/Ukto2YZ
1fqzWmadJv0/r+G1zJHLlfRAzZ23qimq9HzOgddlDFcpydkvqu2wf4p9N/gU
56/JuT6jzzrZHlyJz97RzRg5Vge18XO9Js/mM/ls+vQyJXOsr79e0p8/oPXP
aU1ihc/os+p/+u8RrX86po6tc2KveEN9xLmB3zfec/4VbE8q0dv2fP12oqZQ
W1hz2NtUc1qL3KLmqtLTPqsbn9K3jBnWEtM5flvfFf4avlkNWKXnd0Y373yo
a69kLLyn9zbHqf3NceY614Ta3x7vwm1+sferhr6hiqZVW6vJr2/7V2r1CU18
1Xt67/FNYq9z4tzY012opGdur3eNJtfW5/V9Ne5VVTS92neFJr6rz+q7U5vE
AnOUuWpSE1/Qx/S1pZrUutbQ1tKTm/iea8C1sGKTb4GOsWM9scnYOKaO7fJN
xlYf09eWblKLWxNbG49oUotbU1tbj2pS21ojWyvP25vYaPywF2w/8NpWj9gb
GdukdrbGtdZ1TY1v84e1yepNxsYxd+zXhs+ElyrRc6vBR3cyho6lMcvYZU1g
7WiNdV3bz7L2WqZJLW2Nba3tNbyWa0ytOLJJrW+Nbq0+Bt6xkxrfWn90k9rf
mt3afdkmtbo1ubX5ck1qc3uu9l7HNem9mnPNvevUWWvmTHPnNPiMTjSSWsma
dU01UpsPxtbR234T9dvoMnX0ut9E/TY6po4e9Rut32qtuV5o+xfWYtZkL7b9
CGs1NaW9GXs0I1v9M7ATzaB2sObZtM1H1kJz1MmlF1TpB8xVRyuoUdQqaky1
5n7sO7Wbn3FmRqs/56yjZczJ5mY19llVajq1t5r5lCo1rlp69jr1sT1j+xFq
5NOq1JBq57rOtud4rt/APmvjm/09ayS/rdkjsHay5vHboD0CayE1slrZmsPe
gT2E1UtqCnsLfvN+o+0X7tXqM78jqXG3r1MDv9/2f6yN7S9+2uop+0fWbH7r
s8dgLec37tfb/pL9sTHw3CUx56puehBrlNTgH7d6YGrJNwX1rv2119p+pv04
+5Uz2n6d/Uc10UptfjJf2HOY2fbv7EVYoz/d9ues3efmHRbtRPOp/frXqfcd
Y8e6r452dI6cq+Gc37+kBruQ82et0584ukr9MQT7bCU159nYZ6ujNf2bAuul
gXVil5pD7TE/PLSTmGZsU5N29M0Sreo1vbY9EWsdNfGjnXYOsG3VRCuvU1J/
W1Nv1tYH6sUtmsylY+rYbt2kX7NuSb3fj2Pe6OSbofXJlk3G3jX3//2iJv2m
9Urq982b+Io+oq/MV0c7qfHV+kP0oU6+karH562j/a0hrCXmqVNLqNHV6kN5
525JTXhuNz7h3FxX4iv6vL7v9wt7c5O6Gc/9sX9j7qyzds6oUk/7c9s5tNa2
h2F/336+vY0F6+Qmc5K5aYE6ucmYaGy05+C3eHuA9iKGsa8uqYHPh7t11qYx
w9hhjeq3f3uE1q4L19Hi1gzWDs6Jc+OY2ytZqE4tYY40V6rZ9b/DSrS8Odnc
P7o3udoYNLE3NZmxyTVibHm1ZO0Yg4xFxgh7lavU0RZqDLWy30DXateP30bN
P2u268t8Yk/Mb2n2MO2VrcH5R3VSQ1pLLlfnfv5Nhn+bsXwd33dMHBs1itpq
0d5olwl15tI14FrwG+fUNn6b77au834blHwv/mGd2tia1trWb25+v/H7jN87
xtXRUmoq//Zh2Tr9Hv8mxb9NWa1O7WuNbK3sNb22f2Pjt+mJdeZOH9PXxtdZ
m/6Ng3/r4BpwLejj9sL85jWl1Ut+q7eH6LdRe6b2Fv0e5/cOv3/4Pcgeon9b
YQ/X3qI9IXtDfkPz2/pKdfq9/k2I/aGt6jybfz/i3x9Mgv/QSUwxtqxVp5a0
Jrc2X7lObPRvRuxvrV2ntrTmtPZ0DVxSxYdcG1Pr1PL2EOwleA/vZQ9Z/bdm
ndpBPWVvYEqdfq9/E2O/a0v4lk58Rt+xhzetHU/7HfYg/T7k9x57k1vU8S3n
2LlesU7/279ZsR+kHrb2sAaxf2IMMZbY47Q3aE9uYKuH7dWtUKe/7t+k2C/y
+5y9N3twfmvZpo52tQdjL2bVOr0Rr+G1JtfR6mp2+21qfrX5HL2pBewxrt+O
h73H1ev0Suyh2Ev5Pz4q2lc=
          "]], Polygon3DBox[CompressedData["
1:eJwt13WYFlUXAPCX2EWW3QUFBelclpBdpJYQEBQEkZKWkrIB/T4DPxH0U0Al
VbAoAwxapRSxBYMyULELBRNbQfB3nnn/OM8z57fnzsw7c++5s7VGTeg7vngq
ldotMkStrFRqvoMNJVOpxsVSqf6lU6ly7Co2k+WwlqwEG8emsyPG5bHabAHb
yE5RN4CVZBewW9g/6uqzDuxzVkJMUreOlWVXym9Vl81asI5sPyslrmNPshx2
hXyJulKsKctml7NFLJMVspHsGcdn8aLMVOp8eT2xWP6suub+NkzdSWwKW8xO
ZO1ZKXYxm8NSrCHLZBexWewYbsAqsqlsKTtJXYe4l+xU6j72OuvABrO66hax
rawZG8qOZ1ez2SyXtWKV2A3sAVaRdWQZ7EJ2GzvquvmsDruLbWJN1A1khWx3
vLecVOpO+XzRiK1ne9X1UHclO5FdzxayCuw0VoVNZ4+w6qwrO5ndzJazquxM
VoPNYWtZPdaTVWOz2GpWh/VgKc/gWjafLRA3uafi7Eb2uLy+uk7qyhs7id3O
yrHWMV/U3cqeYpvjfeaaS+p2sCecZ6aaWaKYuuvYSjU1jW2Tvu7/2Ar2WMxL
9QXG7mLrHd+u5g5Rk81l69TkGduLDWOnmCc9+UvsMKvOZsvXqKvLzmFDWZ66
rnwL+5U1YTvlT7rGXPk8kc+Ws23GnqZuHKvPlrFXWDs2Nt6ve76NPc0KWDdW
ht3LXmPt2SBWmt3BXmRFrC/LYvewV9n2mEeeVQn2/3hW8nx1p6ur7LrT2MOs
GuvCTmDXsLmsLCuKtWXsQvYG68iGsIbqVrNd7Ax2GTtWJpX6D3uQVWLNWAN1
q9hO1pldyqqyGexRViPWIhvCqnl+7eN5se9Y41ir8o/VncuuY8e5l9vZC6wV
6x3rks1jz7OWrA87z9jqztch3jH7PtaqupnxftQVsu7sqHu+LCOZjzEvD3lX
ecYuYc/JW6gbrq43O8ZqRi3bGffCLpHPU1eMNWK1XGML+46NZNfG+mBPsYNs
OLsm+hq7n+1hXdgIdhr7gpUUGfEb3UsvVsHvOCPWtbrPYp6yp+XfGjuCTWI9
WXl1naPPsk9jnrLN8gPqhrGrY12yTewbNpRdFXOSvcJ+Z7+JyuZLA7aN/SG/
RN3N0TfYq+wvdhmbHj2HPct+ZGPY5Hi/bCP7mu2PueB8tdlW9oN8tLrrY96z
F9kv7EJ2IzuHneB3dIqexT5hfdjJrFv0SrafncmKs1NZU9HZNbqwEqxZzGl1
u9WdwY7IG4v72WvpXnJLRtILoifM8JwHstrG9o11qO7H9Dq6OyPpN9F3Zqvr
zSplJvtH7CNfx37EfpaXFxXEy+r6sarqesS8VHdQXV9WmXWPvYZ9wwawWqxP
jGM/sP6sJuvNekX4bT3Y8ex0eUfRPTd5BsVYbXmd6Auuey6rws6O+et8B5yv
KyvJmkcvZ3ti72HPyX/yu8ayKawee54dYuPY1HTPit7VNDvpl9Vyk14ZPfPU
7GRvqc7ukd8tWrC3WC12l3yBaM7ejLWTm+w/sQ81Y3tYDdbE8RuOj7juRNe9
Nc6dlYzZlJOcN84/R8wWBdlJ369i7CL5QtGS7Y3nEPuC49cdH3a+Cc53i78v
EYtFK39719/qqmvn+EPH2eIGdSv8/X6xVBT523u8nroH5Q+I1ux9lpeb7DWx
5xRmJz2+Kstz/ILjn133Aue7Ib2mv0zPi5gfBeoas9cc/61uvLoZ8S3FHmBv
sq7s/PgWYA+yt9hZbFT0bPY4+5wNZJdHz2aPsPfYu7F/u0YV9gT7Qj5I3RWx
r7JH2fvsHHZBvNes5D1szEneVbyzCuoeY/vU9VR3YXwPsZXsQ9abXcw6sb9Z
Q7GEvRr7Atsu/1PdpWxafA+xNewT1o9NiG8atpZ9yvqz8fFtwdaxz9gANjG+
S9gK9gHrxS6KdemeJ7B7WEnWhJ2tLtscbxf7N9uXfi4PZyR7YOyFC/zGllnJ
e30mJ3mn8W7jWzG+GVsa30qMNa5FVjJPtuQk8yHmRbOsZG5vZvfK74u5nZXM
u6dzkvkV86w1+yDWH3tE/qgY4ZxNMpP1HOv6K38rUrcveoHj5WoeFt3YIXaC
mOGenmODWUVji9gq9lXppB+Uy0x6X/TAPc4xQF0uK5AvU/eRuoGsLCtky9nH
0V9YDmvCHmIfxrrISub2Vud5SL5MDGInxTPhK9V9ydqwj+RHPc//spWsHfsk
I/lH4Sq2mnV2f4fljcRStj3mlbrJ8nuNLc/axTcNm8juYxmsIL5p2Hh2FyvB
Tom5xr5hpcX1bANrzz6TFxfXsLWsLftYfszYK9mqWIPsU1ZMXM3WxP2xA/Is
MYVtjL2CHZSXEVPZpthn2PfyXHET2xL9lP0oLyemsa3sLPaT/HgxnT3LurAf
5GXFzewZdjr7Wn6cmMzWs+6eVRnPuS1by95P7wE1MpNeHz1/X/R2Y0uxfPki
de+oG66uMRsac4D9xYaxRuw8tpv9yYayhmwI28X+iG8uls8GsR3st/huYg3Y
YLaT/R7PmX0b/VbMZU/FnGR11fWL9cUOsQ7su+iFYh7bnN4bf0nvT7FPtdGb
urEsY9vI16h7N54fK81as9XsvfR3ycsZyTdEfEuszEm+LTZkJH0u+t1SNojV
MfZcvs3Yn+I5s1+jz4u72fOsn+d3nLoGbDHbm16XBWwEGy76ur+RrJCNlL+t
7kj0F2P/kFcSs9jLsZ+zTHX12UL2dunke/JS+R3u7U5xo/vroe5PdrKYre6V
+M5hf8krizlsW8wD9ru8opjJXmLnu5em8X8qe4f9E9966v6JfVfcyd5Ir9dY
t22yk55S3+8Y7biZsaPjeak75u+j2KlsFNvLjrIxrDkbE3sIS0UfYUtj/vgN
Z7KR8R3GU+pqxdpku1gvdlReQ8xnO9J9LPpZ2+ykD+a7l38BiG34FA==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
WMGaxVh4fbBvlJ52Ymp9SfM/L9jfqu5YExyPpGutC45f0r7mBmsvqu/mBNuS
6pG1wT5WddYX0bmy5uGa1L5IvqFnsF6kGvCuvL9LQ97z42AfKz1zX7BflX64
M9ifSwfbDb+Qs5753+i8pBfHNPpvz7mu17nmYSH37EH/qTnXlduD/by0ta3B
sUlaXEf42JxryU+DdSfpnO8FxxTpeHuDY4G0043B8Uva4zvwMznrpZuDY5w0
1cbB/lM1lHyrfOy3eefJisnKjQup69D+qsGD9RxpJt8H6zNa74Oiv6W+14/B
eo6+71D6J8l+NQ/B2o60F+XY8kNaA18Fa7PSCr4O1qykvRyfWoNSDXdB3mvz
Md7xu2ANStrOiuj8rBr3/zZYE5P+802wViYNZFKwjidd5bosD1ft9jn9LXPW
DQ4Fa7/SCvYH65PSKPYE65P/pzkE62zSiD4J1uukP/wKd89ZIyqeuvbsI60j
WDeTRtQr+nvLDg4Ea8XSKD7K1oL+tyO4/pIe8n6whtYAvoVjY84ai2olfZ8Z
0nSD9TppJh8G63vSTLYF12XScK7N6kfZ85bgmqIefSWj51TzdnPqOC4N6vLU
8V0azk2pY7H059tSx9Z18K3w4pz1rgvh2TlrRyek1ocH0F6QOh5JO7oxdcyV
Xn1D6rgsHXtTcP5cN3V9JHuT3V2f2g6lk9+ZOi5vhC9LnWNId7o9dUxfT/8d
qfOEDfD52fpV/Scfvwk+SfZTcO4in/9n8L6AdLzy0WtbfunvYM1fWllp+q/J
4sIRqXWAl2jzqt/g3rR/Be8LSJv6J3gvQBpXUWotQrHvde6zVrGZ+xRLrUVI
7zwjtRaquHlmai1IulySWifpJTvi2vmMnVLcfrqU/IlqsdS6q7S7w1NrGj31
u7NYoDxd7y5/UoXxU4M1Z2mS26PrK+US70fXOcoldkRrAYr7Jxasp+i5e6Lr
ENWqH0bXWsoHdkVrCsoZPojWBZRLvBddmyknOYajf86a/6fRuoBi4v7oOlbx
9LPoeqyW1lR0zfaC1ma0PlIb/ji6/lHs3hddg0mP+jJam6gDH4iun5UzfBRd
Rynua/5G8w6fq5ZMXeNIH7sIHp+zPjaF+Xk053e4OHXdpP2US1PnmdpPuQKe
lvO+zCWp6ynt3RyXfVP5qOIFa9bydfJ5+u27eO7LwbWnftdvwXq79sV+h1vl
vBeWS+0zZRvHpt4Hkb63O1qLka5yWOpYqf2ymcH7C9KED0XXtzXlP6P3xbSm
tkXXmcoDv8v2dORPvonek5IfOL7gvS7t382P1pK0xtdFawHKXd8M1n90/w3R
uoBy4BMK3gNTXDgy9X6N9nqOK3jPTLXJMQXvH2i9xIL3A7SOji5Y65fdhtR7
AdrXKxS8nyH7Xxut3Ss3Pqlg/U6+5diC9/bkY9dH6yDKzzdG6wjKdVdH6x2q
GRdFaw2qJZdEayWqT1dG1+eqH5dGayWqhZdH6yOqQxdE627yM1uitRLVLMui
dRbV0ecWvBciLfHtaC1PvmhxtG6i+ndTtG6immJztA6imujdaK1EtdJRHD1y
3j9dQ//FedezC6P1RPnArdH6gmqoVdH6iGphaZnyyfm8r/ubWq0ktnda6n0Z
7Zt8Fa2hKE9eFFwLS1NdElxjStddGlyrSps9hWuH5by3sirY/0h3PS91XJaP
XR2sD0h/Vg6unGeKdKfUe1jSmZcH6wPSdRcE193SdU9OvTenfZzF9D+Ws568
LLhmlya8MriGVS17ZWp9Q/uYK4K1CPXPD67NpTnL12qd/iodLPXemfTthYyp
kLOvmB68x6c9lDMK1tnln89O7Sukk5+aen9QevvsYN1Jvuit7LnysTOC9++0
//I/PJ9IyQ==
          "]], Polygon3DBox[CompressedData["
1:eJwtmnXAVVUWxT8feI7ec32Y45jYY441dqBjj4mNUtIhIiLdjZRKdwsqSKcw
CCgICGKhWDh2d/esn+v+cb/vrrvPrXP3Xnvtfd6h9Vpef1epoqKigf5U1v/r
U0XFvtqvEyoqNpcrKm4Q/rtwXeEtwh2yiopdhU+OFRXPCl8r+97CNWXfKHxO
9D7HemvsgbJP0P46Hd+/SkXFgryiYqzwuxozRePPln2l8HuyHy57Eh4kvEh4
D+EWGr+fcH2Nv13j7xLeX7iBcE3hqzW+ivAtwhuES8JDhWfp/NHCVwrvJnyD
7OuFf9AztROeLPvOuv4zut4a4SS8QvZNwquFM+HHha/S+WXhm3T+08ILZR/H
8wpPFQ6y9xOep/G763q58GDhxcJ7Cu8hPEX4ceEJGv+d7t9GeKJwJdk363pr
hXPhlbLfwpzq2knHOmnsQTp/ovbXy36AxteQ/XbZ99KxXrLfKnyb8J7CPYR/
1TZQ+9M0fqRsO+n8B4UfFR4lXBa+X3ip8N663k06dp7Or6Rj9+jc3WWfrP3l
so+X7Xsdays8Sbiyxs/S8w4QflHnjJX9E9nvFB4u+6/Cj8p+n/ALso8R/kz2
FsIjZP9NeHbu53tJ9nHF+Z2Eh8k+THiF8JXC9wp/KvyNcE/hccLDhR8QPkn4
cuFawp8L48AjhX8XXpJ7vj/V9R8SXio8Vfgz4RnCwzT+FOH/aHydsv2N77kw
+nmyZP9cEP1+QzX+ZOErhGsL/5z5/acKjxCemfv5nwqe70WyXyx8p+wfCw/U
/9myPaZtkPAMje8o+5PB5zcT3qPkb8i3/ELntxQepfP+EG4l+2HCzYOft4e2
KYzVsQ0a2zz3t8cn8I3ZOnaucEOd/5HwPNlHC78t+yThG/V+BxTxs1X4OuF9
hGsJbxI+TudV035lvoGutTi3P3yiY9Nl30XjxwjPj/6+1YX/Jlxb9meEW2r8
IcJNg79PW+EThdsLNxB+JPf33Bwcn1/qHncLj9b1/hSen/v678g+Wfgr2VsJ
j5G9Qv7XWvaj8VXZ75D9W9nvFZ4ge0n2NrIfy7PLXl/2e4WPEW4tXE/4buFD
hZsFf889k/1jhc6fKHyA8Hi+p/B+VXwP7sU1xuhep8q+SPtvyn6Y7F1kHyf7
DXxT2Y+TfTb+LXtV2Z/U/ZYJ7yS8UGMnaUw1+Cp6Ptrikzr/P3CEbE9p/HLt
l2RfJFsnbWNkr65ja2TvLDxW+HrhtcLduKbwzXAEsUTcCt/IOwh3lH208HXC
qzNzJt8eHxgofLOe9yDtN9Kx52XbW3iE8CpdZ189/17Cw4X/K/y3KsWcauxx
xKTOb0hOCI6RKcLTtP0bf9b4xrK1JmZlvwzOke1Hbe0ZK3uo4jGdZD+15HOP
0P0e0v6zsh/M9yQGZb8CTpK9g/Ao4WuFn4DLhYcHcwbcMVXbhdqvofMbwUeZ
z60n3Lxsn8Q38QG4BB/AF4gxYv1W3b+q9pvo2Iv4q45dLnyHzm8GP8t+sHBj
2V8o+x4dgzmFex8v+2Pa36bxh1TxnFwgfGv0XBHDxPLhJXPRrMzfvr7sd8Lt
+t9Z9n/p2HRsul6u/eo6tk72K5JzAzniKa6lMb/spOvpvCeF22sbKds1fLPM
79xL+OyS5wKfIxbhUHyRd+opfFbJ79oUjhE+U/jhzBvfrm607UqeU/Yj4HzZ
Zmq7VPt1dLyJ7Ifr+aYLbxE+SO+/Sv48V/hnOFD2dcKPC1eSfXHZ79xbtnNK
notLdH7Q/kU69gT5SuN2CG/XtkP7X2t7Tfuva/tG+3Nz5/s3guN3Z53fV3iu
bFV0/8rCfYTnCJeFKwn3Fn5MeDfhDTp/lfAuwst0/kXJ3AcH/hc9wJwI95S9
V9n5tTPfRjjq/Dm58+vrwfl9N50/RHiJ7HvJvlH2J4R3FV7O95X9KOG7NP7l
sjkJboKzxurat8l+pPZb6Ng22WoK/0O4pfArwhcL7yx8ofAq4UuFo/AlwquF
LxPeRfgy4TXC+wiPJFZ0/7/reT7T/5eYL23f8s56vpna/0rjZ2r8rfr/pvDL
2j5HA8n+CHOt44/An9oGBMf4Aj1vjWRfwCdekm2lxs8S/k54lvBa4aXCFbrW
AuH1wiuEKwsvEb48WU9eofFrhVto6xfMkXPI7cL9g2NoHrlR+L7gGJ8vvFzX
e1j7X+vYw3CTtgeDY3aZ7P0z69cLdL/t5FNysuwX6dhC2dbo/AXa/03H5sn2
m451EX5I43dBH+n5DiSfyv6c7L/L3lV4huy7yr5C5z/KXMr+qOyrhecL/yo8
t2zNinZFsw4gHnXeoGCNgFb4U1t3Yk3Hk673B5wuPFM4E35C15sn/IvOmaNr
nabnWV/Ewny4T3iG8JfB37exxpdK1nRoOzQ8Wp4c3S6zz+F7+FjfzN/szoKP
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
O6cI3wy/Z+7vXih8m/AdyfFNDUE81kmOX2pU6o26+FzJNSb109Ci/0ROResN
Fh4Fnwavz/Qr+jMvB9fvw4p+I5oMbVZF+AHhZbr/PsIP4kMla1K0KT35p4N7
APTq709e30JTo62HJMcGMcL6Vd/k9aBtwf2EPsm5mxxO/6h/8nrMK8H1/n3F
/bcH9wNmZP7+tfU8H+jeTZL9jZgithokczkcDn81To41OBg+PEF4Du+r8w/V
9Rom5wZyALlgQHKsE/P0wyqEewg/Qp0iPKjoH70V3E8bmNwf3hHcT2skfF7J
OQc+HZ+szdHo1CYjk7U0GhgtPCI5V5Gz0N7Tc3MnHIpWmZpbm6C50F7Tcmsv
NB/ab1xurYEGQAtMya310DRom8m5tRwaEC04PrdWIGeSOyfmXutEw6BlJuXW
MmhAtGD73L1serr0dsfm1iZoHLTO6NzaBY2CVrk/d64h57AWMDy3Xp8q3BOu
z12/UaNQq7TL3XulZ04/eGTuXEb8o50m5M41cDhcPiY3P6GR0ErDcut31oCo
14bkrkdZE2Bt4MHc9SFrAtRjQ3PXA5OD67FRwjVL1mBosd76Hv3Jj8H9+MG5
61XWHFh7GJi7l0zPHX6slZwv6dlQD/XKrRXQDNS/PXP35ugRUh+fU/DJ+9Hc
OyGZe6l5qX2pX3YvuWaldh1V+Cs1GLXYwUX8Pa3xBwqPEV5cco1FrdUnd/+Z
NQbqnX65e3+sGVAv3Zdbq8CXrBX0z70ewJoL9fQA4atL7plTH3fJ3QunZ07v
vGtubUR80avunJtv6ZnTOx+Uey2CNRbWWjrl5j966PTLuwmfX3JPk95m39z9
dHqU1F89cvc26WnSH+ieu/dJz5PeZ4fctRM1FGslLZK1B/GC9ngguVb+ILjf
fG+ydkfDf18258A9cA69TTjnpSI/oo/55nx71rBZm6EHzftfH92bZo38ueCe
OmvncBRcBYfSq2TNbUuhp6kXqB/Q16zxsXbLmvHW4B48a8nU7/Tw0dRoazRw
paKeRBujeVkrQ7OhhenZ3h2c0+jlwkmvBnMkXAWnhWgfg+vwkR+DfQjfgcM/
CvYhuJ0192cLvc9aPL9huCO4R8xvG+DYIcEcC/eSQ7sFczC5lRw/ITiHk/vJ
4bMLvUVuZw3mquCeNmszbZK1wyod+6HsnEPuISfQS2ZNc2NwD5i1Ttbo4Jt2
0f7EN+RbtoajZRtEHSK8Qtt3ZWtS+KJjNP+sy8xvXYS7Cn+jbXnwGusrmZ+B
Z8FH3hLemJlve0Tz1dfalgWvQW+T7Vvhx4PXYF/N7GP4GjmPtQ7WbDcE96xZ
y2WNEn5uH80f5MD3Cn3411p75ni6IXotkZxMbibH8FsKev7wTaPoeCEHkgvJ
kfTKyUHkInIQaz3koB2FXmWthxxGLkNPVyrqO/Q1epl6jzVT8kGHaL5kTYH4
bRwdb69n1s2s2zO/bMz1PSXbqNFYm6XmoXbrmKwV0fxo/25F/uSb8m17JscO
MUAsdE3+1swZc9cjOTbwSXyzU3LvDQ2KFu2SPLdoDrQH34jcQk7h21EDkT9a
R/MbHA/XkyPoxXVO1ir09Ojt7aR7bAp+xq9l754cC8QwsdxBuEPJPT56fe2S
e3f06OjV9UrmCjgBbmib3LtDI6OVWyfPFT6D73AP8Njoe9+T7Ev4JL55V3Lv
npqK2qp9cm+RniG9w7uTfZGePr39lsm9fXr+9P5bJfs2Povv8huXZwr+4bcv
/GZkZRE/8BG/weC3GMTIG5lrItZqqImolejP0s+jf0c/lRqetStqOGp7ahTW
YqjJqV3Q+FcG91DQ/tQorHXS86F2YU20e3BOYK2Unu39wTmLXi4xOjE4Z68r
4ptn5NmI97/WpIL7i/SGWPNh7Yee6JTkmu3j4N9oVC3sX0bXWKwVUYP9FFzj
UZvxm57Xgtcs+a0Pmvvq4JoFLT46+d2ZA3qbaPB6wRodbY6mbxWs0dH69GRi
dM1Hr+b/ODU3tA==
          "]], Polygon3DBox[CompressedData["
1:eJwt12e0VNUVAODBBAbfGx+QBFsUJEFAlzWxQCIISlVQQIoQKaJU5T2K1NCV
Ll2qdKQqValKD1VFiihCVBRBrFhCjYrfXtcfe627v9n33pm555x9bokWeXVz
L0mlUntFfrE+k0q9l06lzhZIpc6JV3JSqZ6sKesr7yfasOdYezZSPkp0YqNZ
LzZNPl30YZ3Yw6yDvKNozhawhWy3/E0xkb3GdrCT8i/EHLaYrWEfyA+LqSw3
O5UayAY53puVSu0TD7ObWCU1+f2YLmyMc/uwJexJto2NZX3ZUtaSbWfPsnZs
CqvDVrCurCEbzCqwmVnJb+vNFsd/Ir52/xdYf7Zc3lrdTnXjWD+2jLViO9g7
Yo+Y6LPnfPaNcyc4ftbxq+raqtvt827sUTaE3ctmsO6sERvKKrJZrAt7hD3L
yrEprB9rzSayh9gS1p+1YZPYw2wZ68OeYONYDbaI9WWt2ARWiy1lA1hbNpnV
ZstZD9aYDWOV2Oys5PnWTifjIsbHUb+tM6vD+svvVjdJ3TOsLhvAyrLJbDwb
wFbEmGK7WG/Wgo1l1dlCNor1ZIvY42wLG8Q6sJmsAVvNnmaV0sk4i/F2yHdp
z+5jneRl1A1Vl8vuZ53ZDWwYm2YMfcbyi/Xsn/KO6h6Q91R3OxurLo9VZ93Z
rWwM68BqsB7sNjaatWF/Yy3iO4s9vktb9nf2hPwqdT3VtWY3ssasCOvMWrGS
rBarKbY6923+lpiUScb/t2yw446OZ6lp6Nw1Wcm8zE0n8y/m4ZfqBrI8NkNe
X90qdSNZD7Yw5iTbzIawTmw2e5StZc+zbmw+a8o2sqGsM5vDGrF1bBjrwuay
x9gGNpx1ZfNYE7aejWDd2QLWjG1iT7F/sHasBOuflaw5zdLJ2hJrzAm/oxd7
nI2RV1O3IOaM5zSajfb5Z/LjMRfYNLZBXRd1/4vvxxazPWwg+718iJjPdsa6
xi7G3Gej4r6u96n8WMxBNibuy07IP485yEbG+seOyj+JecQms3WxHrre9zFn
2NgYz+pOyr+I/5QtZXvVDVZXQD5ULGC7WP9YkOWDxTy2I+YW+yXGHxsUa5Pr
7ZcfEO2zk3VlYE4yRmKsPMNGsBHsI/nHYiB7iW1zvd6u91PMIzaXbY/1mv0c
ayKbyTaz7uxsrCVsOtvIurLTMdbYLLaF9WDnYt1gM9gm1o2diTWHTWJrowew
79i/Pcvm8dxYVTY/5r66iWxNzF92KurYeLaKRaP6JtZxtp59xMazP8UYEKvY
+9GPWE48H/EaO8hGsEw8W7GSvRfjil0mHyc2sI/ZBFY07in+w47HPGLXyCeI
bexE9Dd2rXy4WMLeYYNYfvkLYiM7Gr2NXR7jR6xmh9hoVih+q9jOPmczWDH5
i+IgO8OWsJvlHWIsRF/wLN/1+w/G/Ij7sJXq2qv7OuYWW8b2sSEsHeNR7GGn
2Dx2fTwL8XasIWwuKymfIt5lp9lidpO8sxjGhrvvYdc/Eut9jNXoAeyQ/APR
MeZS9Cj2nvx90Sv+L7ba9fJc71s21zOfwl5nb4gX1Ldj5Vhb+XXqBqhbxXaz
C2wZu861nhAPsTxWmk1U15xVY21YcTaKNWGVWUt2DXueNWVVWCt2LRvBWrBa
LJeVYhOif7Bn2PhYd9kb7HFWk7Vn17PxrC17MuYbu4e9wtqxlrEvYeXZYtaM
VWWtWTE2MtZ79hjrze5kc6NXsCasD7uLzfutB/yVPcAeFPX8V1PVfch+ka9U
d0f0KLWpmBfxPMXbmaQPVkwnfSf6T+OcpB/dnk76SfSVBmwHO84KiHQ8K/ak
a9Zz3EXNTa471fVbsvqsK7uZTYvvxxqwbuwWNj3WcfZ0rDmsClvJ5rvHHHaA
DWPn2WPq7mXN2ZVsCLufXcsqsNP5XJ89yEqzuuwXlsdqsOvZQ+wn1p49wEqx
2uxnlsvqsltZNVbQPbqzmqwMq8cuquvA6rBbWBWWVteN1WI3sAYFkv82/uPa
7GZ2PyvAurJH2G2sBruU9WCN2D2sCSvKBrLGrDxryi5ng9i/WAXWjF3BBrNq
rASrys77fu1YVXYdq8zOsbasCivO7mNnWRtWnf2FVWcX2FOsAbuL1Wc57tGH
1Wd3skfYZaw3e5SVZY1YYdaPNWR3s4asEOvL6rE7WB2WYb1YZVaMVWRn3Lc1
W+2Zv8n+z5arKxF9jM1m+9lQdkHdK+xVdoxNYVnq3mRfsqujP7J7s5N3kvd/
G6MxVksUSt4N1qaTd4V4ZyjKlrPN7Hv5Aude4dzd7At2VazRrAJ7i30l/3Os
lawi28VOyq+MPQIrn53MjxPyy0VRUdI9drLPHV8Rc03dPepWsC3yH9x3IbuK
vcq2sh/ZInZ1rM1sE/uOzWdXsjXsHXaRrWKls5N3oZ3p5P0r3sOucd+VbBc7
L1+qrri619l+dkn0VnYDW8f2yfNFH2Vl2Fq2V56KOc5KRc9i6+Rfut5MVjj2
JOx19hWbxYqwN9gB9juxjt0YPYsdk/9R7Gbl2MtshfxT505mBdkmdphlxX6A
3RZ9lh2SFxQb2C3ZSQ+JXjItk/SbH3OSHhK9ZGom6Tc/5CR7mNjLzMgke68z
Ocn+J/ZBUzJJj/yOfSj/r5ieSfZAp9lCxy87PuL7jXHffNlJP3oxnbyDxrto
Pv/zIracfSKfpO7S7OR9dVE6eQeNd9FMoaQHRy9+MZP0vu9zkn1h7A/nZJI9
3wX2kuNxjrc6r6frfeXzbexT9gexi5V1jy3sY3khsZ3dyTazI/JssZndHnsS
9om8iNjJ7mZb2VF5YbGD3ZWdvBfH+/HkTLJfPJWT7FFjrzozk+xxz+Yk++XY
N8/OJHvc8znJnjf2vrMyyd76HNvo+APHl4qN7nFr7BGzkzEbY/cUnyX/FX8d
TRA=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
         "Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ckuX2EYwOGXv7mmuADTnvQCKi6AWFgSGzsibImVhJBeQMUFVOzMQ2vJ
FZjnISJiiqhqSSP6fInk/PKcnMWb7z1fTWdfa29WRAzpj9L7L13oOT+inJmC
iCpWsJ41bOBnNrOR7WxhNzs4wB6OcZDj/MpJTnCRU1xnbWHEFV+0qd+603Qm
Yosz3OYsdzjHXc5zjwvc5yIPuMRDLvOIKzzmD57wJ0+5yjMO50Rc81XnaW/d
a835NtJcrnGSCxznd47xGwc4ym72s51dbGYbG9jEen5hFetYzkpW2/+Sf1Wm
J90q1/lK0/9nSbobFvM9O+IT31jEfyxM52dBmsP8tAfz0jzm8pFWjQdm0o70
xIiPNx/3/x93XEp7
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktL1FEYwOEzNl7GL1BbF9oHEN3oQiLX4QXS1MwZtznoOkQXIiKpYSAS
Ke6MqLVErSO8a46jhIh5WXgXV+bt+dPix/PuznsOpyiZru2IhRD6dGq44iH/
qDgRQoKlfMQnfMwalvMVq5lmPbuZ4hCH1WX+zF5+4wh/cZJZfuUBfzBZGMI2
zzWnY+3peW4I82zgAhu5yBdcYhOX2cwVtnCVL9mq39GeXGMbM9FZXGeKWbZz
gxV5IezwQps60b5y7DbLS7t+j/biF2Y4wZ/RfTnDHn7itDrNg0zyDev4mk+j
/VjGZyxhFR+y1VlbPFOBjrSrqXgI+ZxkHj8ylx8Y5zgfcIw5fM9RxczvGDjM
O+Nb3nKQNxzgNfv5j5Xe4W/s/3+4BwDCTkg=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jssnlEcwOHjG0hJXOpWDBjExtKViIg0bUnzRaQJk8RCwmBiEomkJjEx
IQYm6aRT04miX+vWiIjb4m5zv7aeL4Zfnv+7nPec97zFLZ3RjoQQQr+OIyFc
eNjnulqTQ4iwixnsYxGHWM5xVvIr6/iDzVzistrNZ+zhPQf4KiWEEb7hFEv5
jRPc5KnmdKhdpSaF8JNpnGc6F5jBRb7mL2Yyxiz+ZjZz9Mecy6X4O7nMPK4w
n6ss4BrPuRXfs/7qSHuqtrdZvuUMSzjJHA4ziV9464zdPOGx2swxNvE7P3Ka
FRxlGQdZyF6mc8xaG/E1lKAD7ehzogtiI/+7owb+Y5RP/MRH1vOBH/he9+Z3
vGMtb1nDG1bzmlW8YiUveeE7bEde/odnYzFN3A==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2037, 2335, 956, 2036, 3278, 2244, 2038, 3279, 2245, 2039, 
       3280, 2246, 2040, 3281, 2247, 2041, 3282, 2248, 2042, 3283, 2249, 2043,
        2980, 3368, 2044, 3284, 2250, 2045, 3285, 2251, 2046, 3286, 2252, 
       2047, 3287, 2253, 2048, 3288, 2254, 2049, 1152, 2255, 2336}], 
      Line3DBox[{2051, 2981, 3369, 2050, 970, 2052, 3289, 2256, 2053, 3290, 
       2257, 2054, 3291, 2258, 2055, 3292, 2259, 2056, 3293, 2260, 2057, 2982,
        3370, 2058, 2983, 3371, 2059, 3294, 2261, 2060, 3295, 2262, 2061, 
       3296, 2263, 2062, 3297, 2264, 2063, 3298, 2265, 2064}], 
      Line3DBox[{2066, 2984, 3372, 2065, 2985, 3373, 2067, 985, 2068, 3299, 
       2266, 2069, 3300, 2267, 2070, 3301, 2268, 2071, 3302, 2269, 2072, 2986,
        3374, 2073, 2987, 3375, 2074, 2988, 3376, 2075, 3303, 2270, 2076, 
       3304, 2271, 2077, 3305, 2272, 2078, 3306, 2273, 2079}], 
      Line3DBox[{2081, 2989, 3377, 2080, 2990, 3378, 2082, 2991, 3379, 2083, 
       1000, 2084, 3307, 2274, 2085, 3308, 2275, 2086, 3309, 2276, 2087, 2992,
        3380, 2088, 2993, 3381, 2089, 2994, 3382, 2090, 2995, 3383, 2091, 
       3310, 2277, 2092, 3311, 2278, 2093, 3312, 2279, 2094}], 
      Line3DBox[{2096, 2996, 3384, 2095, 2997, 3385, 2097, 2998, 3386, 2098, 
       2999, 3387, 2099, 1015, 2100, 3313, 2280, 2101, 3314, 2281, 2102, 3000,
        3388, 2103, 3001, 3389, 2104, 3002, 3390, 2105, 3003, 3391, 2106, 
       3004, 3392, 2107, 3315, 2282, 2108, 3316, 2283, 2109}], 
      Line3DBox[{2111, 3005, 3393, 2110, 3006, 3394, 2112, 3007, 3395, 2113, 
       3008, 3396, 2114, 3009, 3397, 2115, 1030, 2116, 3317, 2284, 2117, 3010,
        3398, 2118, 3011, 3399, 2119, 3012, 3400, 2120, 3013, 3401, 2121, 
       3014, 3402, 2122, 3015, 3403, 2123, 3318, 2285, 2124}], 
      Line3DBox[{106, 845, 107, 846, 108, 847, 109, 848, 110, 849, 111, 850, 
       112, 851, 113, 852, 114, 853, 115, 854, 116, 855, 117, 856, 118, 857, 
       119, 858, 120}], 
      Line3DBox[{2126, 3016, 3404, 2125, 3017, 3405, 2127, 3018, 3406, 2128, 
       3019, 3407, 2129, 3020, 3408, 2130, 3021, 3409, 2131, 1045, 2132, 3022,
        3410, 2133, 3023, 3411, 2134, 3024, 3412, 2135, 3025, 3413, 2136, 
       3026, 3414, 2137, 3027, 3415, 2138, 3028, 3416, 2139}], 
      Line3DBox[{2141, 3319, 2286, 2140, 3320, 2287, 2142, 3321, 2288, 2143, 
       3322, 2289, 2144, 3323, 2290, 2145, 3324, 2291, 2146, 3325, 2292, 2147,
        1060, 2148, 3326, 2293, 2149, 3327, 2294, 2150, 3328, 2295, 2151, 
       3329, 2296, 2152, 3330, 2297, 2153, 3331, 2298, 2154}], 
      Line3DBox[{2156, 3029, 3417, 2155, 3332, 2299, 2157, 3333, 2300, 2158, 
       3334, 2301, 2159, 3335, 2302, 2160, 3336, 2303, 2161, 3337, 2304, 2162,
        3030, 3418, 2163, 1075, 2164, 3338, 2305, 2165, 3339, 2306, 2166, 
       3340, 2307, 2167, 3341, 2308, 2168, 3342, 2309, 2169}], 
      Line3DBox[{2171, 3031, 3419, 2170, 3032, 3420, 2172, 3343, 2310, 2173, 
       3344, 2311, 2174, 3345, 2312, 2175, 3346, 2313, 2176, 3347, 2314, 2177,
        3033, 3421, 2178, 3034, 3422, 2179, 1090, 2180, 3348, 2315, 2181, 
       3349, 2316, 2182, 3350, 2317, 2183, 3351, 2318, 2184}], 
      Line3DBox[{2186, 3035, 3423, 2185, 3036, 3424, 2187, 3037, 3425, 2188, 
       3352, 2319, 2189, 3353, 2320, 2190, 3354, 2321, 2191, 3355, 2322, 2192,
        3038, 3426, 2193, 3039, 3427, 2194, 3040, 3428, 2195, 1105, 2196, 
       3356, 2323, 2197, 3357, 2324, 2198, 3358, 2325, 2199}], 
      Line3DBox[{2201, 3041, 3429, 2200, 3042, 3430, 2202, 3043, 3431, 2203, 
       3044, 3432, 2204, 3359, 2326, 2205, 3360, 2327, 2206, 3361, 2328, 2207,
        3045, 3433, 2208, 3046, 3434, 2209, 3047, 3435, 2210, 3048, 3436, 
       2211, 1120, 2212, 3362, 2329, 2213, 3363, 2330, 2214}], 
      Line3DBox[{2216, 3049, 3437, 2215, 3050, 3438, 2217, 3051, 3439, 2218, 
       3052, 3440, 2219, 3053, 3441, 2220, 3364, 2331, 2221, 3365, 2332, 2222,
        3054, 3442, 2223, 3055, 3443, 2224, 3056, 3444, 2225, 3057, 3445, 
       2226, 3058, 3446, 2227, 1135, 2228, 3366, 2333, 2229}], 
      Line3DBox[{2243, 2339, 1154, 2242, 3457, 3069, 2241, 3456, 3068, 2240, 
       3455, 3067, 2239, 3454, 3066, 2238, 3453, 3065, 2237, 3452, 3064, 2236,
        2334, 3367, 2235, 3451, 3063, 2234, 3450, 3062, 2233, 3449, 3061, 
       2232, 3448, 3060, 2231, 3447, 3059, 2230, 1153, 2337, 2338}], 
      Line3DBox[{2341, 2654, 1381, 2340, 3563, 2563, 2342, 3564, 2564, 2343, 
       3565, 2565, 2344, 3566, 2566, 2345, 3567, 2567, 2346, 3568, 2568, 2347,
        3569, 3070, 3458, 2348, 3570, 2569, 2349, 3571, 2570, 2350, 3572, 
       2571, 2351, 3573, 2572, 2352, 3574, 2573, 2353, 3173, 3667, 2574, 
       2655}], Line3DBox[{2355, 3071, 3459, 2354, 1396, 2356, 3575, 2575, 
       2357, 3576, 2576, 2358, 3577, 2577, 2359, 3578, 2578, 2360, 3579, 2579,
        2361, 3580, 3072, 3460, 2362, 3073, 3461, 2363, 3581, 2580, 2364, 
       3582, 2581, 2365, 3583, 2582, 2366, 3584, 2583, 2367, 3585, 2584, 
       2368}], Line3DBox[{2370, 3074, 3462, 2369, 3075, 3463, 2371, 1412, 
       2372, 3586, 2585, 2373, 3587, 2586, 2374, 3588, 2587, 2375, 3589, 2588,
        2376, 3590, 3076, 3464, 2377, 3077, 3465, 2378, 3078, 3466, 2379, 
       3591, 2589, 2380, 3592, 2590, 2381, 3593, 2591, 2382, 3594, 2592, 
       2383}], Line3DBox[{2385, 3079, 3467, 2384, 3080, 3468, 2386, 3081, 
       3469, 2387, 1428, 2388, 3595, 2593, 2389, 3596, 2594, 2390, 3597, 2595,
        2391, 3598, 3082, 3470, 2392, 3083, 3471, 2393, 3084, 3472, 2394, 
       3085, 3473, 2395, 3599, 2596, 2396, 3600, 2597, 2397, 3601, 2598, 
       2398}], Line3DBox[{2400, 3086, 3474, 2399, 3087, 3475, 2401, 3088, 
       3476, 2402, 3089, 3477, 2403, 1444, 2404, 3602, 2599, 2405, 3603, 2600,
        2406, 3604, 3090, 3478, 2407, 3091, 3479, 2408, 3092, 3480, 2409, 
       3093, 3481, 2410, 3094, 3482, 2411, 3605, 2601, 2412, 3606, 2602, 
       2413}], Line3DBox[{2415, 3095, 3483, 2414, 3096, 3484, 2416, 3097, 
       3485, 2417, 3098, 3486, 2418, 3099, 3487, 2419, 1460, 2420, 3607, 2603,
        2421, 3608, 3100, 3488, 2422, 3101, 3489, 2423, 3102, 3490, 2424, 
       3103, 3491, 2425, 3104, 3492, 2426, 3105, 3493, 2427, 3609, 2604, 
       2428}], Line3DBox[{2430, 3106, 3494, 2429, 3107, 3495, 2431, 3108, 
       3496, 2432, 3109, 3497, 2433, 3110, 3498, 2434, 3111, 3499, 2435, 1476,
        2436, 3610, 3112, 3500, 2437, 3113, 3501, 2438, 3114, 3502, 2439, 
       3115, 3503, 2440, 3116, 3504, 2441, 3117, 3505, 2442, 3118, 3506, 
       2443}], Line3DBox[{2447, 3611, 2605, 2445, 3612, 2606, 2449, 3613, 
       2607, 2451, 3614, 2608, 2453, 3615, 2609, 2455, 3616, 2610, 2457, 3617,
        2611, 2459, 3618, 1493, 2461, 3619, 2612, 2463, 3620, 2613, 2465, 
       3621, 2614, 2467, 3622, 2615, 2469, 3623, 2616, 2471, 3624, 2617, 
       2473}], Line3DBox[{2472, 3520, 3131, 2470, 3519, 3130, 2468, 3518, 
       3129, 2466, 3517, 3128, 2464, 3516, 3127, 2462, 3515, 3126, 2460, 3514,
        1492, 2458, 3513, 3125, 2456, 3512, 3124, 2454, 3511, 3123, 2452, 
       3510, 3122, 2450, 3509, 3121, 2448, 3508, 3120, 2444, 3507, 3119, 
       2446}], Line3DBox[{2475, 3132, 3521, 2474, 3625, 2618, 2476, 3626, 
       2619, 2477, 3627, 2620, 2478, 3628, 2621, 2479, 3629, 2622, 2480, 3630,
        2623, 2481, 3631, 3133, 3522, 2482, 1509, 2483, 3632, 2624, 2484, 
       3633, 2625, 2485, 3634, 2626, 2486, 3635, 2627, 2487, 3636, 2628, 
       2488}], Line3DBox[{2490, 3134, 3523, 2489, 3135, 3524, 2491, 3637, 
       2629, 2492, 3638, 2630, 2493, 3639, 2631, 2494, 3640, 2632, 2495, 3641,
        2633, 2496, 3642, 3136, 3525, 2497, 3137, 3526, 2498, 1525, 2499, 
       3643, 2634, 2500, 3644, 2635, 2501, 3645, 2636, 2502, 3646, 2637, 
       2503}], Line3DBox[{2505, 3138, 3527, 2504, 3139, 3528, 2506, 3140, 
       3529, 2507, 3647, 2638, 2508, 3648, 2639, 2509, 3649, 2640, 2510, 3650,
        2641, 2511, 3651, 3141, 3530, 2512, 3142, 3531, 2513, 3143, 3532, 
       2514, 1541, 2515, 3652, 2642, 2516, 3653, 2643, 2517, 3654, 2644, 
       2518}], Line3DBox[{2520, 3144, 3533, 2519, 3145, 3534, 2521, 3146, 
       3535, 2522, 3147, 3536, 2523, 3655, 2645, 2524, 3656, 2646, 2525, 3657,
        2647, 2526, 3658, 3148, 3537, 2527, 3149, 3538, 2528, 3150, 3539, 
       2529, 3151, 3540, 2530, 1557, 2531, 3659, 2648, 2532, 3660, 2649, 
       2533}], Line3DBox[{2535, 3152, 3541, 2534, 3153, 3542, 2536, 3154, 
       3543, 2537, 3155, 3544, 2538, 3156, 3545, 2539, 3661, 2650, 2540, 3662,
        2651, 2541, 3663, 3157, 3546, 2542, 3158, 3547, 2543, 3159, 3548, 
       2544, 3160, 3549, 2545, 3161, 3550, 2546, 1573, 2547, 3664, 2652, 
       2548}], Line3DBox[{2562, 2659, 1593, 2561, 3562, 3172, 2560, 3561, 
       3171, 2559, 3560, 3170, 2558, 3559, 3169, 2557, 3558, 3168, 2556, 3557,
        3167, 3666, 2555, 2653, 3665, 2554, 3556, 3166, 2553, 3555, 3165, 
       2552, 3554, 3164, 2551, 3553, 3163, 2550, 3552, 3162, 2549, 3551, 2657,
        2656, 2658}], 
      Line3DBox[{2661, 2974, 1820, 2660, 3773, 2883, 2662, 3774, 2884, 2663, 
       3775, 2885, 2664, 3776, 2886, 2665, 3777, 2887, 2666, 3778, 2888, 2667,
        3779, 3174, 3668, 2668, 3780, 2889, 2669, 3781, 2890, 2670, 3782, 
       2891, 2671, 3783, 2892, 2672, 3784, 2893, 2673, 3277, 3877, 2894, 
       2975}], Line3DBox[{2675, 3175, 3669, 2674, 1835, 2676, 3785, 2895, 
       2677, 3786, 2896, 2678, 3787, 2897, 2679, 3788, 2898, 2680, 3789, 2899,
        2681, 3790, 3176, 3670, 2682, 3177, 3671, 2683, 3791, 2900, 2684, 
       3792, 2901, 2685, 3793, 2902, 2686, 3794, 2903, 2687, 3795, 2904, 
       2688}], Line3DBox[{2690, 3178, 3672, 2689, 3179, 3673, 2691, 1851, 
       2692, 3796, 2905, 2693, 3797, 2906, 2694, 3798, 2907, 2695, 3799, 2908,
        2696, 3800, 3180, 3674, 2697, 3181, 3675, 2698, 3182, 3676, 2699, 
       3801, 2909, 2700, 3802, 2910, 2701, 3803, 2911, 2702, 3804, 2912, 
       2703}], Line3DBox[{2705, 3183, 3677, 2704, 3184, 3678, 2706, 3185, 
       3679, 2707, 1867, 2708, 3805, 2913, 2709, 3806, 2914, 2710, 3807, 2915,
        2711, 3808, 3186, 3680, 2712, 3187, 3681, 2713, 3188, 3682, 2714, 
       3189, 3683, 2715, 3809, 2916, 2716, 3810, 2917, 2717, 3811, 2918, 
       2718}], Line3DBox[{2720, 3190, 3684, 2719, 3191, 3685, 2721, 3192, 
       3686, 2722, 3193, 3687, 2723, 1883, 2724, 3812, 2919, 2725, 3813, 2920,
        2726, 3814, 3194, 3688, 2727, 3195, 3689, 2728, 3196, 3690, 2729, 
       3197, 3691, 2730, 3198, 3692, 2731, 3815, 2921, 2732, 3816, 2922, 
       2733}], Line3DBox[{2735, 3199, 3693, 2734, 3200, 3694, 2736, 3201, 
       3695, 2737, 3202, 3696, 2738, 3203, 3697, 2739, 1899, 2740, 3817, 2923,
        2741, 3818, 3204, 3698, 2742, 3205, 3699, 2743, 3206, 3700, 2744, 
       3207, 3701, 2745, 3208, 3702, 2746, 3209, 3703, 2747, 3819, 2924, 
       2748}], Line3DBox[{2750, 3210, 3704, 2749, 3211, 3705, 2751, 3212, 
       3706, 2752, 3213, 3707, 2753, 3214, 3708, 2754, 3215, 3709, 2755, 1915,
        2756, 3820, 3216, 3710, 2757, 3217, 3711, 2758, 3218, 3712, 2759, 
       3219, 3713, 2760, 3220, 3714, 2761, 3221, 3715, 2762, 3222, 3716, 
       2763}], Line3DBox[{2767, 3821, 2925, 2765, 3822, 2926, 2769, 3823, 
       2927, 2771, 3824, 2928, 2773, 3825, 2929, 2775, 3826, 2930, 2777, 3827,
        2931, 2779, 3828, 1932, 2781, 3829, 2932, 2783, 3830, 2933, 2785, 
       3831, 2934, 2787, 3832, 2935, 2789, 3833, 2936, 2791, 3834, 2937, 
       2793}], Line3DBox[{2792, 3730, 3235, 2790, 3729, 3234, 2788, 3728, 
       3233, 2786, 3727, 3232, 2784, 3726, 3231, 2782, 3725, 3230, 2780, 3724,
        1931, 2778, 3723, 3229, 2776, 3722, 3228, 2774, 3721, 3227, 2772, 
       3720, 3226, 2770, 3719, 3225, 2768, 3718, 3224, 2764, 3717, 3223, 
       2766}], Line3DBox[{2795, 3236, 3731, 2794, 3835, 2938, 2796, 3836, 
       2939, 2797, 3837, 2940, 2798, 3838, 2941, 2799, 3839, 2942, 2800, 3840,
        2943, 2801, 3841, 3237, 3732, 2802, 1948, 2803, 3842, 2944, 2804, 
       3843, 2945, 2805, 3844, 2946, 2806, 3845, 2947, 2807, 3846, 2948, 
       2808}], Line3DBox[{2810, 3238, 3733, 2809, 3239, 3734, 2811, 3847, 
       2949, 2812, 3848, 2950, 2813, 3849, 2951, 2814, 3850, 2952, 2815, 3851,
        2953, 2816, 3852, 3240, 3735, 2817, 3241, 3736, 2818, 1964, 2819, 
       3853, 2954, 2820, 3854, 2955, 2821, 3855, 2956, 2822, 3856, 2957, 
       2823}], Line3DBox[{2825, 3242, 3737, 2824, 3243, 3738, 2826, 3244, 
       3739, 2827, 3857, 2958, 2828, 3858, 2959, 2829, 3859, 2960, 2830, 3860,
        2961, 2831, 3861, 3245, 3740, 2832, 3246, 3741, 2833, 3247, 3742, 
       2834, 1980, 2835, 3862, 2962, 2836, 3863, 2963, 2837, 3864, 2964, 
       2838}], Line3DBox[{2840, 3248, 3743, 2839, 3249, 3744, 2841, 3250, 
       3745, 2842, 3251, 3746, 2843, 3865, 2965, 2844, 3866, 2966, 2845, 3867,
        2967, 2846, 3868, 3252, 3747, 2847, 3253, 3748, 2848, 3254, 3749, 
       2849, 3255, 3750, 2850, 1996, 2851, 3869, 2968, 2852, 3870, 2969, 
       2853}], Line3DBox[{2855, 3256, 3751, 2854, 3257, 3752, 2856, 3258, 
       3753, 2857, 3259, 3754, 2858, 3260, 3755, 2859, 3871, 2970, 2860, 3872,
        2971, 2861, 3873, 3261, 3756, 2862, 3262, 3757, 2863, 3263, 3758, 
       2864, 3264, 3759, 2865, 3265, 3760, 2866, 2012, 2867, 3874, 2972, 
       2868}], Line3DBox[{2882, 2979, 2032, 2881, 3772, 3276, 2880, 3771, 
       3275, 2879, 3770, 3274, 2878, 3769, 3273, 2877, 3768, 3272, 2876, 3767,
        3271, 3876, 2875, 2973, 3875, 2874, 3766, 3270, 2873, 3765, 3269, 
       2872, 3764, 3268, 2871, 3763, 3267, 2870, 3762, 3266, 2869, 3761, 2977,
        2976, 2978}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{749, 957, 3278, 750, 970, 776, 3373, 984, 790, 3378, 998, 
       804, 3385, 1012, 818, 3394, 1026, 832, 3405, 1040, 846, 1054, 3320, 
       860, 1068, 3332, 874, 3420, 1082, 888, 3424, 1096, 902, 3430, 1110, 
       916, 3438, 1124, 930, 3447, 1138, 944}], 
      Line3DBox[{751, 958, 3279, 752, 971, 3289, 777, 985, 791, 3379, 999, 
       805, 3386, 1013, 819, 3395, 1027, 833, 3406, 1041, 847, 1055, 3321, 
       861, 1069, 3333, 875, 1083, 3343, 889, 3425, 1097, 903, 3431, 1111, 
       917, 3439, 1125, 931, 3448, 1139, 945}], 
      Line3DBox[{753, 959, 3280, 754, 972, 3290, 778, 986, 3299, 792, 1000, 
       806, 3387, 1014, 820, 3396, 1028, 834, 3407, 1042, 848, 1056, 3322, 
       862, 1070, 3334, 876, 1084, 3344, 890, 1098, 3352, 904, 3432, 1112, 
       918, 3440, 1126, 932, 3449, 1140, 946}], 
      Line3DBox[{755, 960, 3281, 756, 973, 3291, 779, 987, 3300, 793, 1001, 
       3307, 807, 1015, 821, 3397, 1029, 835, 3408, 1043, 849, 1057, 3323, 
       863, 1071, 3335, 877, 1085, 3345, 891, 1099, 3353, 905, 1113, 3359, 
       919, 3441, 1127, 933, 3450, 1141, 947}], 
      Line3DBox[{757, 961, 3282, 758, 974, 3292, 780, 988, 3301, 794, 1002, 
       3308, 808, 1016, 3313, 822, 1030, 836, 3409, 1044, 850, 1058, 3324, 
       864, 1072, 3336, 878, 1086, 3346, 892, 1100, 3354, 906, 1114, 3360, 
       920, 1128, 3364, 934, 3451, 1142, 948}], 
      Line3DBox[{759, 962, 3283, 760, 975, 3293, 781, 989, 3302, 795, 1003, 
       3309, 809, 1017, 3314, 823, 1031, 3317, 837, 1045, 851, 1059, 3325, 
       865, 1073, 3337, 879, 1087, 3347, 893, 1101, 3355, 907, 1115, 3361, 
       921, 1129, 3365, 935, 1143, 3367, 949}], 
      Line3DBox[{8, 2043, 23, 2057, 38, 2072, 53, 2087, 68, 2102, 83, 2117, 
       98, 2132, 113, 2147, 128, 2162, 143, 2177, 158, 2192, 173, 2207, 188, 
       2222, 203, 2236, 218}], 
      Line3DBox[{761, 3368, 963, 762, 3370, 976, 782, 3374, 990, 796, 3380, 
       1004, 810, 3388, 1018, 824, 3398, 1032, 838, 3410, 1046, 852, 1060, 
       866, 3418, 1074, 880, 3421, 1088, 894, 3426, 1102, 908, 3433, 1116, 
       922, 3442, 1130, 936, 3452, 1144, 950}], 
      Line3DBox[{763, 964, 3284, 764, 3371, 977, 783, 3375, 991, 797, 3381, 
       1005, 811, 3389, 1019, 825, 3399, 1033, 839, 3411, 1047, 853, 1061, 
       3326, 867, 1075, 881, 3422, 1089, 895, 3427, 1103, 909, 3434, 1117, 
       923, 3443, 1131, 937, 3453, 1145, 951}], 
      Line3DBox[{765, 965, 3285, 766, 978, 3294, 784, 3376, 992, 798, 3382, 
       1006, 812, 3390, 1020, 826, 3400, 1034, 840, 3412, 1048, 854, 1062, 
       3327, 868, 1076, 3338, 882, 1090, 896, 3428, 1104, 910, 3435, 1118, 
       924, 3444, 1132, 938, 3454, 1146, 952}], 
      Line3DBox[{767, 966, 3286, 768, 979, 3295, 785, 993, 3303, 799, 3383, 
       1007, 813, 3391, 1021, 827, 3401, 1035, 841, 3413, 1049, 855, 1063, 
       3328, 869, 1077, 3339, 883, 1091, 3348, 897, 1105, 911, 3436, 1119, 
       925, 3445, 1133, 939, 3455, 1147, 953}], 
      Line3DBox[{769, 967, 3287, 770, 980, 3296, 786, 994, 3304, 800, 1008, 
       3310, 814, 3392, 1022, 828, 3402, 1036, 842, 3414, 1050, 856, 1064, 
       3329, 870, 1078, 3340, 884, 1092, 3349, 898, 1106, 3356, 912, 1120, 
       926, 3446, 1134, 940, 3456, 1148, 954}], 
      Line3DBox[{771, 968, 3288, 772, 981, 3297, 787, 995, 3305, 801, 1009, 
       3311, 815, 1023, 3315, 829, 3403, 1037, 843, 3415, 1051, 857, 1065, 
       3330, 871, 1079, 3341, 885, 1093, 3350, 899, 1107, 3357, 913, 1121, 
       3362, 927, 1135, 941, 3457, 1149, 955}], 
      Line3DBox[{773, 1151, 1152, 774, 982, 3298, 788, 996, 3306, 802, 1010, 
       3312, 816, 1024, 3316, 830, 1038, 3318, 844, 3416, 1052, 858, 1066, 
       3331, 872, 1080, 3342, 886, 1094, 3351, 900, 1108, 3358, 914, 1122, 
       3363, 928, 1136, 3366, 942, 1154, 1155, 1156}], 
      Line3DBox[{943, 1137, 1153, 929, 1123, 3437, 915, 1109, 3429, 901, 1095,
        3423, 887, 1081, 3419, 873, 1067, 3417, 859, 3319, 1053, 845, 1039, 
       3404, 831, 1025, 3393, 817, 1011, 3384, 803, 997, 3377, 789, 983, 3372,
        775, 969, 3369, 748, 956, 1150, 1157}], 
      Line3DBox[{1159, 1382, 3563, 1160, 1396, 1188, 3463, 1411, 1203, 3468, 
       1426, 1218, 3475, 1441, 1233, 3484, 1456, 1248, 3495, 1471, 1263, 3508,
        1486, 3612, 1278, 1501, 3625, 1293, 3524, 1516, 1308, 3528, 1531, 
       1323, 3534, 1546, 1338, 3542, 1561, 1353, 3552, 1576, 1368}], 
      Line3DBox[{1161, 1383, 3564, 1162, 1397, 3575, 1189, 1412, 1204, 3469, 
       1427, 1219, 3476, 1442, 1234, 3485, 1457, 1249, 3496, 1472, 1264, 3509,
        1487, 3613, 1279, 1502, 3626, 1294, 1517, 3637, 1309, 3529, 1532, 
       1324, 3535, 1547, 1339, 3543, 1562, 1354, 3553, 1577, 1369}], 
      Line3DBox[{1163, 1384, 3565, 1164, 1398, 3576, 1190, 1413, 3586, 1205, 
       1428, 1220, 3477, 1443, 1235, 3486, 1458, 1250, 3497, 1473, 1265, 3510,
        1488, 3614, 1280, 1503, 3627, 1295, 1518, 3638, 1310, 1533, 3647, 
       1325, 3536, 1548, 1340, 3544, 1563, 1355, 3554, 1578, 1370}], 
      Line3DBox[{1165, 1385, 3566, 1166, 1399, 3577, 1191, 1414, 3587, 1206, 
       1429, 3595, 1221, 1444, 1236, 3487, 1459, 1251, 3498, 1474, 1266, 3511,
        1489, 3615, 1281, 1504, 3628, 1296, 1519, 3639, 1311, 1534, 3648, 
       1326, 1549, 3655, 1341, 3545, 1564, 1356, 3555, 1579, 1371}], 
      Line3DBox[{1167, 1386, 3567, 1168, 1400, 3578, 1192, 1415, 3588, 1207, 
       1430, 3596, 1222, 1445, 3602, 1237, 1460, 1252, 3499, 1475, 1267, 3512,
        1490, 3616, 1282, 1505, 3629, 1297, 1520, 3640, 1312, 1535, 3649, 
       1327, 1550, 3656, 1342, 1565, 3661, 1357, 3556, 1580, 1372}], 
      Line3DBox[{1169, 1387, 3568, 1170, 1401, 3579, 1193, 1416, 3589, 1208, 
       1431, 3597, 1223, 1446, 3603, 1238, 1461, 3607, 1253, 1476, 1268, 3513,
        1491, 3617, 1283, 1506, 3630, 1298, 1521, 3641, 1313, 1536, 3650, 
       1328, 1551, 3657, 1343, 1566, 3662, 1358, 1581, 3665, 1373}], 
      Line3DBox[{1171, 1388, 3569, 1173, 1402, 3580, 1194, 1417, 3590, 1209, 
       1432, 3598, 1224, 1447, 3604, 1239, 1462, 3608, 1254, 1477, 3610, 1269,
        1492, 3618, 1284, 1507, 3631, 1299, 1522, 3642, 1314, 1537, 3651, 
       1329, 1552, 3658, 1344, 1567, 3663, 1359, 1582, 3666, 1374}], 
      Line3DBox[{1175, 1390, 3570, 1176, 3461, 1404, 1196, 3465, 1419, 1211, 
       3471, 1434, 1226, 3479, 1449, 1241, 3489, 1464, 1256, 3501, 1479, 1271,
        3515, 1494, 3619, 1286, 1509, 1301, 3526, 1524, 1316, 3531, 1539, 
       1331, 3538, 1554, 1346, 3547, 1569, 1361, 3558, 1584, 1376}], 
      Line3DBox[{1177, 1391, 3571, 1178, 1405, 3581, 1197, 3466, 1420, 1212, 
       3472, 1435, 1227, 3480, 1450, 1242, 3490, 1465, 1257, 3502, 1480, 1272,
        3516, 1495, 3620, 1287, 1510, 3632, 1302, 1525, 1317, 3532, 1540, 
       1332, 3539, 1555, 1347, 3548, 1570, 1362, 3559, 1585, 1377}], 
      Line3DBox[{1179, 1392, 3572, 1180, 1406, 3582, 1198, 1421, 3591, 1213, 
       3473, 1436, 1228, 3481, 1451, 1243, 3491, 1466, 1258, 3503, 1481, 1273,
        3517, 1496, 3621, 1288, 1511, 3633, 1303, 1526, 3643, 1318, 1541, 
       1333, 3540, 1556, 1348, 3549, 1571, 1363, 3560, 1586, 1378}], 
      Line3DBox[{1181, 1393, 3573, 1182, 1407, 3583, 1199, 1422, 3592, 1214, 
       1437, 3599, 1229, 3482, 1452, 1244, 3492, 1467, 1259, 3504, 1482, 1274,
        3518, 1497, 3622, 1289, 1512, 3634, 1304, 1527, 3644, 1319, 1542, 
       3652, 1334, 1557, 1349, 3550, 1572, 1364, 3561, 1587, 1379}], 
      Line3DBox[{1183, 1394, 3574, 1184, 1408, 3584, 1200, 1423, 3593, 1215, 
       1438, 3600, 1230, 1453, 3605, 1245, 3493, 1468, 1260, 3505, 1483, 1275,
        3519, 1498, 3623, 1290, 1513, 3635, 1305, 1528, 3645, 1320, 1543, 
       3653, 1335, 1558, 3659, 1350, 1573, 1365, 3562, 1588, 1380}], 
      Line3DBox[{1185, 1590, 1591, 3667, 1186, 1409, 3585, 1201, 1424, 3594, 
       1216, 1439, 3601, 1231, 1454, 3606, 1246, 1469, 3609, 1261, 3506, 1484,
        1276, 3520, 1499, 3624, 1291, 1514, 3636, 1306, 1529, 3646, 1321, 
       1544, 3654, 1336, 1559, 3660, 1351, 1574, 3664, 1366, 1593, 1594, 
       1595}], Line3DBox[{1367, 1575, 3551, 1592, 1352, 1560, 3541, 1337, 
       1545, 3533, 1322, 1530, 3527, 1307, 1515, 3523, 1292, 1500, 3521, 1277,
        3611, 1485, 3507, 1262, 1470, 3494, 1247, 1455, 3483, 1232, 1440, 
       3474, 1217, 1425, 3467, 1202, 1410, 3462, 1187, 1395, 3459, 1158, 1381,
        1589, 1596}], 
      Line3DBox[{1375, 1583, 3557, 1360, 1568, 3546, 1345, 1553, 3537, 1330, 
       1538, 3530, 1315, 1523, 3525, 1300, 1508, 3522, 1285, 1493, 3514, 1270,
        1478, 3500, 1255, 1463, 3488, 1240, 1448, 3478, 1225, 1433, 3470, 
       1210, 1418, 3464, 1195, 1403, 3460, 1174, 1389, 3458, 1172}], 
      Line3DBox[{1598, 1821, 3773, 1599, 1835, 1627, 3673, 1850, 1642, 3678, 
       1865, 1657, 3685, 1880, 1672, 3694, 1895, 1687, 3705, 1910, 1702, 3718,
        1925, 3822, 1717, 1940, 3835, 1732, 3734, 1955, 1747, 3738, 1970, 
       1762, 3744, 1985, 1777, 3752, 2000, 1792, 3762, 2015, 1807}], 
      Line3DBox[{1600, 1822, 3774, 1601, 1836, 3785, 1628, 1851, 1643, 3679, 
       1866, 1658, 3686, 1881, 1673, 3695, 1896, 1688, 3706, 1911, 1703, 3719,
        1926, 3823, 1718, 1941, 3836, 1733, 1956, 3847, 1748, 3739, 1971, 
       1763, 3745, 1986, 1778, 3753, 2001, 1793, 3763, 2016, 1808}], 
      Line3DBox[{1602, 1823, 3775, 1603, 1837, 3786, 1629, 1852, 3796, 1644, 
       1867, 1659, 3687, 1882, 1674, 3696, 1897, 1689, 3707, 1912, 1704, 3720,
        1927, 3824, 1719, 1942, 3837, 1734, 1957, 3848, 1749, 1972, 3857, 
       1764, 3746, 1987, 1779, 3754, 2002, 1794, 3764, 2017, 1809}], 
      Line3DBox[{1604, 1824, 3776, 1605, 1838, 3787, 1630, 1853, 3797, 1645, 
       1868, 3805, 1660, 1883, 1675, 3697, 1898, 1690, 3708, 1913, 1705, 3721,
        1928, 3825, 1720, 1943, 3838, 1735, 1958, 3849, 1750, 1973, 3858, 
       1765, 1988, 3865, 1780, 3755, 2003, 1795, 3765, 2018, 1810}], 
      Line3DBox[{1606, 1825, 3777, 1607, 1839, 3788, 1631, 1854, 3798, 1646, 
       1869, 3806, 1661, 1884, 3812, 1676, 1899, 1691, 3709, 1914, 1706, 3722,
        1929, 3826, 1721, 1944, 3839, 1736, 1959, 3850, 1751, 1974, 3859, 
       1766, 1989, 3866, 1781, 2004, 3871, 1796, 3766, 2019, 1811}], 
      Line3DBox[{1608, 1826, 3778, 1609, 1840, 3789, 1632, 1855, 3799, 1647, 
       1870, 3807, 1662, 1885, 3813, 1677, 1900, 3817, 1692, 1915, 1707, 3723,
        1930, 3827, 1722, 1945, 3840, 1737, 1960, 3851, 1752, 1975, 3860, 
       1767, 1990, 3867, 1782, 2005, 3872, 1797, 2020, 3875, 1812}], 
      Line3DBox[{1610, 1827, 3779, 1612, 1841, 3790, 1633, 1856, 3800, 1648, 
       1871, 3808, 1663, 1886, 3814, 1678, 1901, 3818, 1693, 1916, 3820, 1708,
        1931, 3828, 1723, 1946, 3841, 1738, 1961, 3852, 1753, 1976, 3861, 
       1768, 1991, 3868, 1783, 2006, 3873, 1798, 2021, 3876, 1813}], 
      Line3DBox[{1614, 1829, 3780, 1615, 3671, 1843, 1635, 3675, 1858, 1650, 
       3681, 1873, 1665, 3689, 1888, 1680, 3699, 1903, 1695, 3711, 1918, 1710,
        3725, 1933, 3829, 1725, 1948, 1740, 3736, 1963, 1755, 3741, 1978, 
       1770, 3748, 1993, 1785, 3757, 2008, 1800, 3768, 2023, 1815}], 
      Line3DBox[{1616, 1830, 3781, 1617, 1844, 3791, 1636, 3676, 1859, 1651, 
       3682, 1874, 1666, 3690, 1889, 1681, 3700, 1904, 1696, 3712, 1919, 1711,
        3726, 1934, 3830, 1726, 1949, 3842, 1741, 1964, 1756, 3742, 1979, 
       1771, 3749, 1994, 1786, 3758, 2009, 1801, 3769, 2024, 1816}], 
      Line3DBox[{1618, 1831, 3782, 1619, 1845, 3792, 1637, 1860, 3801, 1652, 
       3683, 1875, 1667, 3691, 1890, 1682, 3701, 1905, 1697, 3713, 1920, 1712,
        3727, 1935, 3831, 1727, 1950, 3843, 1742, 1965, 3853, 1757, 1980, 
       1772, 3750, 1995, 1787, 3759, 2010, 1802, 3770, 2025, 1817}], 
      Line3DBox[{1620, 1832, 3783, 1621, 1846, 3793, 1638, 1861, 3802, 1653, 
       1876, 3809, 1668, 3692, 1891, 1683, 3702, 1906, 1698, 3714, 1921, 1713,
        3728, 1936, 3832, 1728, 1951, 3844, 1743, 1966, 3854, 1758, 1981, 
       3862, 1773, 1996, 1788, 3760, 2011, 1803, 3771, 2026, 1818}], 
      Line3DBox[{1622, 1833, 3784, 1623, 1847, 3794, 1639, 1862, 3803, 1654, 
       1877, 3810, 1669, 1892, 3815, 1684, 3703, 1907, 1699, 3715, 1922, 1714,
        3729, 1937, 3833, 1729, 1952, 3845, 1744, 1967, 3855, 1759, 1982, 
       3863, 1774, 1997, 3869, 1789, 2012, 1804, 3772, 2027, 1819}], 
      Line3DBox[{1624, 2029, 2030, 3877, 1625, 1848, 3795, 1640, 1863, 3804, 
       1655, 1878, 3811, 1670, 1893, 3816, 1685, 1908, 3819, 1700, 3716, 1923,
        1715, 3730, 1938, 3834, 1730, 1953, 3846, 1745, 1968, 3856, 1760, 
       1983, 3864, 1775, 1998, 3870, 1790, 2013, 3874, 1805, 2032, 2033, 
       2034}], Line3DBox[{1806, 2014, 3761, 2031, 1791, 1999, 3751, 1776, 
       1984, 3743, 1761, 1969, 3737, 1746, 1954, 3733, 1731, 1939, 3731, 1716,
        3821, 1924, 3717, 1701, 1909, 3704, 1686, 1894, 3693, 1671, 1879, 
       3684, 1656, 1864, 3677, 1641, 1849, 3672, 1626, 1834, 3669, 1597, 1820,
        2028, 2035}], 
      Line3DBox[{1814, 2022, 3767, 1799, 2007, 3756, 1784, 1992, 3747, 1769, 
       1977, 3740, 1754, 1962, 3735, 1739, 1947, 3732, 1724, 1932, 3724, 1709,
        1917, 3710, 1694, 1902, 3698, 1679, 1887, 3688, 1664, 1872, 3680, 
       1649, 1857, 3674, 1634, 1842, 3670, 1613, 1828, 3668, 
       1611}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnWdUVcfXxhHUoDGigsYYFRsW1BgVwQY21NhrJLZEUcQowR5Fxa5YQbEm
FiwYNWCwt4BijbF3xUIMKBohRkHFCIT35Zl9P3jWfx9zWOd67zXDF9b6rVlz
5+wzZ8qevZ8p7z2sq4+1lZWVk52Vlc3//58wJvi3pfvPHwryrufu0ubSISu/
qsUHhf3ZRCtfd2NqUg6/0Cy1cQ7vvPVnh9zUI7m0s+TvHndZdhG8eZlpjXL4
s498Vbmx67cUzn3v5tZOS+HSnvryR3sc7ubwjOvnGuTwB79sVOXm1n5z48e6
lY/L4TtfFm2Yw5fNKlYiN9zY7awy8Cz4si6rwR1qDTBLe5rbvGbpnBs/jc3N
rf+Yavw0NreU+UKvcdLY/PNiK2/k8CbTx6H/RDkvfSfGPXPb/1qKnc3te+fs
WXfpJvTnKv4Rrjk8MCGkhFp5c3suY/MpvYMf5PC9NZxgn7I+e4qr9UO9yhv7
vZvKnsa2m9byxh7HtNpH6/eoV3s4u+lVv17219rP9aqfey9W4m9K3J+HjjuF
3T4k/qdILrnkkksuueSSSy655JJLLrnkkksuueSSSy655P+Dc/55recUWs+R
jR13XbiKbWIOr3HJHnxzoVTV+rW2R6t9tJ536HW+HDg4GHYIa70V9YQMHqbr
OaPW+ouUssX5VIu988DdCjRQLc/FgXDltb5fveJ2uP6mV1zEL63bof6k+f3A
Vx34VLV8r7+P4XnnZnqAe/Z+pdqe9+vGoz//7X4cfP2Ny7mKFzJVfFeWf/Dv
Odzh8xEo/9mjdu+0nY0dh8PZ09LtrLXfah1nLMXOep3va50HTRV3ain9mbOb
1nlQL7t9XOdX8Ecz94G7eH4FzsWrm5udjb3eMLd4cq320VoP1z/fVTtz7dHL
znqtY7XGS5tbXoDW9bOx7aZ1v8DZ2VRx1FrtrNf6x1R2Nrf+rFf8sF5248Zn
rX4bveJXtXJT+ZGM7e8y1XNZSntMZWetfjm9/FRa+79edjCVPoaxxxNj129s
+1RfnIT5uqT/++DXR99zUONtaH53pvl9I83vHDe3fDTJJbdEbn0uFnzL48dY
B47291JdH97Mtw382qHeGDcyj7RWrX+zexi4+6KTKD/xw/om3Ufoxe+t2YT5
8Y/y28B7RHYxy3aaG5d2yx33+TIB/Fa74uI7Pf6t6r7M3NpvKp43sNOdHB5o
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
VOtfTHrUv5Ee9SHSo85/8ir64db6y8ADZifBbqmk9+hPeo8OpPfI2Znbj3B+
Tkvxv1m6n9Pc/G/52rWDndcubg77jMsoC373d6FPO5z0aZ1Jn5azMzcecnbm
/G/JVH+mon7Ov6HVn8x9d1w/iV0n9NsXkH57I9Jv9+zuCn9Fs86B4F0rCHuW
jeqG53rpLPwYbhcrgweTnuQa0pP8k/QkufGEe17uvRSm9YC9Yj3A1RNGupGr
STeyHelGavVzGtv/Zm5+Tq4/G9vPWYh0Hf8mXcf1pOu4fX00+Kq7a/B+t0zd
Bc7dA6XXfdAc/4Pe1z3F+9LL/m/yc5rLfRyWwjl9cnNrp6VwTldfr3tYtNZv
KZy7p+AK6RV/QuNhJI2Het2DwHFzu8dBK69D/rFA8o9tJv+Y1vsOzO25TMU5
nX+nFLH+d6H1fwta/5tb+82N76J9ViXaZ5WifZYH+Vuqkr9lEflbOG7sdqba
CX5m+kzwFasGmaU9uXsQ/kwX97Y88BH3trSke1u08v+anb0vROB8trn7MYyH
90pdxHjYnsmb0Iub6nmNfR8Zdy+MO+WbDKB8k5aUb2Jsbmx7cvfdcPdicPXM
8NsAv1+//KtQzx33S6qcuxfG2Dw+ajB4mUThxwv3WflW7FyL+FfEn7yBs+tA
5p4XU/EN1P5e1P6H1H5T+Wm17lMK0rn/MDr3n0jn/qbi3P0yF/8R40MtGh+6
0/jguVr4Z7aTf2YD+We4+/v04neof+6n/ml1tLUqN/b9Kf50r26m4l5dX/K7
viK/6wryu/r+fQz+mXqZHniuLr1fwc7+owdiXXF055eoJ9ClSwm18lrbOZni
RQdSvGgQxYua7N5n5v6sKb2DH+B7r+GEOLqyPntUv2ut5ScHiftoatuI+2gm
v+E+mhtDxTokhdYhNWkdwt1PZ27+FukfM0+/lrH5NRP5c7T6VbT6EzjO1eP+
ju6LB9D+q4Vi/8Vxc9t/6bWfijHRvol9LmZfo+Q/EefuG1XuX+JzuX858Yb9
SGnFfoQbNwz7hS+NtI8wrOd7KtbzBehcr4SHONcLo3M9vdbVFX73wjo27IfD
Io66fhQ4d44Wr3GdOaZ1edR/7M4crE8+nt5T9d5AY+t+fL7ZAf7YCjGt0J6Q
Yyng5qYbI7nkkksuueSSSy655JJLLrnkkksuueSSSy655JJLLrnkkksuee74
9byzEH94qshMxMVNnzdc9Zya04vjzs25+qddSxF6UEnFUU/Vp1+o1q+Vd1ob
iPqfliwFXizmK9XyiV3S0f5ls0W8xM99q6mWXzavCJ4r76lJ4B/dssZzcfrn
nA48Z2dOh+0Zo/PG6d1xukxa+TO7Pqh/yc9p4nkHNVUtb8iXr6/Il+fKN8h4
jHiPzX5CB8xxRqJqeYMORnOFDsbXTecivsW7aROUXxN9AOW16tdxnNM/3LH6
Ad6j09qx4FVL98hV/ZxOGle+F8UJz6U4YU+KE+bKG/LlX1G+/AaKq+HK32D6
LZdHr1ec2LPQi7Dn7BJrUf+HcePAOX0qS7Fz5ugAxEG9KnhKxJVdiFbtn4b+
PEDRn5W6avveoKvGcc6exrYz97wlzkbAzjNdE1C+wM0EB7Xn/SX/cdg5bazI
z/X1ila1G6crwumc6KUfaCo7c897YW0o7Dx5uNCnOvfFaVW9CE5Pg5vX9BoH
ts+5AO71aDZ4Y8dBr8XZnlXE2ZrKzlz5kX3Pws4Ji8V8YVPb+rV+pdTp5cZV
bp1gbvm2pRX6kPUo35Z7j1UY3Twujpp7jx1qF4B9GuedAp69c4Bq+Z8i7fEe
UzZ6gy8q5/JW7MP1H639itNrKlrKFnkxnnvnoZ/UL9BAlWuNI+X6p9Z+a279
mdPx0/peOM7p9nPjbdbgDRg3aoaJOO22eW9hfF5QIx66UjM/zYN6HvVIVx2f
OZ1wU9k5z50UfI+9nsWB3x1ZD5zT//yB4udfUPx8JMXPc/pjnO4cty/g9q3R
IwIQv90070P0z69DzqE8l1+2g9GtMpWdOb0sw3x9/1/uQ7XqTXHjAFeejVdn
7DyR0Q0zlZ2tmP5suH8nVKHvzen7XZvthP5zvZStyJuoN0XVzpzuZY3au1D+
9tkI/O7JqEequoKcnT0pv68X5fd1p/w+TrdcL87qUTP3b3L6gZzeXd1V0Rg/
q12+ifJPs6+rlud+twKjl8u9L2PrwnH6h9zvGlsvjmuPVvvoVf6LaSLveCDl
HTelvGPuvtd1d5rj+1r12Wj4LW/0/hzj2L6sWviO7KMqo57L5Uarzu+c/7DM
kMLoP5lty4JnzRbrW063f9L9kniuyBQr8IXPXVV/N4P0ah6TXk0L0qspz+g2
c3427l6wFaSrXEOhq3ziVCx43INC4Ctrfq1aP1f+4MOSeC++aQlC39jVCby6
Wxjac2R6XpQ/vrQ3uM2VCHzX48Nbg4/qflK0U6FbW4b0lLjx3LDeeK5Yb9g4
lBZ62i0Ko5/UcHNWrYe714DT5W44LgD9bVfRSPDyRSPEPNLFFfNCUJuV4N/+
HvKa/ZW61ga/WZDCb8bpYHPr27WUr7dGoYPqy+gkc/sspV+0GvlFYyuVwXNN
ne4BezbsJ9r5ol0/2CGqXSfwpJDFquvDCRMC8N79SwajfFaX73Sd39/kf1Du
T7l9Jbc/NeiQP1XokB+zy4/yl38R49LlMeI8Ymmb8hgHbGacwvfb6bToP50q
pqH8vVEnwIt+ugKc0x/m7svQy26c34nr/1z/LPxjILhjzVjYYdNk8d0Z9Gb/
UczXXvlWot96DX6C5/KochvlxzP9hLsHTfP+cdtl9M/PPxG6xxuflgE3+Dk/
U/g5ufs7DHq5Dgq93GDm/qDfhpzF99jero6Yv2oeU533ufavi/dDe/amt0U9
HRfXUF0HhjDrruPMPVBrGV1lbj3P+Ye59TZ3HlTno9YYZ1zGCf351Plhqvbh
1pMc17p+4+6x0isvmOPcftBUuhnJJtJNNTddU6kvalmc0+fkuKXoimjlnK4m
xx+bma6mVv1AvX732r/Uu/Mkbii/T8H1ag83fmrV03if+HCmvL+Cm0ovztg6
b4byWYryZqfPxuiwJSfboP191/cU9/ze2iTa+TQK+/Fny+3gDznnvgO8x0Sx
rramdXU2raunKMqfp/LmFv8mueSSSy655JJLLrk6586zXBRxJukUZ+KtOPcZ
Tutz7j50zl9Uhu6PS1fcH8ftawz3qxZQ3K/KnSNwcblc/LOx4z+5cxnu3P+x
TvHAHDfYzVFht9EXS+C9FP7jV7EPChP3CHP3/XH3UHNxtlrjdbn2DzrTFPW4
JQeCF+jYT7U8dx7BnV8E/RIr+tXvzmjnwZTx4Ny9eNw9xcaOj1WeQ/3zhjjJ
N9nTVWFP7l7dbYP2ofy0zi3Ab3uJe4QLPX2MfeLL9CLgN07agXtejMX+uv3z
C7BPtyjx/Rr7fmEufpWLU9Ur3lhrnKHWeE5j52tw/PA6EacXTHF6jSlObx/5
vT8mv/cHOvu9DffSNlNwO8U5yBY6B+HusTW2fbg4wx+Ze36zKL6xvCK+0RDX
4ayI69A7LuuIIi7rAhMfcoM5n61D8VdVFfFXbDwhc4/t7jlJKP+gpzg/9djx
ker6gYtHKlFgG+pfc8Id/JqNiKvh7m81xAs9pHihKhQvpPV3Oc7FoXHt4cpr
vee0Op07l6Rz5+t07tyGvhdn+l42mvjcUN5rkDseSvkCCZQvcJDyBbjynE77
f+1eg3trNuE7/aP8NvAekV1yVQ93TiHvNVA/Bzf2fXN6tZ/T89faP83tXoMF
FPeyleJekinuhbvXwI3qcaJ6XlI9zxZkoN/uLNld7AuCJop1r073Giy6EAGe
tlqsBxbb3wS/Sfa/RvbPfEv3GqTHOOB5Z90PBQ9tMw38A+ILia8lzo3Dht9N
Vfwudw47ploa6n9v6lyxz9ou4pMzaX+RZ4HYXyyh/YXWew2GxYu46FkUF32W
4qKNHb9kKfFF1vRettB7GU3vxVRxGnrNX5KbNr5oP3Fb4mX/o/FFNcuXgR22
T+wD7us4F9xS4ou+p3nqZ5qnVtI89a7GF3Hzr6XEFzWm57Kl58qk5zJVfNGK
Y7HwC9W++RnquR8xX7V+c4svSo+Jhb8i7swMrB+cnbcJO1A9DW6IepKoHu+O
wg6TyQ7fkx0CZov7HHdbi/scp9J9juZ2Xia55JJLLrnkkksuueSSSy655JJL
Lrnk/2XOxZNzcW5a48kN+hU9FfoVSQVngUfHbEI9cxw8Vf3YXNwvF0++rn8C
/JY/dk0H75DfB5yLr9PqV9faHi6+1PmAA+rfHb8Ndjtqu0Scpxg5npxrv51P
fbTfqYPQjfd3GwI+7eM6aP/dEzZoT78GIt6Piyfn9EnyMfZX6kvvf8PzTvYd
h35b+9IEcPuHfXR93uekt79Uobdv0IcprtCHMVU8OWcHrfHPWvtzfEQ32MG9
kjN474UiPs2hc3n0h7GLgsFtO3xcXM0+esWTb/Q6Ax5ZNhy8r4uov0K70+CH
k38E39hAxL27nRwDu92/NB+89Zheqna7d7kHeCn/UeAendX7p1Z7VmT0DBOv
+MGecxLDcS5z4IJofzlGR87Y8fla48zPV7RF+0eerg1+5rSNrr/L5aFweR/L
FXp0pXU+x+d4XtKRm0U6cmNIR45rp0GX76ZCl4/TSTZ2nPkDmq9jaL6eS/P1
ucjBOL9uf9sV/GSlrWL+JT2rfQo9q3+YdQWn72S4x6SB4h4TvfQwH5J+VKJC
P2onoyfMxXtr/V1uHjHUo9Tj4trD6Upx+QjnmO+RO0e2X9IYv+t1ZCPOx0/1
FeNJaUY/U+s9QY/qhmGctA2sAP6w+zfg3RZ1Qf+pbl8LfMu+qeCdFfcK2dO9
QrsL9cFz3dwl4u3dncS4mkr39YxX3NfD6Ztxeput5k9A+W7FE8V6wHcmeF37
Pmh/xyNXUf75D5+Aa73fh7vXhluH9JzYEM8b6CV0IFucq1P8f41vBr3NMN+z
mBcW2XYGb5tyVXW84uyTSfOjvWJ+5PL1tOZbcbqdQyhuc7gibnNEWDSeKzEu
Gvxs0xOq6yJOn1Pr/K61nRWWJ0HvrvNVsS7q/9MtXdcbFRdl4Dv92tEV3/WA
k2IdW3PUBtjnjn0/8NBDP+Wq/hJ2K1HPzInLhB7mHz+8lXlTq/4np3c68dtw
kQ97fRB4YErDXK3fvDyfo/6hoeLelvFzqoPfUayHe9F62NzWb9x3zd33xOWT
cvU3HhmMes717gb7VKre8LV5qrpinnJm9IQ5nXC99GZnFcov+v9hcb9Duksj
8FOKPOs6tD5PWFUFfGxZcX/B03liv8Ddj3B9WkOhKzswCvVndBJ5tdz9CMtt
VyIusegwsc4pNfgUuFYdUe65tjD5jNw6kFsPcO0/zuQJcnlzWvVFDf3qrKJf
hTB+p8ynNqj/vW1lUE+rvjNU7alVd1RrnqDW9SqXP/h/7fDtYA==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{305.87342339975265`, 199.6239089904171},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-0.45293115676809764`, 0.7}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.136463053347277, 0.5633297315373369, 1.1380945165290592`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.618060924596548*^9, 3.6180609415516543`*^9}, {
   3.6180609813423376`*^9, 3.618061006773122*^9}, 3.618061446177772*^9, 
   3.6181633504360695`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNXeuvHddVP5nXOffYjn0TN29HJn04xa197ZO2aW76IqUpfdH4cZ0CbWql
NUnVQiiBVgKkSiD1QyUQKb3JvbYrEKqglUBQgYQwQnxABMlQJPMBWSChFgIC
PvUvuMx+rbX2mt/eM3PuTdUPZ+6cmTl79v6t12+vvWbuhy8+/8ynP3fx+Wef
vnj08c9ffO6ZZ5/+xaPv+/nPt4fKWyaTW05PJpO/Pzox+zvtrt/s7Ny8eXNh
NubLwP19dr/euXTpktmjT/t9Upi90uze3/lFKX/Rfku3cuSH4Lcr6rfmfN3/
238kAEp48/bbmtktzN6A9v4hc0mVObcG7l5p4eQan4EGNnbXpyfdz7/aD9Gb
++5Qmd2PufZeWLI7b8qcq0HPdnm7N9OwGxrBk7tr8oXd/fwzzkbaXa9sT/VL
5tiS9/qE2dvPSh83XYBj97o+fWLJGx6L4bZ7Z8zegVQntMX3dOyCO/XK9evX
v3Pt2jXzmRR2W37/xo0b1BEEZQOOfYEQQmdR536AHS4ySH9udMfvSXcyZ5Qc
XB7sUwprXRdJ3EM79oa+jg2PJTlDQdp3nlCcDuzs6XRnHxgg6pS25Ab1YGxU
FuX3U8dRyEAdf4fZ2gB436vb3edIAVDXXjOkaz+qLuqjAZ8iNOag+U/q5o/T
gVyjF2gcqNHP6kaRqnLs/xA1hujRF3Rjv0wDclCHqwd7pE6Lz1IHkDyRpA4P
afbj1NFqYLPb4JhzTZMnso2hYX4j3dh7acDI8FHP/pQG5w36YeoP8g6oiUHN
Hs8ayA19uXWPTUoP/w1eXqToxH/Dy5WpIQ1J/LCKTKfd/z98HTax/4UXl0Dv
/6ev3zcTnqp3wDfJncXH/gsAc0+6CaSxr4xrAunpf45rAoXc/3hVm3g9OIXU
+ns9TRQpBf/u8HuTHCoz0Uba8F26VaaJIAczVz917iXzmdgWvzfk1w34dWm2
9tC/g9HcnW5sKhpb843VZmv786/jGpupxtpPewPXv8VisRMSFIXZ/su4tlc8
+KJt82k8eKZ5Dwb1/p977mDPyHZNI/5TmMZr0XeWU2j+n8YNYI4HYFsvwY1m
dKPr4260D0ihpFs5VQl3amFFQ2x/+vK4m+4HN63ttqL7+Q+6Jevv34677wFw
38YPWY7T3g7JsyGY/2bcnW91ttq2NfP3k80WbkBWkxKyRUbxV+k+vA704aAc
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
gFh1iFeBWSJ69mEJJlYmXKh+cTLKw0YONkOd4yxteGt0iG2CPE8R4NqStfsz
p04CcB+XXLeTweOap6FTQbbkCae5adGU80jKeGeKAfjPPKIBgrEiHuNH/hAZ
JRrvB9xZnnNN3NuF9Rw2T2dKaXG9yUfSRp18XCy6tfqDpPsWGiMymI+QTAfP
UJIn6BsiHGIqqUNX54RwPOiddex4+t3S9gg70PMKc+o4wOwJcjKF9Awwyi/D
ACbxY1bh9bCndJ5EhXp+Zg6cAIm/c0NKBzoVHx7HjtMWOD5MGofQO6+tKgBQ
k59AYY0Vi12oWh7Ov4VO5TYnjlb2qARaoX0jOPYkqYQiJRxy/P+Ii4IzyJCL
EhEdjemETndFvsGnuwZpPMpooAKBnyEvsVvOKxU7v26Wj6NMh1HNZT4FBVec
G71MrPjbOik1AugpSWNjfwjZqhc9hzdeMJkSY5+xZVqJp3oYpHmS2HfyfQeT
+N+YojT80yRrxDOnIDQn/scQSnGo1fgAqR/AiQzbczX6TSpBZ5t5AxjOJZLM
eOKn49ipXBwDuVL0/wLAktaC/4fEkuC42Valz9mfo1fyfKZfXZnjIKvllSZl
tak8pK6FRktQJelK4ddJci5sdajO5M7h1zbKYz8HzEFFJV6v4Jxfcr2C4zC/
enePRmrlr/Mb5iwqvf+Ffrso47BV0DCTYYsprViW2fXg0HPWU9JvNLhfIqEl
mVaIO7iaI5lJz9ee56tsOCrVnpYkHPqq9ucNiXcKLL3dR8mYLzqIctOXKelw
HH/ERGtI/PH9fS9QvSOgY79G0ml2cnFF54AXqUkTFxqVqF8/TrqCevMlMoQc
Y0dPWp2KluLTC2SZ8gfs8X2/Hwe9vQcc+w0t6KDowbLxCmsRm/KQmUO2u+8H
ErgbdPfLsedRSSvlR5nd+8c3Fp2SPtWNn6AD6OZf6XiGuNAxYqQ9zwAlKXu2
fx8AvULV0r/ZidHy4Ytk7M37pogxi05OZA8/CAR5B+jhCzI0Sj+i7Dhzqw8R
OugGXyMIaopCjQpAjnaK9mXz7yYPmmbENbkzOd7bwfVbUneSFeUDQkeo3Umh
kntlco7TFDR+1P0rMB7w0zynOiJM5Gt32ct0aXR87HcJbnYMYr7h0N/jvvGy
HOrR77NJ4rSvkO6rAp1jQp3ofyvo6x8Qep18mxCvOaii+m77iAgo6uC3CEwr
T19RH+A/pA24ob0ZXYSa/WNqNmllvu3z1A56r+C3Gb9KwyRbuUAH9oFW/pxs
rjO0J8HlK+DYX4JjbuD+X73EUOuFt54mfoq6hX5oZbQqOv3T4CK0ovo7ZnsH
03P370Hynhi1Y6nineaQS8663OuIKZ1YD45P/Cz18COuZR+XX7l+/fp3rl27
Zj6Twm7L79+4cYPugvrfZEf3URrEp3Z/K8dz84VKrGuP0ih/ZSB+4rVIlWzU
fF5PA/nt/taGvB3rkn0MO3TxD7Wq8LSnIkX8a3fRjvmzWG4/92+5uCjvZXnx
8KqZv3M/uzBAxCzOH7bmnwJyyhVV+J99kvRuwMUIWK4feHm4OCe3/D/001IN
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"resx$x$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"resx$x$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", 
    RowBox[{"polysx$x$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"resx$x$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"resx$x$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6180610578847103`*^9, 3.6180611318906307`*^9}, {
  3.618061193081775*^9, 3.6180611962082753`*^9}, {3.6180612274152727`*^9, 
  3.6180612327419486`*^9}, {3.6180614906075764`*^9, 3.618061495894249*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ComputeInitialCollocationWeights", "[", 
      RowBox[{
       InterpretationBox[
        RowBox[{"\[LeftGuillemet]", 
         RowBox[{"JavaObject", "[", 
          RowBox[{
          "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
           "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], 
          "]"}], "\[RightGuillemet]"}],
        JLink`Objects`vm2`JavaObject26449537665073153], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.9664760177870328`", ",", "0.0259652129029712`", ",", 
           "0.3535184256104845`", ",", "0.08622417473735201`", ",", 
           "0.574395693574757`", ",", "0.11325845950046978`", ",", 
           "0.6521525339109079`", ",", "0.4745703888958763`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0.7210487573911574`", ",", "0.77524492364937`", ",", 
           "0.34637048718720004`", ",", "0.22275192856261897`", ",", 
           "0.6777047425003675`", ",", "0.487779520989696`", ",", 
           "0.8873891489351251`", ",", "0.27874612866489157`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "0.36697446331609335`", ",", "0.12946369252892165`", ",", 
           "0.20375013431320416`", ",", "0.3570215209140204`", ",", 
           "0.3104240047027256`", ",", "0.03715865485656954`", ",", 
           "0.015246346766916498`", ",", "0.828678726801327`"}], "}"}]}], 
        "}"}], ",", "$Failed", ",", 
       InterpretationBox[
        RowBox[{"\[LeftGuillemet]", 
         RowBox[{"JavaObject", "[", 
          RowBox[{
          "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
           "ProjectionMethodToolsJava", ".", "SimpleFindZeroStrategy"}], 
          "]"}], "\[RightGuillemet]"}],
        JLink`Objects`vm2`JavaObject32293939880919041]}], "]"}], "[", 
     RowBox[{"incOrder", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}], "]"}], "[", 
    RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", 
   RowBox[{"polysx$x$1", "=", 
    RowBox[{"Chop", "[", 
     RowBox[{"genPolys", "[", 
      RowBox[{
       RowBox[{"resx$x$1", "[", 
        RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
       RowBox[{"resx$x$1", "[", 
        RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "]"}]}], 
   ",", "\<\"ComputeInitialCollocationWeights did not converge\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.618061134058304*^9, {3.618061204094657*^9, 3.6180612338332863`*^9}, 
   3.6180614973281136`*^9, 3.618163350503569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"polysx$x$1", "-", "polys1$1$1"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.6180614040056486`*^9, 3.618061419791911*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.2677422653638917`"}], " ", "\<\"qq\"\>"}], "-", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "-", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}], "+", 
    "polysx$x$1"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.5`"}], " ", "\<\"ru\"\>"}], "-", 
    RowBox[{"1.`", " ", "\<\"uu$Shock\"\>"}], "+", "polysx$x$1"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.2677422653638917`"}], " ", "\<\"qq\"\>"}], "-", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "-", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}], "+", 
    "polysx$x$1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.618061414248968*^9, 3.6180614206657314`*^9}, 
   3.6181633506010695`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"polysx$x$1", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "us"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"us", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618060872189856*^9, 3.6180610057092867`*^9}, {
  3.618061255495019*^9, 3.61806125888404*^9}, {3.618061520308702*^9, 
  3.618061540379058*^9}}],

Cell[BoxData[
 Graphics3DBox[{},
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{381.93616333450836`, 217.13178257621226`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.1077603625018884`, -1.0089808704073633`, 0.8796494372271743},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.618060924596548*^9, 3.6180609415516543`*^9}, {
   3.6180609813423376`*^9, 3.618061006773122*^9}, {3.6180612597903624`*^9, 
   3.618061264503239*^9}, 3.6180615103641567`*^9, 3.618061541725415*^9, 
   3.618163350728569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "res1$1$1", "]"}]], "Input",
 CellChangeTimes->{{3.6180611510321617`*^9, 3.618061161615508*^9}}],

Cell[BoxData[
 RowBox[{"Methods", "[", 
  RowBox[{"ComputeInitialCollocationWeights", "[", 
   RowBox[{
    InterpretationBox[
     RowBox[{"\[LeftGuillemet]", 
      RowBox[{"JavaObject", "[", 
       RowBox[{
       "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
        "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
      "\[RightGuillemet]"}],
     JLink`Objects`vm2`JavaObject26449537665073153], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9664760177870328`", ",", "0.0259652129029712`", ",", 
        "0.3535184256104845`", ",", "0.08622417473735201`", ",", 
        "0.574395693574757`", ",", "0.11325845950046978`", ",", 
        "0.6521525339109079`", ",", "0.4745703888958763`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.7210487573911574`", ",", "0.77524492364937`", ",", 
        "0.34637048718720004`", ",", "0.22275192856261897`", ",", 
        "0.6777047425003675`", ",", "0.487779520989696`", ",", 
        "0.8873891489351251`", ",", "0.27874612866489157`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.36697446331609335`", ",", "0.12946369252892165`", ",", 
        "0.20375013431320416`", ",", "0.3570215209140204`", ",", 
        "0.3104240047027256`", ",", "0.03715865485656954`", ",", 
        "0.015246346766916498`", ",", "0.828678726801327`"}], "}"}]}], "}"}], 
    ",", "$Failed", ",", 
    InterpretationBox[
     RowBox[{"\[LeftGuillemet]", 
      RowBox[{"JavaObject", "[", 
       RowBox[{
       "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
        "ProjectionMethodToolsJava", ".", "SimpleFindZeroStrategy"}], "]"}], 
      "\[RightGuillemet]"}],
     JLink`Objects`vm2`JavaObject32293939880919041]}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.6180611622468085`*^9, 3.6181633507573195`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"aMat", "=", 
   RowBox[{"resx$x$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}]}], ";", 
  RowBox[{"Dimensions", "[", "aMat", "]"}]}]], "Input",
 CellChangeTimes->{{3.6180617139141893`*^9, 3.61806173017424*^9}}],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.6180617305392694`*^9, 3.618163350793569*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1646, 742},
WindowMargins->{{Automatic, 117}, {57, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[721, 27, 657, 14, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1403, 45, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[1502, 49, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[1594, 53, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1765, 60, 1879, 50, 101, "Input"],
Cell[CellGroupData[{
Cell[3669, 114, 1193, 27, 43, "Print"],
Cell[4865, 143, 309, 5, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[5201, 152, 481, 9, 49, "Text"],
Cell[5685, 163, 1926, 48, 101, "Input"],
Cell[7614, 213, 1026, 29, 81, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8689, 248, 129, 1, 37, "Subsection"],
Cell[8821, 251, 10282, 291, 261, "Input"],
Cell[19106, 544, 3855, 106, 201, "Input"],
Cell[CellGroupData[{
Cell[22986, 654, 734, 12, 40, "Input"],
Cell[23723, 668, 717, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24477, 691, 286, 7, 40, "Input"],
Cell[24766, 700, 932, 29, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25735, 734, 3822, 97, 141, "Input"],
Cell[29560, 833, 672, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30269, 854, 692, 13, 40, "Input"],
Cell[30964, 869, 652, 16, 40, "Output"]
}, Open  ]],
Cell[31631, 888, 611, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[32267, 904, 637, 12, 40, "Input"],
Cell[32907, 918, 648, 16, 40, "Output"]
}, Open  ]],
Cell[33570, 937, 663, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[34258, 954, 612, 11, 40, "Input"],
Cell[34873, 967, 645, 16, 40, "Output"]
}, Open  ]],
Cell[35533, 986, 586, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[36144, 1001, 621, 11, 40, "Input"],
Cell[36768, 1014, 651, 16, 40, "Output"]
}, Open  ]],
Cell[37434, 1033, 583, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[38042, 1048, 690, 13, 40, "Input"],
Cell[38735, 1063, 648, 16, 40, "Output"]
}, Open  ]],
Cell[39398, 1082, 695, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[40118, 1099, 609, 11, 40, "Input"],
Cell[40730, 1112, 650, 16, 40, "Output"]
}, Open  ]],
Cell[41395, 1131, 602, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[42022, 1146, 643, 12, 40, "Input"],
Cell[42668, 1160, 652, 16, 40, "Output"]
}, Open  ]],
Cell[43335, 1179, 598, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[43958, 1194, 618, 11, 40, "Input"],
Cell[44579, 1207, 647, 16, 40, "Output"]
}, Open  ]],
Cell[45241, 1226, 589, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[45855, 1241, 618, 11, 40, "Input"],
Cell[46476, 1254, 656, 16, 40, "Output"]
}, Open  ]],
Cell[47147, 1273, 581, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[47753, 1288, 923, 25, 61, "Input"],
Cell[48679, 1315, 674, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49390, 1336, 736, 20, 61, "Input"],
Cell[50129, 1358, 672, 16, 40, "Output"]
}, Open  ]],
Cell[50816, 1377, 315, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[51156, 1389, 122, 3, 40, "Input"],
Cell[51281, 1394, 121, 2, 40, "Output"]
}, Open  ]],
Cell[51417, 1399, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[51539, 1405, 197, 4, 61, "Input"],
Cell[51739, 1411, 122, 2, 40, "Output"]
}, Open  ]],
Cell[51876, 1416, 366, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[52267, 1427, 309, 6, 61, "Input"],
Cell[52579, 1435, 226, 6, 40, "Output"]
}, Open  ]],
Cell[52820, 1444, 218, 5, 40, "Input"],
Cell[53041, 1451, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[53173, 1456, 164, 3, 40, "Input"],
Cell[53340, 1461, 441, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53818, 1480, 213, 4, 40, "Input"],
Cell[54034, 1486, 174, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54245, 1495, 348, 8, 40, "Input"],
Cell[54596, 1505, 465, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55098, 1524, 585, 14, 40, "Input"],
Cell[55686, 1540, 731, 19, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56454, 1564, 139, 3, 40, "Input"],
Cell[56596, 1569, 408, 10, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57041, 1584, 176, 3, 40, "Input"],
Cell[57220, 1589, 210, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57467, 1599, 149, 2, 40, "Input"],
Cell[57619, 1603, 669, 15, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58325, 1623, 178, 3, 40, "Input"],
Cell[58506, 1628, 1433, 37, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59976, 1670, 389, 9, 40, "Input"],
Cell[60368, 1681, 1222, 24, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61627, 1710, 402, 6, 40, "Input"],
Cell[62032, 1718, 2732, 59, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64801, 1782, 374, 8, 40, "Input"],
Cell[65178, 1792, 1229, 24, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66444, 1821, 332, 7, 40, "Input"],
Cell[66779, 1830, 487, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67303, 1847, 384, 9, 40, "Input"],
Cell[67690, 1858, 571, 11, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68298, 1874, 674, 19, 81, "Input"],
Cell[68975, 1895, 817, 17, 107, "Message"],
Cell[69795, 1914, 309, 9, 54, "Output"],
Cell[70107, 1925, 309, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70453, 1939, 573, 14, 40, "Input"],
Cell[71029, 1955, 268, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71334, 1968, 736, 16, 40, "Input"],
Cell[CellGroupData[{
Cell[72095, 1988, 165, 2, 23, "Print"],
Cell[72263, 1992, 163, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72475, 2000, 102, 1, 40, "Input"],
Cell[72580, 2003, 703, 15, 40, "Output"]
}, Open  ]],
Cell[73298, 2021, 845, 19, 40, "Input"],
Cell[74146, 2042, 985, 27, 40, "Input"],
Cell[CellGroupData[{
Cell[75156, 2073, 471, 10, 40, "Input"],
Cell[75630, 2085, 120024, 1966, 290, 44104, 720, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195715, 4058, 112, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[195852, 4063, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[195944, 4067, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[196115, 4074, 2691, 66, 121, "Input"],
Cell[CellGroupData[{
Cell[198831, 4144, 1927, 39, 81, "Print"],
Cell[200761, 4185, 613, 9, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[201401, 4198, 481, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[201907, 4211, 1926, 48, 101, "Input"],
Cell[203836, 4261, 375, 9, 39, "Message"],
Cell[204214, 4272, 102, 1, 40, "Output"]
}, Open  ]],
Cell[204331, 4276, 1026, 29, 81, "Input"],
Cell[CellGroupData[{
Cell[205382, 4309, 174, 3, 40, "Input"],
Cell[205559, 4314, 539, 11, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206159, 4332, 129, 1, 37, "Subsection"],
Cell[206291, 4335, 10282, 291, 261, "Input"],
Cell[216576, 4628, 4637, 123, 261, "Input"],
Cell[CellGroupData[{
Cell[221238, 4755, 286, 7, 40, "Input"],
Cell[221527, 4764, 1298, 34, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222862, 4803, 3892, 97, 141, "Input"],
Cell[226757, 4902, 1924, 39, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228718, 4946, 692, 13, 40, "Input"],
Cell[229413, 4961, 942, 20, 40, "Output"]
}, Open  ]],
Cell[230370, 4984, 611, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[231006, 5000, 637, 12, 40, "Input"],
Cell[231646, 5014, 932, 20, 40, "Output"]
}, Open  ]],
Cell[232593, 5037, 663, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[233281, 5054, 612, 11, 40, "Input"],
Cell[233896, 5067, 931, 20, 40, "Output"]
}, Open  ]],
Cell[234842, 5090, 586, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[235453, 5105, 621, 11, 40, "Input"],
Cell[236077, 5118, 941, 20, 40, "Output"]
}, Open  ]],
Cell[237033, 5141, 583, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[237641, 5156, 690, 13, 40, "Input"],
Cell[238334, 5171, 926, 20, 40, "Output"]
}, Open  ]],
Cell[239275, 5194, 695, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[239995, 5211, 609, 11, 40, "Input"],
Cell[240607, 5224, 938, 20, 40, "Output"]
}, Open  ]],
Cell[241560, 5247, 602, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[242187, 5262, 643, 12, 40, "Input"],
Cell[242833, 5276, 936, 20, 40, "Output"]
}, Open  ]],
Cell[243784, 5299, 598, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[244407, 5314, 618, 11, 40, "Input"],
Cell[245028, 5327, 860, 16, 40, "Output"]
}, Open  ]],
Cell[245903, 5346, 589, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[246517, 5361, 618, 11, 40, "Input"],
Cell[247138, 5374, 858, 16, 40, "Output"]
}, Open  ]],
Cell[248011, 5393, 581, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[248617, 5408, 923, 25, 61, "Input"],
Cell[249543, 5435, 1574, 34, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251154, 5474, 787, 22, 61, "Input"],
Cell[251944, 5498, 1600, 34, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253581, 5537, 700, 19, 40, "Input"],
Cell[254284, 5558, 47017, 772, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301338, 6335, 702, 19, 40, "Input"],
Cell[302043, 6356, 35321, 580, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337401, 6941, 702, 19, 40, "Input"],
Cell[338106, 6962, 56421, 927, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394564, 7894, 700, 19, 40, "Input"],
Cell[395267, 7915, 46532, 764, 172, "Output"]
}, Open  ]],
Cell[441814, 8682, 71, 1, 40, "Input"],
Cell[441888, 8685, 315, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[442228, 8697, 122, 3, 40, "Input"],
Cell[442353, 8702, 411, 6, 40, "Output"]
}, Open  ]],
Cell[442779, 8711, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[442901, 8717, 197, 4, 61, "Input"],
Cell[443101, 8723, 410, 6, 40, "Output"]
}, Open  ]],
Cell[443526, 8732, 366, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[443917, 8743, 309, 6, 61, "Input"],
Cell[444229, 8751, 519, 10, 40, "Output"]
}, Open  ]],
Cell[444763, 8764, 218, 5, 40, "Input"],
Cell[444984, 8771, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[445116, 8776, 164, 3, 40, "Input"],
Cell[445283, 8781, 727, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446047, 8804, 213, 4, 40, "Input"],
Cell[446263, 8810, 464, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446764, 8823, 348, 8, 40, "Input"],
Cell[447115, 8833, 753, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447905, 8856, 585, 14, 40, "Input"],
Cell[448493, 8872, 1015, 23, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449545, 8900, 139, 3, 40, "Input"],
Cell[449687, 8905, 693, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450417, 8924, 176, 3, 40, "Input"],
Cell[450596, 8929, 498, 9, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451131, 8943, 149, 2, 40, "Input"],
Cell[451283, 8947, 953, 19, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452273, 8971, 178, 3, 40, "Input"],
Cell[452454, 8976, 1715, 41, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454206, 9022, 389, 9, 40, "Input"],
Cell[454598, 9033, 1502, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456137, 9066, 402, 6, 40, "Input"],
Cell[456542, 9074, 3020, 63, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459599, 9142, 374, 8, 40, "Input"],
Cell[459976, 9152, 2195, 33, 82, "Message"],
Cell[462174, 9187, 2793, 43, 99, "Message"],
Cell[464970, 9232, 1875, 30, 98, "Message"],
Cell[466848, 9264, 819, 15, 21, "Message"],
Cell[467670, 9281, 2226, 50, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469933, 9336, 332, 7, 40, "Input"],
Cell[470268, 9345, 769, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471074, 9366, 384, 9, 40, "Input"],
Cell[471461, 9377, 1271, 23, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472769, 9405, 674, 19, 81, "Input"],
Cell[473446, 9426, 932, 18, 107, "Message"],
Cell[474381, 9446, 599, 13, 54, "Output"],
Cell[474983, 9461, 599, 13, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475619, 9479, 573, 14, 40, "Input"],
Cell[476195, 9495, 552, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476784, 9512, 736, 16, 40, "Input"],
Cell[CellGroupData[{
Cell[477545, 9532, 161, 2, 23, "Print"],
Cell[477709, 9536, 161, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[477919, 9544, 102, 1, 40, "Input"],
Cell[478024, 9547, 1013, 19, 40, "Output"]
}, Open  ]],
Cell[479052, 9569, 845, 19, 40, "Input"],
Cell[479900, 9590, 985, 27, 40, "Input"],
Cell[CellGroupData[{
Cell[480910, 9621, 471, 10, 40, "Input"],
Cell[481384, 9633, 52754, 863, 317, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[534199, 10503, 176, 2, 72, "Section"],
Cell[CellGroupData[{
Cell[534400, 10509, 374, 7, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[534799, 10520, 116, 1, 23, "Print"],
Cell[534918, 10523, 122, 1, 23, "Print"],
Cell[535043, 10526, 116, 1, 23, "Print"],
Cell[535162, 10529, 122, 1, 23, "Print"],
Cell[535287, 10532, 132, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[535446, 10537, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[535776, 10546, 106, 1, 40, "Input"],
Cell[535885, 10549, 348, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536270, 10560, 223, 4, 40, "Input"],
Cell[536496, 10566, 789, 16, 158, "Message"],
Cell[537288, 10584, 471, 10, 21, "Message"],
Cell[537762, 10596, 127, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537926, 10603, 4560, 131, 321, "Input"],
Cell[542489, 10736, 2475, 56, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545001, 10797, 642, 17, 40, "Input"],
Cell[545646, 10816, 138140, 2219, 224, 129007, 2068, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683823, 13040, 1071, 27, 61, "Input"],
Cell[684897, 13069, 2622, 60, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687556, 13134, 164, 3, 40, "Input"],
Cell[687723, 13139, 804, 20, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688564, 13164, 690, 18, 40, "Input"],
Cell[689257, 13184, 918, 23, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690212, 13212, 135, 2, 40, "Input"],
Cell[690350, 13216, 1829, 41, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[692216, 13262, 255, 6, 40, "Input"],
Cell[692474, 13270, 116, 2, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)
], ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"before genPolys in createpolynomials 1\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.617797796114665*^9}],

Cell[BoxData["\<\"before genPolys in createpolynomials\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.6177977961346655`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sysPolys", "=", 
   RowBox[{"ReplaceVariables", "[", 
    RowBox[{"lucaMod", ",", "thePolys", ",", 
     RowBox[{"{", 
      RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
  3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
  3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".05"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forPlot", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ru", "->", ".0"}], ",", 
    RowBox[{"qq", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.61754333080116*^9, 3.617543350490963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3730516147770083`*^-7"}], ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617720577811262*^9, 3.61779779662467*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnHu0VuO+x9fIJVKGJbKxSaRc4sj9PkWlKys2NtqdV4pCW+cc2S7lkqit
Q1QbXVDkVllK0xKt3tlFbqVUuq5Cci9Zqzv21ll7zt/nabzf533GOP3TGJ/x
jLl+8/M+73c+8/fO+TTpfvsVPeuUlJScu1dJyR61/zdZ23narl1fJGPOe6bR
unveS64o+3jfh4ftjG66Y8qoij5VjjdtuaJv5wbboon7NXygT9Vyx7eXfr3i
4KE10aYX+t3UtP0Sxx/7Zt2AytKNUc/0OPMdb/nKbx07N/jGxs9x/LXFJ5xe
WbrG+JuOr3utctyM0gVRif2DNxq5zy/v9RmYt/ERvE77fptmli5I7PiOn9uk
7vUzS9ckVo/jvy7s/UVtPTZ+ieNXNSgrnVm6MbHzdXz1sWOaNBpak5gfx/dp
8/i7tX4S8+n4mT0evLLWJzzJzTvowW8em+15hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHru8NzRK5a2mul5hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHr+bOrhk9fc/LbnGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunuHqGa6e4eq5WzrPp3qe4eoZrp7h6hmunuHqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp4Xp/5f8TzD1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9
w9UzXD3D1TNcPS9I+dOeZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoar
Z7h6hqvn7CwGna+e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp6/zPxH6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHquSrL
E88zXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1fON2fXR8wxX
z3D1DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1vDJb73me4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp4vy+5fPM9w9QxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz92z+3HPM1w9w9UzXD3D1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9Wz9Zc8z/BAv87zDA/06zzP8EC/zvMMD/Tr
PM/wQL/O8wwP9Os8z/BAv855fu+4+5tVVaxN7ntgeccb95ybzJhVdkHvhdsj
/MPxb+Mj+POf1R1cO94dHx44fhQ4fhQ4fsTx4dQv3PVROb6MTwLjtR73d6l/
88Bvb+tT9XlSv9tZLV9I5iaPDHnsmB3lOyLjEfyWsa371HIdHwXGR4zHA8fB
A+OpX49P/Ryf+jm+1s9xAuO9+ymOE6jH1T+gydeVu3bt7uvu+49tN44csC1a
1fOe93ftWuH+7pxVR+VfvHWz44yHnzHxgE937Vrqxm8+/5lTbpq2yXHGw49O
61zkxufe3/T1oGHfO854+Or0737gxn96eZtRL976leOMhzdNj5O48fe9edaY
QcNWOs54ePOUv+HGT3/0o7qDhn1o+TCkEl5SMmvnv/OB8RxHx8MZf3g23s2H
RccPvOqRYR8mcMbDj8zqdOPr1TlozsPDVjrOePiKzIMb/9TfprWYcOtXjjMe
3jjz7MY329T1roeHfe844+GnZ5+jGz+9x97v1X6OjjsPxldm88SNf+mnFXUn
3LrZccbD+2fz0I3/6dXJr9fOQ8cZD2fe0u/VeQvX+QnXeQjX+QbXeQXX+QPX
+QDX+QDXzx2uny9cP0e4fl6uHvlc4Oofrp7p96pnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqG
q2dXj3iGq2e4eqbfq57h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4erZ1SOe
4eoZrp7p96pnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn
+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunl094hmunuHqmX6veoar
Z7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2dXj3iGq2e4eqbfq57h6hmunuHq
Ga6e4eoZrp7h6hmunuHqGa6e4erZ1SOe4eoZrp7p96pnuHqGq2e4eoarZ7h6
hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2dXj3iGq2e4eqZfF+jLeZ7hgT6b5xke6Jt5nuGB/pjnGR7oa3me4YE+
lefZ1VO87+Q847P56fO2DNrg9zl/tt8N1GdFabNVc1+e492P0CdXn21+fiRf
p/tc736kgfVpvT7Ggu9ebHWE328M9Q+Ps/rVJ/Wrz7etfvVJ/eqT+tUn9avP
lfc+VHngv/z+W69rvx7fZXre87njzDaDn/ifxPN5Sb0rK24+ZJbns97dexxf
t98sz+eS76aNeXnJLM/nqKt77N/2FL8f2zHQf1tt9atP6lef1K8+qV99Ur/6
pH7NgdFWv5e3w/o/efgx0z3Pm29be+d1n0/3PD/Y4cKuo0a943k+4LjnW638
07ue5+f3Kml+yAEzPM8nr8/Vv3r+DM9z5azZNSMfqfQ8Lwv033pY/eqZ+tUz
9atn6lfPz1n96pn61fNMq189b7TfCdVz//T7Ms3zvF/6vZjmeR6d5k/seT7+
0F9+a3zmW57n6duvXdet5i3Pc9vP3n3/2ckVnuf/DPTf+J1TPVO/eqZ+9Uz9
6vk4q189U796vtTqV8+b0s/9Vc9z/fTzneh5PiH9HCd5ntul3+vXPc83pd/f
cs/zxen3dIrn+dP0+zjF87w00H+rtvrVcwOrXz2faPWrZ+pXzz2tfvVM/V7/
zepXz3ul9Yz2PF+c/t1nPc8XpccfF+gnj/c835vOqxc9z8+k82eC57kinScv
eZ4/DfTf6ln96rm11a+eqb94P3m85/keq189j7L61fPbVr96viut/2bP85SU
/83zfEVaz4Oe54/T8YM9zxel5/uY5/n69DhPep6fSusf6XnO/r/L67+Ns/rV
83SrXz3/yepXz9Svni+w+tVzV6tfPT9j9avnVzLurYdvyY7jrYevy/6utx7+
KqvTWw/flp2Xtx7emHnw1sN7vpl689bDawL9txesfm+9YfWr5z9b/eqZ+tXz
7Va/ev7R6lfPm7LP3bvvyGfz3PM8LvteeJ4HZt8jz3OP7HvneW6bfU89z12y
77XnuVGWA57nVYH+W6XVr56ft/q99YbVr56pXz1favWr5zKrXz0fZPWr52VZ
bnueMz9TPM+3ZdeFQL/idc9zy+y643nO6pnoed6eXdcC99F+/+0zq189t7H6
1TP1F+9XvO55PtXqV88NrX71vM3q954TyNYhnucZ2brF83xits7xPI/N1kWe
5/2zdZTn+f5s3eV5rrHny9TzikD/rZ3Vr57ftfq99YbVr56pXz1Tv3qmfvVc
bfWr51nZutrzfEq2Dvc8j8/W7Z7nA7N1vuf5oey+wPO8NbuP8DzflN13eJ47
B/pveatfPVO/eqZ+9Uz96nmQ1a+eqV8997T6vb5Qdp/oeV6a3Vd6nutn96Ge
59bZfavn+ZfsPtfzfEt2X+x5XpPdR/+/+292n+t5pn7vPsXqV8/Ur55/tfrV
M/V7v49Y/d5zL1l/xvNs/RDPs/VPPM88l6ierT/jea6250zV8/FZ/8fzPDrQ
f1tq9atnng9Uz9Qf6Bd5nqlfPVO/9ovod+ET/8uM63Nf9Ov0c8GDHsf6Y5Ee
x47vcfqEgb6rq5Pnlum/8dwyz1vCed6S55nh+jwzXJ9nhuvzzHB9nhmuzzPD
9XlmuD7PDNfnmeH6PDNcn2eG6/PMcJ5nxmdv67OpT7j6hKtPuPqEq0+4+oSr
T7j6hKtPuPqEq0+4+oSrT7g+Hw7neWA8D7R+mnqGq2e4eoarZ7h6hqtnuHqG
q2e4eoarZ7h6hqtnuHqGq2e4eh5jfTP1DFfP8OLvO8SB/UniwP4kcWB/kjiw
P0kc2J8kDuxPEgf2J4kD+5PEgf1J4sD+JHFgf5LY89zL+mPqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4ep5tPXB1DNcPcPVM1w9w9UzXD3D
1TNcPcPVM1w9w9UzXD3D1TNcPcPV8yjrd+G58P333Pnqn/H4L3yPPne+fi6M
53MpfI8+571Hz3g+r8L363Pe+/WM53MsfO8+5713z/jCz3eOG6+fO+P53Avf
08957+kznvlQUvAv572/z/jCecJ7/TnvvX7GM38K3/fPee/7M555VbgPQM7b
B4DxzLfC/QFy3v4AjGceFu4bkPP2DWC8rMfceJ23jJf3jNx4nc/PWp9T5y1c
5ydc5yFc5xtc5xVc5w9c5wlc5wNcP3e4fr5w/Rzh+nnB9XOBq3+4eh5r/Uz1
DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPV8i/Ut1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcOLz+c4MJ/jwHyOA/M5Dszn
ODCf48B8jgPzOQ7M5zgwn+PAfI4D8zkOzOc4MJ/jwHyOPc/0UdUzXD3D1TNc
PcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3Di+dGPpAb+UBu5AO5kQ/kRj6Q
G/lAbuQDuZEP5EY+kBv5QG7kA7mRD+RGPpAb+UBu5D3P9P10PwF4oP/m+YQH
+m+eT3ig/+b5hAf6b55PeKD/5vmEB/pvnk84PudMb/tiRZ8Vrq+4tl+d+V1/
q4nqlr329z5Vu/uW179+ZI8OmzdGTy085Mt2wxc4/vtfzz616qdvosb/WjO5
os9cx1vfMKFk5ZK1Udk1rbe0Gx47fvBHb5yzZcSiaGa7/Y8a3nS26xOOe/Kx
x8eXrU7OOKz9lU3bf+z4SXVP+iVp8XWyfFurS6oqFjs+pE3DE/+j5YZkeLcv
ujZtv7sPuWV2/5MXHVaTXPZB/zv7VK12/Oh1t3+w97Nbk31POeyJij7OQ1JW
cmPuwsY7kyPT+pe6fmDzftd3WLnkp2heuv/AJ45/fGa/P/Re+G10eXpe7zm+
pvqIT7aM+CIqTz+XCsePvqNL74OHLo72mrWu/vCmH7l+3Q1R9YGndlqf5FMP
ix2vHLC89fiyH5N7pk46p6pimeMNunU7b8jE6uTM1M9qx88f0OWzpMXWpMbe
94fzvv/WlC90/bd//D719+3l30UD0uPPc/ycWfMXDJ74ZVQ/rfMdx9/dY/4Z
LTstjV4es/qf7YZ/6vpgNW+N6taw7w9J9z3vajS86TLHm/8atWt1bnVyZJ+D
T6mqWOX41Yeetu6uyi3J6mVvtm/a/nPHB53d7J4pF+5IJqfe3nf9q72G7DPt
4KHrolvS+TzD8S4jWtfp3GBZ1CH1/5nrFw1sccnErSN+Tuqm9a9yvO9bB21q
2WlLMqdgf4k4ec72l/gw5TNdP+eHo/MLey1cHv18YPkP7YavdH2SR7ts//XH
qs3JxHs77jG86VrHp/f9YcTR3bYnI9LvxRp3v7+0/vxxVT9tS3rJff2xlleT
5X58h+VVtdx3D7O86iX316dZXtXIfXS55dVWuV/eYHn1vdzn7myX5dIGuZ89
w3Kpu9y37rRc2ij3p1daLr0q96GrLJd6yP1mXculxnJfeYbl0lzLJe6DNJfg
XS2XnrZcgu+yXDrKcgnexnLpCssl+KGWS5WWS/DnLJdOs1yCt7BcWma5BB9s
ufSk5RKcXOpsuQRvYrm0j+US/HLLpcaWS9ynHGe59L7lEny+5BJ8reXSFMsl
d/9oubSn5RI8Z7k003IJPsNy6W7LJTi5dIblEvw8ySV4b8kl7gvIpfssl9x9
iuXS/pZL8BmSS3DNJbjmEpxcWmW5BNdcYl1NLvW2XIKXWS51tFyCPyS5BNdc
gpNL71susc781nKp2nIJPtRyaZLlEvwdy6WRlkuso8gluw666/JtGyc1qp1v
0X2Fv6smm+x3Ulk/uL7QfoXHifrYceR3Urfu3a/w+ht1sXl+v/0Oy/Hr2e+w
TV/8d84MdPyiARVPTCsda+uQNe46W72z4TW152W/s69wfK79Xl8nPc5wx8tm
NG8xvXRy1C39HCe56+a4esMqL2swz/ZpSXb/7ma/m5dnnt31cXnXUzvUeo42
Z5+L469eEE2t/VyiM3lezvgWe06gf/p3xzi+9x9/vbRjg7eicel8e9ldH/tu
GHPMIUNnJ5XZfNjN/3v0tt4LlyfL7Xd8d3233/HnFeybFCeVtm/Svtk8dPzx
8X+ZUDsPo8uyeet4sueyRrXz1p5PWOT4DfY8wz/T/H/B8Z7XfXn3u6WV0fqM
u+vsA890OTgprUwyzzMcX/nVUcdf1mBZ8nL2/XL8ozfubNto6Dp7bmGR48fa
cwhrsu+pu16/0PT2U2q/p1GT7Hvt+B179X+69nsd9cxywPG23w75/aJzq6PX
stxw/KTHT5x/YN8fojX2nAZ8sT2nMT37XBzv3mn9soOGzo46Zp+jWw80ue7W
9Zc3eCspyfLK8VZXvtL11E5Lk7uyfHP8X9+dkxsy8ctkU5aHjl/b7KjhO8q/
S06z5y7gFfbcxVbbJ4r1xhDbJ+rsLIcdv6736Edrczjqn+W24yd2eKVm8MTq
aFaW847vvKrX1HFlP0b1suuC42MPGXh/y07r7bmUxPEH7HmVvtn3aPfvPrcu
/2unBvOiFel8GO7WRY+fVe/G2aWTkwnZ9cjxSXNPeqLR0MVJ++z65XiPi37d
snXEF8ms7Hq3+zjd1k+qvd4lf8yuj47/OPajtbXXR/dcCpznUsgr+tvkVVl2
XXY8+mT6gNrrcjQyu447Xlo+7+uFh9VEK7PrvuPvHfHS0ye33BCdk60THO/1
Rb5n7TohmpOtKxw/5OKpN48rWx214D0m45UFz/k8U8m6qKSkb/qcTz71OdD1
5yf2u/f3eaVjk7bZesbx5r16Dd42YlFyWLb+cfyTKQ80X7VkbfJktl5yfO5T
L8+rXS8le2brK8cbL/vfHbXrq2RWth5zPPn7Owf95bca91wNnOdqyHPWM+T5
cZbn8HaW5w3t+SX4R/b8EjnP+oGcr7Kch5Pz+1jOw/9sOX+N5Tx8tOX8YZbz
8L0l51kPaM67Pq3kPFxzHk7Oj7Gch98mOQ/XnHfrJcl51g+a83ByvrPlPDxv
Of+L5Tm8u+X5d5bn8Ecsz3OW564/aXn+quU5/GPLc3Kb9cl4y+2jLLfh5HYP
y214G8lteAvL7Tctn+HdLJ+vsXyGn2D5vIflM/wSyWf475bP1ZbP8Oskn+Fv
Sz6z7hos+Qy/VvIZrvkMJ5/3tXyGk8//ZTkMf9xyeK3lMPxpyWH4ZMvhDpbD
8Jskh+HDJIfhGyyHyVXWexdJrsI1V+Hk6rmWq3Byda7lKvwPlqunW67C51iu
vmP5CX/B8rON5Se8meQnfIHl5xOWn3DNT/iRlp+J5Sc8b/l5b+G6N9pHnjtl
3avPncL1uVO4PncK1+dO4frcKZznTnmO1K3P5TlSuD5HCvfeK+T48hwpnOs1
58s6XM8XrucL1/OF6/nCOV/OC67nBdfzcseR84Lrc8hwrpucF+t5PS+4nhdc
zwvOeVE/XOt346V+uNYPp/7CfQbiwP6ccWAfztjVWfi+fxzYZzIO7CcZu3r4
u6yf9e+6Pp79XY4P1+PDOT7HYZ3Jcdz73caL79+VC+zflQvs35UL7N+VC+zf
lQvs35UL7N+Vc/t3Fe7TlQvs05UL7NOVC+zTlQvs05UL7NOVC+zTlXP7dOGN
daN6g6s3uHqDqze4eoNrTrp1r/iBqx+4+nHHFz9w9QPHDx5Y3xZ/v2mC5wGu
HuDqAa75CS/+XtIE73zdceR84Xq+cM1P1sl6XvDi77mUe+cF1/yEa/1ufNH3
UMq9+uGan6yfi/uPA/7jSPPT8aI+44DPONL8ZH2rfxeu+QnX48M1P1k3an7C
GZ99/4dUsk7g/Rdyleup5iqcfOA4cH2PBq65B+d7zd/lOqh/F+69Pyv7dVAP
XOuBaz1wzRk437vC91ziwL7fcWB/7ziwj/fu/S6oH158X6A4sN91HNjXOg7s
X717nwrOi+ty8X1pyr3zgut5wTU34HwfOV+4ni+8+D4z5d75wvV84Zozbt1i
32s8sN5QD3D1AC++n8kEzwNccwlOPuAH7r0PaFz9wNUPvPi+JRM8P249Jrmn
/UC80b9Sb3D1BldvcPUGV29wb18j4/reHxyf8N19wkLPjFfPcPUMV89w9ezq
LLqfxkhv/ax9wgHSJ8Q/5wXX84JzXhyH9YB+jnDNf7geH67e4Jr/XMe9fSqM
6/yBa/7DtR641gPXzxGu+c/1vbif2KsTrnXCi3uLA95ir0641sk6QeuEa51w
/T7C9ToF1/rhWj9c64fr9wWu3xe3XpLcZp1TfP7kA/Mn750vvPi6Nx/p9Qte
fL7lA/MtH5hvec8DvPg6Oe95oA+mHlwfr3gfzPMAD/TBvHU1PNAH896/hgf2
6/O8wQN9M8+b60MW75t563m4XtdYJwfem3Y5/H+q0Tx6
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnF1IFFEUxwfNIKFCV/sutA+zzF0po5L8gEjBrKC3giiCJIVICIQekkwt
guihDHoRV0MoWiIhiEp7yFJCQ7CXVcN8iR5EITGViqhmR/EMnusemdmd1b8v
wp/L3XN+99z/zN45s8nnLp04H6VpWlaMpkX/+1+SkDm49+JIrhb4u/a69Ko7
v+dTbn72xJeZ+o3fo57/Ojfe/yiR6A179ivHNwxsJbq7u0+pHyjYRvTxIr+u
11zZRfQfG3zKeKR5ScdLdXAGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AO
PWenrZfd8zttvNPylepp/j8z59eOFb7zzLJfNM/s+2had8clE/1I6qhSl86f
c9ZN9OIyr1I3z8P4wLT+fIjq3ypm9Qdtyh+k4w/eS6N6Y7NSX3J6PdEn0hM9
Kr2uKYroGd99St3kY1qj4WOc3npoI9EvVC5T6isvLyW668F9pV5K61NrMeqT
06V1K61DaV1ZVQ/S9ZWul5Q/OIMzOIMzOIMzOIMzOIMzOIMzOIMzONvHuYCe
+2k3jXM/cJ4fZ/C0lid8AH4LzuAMzuAMzuAMzuAMzuAMzuAMzuAc6ZxxXhSa
8zdp35dV80jnt+pzzTyn+oe58dI+Rq4eTP3MGtPPPB2PNF+7x4NnePcLOIMz
OIMzOIeGs933OdL1kq6jVetrVT1I60RaP9K6Wqj1A9+AP4MzOIMzOIMzODuN
M3iqeXJxFpavJXp1X5I+/2R+BtF722r18afepxDdu7lbyW3k+hqidz1L0ed/
GfuL5FX6sN+jitP8fOSo8XzEPH7MGM9xMJ9vlxjn29znunypRI8rb1Pmy8Vp
Hp9hjDefqycY5+rc8wUuL3Oc8UacXXd3Er3qwwtl/ByfseUriN73tVj5vCDY
OpxaLy6eYL+Xeee538159Rt5RbpfwZfgSzPzhS8tTl+Srpfd83C+kZJF76+y
6/zzqkNXOp2nejgwz6iP1tt4aqDeuOfmHH+uDrk+AS2JxtOZ3avrj9t30Hie
tuj6un2biJ78JFr0HH+uc0uOG6cPx9P44+8E4j8zSPf1eOZbXfeYOBQZHLj+
gWD7ELj9/tlYF85nuHi4Po2+GJrvyYFAvqt+bqf5vurQ9cNDW4he3jSo65V5
sbSuciqU8XN+xa0Lty+46wXHk7uecr7UMUl1rzugd7lMfPI+Kq/LnG8Hu9/d
DAfXHBy4PiuOg/k+pMa4D2lO3030wtW3lNykfT5V6ZTbeHuPrpfVU9/orG/V
9eL+OKK/uX3co8pXykfat8b5Ode/BJ8Pjc/b7ed2+zb8udaRPuw0X3Waf0ZK
32m4+kjDlW+4+pDtzsvu+K2K0y6ec32udH5unkjv53daP7l0vyw2n+T4wD/h
n1byDLd/ct+Lpb5q1Xs0Vvm53e/12H3dCdd7SeG6njrtPSyn3Vc4jc9C/V2j
SOEsvR+W5gX/D43/R0qcTrtOOc23ncYhUs7BnMbNqvev/wIBCpF+
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-1.5350392591410702`, 
   1.5350389845307473`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6177205827312617`*^9, 3.617797802744731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Output",
 CellChangeTimes->{3.617720583441262*^9, 3.617797804204746*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllNewtonIterInfo", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617543646721884*^9, 3.617543669001989*^9}, {
  3.61754379710327*^9, 3.6175438018433175`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"huh", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "//", "Dimensions"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.617543808223381*^9, 3.6175438640749397`*^9}, {
  3.617543938765687*^9, 3.6175439394656935`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205834912615`*^9, 3.617797804454748*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllFVals", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617544337890678*^9, 3.6175443467307663`*^9}, {
  3.6175444031613307`*^9, 3.6175444037713366`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "huh", "]"}]], "Input",
 CellChangeTimes->{{3.61754391610546*^9, 3.617543921335512*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205835312614`*^9, 3.6177978045147486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Norm", " ", "/@", " ", 
    RowBox[{"huh", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617544359790897*^9, 3.617544362200921*^9}, {
  3.617544449421793*^9, 3.617544452291822*^9}, {3.617544495513254*^9, 
  3.617544506473364*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     LineBox[{{1., 37.611884246245204`}, {2., 32.31548509037757}, {3., 
      5.862708750947969*^6}, {4., 1.465675809258381*^6}, {5., 
      366410.37643775373`}, {6., 91561.8311536904}, {7., 
      22727.048579896753`}, {8., 5195.825595533379}, {9., 655.898090414444}, {
      10., 9.652394706720582}, {11., 0.00578172379216631}}],
     FontFamily->"Arial"]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 11.}, {0, 3.664175044553892*^6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617720583841262*^9, 3.6177978050947547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["check initialization", "Section",
 CellChangeTimes->{{3.617648049920026*^9, 3.6176480578011045`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176463247456064`*^9, 3.617646327615635*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205839112616`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617645348426832*^9, 3.617645352746876*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox["\<\"JLink-Launch218\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox["\<\"JLink-Launch218\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject["JLink-Launch218", 91, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6177205842012615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176460986193385`*^9, 3.617646102029372*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.617720584221262*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6175465828181276`*^9, 3.6175465891481905`*^9}, {
  3.617642190098014*^9, 3.6176421988801064`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReinstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617647455953071*^9, 3.6176474604131155`*^9}, {
  3.61764758282434*^9, 3.6176475893044043`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                ScrollPosition->{0., 0.},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Links\\JLink\\JLink.jar\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-7b428f3f-564f-4daa-9473-\
f97408bd08d3\"", 1304, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.617720584462262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"duh", "=", 
  InterpretationBox[
   RowBox[{
    TagBox["LinkObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PanelBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquarePlusIconMedium"],
             ImageSizeCache->{12., {0., 12.}}],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = True),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               StyleBox[
                
                PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 300}, Automatic},
                 ScrollPosition->{0., 0.},
                 StripOnInput->True],
                LineBreakWithin->False],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquareMinusIconMedium"]],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = False),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 500}, Automatic},
                StripOnInput->True],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link protocol: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["\<\"SharedMemory\"\>",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open$$],
       ImageSize->Automatic],
      BaselinePosition->Baseline],
     DynamicModuleValues:>{}], "]"}],
   LinkObject[
   "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\lib\\JLink.jar\" \
-Dcom.wolfram.jlink.libdir=\"C:\\Program Files\\Wolfram Research\\Mathematica\
\\10.0\\SystemFiles\\os\\win64\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-3d3ffcbf-b63e-4bb7-97bb-\
12c7d6aa40b7\"", 147, 7],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.617647720216714*^9, 3.6176477215267267`*^9}}],

Cell[BoxData[
 RowBox[{"LinkObject", "[", 
  RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}]], "Output",
 CellChangeTimes->{3.617720584512262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", "duh", "]"}]], "Input",
 CellChangeTimes->{{3.6176477385068965`*^9, 3.617647746436976*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinkObject", "::", "linkn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\
\"C:\\\\\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Research\\\\\\\\Math\\\" \
\[Ellipsis] \\\".wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\[NoBreak] in \
\[NoBreak]\\!\\(LinkConnectedQ[\\(\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\"C:\\\\\
\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Resea\\\" \[Ellipsis] \
\\\".jlink.JLinkSystemClassLoader com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\\)]\\)\[NoBreak] has an invalid LinkObject number; the link may \
be closed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkn\\\", ButtonNote -> \
\\\"LinkObject::linkn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6177205849022617`*^9}],

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", 
  RowBox[{"LinkObject", "[", 
   RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6177205849822617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Link*"}]], "Input",
 CellChangeTimes->{{3.617647704275554*^9, 3.6176477093656054`*^9}}],

Cell[BoxData[{
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["System`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["System`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["ControllerLinking",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"ControllerLinking", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkFunction",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFunction", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkProtocol",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkProtocol", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ThisLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"ThisLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["GraphLinkEfficiency",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"GraphLinkEfficiency", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkHost",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkHost", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRankCentrality",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkRankCentrality", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$CurrentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$CurrentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkActivate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkActivate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkInterrupt",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkInterrupt", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRead",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkRead", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$Linked",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$Linked", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkClose",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkClose", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkLaunch",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkLaunch", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadHeld", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$LinkSupported",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$LinkSupported", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnect",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkConnect", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkMode",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkMode", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadyQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadyQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$ParentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$ParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkConnectedQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkObject",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkObject", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Links",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"Links", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$SetParentLink",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$SetParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkCreate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkCreate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOpen",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOpen", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkService",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkService", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkError",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkError", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOptions",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOptions", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWrite",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWrite", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkFlush",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFlush", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkPatterns",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkPatterns", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWriteHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWriteHeld", "System`"}},
          ButtonNote->"System`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]], "\n", 
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["JLink`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["JLink`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["CreateExtraLinks",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"CreateExtraLinks", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["FrontEndLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"FrontEndLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaUILink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaUILink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["SharingLinks",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"SharingLinks", "JLink`"}},
          ButtonNote->"JLink`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.19]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]}], "Print", "InfoCell",
 CellChangeTimes->{3.617720585162262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"urlClass", "=", 
  RowBox[{"LoadJavaClass", "[", "\"\<java.net.URL\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176473903024144`*^9, 3.6176474065625772`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"java", ".", "net", ".", "URL"}], ",", "<>", "]"}],
  JLink`JavaClass["java.net.URL", 30, {
    JLink`JVM["vm3"]}, 1, "java`net`URL`", False, True]]], "Output",
 CellChangeTimes->{3.617720585472262*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{"modEqns", ",", "tryMat", ",", "lucaBasis"}], "]"}]], "Input",
 CellChangeTimes->{{3.617721060199997*^9, 3.6177210880602756`*^9}}],

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", "lucaMod", "]"}], "\[RightGuillemet]"}],
    JLink`Objects`vm3`JavaObject23866079067504641], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.292289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.5`", ",", "0", ",", "0", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.299289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}]}], "}"}], ",", 
   "JLink`Objects`vm2`JavaObject9714448113598465"}], "]"}]], "Output",
 CellChangeTimes->{3.617721089840293*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"InstallJava", "[", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205856922617`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1628, 891},
WindowMargins->{{Automatic, -1710}, {45, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[CellGroupData[{
Cell[743, 29, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[842, 33, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[934, 37, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1105, 44, 1879, 50, 101, "Input"],
Cell[2987, 96, 577, 9, 23, "Print"]
}, Open  ]],
Cell[3579, 108, 481, 9, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4097, 122, 84, 1, 35, "Subsubsection"],
Cell[4184, 125, 1841, 48, 101, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6062, 178, 149, 3, 35, "Subsubsection"],
Cell[6214, 183, 977, 28, 81, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7240, 217, 129, 1, 37, "Subsection"],
Cell[7372, 220, 171, 2, 30, "Text",
 InitializationCell->True],
Cell[7546, 224, 10241, 291, 281, "Input"],
Cell[17790, 517, 319, 8, 40, "Input"],
Cell[18112, 527, 355, 9, 40, "Input"],
Cell[CellGroupData[{
Cell[18492, 540, 1197, 35, 40, "Input"],
Cell[19692, 577, 1802, 51, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21531, 633, 151, 3, 40, "Input"],
Cell[21685, 638, 666, 15, 40, "Output"]
}, Open  ]],
Cell[22366, 656, 1703, 42, 141, "Input"],
Cell[CellGroupData[{
Cell[24094, 702, 127, 2, 40, "Input"],
Cell[24224, 706, 12510, 263, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36771, 974, 365, 6, 40, "Input"],
Cell[37139, 982, 917, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38093, 1010, 2387, 69, 81, "Input"],
Cell[40483, 1081, 910, 21, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41442, 1108, 55, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[41522, 1112, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[41670, 1119, 4565, 117, 261, "Input"],
Cell[46238, 1238, 734, 16, 40, "Output"]
}, Open  ]],
Cell[46987, 1257, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[47301, 1267, 232, 5, 40, "Input"],
Cell[47536, 1274, 398, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47971, 1286, 184, 4, 40, "Input"],
Cell[48158, 1292, 117859, 3040, 213, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166078, 4339, 163, 2, 37, "Subsection"],
Cell[166244, 4343, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[166574, 4352, 345, 8, 40, "Input"],
Cell[166922, 4362, 1109, 25, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168068, 4392, 486, 10, 40, InheritFromParent],
Cell[168557, 4404, 1048, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169642, 4433, 256, 6, 40, "Input"],
Cell[169901, 4441, 553, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170491, 4458, 241, 7, 40, "Input"],
Cell[170735, 4467, 981, 26, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171753, 4498, 135, 2, 40, "Input"],
Cell[171891, 4502, 273, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172201, 4511, 203, 5, 40, "Input"],
Cell[172407, 4518, 614, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173058, 4537, 98, 1, 40, "Input"],
Cell[173159, 4540, 590, 13, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173786, 4558, 184, 3, 40, "Input"],
Cell[173973, 4563, 1440, 44, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175450, 4612, 574, 9, 40, "Input"],
Cell[176027, 4623, 1617, 41, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177681, 4669, 1533, 37, 40, "Input"],
Cell[179217, 4708, 714, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179968, 4731, 839, 23, 40, InheritFromParent],
Cell[180810, 4756, 737, 19, 40, "Output"]
}, Open  ]],
Cell[181562, 4778, 1594, 38, 40, "Input"],
Cell[183159, 4818, 1936, 47, 101, "Input"],
Cell[CellGroupData[{
Cell[185120, 4869, 3080, 81, 101, "Input"],
Cell[188203, 4952, 1091, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189331, 4980, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[189479, 4987, 4621, 118, 261, "Input"],
Cell[194103, 5107, 583, 10, 40, "Output"]
}, Open  ]],
Cell[194701, 5120, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[195015, 5130, 232, 5, 40, "Input"],
Cell[195250, 5137, 447, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195734, 5150, 184, 4, 40, "Input"],
Cell[195921, 5156, 12523, 321, 54, "Output"]
}, Open  ]],
Cell[208459, 5480, 702, 15, 40, "Input"],
Cell[CellGroupData[{
Cell[209186, 5499, 102, 1, 40, "Input"],
Cell[209291, 5502, 1121, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210449, 5524, 140, 2, 40, "Input"],
Cell[210592, 5528, 1036, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211665, 5549, 184, 3, 40, "Input"],
Cell[211852, 5554, 2302, 49, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214191, 5608, 385, 8, 40, "Input"],
Cell[214579, 5618, 1734, 30, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216350, 5653, 281, 7, 61, "Input"],
Cell[216634, 5662, 1595, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218266, 5695, 130, 2, 40, "Input"],
Cell[218399, 5699, 2197, 42, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220633, 5746, 442, 10, 40, "Input"],
Cell[221078, 5758, 1846, 35, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222961, 5798, 515, 11, 40, "Input"],
Cell[223479, 5811, 1879, 36, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225395, 5852, 305, 6, 40, "Input"],
Cell[225703, 5860, 1123, 22, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226863, 5887, 454, 11, 40, "Input"],
Cell[227320, 5900, 3606, 66, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230963, 5971, 206, 4, 40, "Input"],
Cell[231172, 5977, 1171, 24, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232416, 6009, 113, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[232554, 6014, 108, 1, 35, "Subsubsection"],
Cell[232665, 6017, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[232781, 6022, 586, 11, 40, "Input"],
Cell[233370, 6035, 1197, 24, 40, "Output"]
}, Open  ]],
Cell[234582, 6062, 533, 11, 40, "Input"],
Cell[235118, 6075, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[235229, 6080, 616, 12, 40, "Input"],
Cell[235848, 6094, 1248, 24, 40, "Output"]
}, Open  ]],
Cell[237111, 6121, 586, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[237722, 6137, 773, 21, 40, "Input"],
Cell[238498, 6160, 1285, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239820, 6189, 612, 17, 40, "Input"],
Cell[240435, 6208, 389, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240861, 6221, 348, 9, 40, InheritFromParent],
Cell[241212, 6232, 347, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241596, 6243, 509, 9, 40, "Input"],
Cell[242108, 6254, 1218, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243363, 6283, 183, 3, 40, "Input"],
Cell[243549, 6288, 355, 5, 40, "Output"]
}, Open  ]],
Cell[243919, 6296, 563, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[244507, 6311, 516, 9, 40, "Input"],
Cell[245026, 6322, 1201, 24, 40, "Output"]
}, Open  ]],
Cell[246242, 6349, 560, 11, 40, "Input"],
Cell[246805, 6362, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[247018, 6369, 669, 13, 40, "Input"],
Cell[247690, 6384, 1223, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248950, 6413, 631, 18, 40, "Input"],
Cell[249584, 6433, 853, 19, 40, "Output"]
}, Open  ]],
Cell[250452, 6455, 600, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[251077, 6471, 537, 10, 40, "Input"],
Cell[251617, 6483, 1190, 24, 40, "Output"]
}, Open  ]],
Cell[252822, 6510, 579, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[253426, 6525, 537, 10, 40, "Input"],
Cell[253966, 6537, 1186, 24, 40, "Output"]
}, Open  ]],
Cell[255167, 6564, 577, 11, 40, "Input"],
Cell[255747, 6577, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[255858, 6582, 514, 9, 40, "Input"],
Cell[256375, 6593, 971, 20, 40, "Output"]
}, Open  ]],
Cell[257361, 6616, 566, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[257952, 6631, 514, 9, 40, "Input"],
Cell[258469, 6642, 972, 20, 40, "Output"]
}, Open  ]],
Cell[259456, 6665, 558, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260063, 6682, 115, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[260203, 6687, 4543, 117, 261, "Input"],
Cell[264749, 6806, 261, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265047, 6816, 4372, 114, 281, "Input"],
Cell[269422, 6932, 528, 15, 40, "Output"],
Cell[269953, 6949, 398, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270388, 6964, 120, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[270533, 6971, 1009, 27, 81, "Input"],
Cell[271545, 7000, 400, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271982, 7015, 1055, 28, 81, "Input"],
Cell[273040, 7045, 308, 9, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273397, 7060, 72, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[273494, 7064, 139, 1, 35, "Subsubsection"],
Cell[273636, 7067, 292, 8, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273965, 7080, 47, 0, 35, "Subsubsection"],
Cell[274015, 7082, 85, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[274125, 7088, 122, 3, 40, "Input"],
Cell[274250, 7093, 125, 2, 40, "Output"]
}, Open  ]],
Cell[274390, 7098, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[274512, 7104, 197, 4, 61, "Input"],
Cell[274712, 7110, 122, 2, 40, "Output"]
}, Open  ]],
Cell[274849, 7115, 264, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[275138, 7124, 309, 6, 61, "Input"],
Cell[275450, 7132, 227, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275726, 7144, 121, 1, 35, "Subsubsection"],
Cell[275850, 7147, 247, 5, 30, "Text"],
Cell[276100, 7154, 218, 5, 40, "Input"],
Cell[276321, 7161, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[276453, 7166, 164, 3, 40, "Input"],
Cell[276620, 7171, 442, 14, 40, "Output"]
}, Open  ]],
Cell[277077, 7188, 162, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[277264, 7194, 213, 4, 40, "Input"],
Cell[277480, 7200, 174, 4, 40, "Output"]
}, Open  ]],
Cell[277669, 7207, 109, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[277803, 7212, 348, 8, 40, "Input"],
Cell[278154, 7222, 466, 14, 40, "Output"]
}, Open  ]],
Cell[278635, 7239, 188, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[278848, 7245, 561, 14, 40, "Input"],
Cell[279412, 7261, 729, 19, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280178, 7285, 139, 3, 40, "Input"],
Cell[280320, 7290, 406, 10, 40, "Output"]
}, Open  ]],
Cell[280741, 7303, 118, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[280884, 7308, 176, 3, 40, "Input"],
Cell[281063, 7313, 212, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281312, 7323, 149, 2, 40, "Input"],
Cell[281464, 7327, 674, 15, 40, "Output"]
}, Open  ]],
Cell[282153, 7345, 117, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[282295, 7350, 178, 3, 40, "Input"],
Cell[282476, 7355, 1459, 38, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283972, 7398, 389, 9, 40, "Input"],
Cell[284364, 7409, 1301, 25, 61, "Output"]
}, Open  ]],
Cell[285680, 7437, 153, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[285858, 7444, 402, 6, 40, "Input"],
Cell[286263, 7452, 2726, 59, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289026, 7516, 352, 8, 40, "Input"],
Cell[289381, 7526, 1022, 20, 61, "Output"]
}, Open  ]],
Cell[290418, 7549, 102, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[290545, 7554, 249, 5, 40, "Input"],
Cell[290797, 7561, 962, 21, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291796, 7587, 299, 7, 40, "Input"],
Cell[292098, 7596, 1280, 23, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293427, 7625, 108, 1, 35, "Subsubsection"],
Cell[293538, 7628, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[293654, 7633, 532, 10, 40, "Input"],
Cell[294189, 7645, 649, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294875, 7666, 489, 10, 40, "Input"],
Cell[295367, 7678, 2988, 60, 101, "Output"]
}, Open  ]],
Cell[298370, 7741, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[298481, 7746, 485, 10, 40, "Input"],
Cell[298969, 7758, 650, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299656, 7779, 485, 10, 40, "Input"],
Cell[300144, 7791, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303165, 7856, 462, 9, 40, "Input"],
Cell[303630, 7867, 608, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304275, 7888, 464, 9, 40, "Input"],
Cell[304742, 7899, 4270, 82, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309049, 7986, 464, 9, 40, "Input"],
Cell[309516, 7997, 566, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310119, 8014, 462, 9, 40, "Input"],
Cell[310584, 8025, 6168, 113, 241, "Output"]
}, Open  ]],
Cell[316767, 8141, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[316980, 8148, 531, 10, 40, "Input"],
Cell[317514, 8160, 648, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318199, 8181, 525, 10, 40, "Input"],
Cell[318727, 8193, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321748, 8258, 507, 9, 40, "Input"],
Cell[322258, 8269, 587, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322882, 8290, 507, 9, 40, "Input"],
Cell[323392, 8301, 4285, 87, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327714, 8393, 507, 9, 40, "Input"],
Cell[328224, 8404, 562, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328823, 8421, 505, 9, 40, "Input"],
Cell[329331, 8432, 6061, 114, 221, "Output"]
}, Open  ]],
Cell[335407, 8549, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[335518, 8554, 490, 9, 40, "Input"],
Cell[336011, 8565, 610, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336658, 8586, 490, 9, 40, "Input"],
Cell[337151, 8597, 4276, 84, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341464, 8686, 490, 9, 40, "Input"],
Cell[341957, 8697, 570, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342564, 8714, 486, 9, 40, "Input"],
Cell[343053, 8725, 6751, 125, 261, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349853, 8856, 121, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[349999, 8861, 674, 19, 81, "Input"],
Cell[350676, 8882, 1415, 48, 70, "Output"],
Cell[352094, 8932, 13113, 264, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365268, 9203, 99, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[365392, 9208, 517, 13, 40, "Input"],
Cell[365912, 9223, 239, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366188, 9235, 378, 7, 40, "Input"],
Cell[CellGroupData[{
Cell[366591, 9246, 136, 1, 23, "Print"],
Cell[366730, 9249, 136, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[366893, 9254, 452, 10, 40, "Input"],
Cell[367348, 9266, 933, 26, 40, "Input"],
Cell[CellGroupData[{
Cell[368306, 9296, 228, 6, 40, "Input"],
Cell[368537, 9304, 194, 5, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368768, 9314, 471, 10, 40, "Input"],
Cell[369242, 9326, 36275, 592, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405554, 9923, 1088, 28, 112, "Input"],
Cell[406645, 9953, 1153, 29, 55, "Output"]
}, Open  ]],
Cell[407813, 9985, 240, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408078, 9994, 408, 12, 61, "Input"],
Cell[408489, 10008, 151, 3, 40, "Output"]
}, Open  ]],
Cell[408655, 10014, 236, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408916, 10023, 130, 2, 40, "Input"],
Cell[409049, 10027, 163, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409249, 10035, 382, 9, 40, "Input"],
Cell[409634, 10046, 1263, 32, 235, "Output"]
}, Open  ]],
Cell[410912, 10081, 460, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411421, 10098, 107, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[411553, 10103, 106, 1, 40, "Input"],
Cell[411662, 10106, 278, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411977, 10116, 125, 2, 40, "Input"],
Cell[412105, 10120, 12237, 259, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424379, 10384, 106, 1, 40, "Input"],
Cell[424488, 10387, 276, 5, 40, "Output"]
}, Open  ]],
Cell[424779, 10395, 206, 3, 40, "Input"],
Cell[CellGroupData[{
Cell[425010, 10402, 179, 3, 40, "Input"],
Cell[425192, 10407, 13652, 286, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438881, 10698, 14347, 294, 82, "Input"],
Cell[453231, 10994, 749, 12, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454017, 11011, 137, 2, 40, "Input"],
Cell[454157, 11015, 1616, 28, 73, "Message"],
Cell[455776, 11045, 796, 14, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456609, 11064, 117, 2, 40, "Input"],
Cell[456729, 11068, 8691, 217, 309, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465457, 11290, 185, 3, 40, "Input"],
Cell[465645, 11295, 276, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465970, 11307, 33, 0, 72, "Section"],
Cell[466006, 11309, 503, 12, 40, "Input",
 InitializationCell->True],
Cell[466512, 11323, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[466842, 11332, 183, 3, 40, "Input"],
Cell[467028, 11337, 824, 22, 40, "Output"]
}, Open  ]],
Cell[467867, 11362, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[468181, 11372, 106, 1, 40, "Input"],
Cell[468290, 11375, 278, 5, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

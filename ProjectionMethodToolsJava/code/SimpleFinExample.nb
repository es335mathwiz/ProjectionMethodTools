(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    530535,      10858]
NotebookOptionsPosition[    518207,      10463]
NotebookOutlinePosition[    518987,      10492]
CellTagsIndexPosition[    518899,      10487]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Simple Example", "Title"],

Cell["Gary S. Anderson", "Author",
 CellChangeTimes->{{3.6172005766837215`*^9, 3.617200602415076*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9, {3.6181659633773193`*^9, 
   3.6181659731273193`*^9}, 3.618166013126069*^9, {3.6181660574148192`*^9, 
   3.6181661332398195`*^9}, 3.6181663014170694`*^9}],

Cell[CellGroupData[{

Cell["Luca\[CloseCurlyQuote]s Simplest Financial Market Model", "Section"],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",", 
      "modEqns"}], "}"}], "=", 
    RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6182278635640583`*^9, 
   3.6182279570803084`*^9}, {3.6182301341053085`*^9, 
   3.6182301351490583`*^9}, {3.6182301891553087`*^9, 
   3.6182301943953085`*^9}, {3.6182348081713085`*^9, 
   3.6182348099438086`*^9}, {3.6182350255715585`*^9, 
   3.6182350276940584`*^9}, {3.6182354325328083`*^9, 
   3.6182354691448083`*^9}, {3.6182356846533084`*^9, 
   3.6182357488365583`*^9}, {3.618236119559308*^9, 3.6182361457443085`*^9}, 
   3.6182378252090583`*^9}],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"goodQkArray", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[
 RowBox[{"lucaMat", "=", 
  RowBox[{
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.617627763020282*^9, 3.617627766890321*^9}, {
   3.617627799922654*^9, 3.6176278399040537`*^9}, {3.6176278824864836`*^9, 
   3.6176281084647675`*^9}, {3.6177381889885225`*^9, 
   3.6177381911185436`*^9}, {3.6177383746603785`*^9, 3.617738413470767*^9}, {
   3.6177385310319424`*^9, 3.6177386394130263`*^9}, {3.6177959800565042`*^9, 
   3.6177959979666834`*^9}, {3.617797284849552*^9, 3.6177972872395763`*^9}, {
   3.6178012830255404`*^9, 3.617801310705817*^9}, {3.6178068828165636`*^9, 
   3.6178069017467527`*^9}, 3.617807018587921*^9, {3.6178943096991043`*^9, 
   3.6178943124091315`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Compute initial projection", "Subsection",
 CellChangeTimes->{{3.618241121927308*^9, 3.6182411277748084`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"lucaBasis", "[", 
    RowBox[{"setAllWeights", "[", 
     RowBox[{"lucaMat", "+", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"200", 
          RowBox[{"Random", "[", "]"}]}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], "]"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"simp", "=", 
     RowBox[{
     "JavaNew", "[", 
      "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"\
", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"res1$1$1", "=", 
     RowBox[{"ComputeInitialCollocationWeights", "[", 
      RowBox[{"lucaBasis", ",", "lucaMat", ",", "modEqns", ",", "simp"}], 
      "]"}]}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"res1$1$1", "[", 
       RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
      RowBox[{"polys1$1$1", "=", 
       RowBox[{
        RowBox[{"genPolys", "[", 
         RowBox[{
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
        "Chop"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
       "*)"}], ",", 
      "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Obtaining Information About the Model Solution", "Subsection",
 CellChangeTimes->{{3.6182412040305586`*^9, 3.6182412238200583`*^9}}],

Cell[BoxData[
 RowBox[{"ushk", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, 3.617539650968808*^9, {
   3.617539771520014*^9, 3.617539771530014*^9}, {3.6175447381456804`*^9, 
   3.6175447847461467`*^9}, {3.6176152216606865`*^9, 3.617615223130701*^9}, {
   3.617729256863103*^9, 3.6177292659831944`*^9}, {3.6178125174749517`*^9, 
   3.6178125207149844`*^9}, 3.617897909905138*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175390631259155`*^9}, 3.6175396509788084`*^9, {3.617539771530014*^9, 
   3.617539771530014*^9}, 3.617726982672346*^9, {3.6178125554353313`*^9, 
   3.6178125576453533`*^9}, 3.617897982661892*^9}],

Cell[BoxData[
 RowBox[{"qtm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.617539651018809*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.617703168939221*^9, 3.617703170609154*^9}, {
   3.6177251642891626`*^9, 3.617725171869238*^9}, 3.617897983211898*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.6175396510288086`*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.6177251761492805`*^9, 3.6177251785693054`*^9}, 
   3.617726984322363*^9, {3.6178134560223618`*^9, 3.6178134697124987`*^9}, 
   3.6178979837519026`*^9}],

Cell[BoxData[
 RowBox[{"qt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.617539651048809*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.617725218189701*^9, 3.61772522000972*^9}, {
   3.6178134784125853`*^9, 3.6178134801226025`*^9}, 3.617897986241928*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.6175396510588093`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252370898905`*^9, 3.6177252404999247`*^9}, 
   3.61772699007242*^9, 3.6178979869219346`*^9}],

Cell[BoxData[
 RowBox[{"qtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.6175396510688095`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252488600082`*^9, 3.6177252514100337`*^9}, {
   3.6178134902427034`*^9, 3.6178134918127193`*^9}, 3.617897987691942*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.6175396510788097`*^9, {3.617539780840107*^9, 
   3.617539780850107*^9}, {3.617725260960129*^9, 3.617725262840148*^9}, 
   3.6177269918424377`*^9, 3.6178979883419485`*^9}],

Cell[BoxData[
 RowBox[{"rutm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.6175392088874583`*^9, 3.6175394582869225`*^9, 
   3.6175396510988097`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, {
   3.6177106269615965`*^9, 3.617710632491652*^9}, {3.6177252781303005`*^9, 
   3.617725279760317*^9}, 3.617897989161957*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.617539208947458*^9, 3.617539467326923*^9, 
   3.6175396511088095`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.617725307870598*^9, 3.6177269974024935`*^9, {3.617813504982851*^9, 
   3.617813510372905*^9}, 3.6178138325861273`*^9, 3.617897990611972*^9}],

Cell[BoxData[
 RowBox[{"rut", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.617539479096923*^9, 
   3.61753965114881*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.6177253085806055`*^9, 3.617813838136183*^9, 3.617897991391979*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175394824969225`*^9, 
   3.61753965114881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725310980629*^9, 3.617726995772477*^9, 3.6178979921219864`*^9}],

Cell[BoxData[
 RowBox[{"rutp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175394837869225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.6177253135206547`*^9, {3.6178135164529657`*^9, 3.617813518572987*^9}, 
   3.6178979926919923`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.6175394860369225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725316300682*^9, 3.617727031702837*^9, 3.617897993301998*^9}],

Cell[BoxData[
 RowBox[{"rrt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.6175396511888103`*^9, {
   3.617539859270891*^9, 3.6175398592808914`*^9}, 3.617725318670706*^9, {
   3.617813531043112*^9, 3.6178135320331216`*^9}, 3.6178979939920053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175396511888103`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.6177253196207156`*^9, 
   3.6177270480029993`*^9, 3.6178979946020117`*^9}],

Cell[BoxData[
 RowBox[{"rrtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175396511988106`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725320590725*^9, {
   3.6178135365931673`*^9, 3.617813538953191*^9}, 3.617897995162017*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.617539651208811*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725322270742*^9, 
   3.617727051953039*^9, 3.6178979958220234`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res2$2$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res2$2$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res3$3$1", "=", 
   RowBox[{"res2$2$1", "[", 
    RowBox[{"toOrder", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res3$3$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys3$3$1", "=", 
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
    "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command, GenerateModelCode, outputs lists of state variables, non-state \
variables and shocks along with an instance of the class associated with the \
model."
}], "Text",
 CellChangeTimes->{3.6175329697524137`*^9, 3.617900660424797*^9}],

Cell[BoxData[
 RowBox[{"oldBetap", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"get$betap", "[", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", ".5", "]"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{"modEqns", "[", 
  RowBox[{"get$betap", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", "oldBetap", "]"}], "]"}]}], "Input"],

Cell["\<\
One can also get and update (should be \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote], but it isn\[CloseCurlyQuote]t yet) all the model \
parameters simultaneously \
\>", "Text",
 CellChangeTimes->{{3.617531730237169*^9, 3.617531790921002*^9}, {
  3.6175318473302345`*^9, 3.6175318776722345`*^9}, {3.6179006868050604`*^9, 
  3.6179006931551237`*^9}}],

Cell[BoxData[{
 RowBox[{"theOldParams", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"getParams", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "theOldParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175318845050344`*^9, 3.6175319564834347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"theStatePoly", "=", 
   RowBox[{"lucaBasis", "[", 
    RowBox[{"getTheState", "[", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175336874341993`*^9, 3.617533734673255*^9}}],

Cell["The polynomial ranges", "Item",
 CellChangeTimes->{{3.6175338258124323`*^9, 3.6175338467320137`*^9}}],

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getRanges", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}}],

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getOrders", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}, {
  3.617533906331788*^9, 3.617533915991788*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPhiFunc", "[", 
    RowBox[{"#", ",", "lucaBasis"}], "]"}], "&"}], "/@", " ", 
  RowBox[{"theStatePoly", "[", 
   RowBox[{"getStateVariableNames", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175341379817877`*^9, 3.6175341887334027`*^9}, {
  3.6176184695331807`*^9, 3.617618470953195*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Join", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"lucaMat", ","}], "*)"}], 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{
       RowBox[{"getTheGrid", "[", "]"}], "[", 
       RowBox[{"generatePolyOrdersForOuterProduct", "[", "]"}], "]"}], "]"}], 
     "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6176160776422462`*^9, 3.6176161235027046`*^9}, {
   3.617616246203932*^9, 3.6176163025654955`*^9}, {3.617619782800314*^9, 
   3.617619787320359*^9}, 3.61789905024457*^9}],

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getTheGrid", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.617626649969055*^9}],

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getStateVariableNames", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175357853313556`*^9, 3.617535796611356*^9}}],

Cell[BoxData[
 RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.617534500160631*^9, 3.6175345117608633`*^9}}],

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175345957204895`*^9, 3.6175345996202946`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}], "]"}]}], "//.", 
   "lucaSubs"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6177966373630776`*^9, 3.6177966786634903`*^9}, 
   3.617796709883803*^9, {3.6177967757344613`*^9, 3.617796776974474*^9}}],

Cell[BoxData[
 RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.6175346707167397`*^9, 3.617534680446253*^9}, {
  3.617534729073821*^9, 3.617534736143468*^9}, {3.617535094504675*^9, 
  3.6175350948646708`*^9}, {3.6175364743190355`*^9, 3.6175364745190372`*^9}, {
  3.6175365680499725`*^9, 3.6175365685399776`*^9}, {3.6175366308609433`*^9, 
  3.6175366319509106`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", "lucaMat", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}], "]"}]}], "//.", 
   "lucaSubs"}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{{3.617796291899623*^9, 3.6177962958796625`*^9}, {
   3.6177963821205254`*^9, 3.617796409490799*^9}, 3.617898737399439*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"theStatePoly", "[", 
    RowBox[{"getStateVariablePolynomialWeights", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175382216625147`*^9, 3.6175382283435817`*^9}, {
  3.6178987697897635`*^9, 3.6178987712997785`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lucaBasis", "[", 
     RowBox[{"getTheNonState", "[", "]"}], "]"}], "[", 
    RowBox[{"getRelevantWeightsNSP", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175383075943737`*^9, 3.617538338314681*^9}, {
  3.6178987739598045`*^9, 3.6178987756698217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"biggerMat", "=", 
   RowBox[{"nxtWts", "[", 
    RowBox[{"lucaMat", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Dimensions", "/@", 
   RowBox[{"{", 
    RowBox[{"lucaMat", ",", "biggerMat"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.617541767748976*^9, 3.6175418089993887`*^9}, 
   3.617541841180711*^9, {3.6175418807711067`*^9, 3.617541912431423*^9}, {
   3.6178990734148016`*^9, 3.6178990740148077`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thePolys", "=", 
   RowBox[{
    RowBox[{"CreatePolynomials", "[", "res1$1$1", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
      RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
      RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
      RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}, {3.617899263634715*^9, 3.6178992952650313`*^9}, 
   3.617899529273444*^9, {3.6182382139208083`*^9, 3.618238218272808*^9}, {
   3.618241750717058*^9, 3.6182417546608086`*^9}}],

Cell[BoxData["thePolys"], "Input",
 CellChangeTimes->{{3.6182416852250586`*^9, 3.6182416868263083`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sysPolys", "=", 
    RowBox[{
     RowBox[{"ReplaceVariables", "[", 
      RowBox[{"lucaMod", ",", "thePolys", ",", 
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
   ";"}], ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
   3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
   3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}, 
   3.6178994558446503`*^9, {3.617899508525177*^9, 3.6178995206352987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".00"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}, {
   3.6178999614757957`*^9, 3.617899961835799*^9}}],

Cell[BoxData[
 RowBox[{"sysPolys", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"sysPolys", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
        RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
        RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
        RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}], "//", 
     "Expand"}], ")"}], "//.", "lucaSubs"}]}]], "Input",
 CellChangeTimes->{{3.618238442317808*^9, 3.6182384970948086`*^9}, {
  3.6182385828475585`*^9, 3.6182386195463085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sysPolys", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", ".1"}], ",", 
     RowBox[{"ru", "\[Rule]", ".2"}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", ".1"}]}], "}"}]}], "//.", 
  "lucaSubs"}]], "Input",
 CellChangeTimes->{{3.6182385042235584`*^9, 3.6182385547543087`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}, {3.6182383897670584`*^9, 
  3.6182383955490584`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lagrangian Characterization", "Section",
 CellChangeTimes->{{3.618161018883319*^9, 3.618161026312069*^9}}],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}], "+", " ", 
        RowBox[{
         RowBox[{"lambda", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
          ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lambda", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zz", "[", "t", "]"}], "-", 
        RowBox[{"eqvdIf", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rr", "[", "t", "]"}], "\[GreaterEqual]", "rUnderBar"}], 
          ",", 
          RowBox[{"rr", "[", "t", "]"}], ",", "rUnderBar"}], "]"}]}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6181615332420692`*^9, 3.618161582344569*^9}, {
   3.618164221779069*^9, 3.618164225962819*^9}, {3.6181642809460692`*^9, 
   3.618164297294819*^9}, {3.6181652195085692`*^9, 3.6181652329598193`*^9}, {
   3.6181653021635695`*^9, 3.6181653078635693`*^9}, {3.618166246271819*^9, 
   3.6181662568418193`*^9}, {3.618167466622819*^9, 3.618167470505319*^9}, {
   3.618167550833069*^9, 3.6181675542068195`*^9}, 3.6182378559250584`*^9, {
   3.6182426906953087`*^9, 3.618242698692808*^9}, {3.6184220122313385`*^9, 
   3.618422023161448*^9}}],

Cell[BoxData["\<\"\\\"c:\\\\Program \
Files\\\\Java\\\\jdk1.7.0_51\\\\bin\\\\javac\\\" -cp \
./;ProjectionMethodToolsJava-0.0.1-SNAPSHOT.jar;Jama-1.0.2-1.0-SNAPSHOT.jar  \
-target 1.7 ./lucaMod.java\"\>"], "Print",
 CellChangeTimes->{
  3.6182436147937727`*^9, 3.6182436898437815`*^9, 3.6182439143466825`*^9, 
   3.6182439857270927`*^9, 3.6182444978459096`*^9, 3.618250268754391*^9, 
   3.618253703220891*^9, 3.618306647324335*^9, 3.6183374519442987`*^9, 
   3.6184151945527906`*^9, 3.6184194738896465`*^9, 3.6184206564495697`*^9, 
   3.618421529474473*^9, 3.618421621931407*^9, {3.618424642386098*^9, 
   3.61842466700736*^9}, 3.6184247031608477`*^9, 3.618424939370488*^9, 
   3.6184249906461363`*^9}]
}, Open  ]],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "rUnderBar", ",", "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", 
    "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}, {3.6182427033953085`*^9, 
   3.618242724237808*^9}, {3.6182428957790585`*^9, 3.6182429090240583`*^9}, {
   3.61824446597836*^9, 3.61824448509864*^9}, {3.618244528649624*^9, 
   3.6182445291784163`*^9}, {3.6184206482294874`*^9, 
   3.6184206489194946`*^9}, {3.618421512034299*^9, 3.6184215230044084`*^9}, {
   3.618422226795503*^9, 3.6184222273155084`*^9}, {3.6184256469838924`*^9, 
   3.6184256480939035`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}]], "Input",
 CellChangeTimes->{{3.6181643453198195`*^9, 3.618164367401069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lambda\"\>", ",", "\<\"rr\"\>", ",", "\<\"zz\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", "\<\"uu$Shock\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.618243618688769*^9, 3.6182436925609007`*^9, 3.6182439168683357`*^9, 
   3.618243998831689*^9, 3.6182445011999283`*^9, 3.618250274906719*^9, 
   3.6182537091011257`*^9, 3.6183066495143795`*^9, 3.618337454374323*^9, 
   3.6184152025244417`*^9, 3.618419480199709*^9, 3.618420658403603*^9, 
   3.6184215314844933`*^9, 3.61842162720146*^9, 3.6184222436956725`*^9, {
   3.618424644208044*^9, 3.618424668937302*^9}, 3.6184247082907968`*^9, 
   3.6184249413424687`*^9, 3.6184249956561365`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"(", 
     RowBox[{"someSubs", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tcl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"targ", ",", 
                 RowBox[{"{", 
                  RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
               "]"}]}], ")"}], "\[Equal]", 
            RowBox[{"(", 
             RowBox[{"acl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"theProd", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                  "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
          RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
         RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}], 
     ")"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"goodQkArray", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{".1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lucaMat", "=", 
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9, {3.618161722942319*^9, 
   3.618161723452319*^9}, {3.618161909353569*^9, 3.6181619098635693`*^9}, {
   3.6181620653648195`*^9, 3.6181621299798193`*^9}, {3.6181622242498193`*^9, 
   3.6181622724773192`*^9}, {3.6181626066898193`*^9, 3.618162706914569*^9}, {
   3.618163099793569*^9, 3.618163117742319*^9}, {3.6181639572090693`*^9, 
   3.6181639768615694`*^9}, {3.6182387991523085`*^9, 3.6182387994473085`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5354845307277833`", ",", 
       RowBox[{"-", "0.5354845307277833`"}], ",", "0.6172963046806865`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5354845307277833`", ",", "0.4645154692722171`", ",", 
       "0.6172963046806865`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6182436189426003`*^9, 3.6182440070317507`*^9, 3.6182445556592846`*^9, 
   3.618250287162547*^9, 3.6182537099611607`*^9, 3.618306649864386*^9, 
   3.6184152071420717`*^9, 3.618419481089718*^9, 3.618420658773607*^9, 
   3.6184215318244963`*^9, 3.6184216300014877`*^9, 3.6184222451256866`*^9, {
   3.6184246445980325`*^9, 3.6184246692572927`*^9}, 3.6184247101007786`*^9, 
   3.6184249417224646`*^9, 3.6184249984861364`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["compute first order projection", "Subsection",
 CellChangeTimes->{{3.6182387696273084`*^9, 3.6182387747148085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{"lucaBasis", "[", 
   RowBox[{"setAllWeights", "[", "lucaMat", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.618242282427308*^9, 
   3.618242288222308*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simp", "=", 
   RowBox[{
   "JavaNew", "[", 
    "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res1$1$1", "=", 
   RowBox[{"ComputeInitialCollocationWeights", "[", 
    RowBox[{"lucaBasis", ",", "lucaMat", ",", "modEqns", ",", "simp"}], 
    "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res1$1$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res1$1$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res1$1$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046828192`", " ", "uu$Shock"}], "-", 
    RowBox[{"3.040177117540444`*^-7", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "3.600056684723978`*^-8", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ",", 
   RowBox[{
    RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
    RowBox[{"1.000000000000667`", " ", "uu$Shock"}], "-", 
    RowBox[{"2.0809031013237068`*^-8", " ", "ru", " ", "uu$Shock"}], "-", 
    RowBox[{
    "4.842350539555328`*^-8", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ",", 
   RowBox[{
    RowBox[{"2.0561958336978373`*^-10", " ", "qq", " ", "uu$Shock"}], "-", 
    RowBox[{"0.000012851223960611483`", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "0.000011423310187210207`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
   ",", 
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046794595`", " ", "uu$Shock"}], "+", 
    RowBox[{"7.095314877376758`*^-8", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "1.048624829487494`*^-7", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
    RowBox[{"0.15432407617001903`", " ", "ru"}], "+", 
    RowBox[{"0.4364944030370993`", " ", "qq", " ", "ru"}], "+", 
    RowBox[{"0.3086481523389767`", " ", "uu$Shock"}], "+", 
    RowBox[{"0.8729888060781011`", " ", "qq", " ", "uu$Shock"}], "+", 
    RowBox[{"1.784892216751595`*^-7", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "2.454226798033443`*^-7", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6182440150092773`*^9, 3.6182445646287518`*^9, 3.6182503054352984`*^9, 
   3.6182513268144817`*^9, 3.618251945407779*^9, 3.618252420709027*^9, 
   3.6182536631892896`*^9, 3.6182537108411956`*^9, 3.618253906786329*^9, 
   3.618306650014389*^9, 3.618415226501796*^9, 3.618419481989727*^9, 
   3.6184206589636087`*^9, 3.6184215319944983`*^9, {3.618421630801496*^9, 
   3.6184216481216693`*^9}, 3.6184217716189146`*^9, 3.618421924078453*^9, 
   3.6184222452356873`*^9, {3.6184246308264446`*^9, 3.618424669377289*^9}, 
   3.6184247109107704`*^9, 3.618424941902463*^9, 3.6184249992681365`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subbedPolys", "=", 
  RowBox[{"CreatePolynomials", "[", 
   RowBox[{"lucaMod", ",", "res1$1$1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6183129503194017`*^9, 3.61831295423948*^9}, 
   3.6183131433132615`*^9, {3.618313297186339*^9, 3.6183132990563765`*^9}, {
   3.618313355797511*^9, 3.618313393938274*^9}, {3.6183359889576674`*^9, 
   3.618336010427882*^9}, {3.6183365572133493`*^9, 3.6183366275240526`*^9}, {
   3.618336667864456*^9, 3.618336695534733*^9}, {3.6183367564853425`*^9, 
   3.61833675824536*^9}, {3.6183368214059916`*^9, 3.6183368543063207`*^9}, {
   3.6183377030168095`*^9, 3.618337707876858*^9}, {3.6183399146209273`*^9, 
   3.618339922691008*^9}, {3.618415991889818*^9, 3.618416013190031*^9}, {
   3.6184161436013355`*^9, 3.6184161445813446`*^9}, {3.6184185498253975`*^9, 
   3.618418565535554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"inmake\"\>", "\[InvisibleSpace]", "2", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"qq", ",", "ru"}], "}"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
      RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
      RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
      RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"duh\"\>"}],
  SequenceForm[
  "inmake", 2, {$CellContext`qq, $CellContext`ru}, {
   0. + 0.26774226536389156` $CellContext`qq + 
    0.3086481523429822 $CellContext`ru + 
    0.6172963046828192 $CellContext`uu$Shock, 0. + 
    0.5000000000018966 $CellContext`ru + 
    1.000000000000667 $CellContext`uu$Shock}, "duh"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6184227293985767`*^9, 3.6184230850601645`*^9, {3.618424644788027*^9, 
   3.6184246694372873`*^9}, 3.6184247110807686`*^9, 3.6184249419524627`*^9, 
   3.6184249994581366`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"prep=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.26774226536389156`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
         RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
         RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}]}], "+", 
      RowBox[{"0.6172963046828192`", " ", "uu$Shock"}], "+", 
      RowBox[{"0.3086481523429822`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
         RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.000000000000667`", " ", "uu$Shock"}], "+", 
      RowBox[{"0.5000000000018966`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
         RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}], 
    "}"}], "\[InvisibleSpace]", "\<\"huh\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "[", 
      RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}], ",", 
     RowBox[{"ru", "[", 
      RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"luh\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}],
  SequenceForm[
  "prep=", {
   0. + 0.26774226536389156` (0. + 0.26774226536389156` $CellContext`qq + 
      0.3086481523429822 $CellContext`ru + 
      0.6172963046828192 $CellContext`uu$Shock) + 
    0.6172963046828192 $CellContext`uu$Shock + 
    0.3086481523429822 (0. + 0.5000000000018966 $CellContext`ru + 
      1.000000000000667 $CellContext`uu$Shock), 0. + 
    1.000000000000667 $CellContext`uu$Shock + 
    0.5000000000018966 (0. + 0.5000000000018966 $CellContext`ru + 
      1.000000000000667 $CellContext`uu$Shock)}, "huh", {
    $CellContext`qq[1 + ProjectionInterface`Private`t], 
    $CellContext`ru[1 + ProjectionInterface`Private`t]}, "luh", {2, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6184227293985767`*^9, 3.6184230850601645`*^9, {3.618424644788027*^9, 
   3.6184246694372873`*^9}, 3.6184247110807686`*^9, 3.6184249419524627`*^9, 
   3.6184249994581366`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"subbing\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qq", "[", 
       RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.26774226536389156`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
          RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}]}], "+", 
       RowBox[{"0.6172963046828192`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.3086481523429822`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
          RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"ru", "[", 
       RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.000000000000667`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.5000000000018966`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
          RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}]}], 
    "}"}], "\[InvisibleSpace]", "\<\"PPP\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qq", "[", 
       RowBox[{"1", "+", "t"}], "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.26774226536389156`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
          RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}]}], "+", 
       RowBox[{"0.6172963046828192`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.3086481523429822`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
          RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"ru", "[", 
       RowBox[{"1", "+", "t"}], "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.000000000000667`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.5000000000018966`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
          RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"lambda", "[", 
       RowBox[{"1", "+", "t"}], "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"rr", "[", 
       RowBox[{"1", "+", "t"}], "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2677422653638917`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
          RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}]}], "+", 
       RowBox[{"0.6172963046794595`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.3086481523417369`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
          RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"zz", "[", 
       RowBox[{"1", "+", "t"}], "]"}], "\[Rule]", 
      RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.10558686143448381`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
          RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}]}], "+", 
       RowBox[{"0.3086481523389767`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.8729888060781011`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
          RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}], " ", 
        "uu$Shock"}], "+", 
       RowBox[{"0.15432407617001903`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
          RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}], "+", 
       RowBox[{"0.4364944030370993`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
          RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
          RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}]}], 
    "}"}], "\[InvisibleSpace]", "\<\"subbing\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qq", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
       RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
       RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}]}], ",", 
     RowBox[{
      RowBox[{"ru", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
       RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}]}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"PPP\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"lambda", "[", "t", "]"}], "\[Rule]", "0.`"}], ",", 
     RowBox[{
      RowBox[{"rr", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
       RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
       RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}]}], ",", 
     RowBox[{
      RowBox[{"zz", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
       RowBox[{"0.15432407617001903`", " ", "ru"}], "+", 
       RowBox[{"0.4364944030370993`", " ", "qq", " ", "ru"}], "+", 
       RowBox[{"0.3086481523389767`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.8729888060781011`", " ", "qq", " ", "uu$Shock"}]}]}]}], 
    "}"}], "\[InvisibleSpace]", "\<\"PPP\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"qq", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], "]"}], "\[Rule]", "qq"}], ",", 
     RowBox[{
      RowBox[{"ru", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "t"}], "]"}], "\[Rule]", "ru"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"done\"\>"}],
  SequenceForm[
  "subbing", {$CellContext`qq[1 + ProjectionInterface`Private`t] -> 
    0. + 0.26774226536389156` (0. + 0.26774226536389156` $CellContext`qq + 
       0.3086481523429822 $CellContext`ru + 
       0.6172963046828192 $CellContext`uu$Shock) + 
     0.6172963046828192 $CellContext`uu$Shock + 
     0.3086481523429822 (0. + 0.5000000000018966 $CellContext`ru + 
       1.000000000000667 $CellContext`uu$Shock), $CellContext`ru[
     1 + ProjectionInterface`Private`t] -> 
    0. + 1.000000000000667 $CellContext`uu$Shock + 
     0.5000000000018966 (0. + 0.5000000000018966 $CellContext`ru + 
       1.000000000000667 $CellContext`uu$Shock)}, 
   "PPP", {$CellContext`qq[1 + $CellContext`t] -> 
    0. + 0.26774226536389156` (0. + 0.26774226536389156` $CellContext`qq + 
       0.3086481523429822 $CellContext`ru + 
       0.6172963046828192 $CellContext`uu$Shock) + 
     0.6172963046828192 $CellContext`uu$Shock + 
     0.3086481523429822 (0. + 0.5000000000018966 $CellContext`ru + 
       1.000000000000667 $CellContext`uu$Shock), $CellContext`ru[
     1 + $CellContext`t] -> 
    0. + 1.000000000000667 $CellContext`uu$Shock + 
     0.5000000000018966 (0. + 0.5000000000018966 $CellContext`ru + 
       1.000000000000667 $CellContext`uu$Shock), $CellContext`lambda[
     1 + $CellContext`t] -> 0., $CellContext`rr[1 + $CellContext`t] -> 
    0. + 0.2677422653638917 (0. + 0.26774226536389156` $CellContext`qq + 
       0.3086481523429822 $CellContext`ru + 
       0.6172963046828192 $CellContext`uu$Shock) + 
     0.6172963046794595 $CellContext`uu$Shock + 
     0.3086481523417369 (0. + 0.5000000000018966 $CellContext`ru + 
       1.000000000000667 $CellContext`uu$Shock), $CellContext`zz[
     1 + $CellContext`t] -> 
    0.057330592862264024` + 
     0.10558686143448381` (0. + 0.26774226536389156` $CellContext`qq + 
       0.3086481523429822 $CellContext`ru + 
       0.6172963046828192 $CellContext`uu$Shock) + 
     0.3086481523389767 $CellContext`uu$Shock + 
     0.8729888060781011 (0. + 0.26774226536389156` $CellContext`qq + 
       0.3086481523429822 $CellContext`ru + 
       0.6172963046828192 $CellContext`uu$Shock) $CellContext`uu$Shock + 
     0.15432407617001903` (0. + 0.5000000000018966 $CellContext`ru + 
       1.000000000000667 $CellContext`uu$Shock) + 
     0.4364944030370993 (0. + 0.26774226536389156` $CellContext`qq + 
       0.3086481523429822 $CellContext`ru + 
       0.6172963046828192 $CellContext`uu$Shock) (0. + 
       0.5000000000018966 $CellContext`ru + 
       1.000000000000667 $CellContext`uu$Shock)}, 
   "subbing", {$CellContext`qq[$CellContext`t] -> 
    0. + 0.26774226536389156` $CellContext`qq + 
     0.3086481523429822 $CellContext`ru + 
     0.6172963046828192 $CellContext`uu$Shock, \
$CellContext`ru[$CellContext`t] -> 
    0. + 0.5000000000018966 $CellContext`ru + 
     1.000000000000667 $CellContext`uu$Shock}, 
   "PPP", {$CellContext`lambda[$CellContext`t] -> 
    0., $CellContext`rr[$CellContext`t] -> 
    0. + 0.2677422653638917 $CellContext`qq + 
     0.3086481523417369 $CellContext`ru + 
     0.6172963046794595 $CellContext`uu$Shock, \
$CellContext`zz[$CellContext`t] -> 
    0.057330592862264024` + 0.10558686143448381` $CellContext`qq + 
     0.15432407617001903` $CellContext`ru + 
     0.4364944030370993 $CellContext`qq $CellContext`ru + 
     0.3086481523389767 $CellContext`uu$Shock + 
     0.8729888060781011 $CellContext`qq $CellContext`uu$Shock}, 
   "PPP", {$CellContext`qq[-1 + $CellContext`t] -> $CellContext`qq, \
$CellContext`ru[-1 + $CellContext`t] -> $CellContext`ru}, "done"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6184227293985767`*^9, 3.6184230850601645`*^9, {3.618424644788027*^9, 
   3.6184246694372873`*^9}, 3.6184247110807686`*^9, 3.6184249419524627`*^9, 
   3.618424999478136*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
    RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"rUnderBar", 
          RowBox[{
           RowBox[{
            RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
            RowBox[{"0.3086481523417369`", " ", "ru"}], "-", "rUnderBar", "+", 
            RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], "<", "0.`"}]},
         {
          RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
           RowBox[{"0.15432407617001903`", " ", "ru"}], "+", 
           RowBox[{"0.4364944030370993`", " ", "qq", " ", "ru"}], "+", 
           RowBox[{"0.3086481523389767`", " ", "uu$Shock"}], "+", 
           RowBox[{"0.8729888060781011`", " ", "qq", " ", "uu$Shock"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6183367284250617`*^9, 3.6183367880756583`*^9, {3.61833682924607*^9, 
   3.6183368557663355`*^9}, 3.618337390263682*^9, 3.6183374789745693`*^9, 
   3.6183377097068768`*^9, 3.6183389419391985`*^9, 3.618339568885468*^9, 
   3.618339649506274*^9, 3.618339739227172*^9, {3.618339904670828*^9, 
   3.6183399243910255`*^9}, 3.61841523500385*^9, 3.618415559585495*^9, 
   3.618415667286572*^9, 3.618415877158671*^9, 3.618415941599315*^9, 
   3.6184160137600365`*^9, {3.618416133191231*^9, 3.618416145221351*^9}, 
   3.6184162608525076`*^9, 3.618416300242902*^9, 3.6184163780536795`*^9, 
   3.6184165891957912`*^9, 3.6184166944368434`*^9, 3.6184170004199033`*^9, 
   3.618417403973939*^9, 3.6184174867547665`*^9, 3.6184176169660683`*^9, 
   3.6184176587364864`*^9, 3.6184177327272263`*^9, 3.6184177979678783`*^9, 
   3.6184178368782673`*^9, {3.6184179566494656`*^9, 3.6184179655295544`*^9}, 
   3.6184180024999237`*^9, 3.6184184510644093`*^9, {3.6184185661055603`*^9, 
   3.6184185949958487`*^9}, 3.6184194943298507`*^9, 3.618420664663666*^9, 
   3.618421685064043*^9, 3.6184217717089157`*^9, 3.618421924158454*^9, 
   3.6184222452956886`*^9, 3.6184224383676353`*^9, 3.618422729408577*^9, 
   3.6184230850701647`*^9, {3.6184246448180256`*^9, 3.6184246694772863`*^9}, 
   3.6184247111507683`*^9, 3.6184249419824624`*^9, 3.6184249994981365`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "ProjectionInterface`"}]], "Input",
 CellChangeTimes->{{3.6183259680351267`*^9, 3.6183259728046494`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"making xx global\"\>"], "Print",
 CellChangeTimes->{
  3.61832597500443*^9, 3.618326033528577*^9, 3.618326105644957*^9, 
   3.618326369809497*^9, 3.61832794903141*^9, 3.6183281110331197`*^9, 
   3.618328254592103*^9, 3.6183282864996557`*^9, 3.6183284404902253`*^9, 
   3.618328489742915*^9, 3.618328569443041*^9, 3.6183287351892357`*^9, 
   3.61832877092995*^9, 3.6183288189009094`*^9, 3.618328896652465*^9, 
   3.6183297615897627`*^9, 3.6183305374252796`*^9, 3.6183306867082653`*^9, 
   3.6183307435494018`*^9, 3.618331050565542*^9, 3.618331188034626*^9, 
   3.618331503445222*^9, 3.6183315662464776`*^9, 3.618331657998313*^9, 
   3.6183317655404634`*^9, 3.6183320276557055`*^9, 3.61833217388863*^9, 
   3.6183324056132646`*^9, 3.6183359675974536`*^9, 3.618336049958277*^9, 
   3.618336125839036*^9, 3.618336169029468*^9, 3.6183363841416187`*^9, 
   3.6183373838936186`*^9, 3.6183389371291504`*^9, 3.6183395680854597`*^9, 
   3.6183396491262703`*^9, 3.618339904470826*^9, 3.6184152348166485`*^9, 
   3.6184155590354896`*^9, 3.61841566709657*^9, 3.6184158769186687`*^9, 
   3.618415941399313*^9, 3.6184161330012293`*^9, 3.618416260672506*^9, 
   3.6184162999828987`*^9, 3.6184163776336756`*^9, 3.6184165890257893`*^9, 
   3.618416694226841*^9, 3.618416999829897*^9, 3.6184174034939337`*^9, 
   3.6184174864147635`*^9, 3.6184176167560663`*^9, 3.6184176585164843`*^9, 
   3.6184177324872236`*^9, 3.6184177976278753`*^9, 3.6184178366682653`*^9, {
   3.618417956439463*^9, 3.618417965319552*^9}, 3.618418002319922*^9, 
   3.618418450874408*^9, 3.6184185947758465`*^9, 3.6184190025799246`*^9, 
   3.6184190901708*^9, 3.6184194938398457`*^9, 3.6184206645336647`*^9, 
   3.6184224045072966`*^9, 3.6184227108583913`*^9, 3.618423072290037*^9, 
   3.6184237626089973`*^9, 3.6184239800053997`*^9, 3.618424346673193*^9, 
   3.618424525903589*^9, 3.6184245585266123`*^9, {3.6184246448880234`*^9, 
   3.618424669547284*^9}, 3.618424711300767*^9, 3.618424942062462*^9, 
   3.618424999648136*^9}],

Cell[BoxData["\<\"beginning private defs\"\>"], "Print",
 CellChangeTimes->{
  3.61832597500443*^9, 3.618326033528577*^9, 3.618326105644957*^9, 
   3.618326369809497*^9, 3.61832794903141*^9, 3.6183281110331197`*^9, 
   3.618328254592103*^9, 3.6183282864996557`*^9, 3.6183284404902253`*^9, 
   3.618328489742915*^9, 3.618328569443041*^9, 3.6183287351892357`*^9, 
   3.61832877092995*^9, 3.6183288189009094`*^9, 3.618328896652465*^9, 
   3.6183297615897627`*^9, 3.6183305374252796`*^9, 3.6183306867082653`*^9, 
   3.6183307435494018`*^9, 3.618331050565542*^9, 3.618331188034626*^9, 
   3.618331503445222*^9, 3.6183315662464776`*^9, 3.618331657998313*^9, 
   3.6183317655404634`*^9, 3.6183320276557055`*^9, 3.61833217388863*^9, 
   3.6183324056132646`*^9, 3.6183359675974536`*^9, 3.618336049958277*^9, 
   3.618336125839036*^9, 3.618336169029468*^9, 3.6183363841416187`*^9, 
   3.6183373838936186`*^9, 3.6183389371291504`*^9, 3.6183395680854597`*^9, 
   3.6183396491262703`*^9, 3.618339904470826*^9, 3.6184152348166485`*^9, 
   3.6184155590354896`*^9, 3.61841566709657*^9, 3.6184158769186687`*^9, 
   3.618415941399313*^9, 3.6184161330012293`*^9, 3.618416260672506*^9, 
   3.6184162999828987`*^9, 3.6184163776336756`*^9, 3.6184165890257893`*^9, 
   3.618416694226841*^9, 3.618416999829897*^9, 3.6184174034939337`*^9, 
   3.6184174864147635`*^9, 3.6184176167560663`*^9, 3.6184176585164843`*^9, 
   3.6184177324872236`*^9, 3.6184177976278753`*^9, 3.6184178366682653`*^9, {
   3.618417956439463*^9, 3.618417965319552*^9}, 3.618418002319922*^9, 
   3.618418450874408*^9, 3.6184185947758465`*^9, 3.6184190025799246`*^9, 
   3.6184190901708*^9, 3.6184194938398457`*^9, 3.6184206645336647`*^9, 
   3.6184224045072966`*^9, 3.6184227108583913`*^9, 3.618423072290037*^9, 
   3.6184237626089973`*^9, 3.6184239800053997`*^9, 3.618424346673193*^9, 
   3.618424525903589*^9, 3.6184245585266123`*^9, {3.6184246448880234`*^9, 
   3.618424669547284*^9}, 3.618424711300767*^9, 3.618424942062462*^9, 
   3.618424999648136*^9}],

Cell[BoxData["\<\"why not numbers?\"\>"], "Print",
 CellChangeTimes->{
  3.61832597500443*^9, 3.618326033528577*^9, 3.618326105644957*^9, 
   3.618326369809497*^9, 3.61832794903141*^9, 3.6183281110331197`*^9, 
   3.618328254592103*^9, 3.6183282864996557`*^9, 3.6183284404902253`*^9, 
   3.618328489742915*^9, 3.618328569443041*^9, 3.6183287351892357`*^9, 
   3.61832877092995*^9, 3.6183288189009094`*^9, 3.618328896652465*^9, 
   3.6183297615897627`*^9, 3.6183305374252796`*^9, 3.6183306867082653`*^9, 
   3.6183307435494018`*^9, 3.618331050565542*^9, 3.618331188034626*^9, 
   3.618331503445222*^9, 3.6183315662464776`*^9, 3.618331657998313*^9, 
   3.6183317655404634`*^9, 3.6183320276557055`*^9, 3.61833217388863*^9, 
   3.6183324056132646`*^9, 3.6183359675974536`*^9, 3.618336049958277*^9, 
   3.618336125839036*^9, 3.618336169029468*^9, 3.6183363841416187`*^9, 
   3.6183373838936186`*^9, 3.6183389371291504`*^9, 3.6183395680854597`*^9, 
   3.6183396491262703`*^9, 3.618339904470826*^9, 3.6184152348166485`*^9, 
   3.6184155590354896`*^9, 3.61841566709657*^9, 3.6184158769186687`*^9, 
   3.618415941399313*^9, 3.6184161330012293`*^9, 3.618416260672506*^9, 
   3.6184162999828987`*^9, 3.6184163776336756`*^9, 3.6184165890257893`*^9, 
   3.618416694226841*^9, 3.618416999829897*^9, 3.6184174034939337`*^9, 
   3.6184174864147635`*^9, 3.6184176167560663`*^9, 3.6184176585164843`*^9, 
   3.6184177324872236`*^9, 3.6184177976278753`*^9, 3.6184178366682653`*^9, {
   3.618417956439463*^9, 3.618417965319552*^9}, 3.618418002319922*^9, 
   3.618418450874408*^9, 3.6184185947758465`*^9, 3.6184190025799246`*^9, 
   3.6184190901708*^9, 3.6184194938398457`*^9, 3.6184206645336647`*^9, 
   3.6184224045072966`*^9, 3.6184227108583913`*^9, 3.618423072290037*^9, 
   3.6184237626089973`*^9, 3.6184239800053997`*^9, 3.618424346673193*^9, 
   3.618424525903589*^9, 3.6184245585266123`*^9, {3.6184246448880234`*^9, 
   3.618424669547284*^9}, 3.618424711300767*^9, 3.618424942062462*^9, 
   3.6184249996581364`*^9}],

Cell[BoxData["\<\"why eval of shock t+1?\"\>"], "Print",
 CellChangeTimes->{
  3.61832597500443*^9, 3.618326033528577*^9, 3.618326105644957*^9, 
   3.618326369809497*^9, 3.61832794903141*^9, 3.6183281110331197`*^9, 
   3.618328254592103*^9, 3.6183282864996557`*^9, 3.6183284404902253`*^9, 
   3.618328489742915*^9, 3.618328569443041*^9, 3.6183287351892357`*^9, 
   3.61832877092995*^9, 3.6183288189009094`*^9, 3.618328896652465*^9, 
   3.6183297615897627`*^9, 3.6183305374252796`*^9, 3.6183306867082653`*^9, 
   3.6183307435494018`*^9, 3.618331050565542*^9, 3.618331188034626*^9, 
   3.618331503445222*^9, 3.6183315662464776`*^9, 3.618331657998313*^9, 
   3.6183317655404634`*^9, 3.6183320276557055`*^9, 3.61833217388863*^9, 
   3.6183324056132646`*^9, 3.6183359675974536`*^9, 3.618336049958277*^9, 
   3.618336125839036*^9, 3.618336169029468*^9, 3.6183363841416187`*^9, 
   3.6183373838936186`*^9, 3.6183389371291504`*^9, 3.6183395680854597`*^9, 
   3.6183396491262703`*^9, 3.618339904470826*^9, 3.6184152348166485`*^9, 
   3.6184155590354896`*^9, 3.61841566709657*^9, 3.6184158769186687`*^9, 
   3.618415941399313*^9, 3.6184161330012293`*^9, 3.618416260672506*^9, 
   3.6184162999828987`*^9, 3.6184163776336756`*^9, 3.6184165890257893`*^9, 
   3.618416694226841*^9, 3.618416999829897*^9, 3.6184174034939337`*^9, 
   3.6184174864147635`*^9, 3.6184176167560663`*^9, 3.6184176585164843`*^9, 
   3.6184177324872236`*^9, 3.6184177976278753`*^9, 3.6184178366682653`*^9, {
   3.618417956439463*^9, 3.618417965319552*^9}, 3.618418002319922*^9, 
   3.618418450874408*^9, 3.6184185947758465`*^9, 3.6184190025799246`*^9, 
   3.6184190901708*^9, 3.6184194938398457`*^9, 3.6184206645336647`*^9, 
   3.6184224045072966`*^9, 3.6184227108583913`*^9, 3.618423072290037*^9, 
   3.6184237626089973`*^9, 3.6184239800053997`*^9, 3.618424346673193*^9, 
   3.618424525903589*^9, 3.6184245585266123`*^9, {3.6184246448880234`*^9, 
   3.618424669547284*^9}, 3.618424711300767*^9, 3.618424942062462*^9, 
   3.6184249996681366`*^9}],

Cell[BoxData["\<\"done reading ProjectionInterface\"\>"], "Print",
 CellChangeTimes->{
  3.61832597500443*^9, 3.618326033528577*^9, 3.618326105644957*^9, 
   3.618326369809497*^9, 3.61832794903141*^9, 3.6183281110331197`*^9, 
   3.618328254592103*^9, 3.6183282864996557`*^9, 3.6183284404902253`*^9, 
   3.618328489742915*^9, 3.618328569443041*^9, 3.6183287351892357`*^9, 
   3.61832877092995*^9, 3.6183288189009094`*^9, 3.618328896652465*^9, 
   3.6183297615897627`*^9, 3.6183305374252796`*^9, 3.6183306867082653`*^9, 
   3.6183307435494018`*^9, 3.618331050565542*^9, 3.618331188034626*^9, 
   3.618331503445222*^9, 3.6183315662464776`*^9, 3.618331657998313*^9, 
   3.6183317655404634`*^9, 3.6183320276557055`*^9, 3.61833217388863*^9, 
   3.6183324056132646`*^9, 3.6183359675974536`*^9, 3.618336049958277*^9, 
   3.618336125839036*^9, 3.618336169029468*^9, 3.6183363841416187`*^9, 
   3.6183373838936186`*^9, 3.6183389371291504`*^9, 3.6183395680854597`*^9, 
   3.6183396491262703`*^9, 3.618339904470826*^9, 3.6184152348166485`*^9, 
   3.6184155590354896`*^9, 3.61841566709657*^9, 3.6184158769186687`*^9, 
   3.618415941399313*^9, 3.6184161330012293`*^9, 3.618416260672506*^9, 
   3.6184162999828987`*^9, 3.6184163776336756`*^9, 3.6184165890257893`*^9, 
   3.618416694226841*^9, 3.618416999829897*^9, 3.6184174034939337`*^9, 
   3.6184174864147635`*^9, 3.6184176167560663`*^9, 3.6184176585164843`*^9, 
   3.6184177324872236`*^9, 3.6184177976278753`*^9, 3.6184178366682653`*^9, {
   3.618417956439463*^9, 3.618417965319552*^9}, 3.618418002319922*^9, 
   3.618418450874408*^9, 3.6184185947758465`*^9, 3.6184190025799246`*^9, 
   3.6184190901708*^9, 3.6184194938398457`*^9, 3.6184206645336647`*^9, 
   3.6184224045072966`*^9, 3.6184227108583913`*^9, 3.618423072290037*^9, 
   3.6184237626089973`*^9, 3.6184239800053997`*^9, 3.618424346673193*^9, 
   3.618424525903589*^9, 3.6184245585266123`*^9, {3.6184246448880234`*^9, 
   3.618424669547284*^9}, 3.618424711300767*^9, 3.618424942062462*^9, 
   3.6184249996681366`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curious", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceVariables", "[", 
       RowBox[{"lucaMod", ",", "subbedPolys", ",", 
        RowBox[{"{", 
         RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "/.", 
      RowBox[{
       RowBox[{
        RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", 
       "uu$Shock"}]}], "//.", "lucaSubs"}], "//", "Expand"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
  3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
  3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}, {
  3.618421746548664*^9, 3.6184217517987165`*^9}, {3.6184218192733965`*^9, 
  3.6184218298235025`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"inmake\"\>", "\[InvisibleSpace]", "2", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"qq", ",", "ru"}], "}"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
      RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
      RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
      RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"duh\"\>"}],
  SequenceForm[
  "inmake", 2, {$CellContext`qq, $CellContext`ru}, {
   0. + 0.26774226536389156` $CellContext`qq + 
    0.3086481523429822 $CellContext`ru + 
    0.6172963046828192 $CellContext`uu$Shock, 0. + 
    0.5000000000018966 $CellContext`ru + 
    1.000000000000667 $CellContext`uu$Shock}, "duh"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.618423762728998*^9, 3.618423992791307*^9, 3.6184243467831807`*^9, 
   3.618424526043585*^9, 3.6184245586266093`*^9, {3.618424644938022*^9, 
   3.6184246695972824`*^9}, 3.618424711360766*^9, 3.618424942112461*^9, 
   3.618424999688136*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"prep=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.26774226536389156`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
         RowBox[{"0.3086481523429822`", " ", "ru"}], "+", 
         RowBox[{"0.6172963046828192`", " ", "uu$Shock"}]}], ")"}]}], "+", 
      RowBox[{"0.6172963046828192`", " ", "uu$Shock"}], "+", 
      RowBox[{"0.3086481523429822`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
         RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.000000000000667`", " ", "uu$Shock"}], "+", 
      RowBox[{"0.5000000000018966`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5000000000018966`", " ", "ru"}], "+", 
         RowBox[{"1.000000000000667`", " ", "uu$Shock"}]}], ")"}]}]}]}], 
    "}"}], "\[InvisibleSpace]", "\<\"huh\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "[", 
      RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}], ",", 
     RowBox[{"ru", "[", 
      RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"luh\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}],
  SequenceForm[
  "prep=", {
   0. + 0.26774226536389156` (0. + 0.26774226536389156` $CellContext`qq + 
      0.3086481523429822 $CellContext`ru + 
      0.6172963046828192 $CellContext`uu$Shock) + 
    0.6172963046828192 $CellContext`uu$Shock + 
    0.3086481523429822 (0. + 0.5000000000018966 $CellContext`ru + 
      1.000000000000667 $CellContext`uu$Shock), 0. + 
    1.000000000000667 $CellContext`uu$Shock + 
    0.5000000000018966 (0. + 0.5000000000018966 $CellContext`ru + 
      1.000000000000667 $CellContext`uu$Shock)}, "huh", {
    $CellContext`qq[1 + ProjectionInterface`Private`t], 
    $CellContext`ru[1 + ProjectionInterface`Private`t]}, "luh", {2, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.618423762728998*^9, 3.618423992791307*^9, 3.6184243467831807`*^9, 
   3.618424526043585*^9, 3.6184245586266093`*^9, {3.618424644938022*^9, 
   3.6184246695972824`*^9}, 3.618424711360766*^9, 3.618424942112461*^9, 
   3.618424999688136*^9}],

Cell[BoxData["\<\"need modification to actually compute expected value\"\>"], \
"Print",
 CellChangeTimes->{
  3.618423762728998*^9, 3.618423992791307*^9, 3.6184243467831807`*^9, 
   3.618424526043585*^9, 3.6184245586266093`*^9, {3.618424644938022*^9, 
   3.6184246695972824`*^9}, 3.618424711360766*^9, 3.618424942112461*^9, 
   3.6184249996981363`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.30556167081944785`"}], " ", "uu$Shock"}], ",", "0", ",", 
   "0", ",", "0", ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"eqvdIf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
         RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
         RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], 
        "\[GreaterEqual]", 
        FractionBox["1", "50"]}], ",", 
       RowBox[{
        RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
        RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
        RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], ",", 
       FractionBox["1", "50"]}], "]"}]}], "+", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox["1", "50"], 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "50"]}], "+", 
              RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
              RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
              RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], "<", "0"}]},
           {
            RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
             RowBox[{"0.15432407617001903`", " ", "ru"}], "+", 
             RowBox[{"0.4364944030370993`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"0.3086481523389767`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.8729888060781011`", " ", "qq", " ", "uu$Shock"}]}], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.618418646396363*^9, 3.6184186905768046`*^9, 3.6184187910678096`*^9, 
   3.618419170801607*^9, 3.618419494409851*^9, 3.618420664713666*^9, 
   3.618421227511343*^9, {3.61842173914859*^9, 3.6184217717389154`*^9}, 
   3.6184218314035177`*^9, 3.6184219241884546`*^9, 3.6184222453856893`*^9, 
   3.618422439027642*^9, 3.618422730008583*^9, 3.618423763229003*^9, 
   3.6184239933211374`*^9, 3.6184243473331203`*^9, 3.618424526573569*^9, 
   3.618424558636609*^9, {3.6184246449580216`*^9, 3.618424669617282*^9}, 
   3.618424711380766*^9, 3.6184249421324606`*^9, 3.6184249997081366`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"huh", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"PiecewiseExpand", "/@", 
     RowBox[{"(", 
      RowBox[{"curious", "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", 
        "uu$Shock"}]}], ")"}]}], "//.", "lucaSubs"}], "/.", 
   RowBox[{"eqvdIf", "\[Rule]", "If"}]}]}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
  3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
  3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
  3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
  3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
  3.6184252168401365`*^9, 3.6184252176101365`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.30556167081944785`"}], " ", "uu$Shock"}], ",", "0", ",", 
   "0", ",", "0", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "50"], "-", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
               RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
               RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", 
              FractionBox["1", "50"]}], ",", 
             RowBox[{
              RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
              RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
              RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], ",", 
             FractionBox["1", "50"]}], "]"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
            RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
            RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], "<", 
           FractionBox["1", "50"]}]},
         {
          RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
           RowBox[{"0.15432407617001903`", " ", "ru"}], "+", 
           RowBox[{"0.4364944030370993`", " ", "qq", " ", "ru"}], "+", 
           RowBox[{"0.3086481523389767`", " ", "uu$Shock"}], "+", 
           RowBox[{"0.8729888060781011`", " ", "qq", " ", "uu$Shock"}], "-", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
               RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
               RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", 
              FractionBox["1", "50"]}], ",", 
             RowBox[{
              RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
              RowBox[{"0.3086481523417369`", " ", "ru"}], "+", 
              RowBox[{"0.6172963046794595`", " ", "uu$Shock"}]}], ",", 
             FractionBox["1", "50"]}], "]"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.6184188656785555`*^9, 3.6184188922488213`*^9}, 
   3.618418927239171*^9, {3.618419011360012*^9, 3.6184190419703183`*^9}, {
   3.6184190966708655`*^9, 3.618419121541114*^9}, 3.6184191779616785`*^9, 
   3.618419214822047*^9, 3.618419315843057*^9, 3.6184194206641054`*^9, 
   3.6184194944798517`*^9, 3.618420664793667*^9, 3.6184218887060957`*^9, 
   3.6184219241984544`*^9, 3.61842224543569*^9, 3.618422439637648*^9, 
   3.6184245654164057`*^9, {3.6184246449680214`*^9, 3.6184246696272817`*^9}, 
   3.6184247116207633`*^9, 3.61842485402534*^9, 3.6184249421624603`*^9, 
   3.6184249997781363`*^9, {3.6184251645201364`*^9, 3.6184251839001365`*^9}, 
   3.6184252180401363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NExpectation"}]], "Input",
 CellChangeTimes->{{3.6184252549441366`*^9, 3.618425263714136*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{StyleBox[\\\"x\
\\\", \\\"TI\\\"], \\\"\[Distributed]\\\", StyleBox[\\\"dist\\\", \
\\\"TI\\\"]}]}], \\\"]\\\"}]\\) gives the numerical expectation of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) under the assumption that \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) follows the probability \
distribution \\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\"\[Distributed]\\\", StyleBox[\\\"dist\\\", \\\"TI\\\"]}]}], \\\"]\\\
\"}]\\) gives the numerical expectation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\
\"TI\\\"]\\) under the assumption that \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]\\) follows the multivariate distribution \
\\!\\(\\*StyleBox[\\\"dist\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Distributed]\\\", \
SubscriptBox[StyleBox[\\\"dist\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Distributed]\\\", \
SubscriptBox[StyleBox[\\\"dist\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
StyleBox[\\\"}\\\", \\\"TR\\\"]}]}], \\\"]\\\"}]\\) gives the numerical \
expectation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) under the \
assumption that \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]\\) are \
independent and follow the distributions \
\\!\\(\\*SubscriptBox[StyleBox[\\\"dist\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"dist\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), \\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"NExpectation\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"\[Conditioned]\\\", \
StyleBox[\\\"pred\\\", \\\"TI\\\"]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives the \
numerical conditional expectation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\) given \\!\\(\\*StyleBox[\\\"pred\\\", \\\"TI\\\"]\\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NExpectation"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6184252655741367`*^9},
 CellTags->"Info3618410865-6993577"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ha", "=", 
   RowBox[{"Expectation", "[", 
    RowBox[{
     RowBox[{"huh", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], ",", 
     RowBox[{"uu$Shock", " ", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"3.625048160352522`*^-72", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "5.1043849425658694`*^-33"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
         RowBox[{"1.71919788`*^8", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9.3259643`*^7"}], "+", 
            RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
       "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "6.79344341314499`*^68"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.6033178053515684`*^16"}], "+", 
           RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
           RowBox[{"2.474305391191851`*^17", " ", "ru"}]}], ")"}], "2"]]}], 
      "+", 
      RowBox[{"7.90756292416938`*^69", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.6033178053515684`*^16"}], "+", 
           RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
           RowBox[{"2.474305391191851`*^17", " ", "ru"}]}], ")"}], "2"]]}], 
      "+", 
      RowBox[{"1.921475962006826`*^69", " ", "qq", " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.6033178053515684`*^16"}], "+", 
           RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
           RowBox[{"2.474305391191851`*^17", " ", "ru"}]}], ")"}], "2"]]}], 
      "-", 
      RowBox[{"2.2365965465357973`*^70", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", "qq", " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.6033178053515684`*^16"}], "+", 
           RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
           RowBox[{"2.474305391191851`*^17", " ", "ru"}]}], ")"}], "2"]]}], 
      "-", 
      RowBox[{"2.1285796677072357`*^70", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", "ru", " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.6033178053515684`*^16"}], "+", 
           RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
           RowBox[{"2.474305391191851`*^17", " ", "ru"}]}], ")"}], "2"]]}], 
      "+", 
      RowBox[{"6.020532469210725`*^70", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", "qq", " ", "ru", " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.6033178053515684`*^16"}], "+", 
           RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
           RowBox[{"2.474305391191851`*^17", " ", "ru"}]}], ")"}], "2"]]}], 
      "-", 
      RowBox[{"1.267833643325868`*^86", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}], "+", 
      RowBox[{"2.0558607654879877`*^87", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", "qq", " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}], "-", 
      RowBox[{"4.800585439146996`*^87", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", 
       SuperscriptBox["qq", "2"], " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}], "+", 
      RowBox[{"2.297851525580543`*^87", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", "ru", " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}], "-", 
      RowBox[{"1.106804578604111`*^88", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", "qq", " ", "ru", " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}], "+", 
      RowBox[{"1.2922348714331317`*^88", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", 
       SuperscriptBox["qq", "2"], " ", "ru", " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}], "-", 
      RowBox[{"5.266756147389371`*^87", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", 
       SuperscriptBox["ru", "2"], " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}], "+", 
      RowBox[{"1.4896635946413685`*^88", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"5.1043849425658694`*^-33", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
            RowBox[{"1.71919788`*^8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "9.3259643`*^7"}], "+", 
               RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
          "2"]}]], " ", "qq", " ", 
       SuperscriptBox["ru", "2"], " ", 
       RowBox[{"Erf", "[", 
        RowBox[{"7.144497842791941`*^-17", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
             RowBox[{"1.71919788`*^8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9.3259643`*^7"}], "+", 
                RowBox[{"1.439220825`*^9", " ", "ru"}]}], ")"}]}]}], ")"}], 
           "2"]]}], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.6033178053515684`*^16"}], "+", 
       RowBox[{"2.1463797065154602`*^17", " ", "qq"}], "+", 
       RowBox[{"2.474305391191851`*^17", " ", "ru"}]}], ")"}], "2"]], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.6184253475388746`*^9, 3.618425392269322*^9, {3.618425431731721*^9, 
   3.6184254506719103`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"ha", ",", 
   RowBox[{"{", 
    RowBox[{"ru", ",", 
     RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"qq", ",", 
     RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnHlcTV37/4sQGZKhJJVkTgMS0dlERCSJEpJKpbkUpQFNklJpnjuZMpRQ
meKYCVEyFklKqQjRYPzdL+3rs5/vee7n9bv/2a/e97LPtd9nn7XXvta11mgr
V+NNPURERGR6iYj0/Oe4awlvXXLyeQEdLTfX/P5dnq5zrn3NG4vPheDTlW3P
zXQv12nN9rJVXnwaPGorrzGpZw/e0gylZxXzcsEPZcaHq7io8y78Pc8h8JYZ
odeObTfnLf/bPh18yMWO5KqqQJ7JXx4JXjh7fK391SM8kb//eRYTH5M+stV/
+13e3O72DPGS8/lH45SaeHrd5wfnu988P/JVb6awOx7w2ORH2eaC0Yx+d/zg
78Y5dlRsn8l86L5e8KLO0Lpv/Q2Zom4/4MeGu2iIbbGkv8F/ff3tNVbWDX+T
12RpndriG3fhmY7p886b3hj5E56Jj98upXVWchI8E1+Vur/RznwVPBN/te3W
+dvNAfBMfEST38wB9w/AM/ExDaVBUi634Jn4FNO3OyN2voNn4v698l8dEhVj
yDPx/E/rdjyNUoBn4osmqJx7OGoGPBOPnMfT2x1nAM/Ez4gN+5V6zAKeicuP
Crov7esCz8TnP7upmTjZF57J33q5nV5ld7/BM/H5keEG6XuVefQ3HVO7cvv4
yq2AZ+KfdFPv71H3gWfix3uonPtgkwXPxGuuCO7bvrkGz8Qb3Fv97Oe+hWfi
xVOy9CdtEmXIM/GvR+TzHtWOhGfi6YNyy/dWToNn4n0SSp+Gj1sMz8QjE4JL
79mug2fihsVJD5KOOsEz8TrDwOdHPvrAM/HqmacnWsmHwDN5Eth9T7wko8gj
z8RTrUP5o3UN4Jl43Wkrn+2bPOEZvpcv8u/6mQLPxM9LVoufSRTAM/G+4q78
lxY18Exc1ORJ02XJ3/BM/EaMdr8vfjLwTHxkcp7V0SINeCYecbtWb/29hfBM
PM+nY46Nsjk8Ey+Q1LrClDjAM3G72Jbo+0ne8Eycv/mEjKlxMDwTV9lksOHt
un3wTD4+xT97FhmvB8/Ej+5Y/Wa0oxs8E+cNiNJ1GJYAz8T7lR5ofbTwAjzT
0W52bPCO3Cp4Jj45SDzU8HEXPBN/GjRg2AHLYQx5Jn6x1/Cgz45q8EzcR/tA
uPueBfBM3GPMT+ndzabwTHz5yLIcw1p7eCYu8X3tnS71bfBM/J3unwYJtyB4
Jm4vMdR1ggeeE9z5HfVGPF8UB8903e3Tdm0foe8Az8RXHP29ProjBp6JW21z
rHp/oRCeiRvXr7F1mf8MnonbPPk0QU6yHZ7pmOdpqzl8nxRDnom7q8yeGFU4
GZ6Ja6bVlkVt0oVn4nNm3B3/6NoqeMb537wa0vDDFp6JJ2zvccv7khc8Ey+U
cM9S9AuEZ+LZJrETNGwi4Jl4qkF/qaqHsfBM3Od27KutRsnwTNfnl6zXskgq
Ep6JP5ePfBBefQqeiY8aP26Dt3sFPBN3yry/ZtOlL/BM3KqUl32tpyTiIN5n
j3XL0qUT4JmORwPGzJC0ngvPxO+PH2cbcnIlPBMXVWhslpXbBM/Eh+lmn30/
3xOeiesGTjCr374LnoknhY98EjZzLzwT39Q+uuomLxaeiacOHeHhUZcEz8SV
TyjVfz3LjXvoOu525NiUzMqFZ+LTb03v13NiGTwTv3JW87RdTis8E1eYoLQ3
118Cvx/i33aKiC1THwvPxBsqIhcriesgPuK3fN+b5RSugGc6qmaP2ft7kTU8
E98TyDdeVOIBz8TLZjl3rnbbCc/E+e5nqwO/7oFn4s/ev3gan7gfnomvyBva
UG2aBM/EF50TeXDJGj7B5fdUjVgSlgXPFK+Fmq7gZ9FdeCb+ZIbyrJuJTfBM
XLaF76SyrQ/6feJ/AsO85S2V4Jm4vJW0mXHsLHgmHlcZbbUufzk8E7/27ubR
i0EbETfOs1i+vnmFOzzTsbrBcbj2lQB4Jt5hkq82LT0Mnom/jdVqZV7FwDPx
E4pWUtm5ifBMPOuVRFVEYxo8Ezf80X/YVSf4BK9a5e9vHMeHZ4orfKXhj35a
7+CZuG3hr+OGzT0xXiG+OvwZo3laAZ6Jy145HjfBfgY8E0/eNbxQfepSeMbz
6s+bE4sPbYBn4tUVy0zVrrvCM/EUB9Fhg1P9cD3EVaUO+9pp7cbf+FxV8zXH
pWLgmXjFgpapJxsT4Jm4+4tJ4Q36afBM/MSSe3U2s7PgmfiOhSY7tULhEzxV
571Y/97Z8Eyfr1Q2TeJQmQjG2cSj5YxOOKiNhGfiCnP7bjofMg2eiW9TemCr
2qYPz8St3ouv2u+yjnvesDy9yMPvU7sTPBMfUWO9fPy27fBM/IjBtl382yHw
TDyPrxx1Qjsa10lc2nPqCdH+Cfibjqm3m5o8dqfCM/F9vbc0WDVlwjPxJnO1
2HpLPjwTL806uHiOKHyCv9GyV/3eyd3P9Dm3o+SGB6pJwzNxf4UMg9/v1eGZ
eM7ixd4rvurBM/HP8+rrBtmtgWfikgfn3N+4wAGeiX/5nvvjxhpveCZu+L7E
SOqfcSl5Jp6uNlVBNH8fPBN3U7rHT5SNh2f0B8H9LrQeTsH1Ey/q8H7nMiMT
f9NR4t2lP/3H8uEZ34NscldyHeeZeJdoZGVrB3c/E69MlM0Wi+E80/kOVj0Z
p6I8BZ6JR/4Yq+ygOR+eiTOuwVL6Mavhmfg7+dHrbp+0g2fiYwqsdPYs2grP
xO38wpITKgPhmXiZbZ+m6MoIeCZe0mtViJN0HDwTV9VrHTrjWDI8E88NOyiq
tT4DnvF8m75AZ0tFFrwQ9/ZRy4nN5zxjfNd0TqyjmvNMXDt0lL/tPs4z8Vk2
y+QjWrnnIP27UabGc1YUzoVn4gH1z9bmflwJz8RrVxz/5TVnEzzjOSxf9dBl
gSc8Ex8xdGafAptd8Ezcr7H2Zb/v4fBMXKE07uiWXrHwTHxDjUW5elwSPBN/
ETRaatJGrl/GOFfkxfi2f55T5Jn4/i6pHsc28bn7m+WTnpx6tSyP80x84YS8
c51bOM90lFfoO31MA/ccRPulZ4rOT+E80/8f3TFd9/qOFYxQvo6puvJQq6HF
ihHK1zEvAq9JP1rpwQjl65ggKy8DtYYdjFC+jvmpPc1o0pA9jFC+jmld7/5h
f0MMI5SvY/ZEHNj93C4RnonLMU6PXixIY4TydUzRAZHfXXWZjFC+jlm1YX+x
mxhfOF/HVE48/pOx5Qvn6xh3uTfFlfP4wvk6xsvw+9jht7OE83XMvQ/VUwrk
OM909Okjo2F4NoNJU7wv73fzrICOp/J6umvEP9Ah/8Rj5Xs7bZhVoMP+jX93
pUfv6RZrXXFe4smWobO/KHkJn59xWOVtcy3fmBE6P6O8e9KaVE99Ruj8zBVF
sc3jJ2Thb/qc1Zu8DZt8M3F+Ol9uP3u76ZPO6gi1F5i4yDW0rbITbs8kHPOd
4TDCXDh+xmJm5/H+EZnMPs2QS+EnzwnoeLdxftSYw4U67N/4/10bHi9+csdV
uD2jp6Lf9/BwY0aoPaOootfqEZKJ+OjfqQ/ukz0qOwfnp//fcHu+c+cuR5yf
4r09YGTKXI9ViJ/+3fN3L5dqKWUKtxfMzp3gl2d1TEeovaBaJTFo4Q4P4XiY
gASRYP/VyxiheJhPgeULlstmMhq7itRtbYuQXy0ZYHDFomeXzpuzqr2mTTuD
z5UbWtfgLfcTnNqfOCQRYeeszFN6tezMnz8n0T6vVqTnQO1x4NSe/6tmUKzS
Ml7g33ZH0f5lxuR6zQRDcGq/LurbC/XRHrzav597AO0bb1RvHKTPcWpvfNpG
4U1uLC/4b7tktO8dXHZ3XNt+cGpveW+Y1r4Dp3m7//I9aO88+JyFTs9T4NS+
+snNLQk1D9h8nT3y/Kpsnt+3uz2+B78dbT2Hn25AezqPJpuvpvbE9yiIhnpp
9mACuuPEeZ4rtg77fZvj1H5m4ezUYSqyzOtuD2i/RG9dwGFvjlP7y8v7t466
o87s6PaM9i9mORycm8txal856Vj02RXzGYXu7xHtnUeIbeE164LjPXL13hs2
8iZMTfd9gvbpOZsNLQJWglP7gUfFPa7IWzPq3fch2ieceCF/ZbIVOLXPkZ5q
tOyiG+5bem70n9P61mSFEo/uT+JMpo6lR9sS3IfEeWuSc0TXuON+w3kcBZ9/
h8fiviIeGDPKOlH/DO4f4gZ85t6FgjLcJ8T3pfBjPoW/x/dO/CqbP6fvnfjj
J3U/7/qNwPdLXKtojPjwbHV8j8QLPkX/knSfj++LeEm+V5q4vwm+F+LHCk//
OpdpDf/E11Qmz58/2x2eievGVts5dvrCMz2HbR2GmR8w14dn4otnDW9UGecG
z8QvPcrdnHl7PzwTX/9FusB78hl4Jn6k08vjxYxyeCbe/5P/x+DlzfBMfEaX
Qd/ohT0Z8kz8Lps/J8/Ew1KO3bo4Xx2eiT9oFCiuXT4fnon7aGiOqUkzgWfi
t2zXtJ77YA3PxHe0bM5WT3KHZ+IbD/TpuvHP+zV5Jj508U5+TmwIPNO4RkZu
+Pnx9s7wTLzplEjZ1YQYeCZuW9Lzvl7AaXgmbirNU0xRKIdn4u02Xy959GqB
Z+IKbSU/P24QY8gz8YcmGkP2RsnCM/FrbP6cPBM3D7Krz27ThWfiDbtWBFXs
MoFnzAeaigak9LWBZ+KVPa32SZa7wzNxz48zJQ5J+cMzcXGvG31jP4XAM/Hy
ukC7F0/2wTONEzueTzh3eXQ0PBNXDHZzyHE8Bc/EQ3XDW47FlsEz8UuGu691
1DTDM/EZss89kx+KMeSZ+BXnY3PMbo6EZ+KB4boJj86pwzPxmWz+nDwT1x7x
+nWZugk8E++f/zp20TdreCb+aZzvw8P17vBMXHSxR89X5v7wTHxgg3/FuGmh
8Ex88SFPO6lpUfBMXGa2/96PO+LgmcbdNjFOcT2k8+GZeFh1eGMv24fwTDzr
43DdXlLN8Ix84bdTnSPPiDHkmfj4hlOrY2fLwTPmf6TOtikbasAz8btJjWFR
uvPhmfhDNn9Onoln+pfWRZ2xhmfiHoUzjng8dYdn4mm+g1YO3+IPz8RdemcP
P7smFJ6JO54Mf7/ZIwqeiX+99FpEIycOnolHLtp+pTYgGZ7pPSYlWzQ9VqMU
nokn1X4c53L9PTwTX251TG31ODGGPCPPLVFie26QHDwjH276pEU5UAOeia/7
0Ff8zaX58Ey8anr8py9GJvBMXIPNn5NnnCfij1HGQXd4BtdauvjxP/cneSZe
kLbW/otVKDwTz8nWXPgsJgqeiYe0tc45JYiDZ+Jl+Q+znqYkwzPx0KCzKWYv
0uGZ3gu3Xu3aFizbCM/EAwskDr3S7cmQZ+K9Rfo6BliMhGfiZeVT7uZv1IBn
4gez/C1VaubDM/G1ei98RA6awDPxacWPpwiOWMMzcUU2f06eiYtP1zVy+6f/
JM/IKxTHHP6wLBSeMS+a1CAXFBUFz8irVd4Xcb8ZB8/Ew27zR104kAzPxGus
H6rerUuHZ+Tbe4/UPROTBc/Ih7ubqaYr9GDIM3FXi403B8+XhWfi/SIbzB90
qcMz8SfqRTuUzsyHZ+L2dxxfHMs1gWfir6fnbL39wBqeiffWfvT8lrc7PBNP
Y/Pn5Jl4rO2u9MmyofBM3OPup7rKzVHwTDzAb9VV53Nx8ExcKWqvxb2kZHgm
3si0bZSrTIdn4vw9uXtH7MuCZ+LW9e8kpybw4ZnyFqKrfY7sfioDz8gDf95b
NM9UHZ6J74+Zen3QvPnwTHzFL60bQz1N4Jm4U6nO+/ECa3gmHvQzqIfNdnd4
Jt5D68nNSSl+8Ew8h82fk2fidmInJ2UrRMEz8YA/H21OJMbBM/ElOZu2TPBJ
hmfiwxpU3zedS4dn4soFIX/i/LPgmbj1iftzf4Tx4Zn4ySE6vaeLZMMz5YFk
dhaN9eqvBs/EVS8ee+sXpwvPxMX7pGvO+r0SnomHZpu+/uprDc/EN2pMdxE3
dYdn4tVu4+vXOfnBM/ERXxImlaWHwDPxTDZ/Tp6Jj3oTLFhgFQfPxEuPfz/z
Yn4yPBN3iHiombkzHZ6Jt6n7z1KyzIJn4vdGuL1648SHZ1zv0Kfuru85z8i3
FwRskWrm7mfKq3U1PZtbfXYePBOvlbI3PrByJTwTnxI2YJRsX2t4Jn6ff96r
aJA7PBOvHxB8/rCkHzwT76GVMyXePASeiTtcHPlxhN4+eCZ+l82fk2fiur9+
1L7sSIJn4g+0tt3aqp4Oz8RHb09ena2ZBc/Ei5+e9+ipy4dn5O17vm3qvMp5
Jr5k8KPaR3c5z8S/75qvsXc75xnzogOVbqj4GcMzcdntFyeqOlrBM/GRUj4b
Rx52g2fwA2Ndm0N94Zn4lTFmiQU/g+GZ+Mc4z+/zLkfCM/GwQfsMDc7GwjNx
SzZ/Tp6JO6j1bQq/nQbPxJ3fLJt79kcmPCOfP0fHbZM4H56JW9jVtv7Yw3lG
HYRnWatzEueZ+M/6YNPrRpxn4tdtLMTaH3LPQcrXdegdz6/03MgI5eUYpvKe
93Y5N0Yo/8YcNJQya3m4nRHKszGK7e3fLYOCGaF8GmMsoXkwZ0QkI5Q3YxLe
/1p5cFEsI5QfY15m/8z37pkEz8L5c6E8GDNGel/nN7dM4bwW01E1pbRNkCWc
v2IaX/EX7J/HF85TMWPH3Fo3wIQvnI9ipkYtESsfwhfOOzFLtrYd8U/jfNLx
+MCVpX5925HPPCYxZKdzVZGg4cjlSseTYzBOHpPg+tDT6Kyg/dwEb+lRBngf
oTz063LXwGNfXPHeN+z4BJcg7XMCv6oPk49ej8L7NeVpdc1P5Bt0HEUeo8+V
N/33K58XnJrbpBHvceW/8ooGQnlFir/fnOejbItE4ZPiN9WuCP7mJwOfFH+v
Qj7zu2QKfFL837d0tav2mAufw9n485nRs00PG8Inxf9y8teR9oHmiMN+yqPC
yZdPC8abh4tE9OHyb8jD2U8f+ql2MXya6+410c45I1g0L1QvrL8bfFbcbzgw
b1SBIDzRrePKoBguL2S6oE1/f4HgnNKB0pDiPPi8+SZL16hPoeDxq9COY+23
4JPn9CvG1K9Q0KK7xMpYs+q/8q76QnlXin+1pUX49isy8Enx30m0kGnpowaf
FL/ki5mPH0+dB58U/4qy268UOoy4vBDFL5pQkzbKAj4p/jl9JzoabrNHP0Dx
dzXVt3mke8Az70yVV+3kPIGe9D2dnNZF8Kx+J27o52EnBZEzdCfbNrnAMx0f
HdpedmtBDDz38+k5sY9XvsC7tuLR+vh8eA7qaek9sClfsMvpw3BJ+Xvw/DOy
+PawDacEUzMeXMzeXwvPXjIjpEc9PiW41u/WxcPHvv5XnrNUKM+pw8ZvFdl+
uTxcDZ7V2Phb+lXtSeuYB88Uf2j9tauzpxnDM8UvN/ubtvseS3gOZuNPedUk
d97YEZ4p/i2+D1/caPSEZ4rfrHpBoYR+ADyf+Ps7OiyYabL75okqJ3jO+Pt7
OSI4u1r1W+ytaHiO/vu7yBGY52cUHHyXD890dMq3k1u+vhSePTd0fD8SdExQ
eFHrzdBn9fBs55mfXOR8XFA3LrFcM/gHPK/Zs3nmTdMTghOm+vpLX/VHf2vA
5g+fCeU5j7Pxb7m0bbSWOZd/S2fjnyQ2oXFQ/5XwTPGXrBzUuCt/IzxT/D7P
k59JXXCGZy82ftsjkpUtX7bCsy0bv/KFUY+exu+EZzM2/gVajbN7VIbC87S/
33umwM90yhW7tCh47v/3+80S7Gkb1lIVmQ/Pv/9+j3zBkiGDfiwZ9QCeP/29
37IFs6SaTfcUNMAzHSeb2WfIDxXBc+3x39/pQcEzVcGyhNNSeK7d/vt7PCQo
0zoyb1CkEjyfp/ynUJ5zKhv/vkWvcsaHrYRnCTb+D2nRdsEhVvBM8ddv6LFU
5KgrPFP84VKHlhQUeMPzWzb+ml8V/jV1u+CZ4v+d2Gtbu28YPN9i4/+oYxAh
0j8angf+jSdaYNXpKNdz+0l4/vL3c/cLOtWODv58vhSen/49f5zgbVnY4V3u
jfB88a+HeMFFx4NhXdtEMX7I/HtfJQrG6OdLXz4+DJ7p6N40MdzMbDw8b/57
n6QKLDvkVml0aMLzMjZ/yBPKc/Zn4++t/qX/DQku//aZjb/dZIaTXJQbPFP8
43RaRCsnbIfnYjb+L9YD07IlguCZz8Yvr5h1J+fnHngOYuN/F3xJ4mR1NDzb
s/HnSbsure4fD8/Rf+NfLxj0ruDN+1334dnpL3cWlJyWk9Nd1gjPt/7G4yVo
VnIcWS3dA78307/t/QWNQ7VPdu2Whuevf683UDDmz6s9C29PgufLf88TIlB/
uE9D75E2PNPxy+tPnrnfF8GzEZs/fCyU5/Rm4/cOCohNGcDl3yzZ+NMqFR/1
WuoLzzfY+B2G8NMjewXDszkbf9ekj4Hiq/bCcycbf966uWsysmPguZiNv+bw
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
16k91bmUOgueif8431BzR3UvPBMPKdt+RDwoH56Jl27YNKaopByeiaf0tHSs
Fv0Mz8Qrn197+KiuP+paiK84MmKB5pOx8Iw88e7vs2/Z6MAz8YzrW1+l5KyA
Z+JDWw5Zz/1uBc/Ep1+d/fj+Eg94Jp4a4aXuUbwDnomHatdcZ2rD4Jl42z6v
OuWLMfBMz893vZtejksNhGfilXom/zyYzOGZ+Kll65Nrph6BZ+LD0w6fLcgp
gWfiWdlKnUunvodn5Mt3tmq8/9kL9VjEazb3O6wvNRqeiX97mrWqIV0LnonP
yfWPE5uwDJ4x//nnc7WkjCU8Exf70PPy3ipXeCYuqbcvvmCtHzwT31cyoyb5
Xig8E29+vb0kgx8Nz8Rfl9ZmD5mcAM80Hnk5qv8wLbNMeEZd0twhwVNsvOGZ
uKll1ZuK6qvwjLr7XvpDfkrXwjPx80U+Nc2LRFBHSLxfGk/+rKQsPBMX/bT7
bnr8VHgmLtn3UtTHA4vgmbj6uXtDJteYwzPqMcPPTqq1cIRn4kNGJcyNlPCB
Z+Kux1NztY8HwzPx3O1/7u1u2gfP8OY/qElkWDw8Ez+4c9uG1Q4p8Ezju1HV
T7q0z56FZ+Lyp8LK3HvHwTNxtbIHjPWH5/BMfG/82sHKeh3wTLx9SMe+9cuH
wDPxugjtN/eCVeCZ+B3nZD2ZG7rwTNzSYNK6OInV8Ez8pu8Q6/eT7OAZ9Sb6
JbzAZ17wjPgtv4uPCA+EZ+LFsarq67dFwDNx62VZPxvfcPsMEB/cN+HVWk9u
Xpl4w8xvD8THZDD/dz8B++JZ7H4CxGm8bPkz+9q6RY3wT+2fsPsSEKf20zR2
eDQvviO0L4F9cQm7LwFxvMevy5QLD+mF+m9qP5bdr4A4ta8NKhsm/klRaB8D
++Iudh8D4tS+xd/kVcsZLaH9DeyLW9j9DYhT+8C0Z98fhS8T2vfAvvgOu+8B
cWp/5OrICxkulkL7IdgXq7N5TuLUXv6CygrVdW5C+yTYF+9l90kgTu01U79c
WjvPX2j/BPvicnb/BOLUPvbz7ZzExN1C+yrYF2ez+yoQRz2CzByFmrncPgDU
/jm73wJxav9oxOfwmn7c/gDU3pjdh4E4tT/bESG3bTW3bwDyZ+z+DMSp/WY7
g4c2mtz6PmovtG8D2i+Q6+te7sHH/Uzvc357o006kkWwfoZ41hsX8XMmtbgP
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
+3z+87xi9/n8v/t52hdb/Ot+nv/wf93P07648F/387QvPvqv+3naF4f+636e
9v9jP0/7/9rPE/WQL/fqG377g36AeIG618+TDsFoj3o/UYXcxooh6JeJK9eJ
//qTNRkeiBttGn+gtmYvzkv8aDRje71sP85P173u+kJPuz3jcH6M+1KN/IrC
5qC/Jq680Ux7gbQRPpd4/LVjGbf+xOBzicf2qXIcU5+AOIibXVFxP2zE1VuQ
70a3tPLwBC3EQ/zPfg+bx3oGiIf49vrXN+xnr8P9Rnxky13FDlMH3G/E49h8
F8WPOjGX05MUZRIQP/Gtzo9dpuekIH7ioatXDbjvkMGNG1g+586Rc55x3Po+
1DVZXNhU+WYhrou4eFba0ohlZrgu4lsffsndwNjhuohX/P45UVXdE9dF/Ds/
yVldcieui/jHCP3a5HpuPwLi9+K/J2c/5OoyiYdMLu2jbs6te0WezVlWxGMe
l+8jvnBljemsI9x8NP0OEvPbW2PNbLj1USzPM29x2yLrgesi/tTJRnSPhz+u
i7iqvEyHqXQot76C8loLOjWqnnLrqYnbDglpEJPh6noRj9xl43uS3PpTvH/r
Rqt5/8f6U+KLjO7sdfbjrpe4bJdPenkgt/6U+KNMwVYvLT7z/wDZd3En
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
vrc413ui528PbaPmi7ZXezR/39359/aIjjmVM27Mfa5ior759+o7vk4dZypW
X5U69tOH3hxt09Yhb4m2k98iN6eOaVUHeDDPBfQd36eOu5Rfz0utz/J990TH
AMpPf0od16k+sDx1/Kzay4rU8a3y/Q7RNla556bUcdq/eXq0LZX93pPrj/Ro
TeqYX/WB5tE2fC3y+tzGKSdVPL8pca11Y75/Dw1+xp+0n/I53Gnz9m/fjnxu
pQvSicNot/Oct5AboutPytkHSQcy17BUj1qdOh9RbaRltK+R/2wV7Y/WI9dx
fV7imsNd0f5Fe/Om6PhHvnRt6rxAtYjW0f7ru+h13p6/52uM2aD5Sb23fsvf
s1vmnEF6siF1LqB1l+5cAteTrU4d26sW8V3q/EV1hm9T5yCqP2yRH0hc35CD
UNyuOF3+7Xb4ZvnTzH5ada7y0bGoapXlouNP1c3K6jsT180qRceoqifrnn6a
H56zXnY3sZ2vQuuauFZ8YnQMrBpyheiYXPXnlanthmydbIDe83T5ndQ5jvLQ
X+F6iesh21PnLKrr7s7nQTXw3/N9oZhUMUVTuBHP+S11vqPctkfmXE7xxp7c
36lefSB1zqW6/Q/53lGc+E1uk7WP9qaOD1Wf3w83Ur98ROpcSXX+jrnPkB07
mDonUg3879T5ner5Xfnf3MQ1n6rRMbzq59Wj8wjV6t/JbE9lb+UTZWN+gkdp
n8OL+F/JaN8nH9gvc7yleKxU9JqWymM0zf9djP+R/uPhUdJN+kvARwbXCKV7
q+TTc53clO8b7SfZ9um5nfycMT9z/6f5++zMx+u+0tH5gmrX23Mb9t9elR/5
i1YtOv/SmcJh0fmgzkGOiM7XVM/skzmnVdx1VHStQ7XZooqxEtfbj4nOoVT7
PVv2K/HZSs3ofErnF7WjczHV+Q+NzmFVty+sPZ+4Jl8oOp9Vrb5EdO6ps5Xi
0TmpzgWKReeqOhcoiM7ZVefPousJOhc4Mjq3Ug2/DHxH4rpxjNZDnSPMTx1L
KHfQ+YDG3Ka5iY6NtY7K3xT/aM0vjc5fVFu7PLpmolznMnhQ4nrUwjx2Ug7y
ZW4f5E9fzRwTK/ZbnMcnyiN+Tl0zUZ32C7ha4tr4j6lzIun8ojzOUV7weR7n
KB+5ODqv+RJ5Ce0Z+KtclxRfKBaZmDnPkd2ekDkXWiN7Ex2bfYOclDmvkA96
OXNeId90ZXR+8TXyiuhcaTmyYXQ+om+/KDqeX4b8LN+biiUaROcgyn0viM4v
liAvjM5HlmrdaCMT1yQbR8eBq7T+0Tmj6optovNi1R7rR9s0PXNm6vhQcf6t
0XXU6nmMqRrsy7xDi+icVPXMyZlzP8WffyGbJ66ff5Q69lNeoD2lvSWb/2fq
mpXq6tov2jeKT1TX+m//7Uutt6q3N4vOhVXPHBQdsyl2uzGfK/mdO6JzedX9
2uf+SHW/IvCdiWuG7aJzf9UzP0wdoyqvSaNzN9Xeb4vOGeX75qaOV5Un7kxd
j1ItfUdqnyLbuyt1PUr19m3wlYlr7CG3V/I7bbX2ievA4zPnaatz+7Y11/9r
899Vfvl85vMk6d6ozGdR0r1nM5+NaX3HZK45Sn9GZ645Sn8+SR1nKo5tFJ3P
rkBWjD5vUr30lOhzK9UwT4o+n1Lt9KvU9UmdJV0Vncuv1FxmziXkx1/MnNNK
t6dkzkMUG6jWoDxF+eDUPA9RvHF+9NmZzjJOzXVM/rMpPDHxfjkt+gxONeGx
mc/Y9LsvZc6xpbd1c5ugWuvp0eeDqhU/l/mMUHukSXTuo7mdkzqHUh3g09S5
iWoFZ9IGJq7zv5D5PEnzUyf6vE/nAudE129V/68Vfa6nM5oa0WeRqkufG13v
Ve26cvR5n2rF9aLPB3VmcXz0eaJq4CdE5/uqjfeLrt/qzOK86PMs5TsjM59H
ai//H9IH8JA=
          "]], Polygon3DBox[CompressedData["
1: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
ZJv8NFZNfpm/RI9/4D63dlmv1Lzd/bmM9dtYH7Umn8xVos971eSveUv6gdFq
8sHcJXr+W3ga91v3/X1Xk/8m7eqV/Y/5ZZ6SfuEFrtPBv7O+I7ws40H4Lngs
6sukPP8AuF9JProb3qnLT/ZPx8FveH+MC55/LPy68QCPBx8Dv+b9h8eFB8Hv
wld5H+CT4ffgq+FJ4FPg9+Fr4Enhiaxb5i/GdeacNnvJPfWZ35V5znzGOL+k
xv7FfLwmtdecNl0bDW2uO4HXvMX8cuOUv38i/DZ8hXE+SmJiqjZ72lgxxieD
+zSJfWOoDzxLk9gyRqZss+eNHffIFG1yhHvnvq6f3ZvHju5JzE7fpgcwltUA
/zTZU2oDNVNps+fUUifx+neYX2lc8v6+b5PbzHFqJWN+hjaa372gZl+2jWb9
stOQi7bpQdWW3uNZ4b5N7r05avY2mtPc9b82udacq9ZRvNhrqwHUAvYgfeGF
m/Qm9jDztulZ7G3UvIvASzfRwqOXaO1+TbSAOXO2NhrZXHoUn+8V5heU6F9z
6BxtNLK5VY28GLxsE+1sT7R0G81urzRuSW+pplBb2PMt00aT2wtOWtKLW4Os
RfbgK6u9mvTmanZ7Z3totbw9gL2xOdncfCC8Spue5seSHmCdNh6CvYE5ZsY2
PZa55/M2e809p/awZlg7zElrdvu9F2MMxgbwF3z+R1i7F76B539vPWd+BI8t
VVNDV2tTY62tY6ix22jAg2v2gzWzdPFuTD/CY083iXXF+FVtNP2u8E/8vePb
aLQ14P/BZ7fRuJvX1PAl2mgsa/sJ8AFteuZZWP9cPdJGI8xaoxE2bZMj1Q5q
KrWVOXCqGg2iFlEj9a3RVGora1KfGs2j9jEnTlOjsdRaaowZazSqWnVPeOaa
nsHeQU0ye43mVfuqAeas0bhqXTXF3PDKJe/Z9zpbzWfw76zUfbYjGDt1f388
ewt4E3hrQ79GI03YpsaonaxZ47epQdYyNew83X4w/tT8Y7epOfYCaq5x22gs
tZgav7cx0kT724ON2qYm2ZvZg/W0qUH2ZvZETZuaelsX7327/Wb8X8P6lfCN
1ije7yXwWfBF8OrwTfBtbWr8LvBB8KrwutZQXr8PvDi8nDkW3hWeE14AfqXE
IzmujYeid6KHMH8bj0Bv4YOubo3RfR41xMNtapjaQo0+V5seQe1ujzBNl7/s
HezxenXfx+NdzXsRfrNJLdTDmK+Np6O3cTSPvcr8QubjENsr1PRrW5b0I3pA
ekH28HPVeEh6SfaMM3Xx4P4ypr3/s5TU/v5N859W1LPYWG3QxMuwxlnrrJnW
Tj2f89t4cHpB9pTnwZc26TUXLolX41etrCdzULefjb+dSnqzS8wHNR6CXoIe
2Aw1HphemJ7BdDX5vncXTyO7/PJXVy+sR2rKP7p6Z77R87y+TU+lF3pgSe9u
D79ljQehF2FNmlYvoSe9gz3ElHof8F5tPNvJa2qWtUsPduoaz07v7kh4Dnir
kt7XHnilGs/s9Daepl6aHt0ZbTxNvTs9IL0gPTK9Iz01vTU9Gr1GPRq9Gj01
vSk9plPaeEZ6T/b8enl6RnoBelKD2nhselUbl/Seg7v8qUeitzakiXeip6MX
pyeg16Nnp3enJ6b3rMei16KnNW+Np6K3ogczf41npnemB6c3rYd1YRsPW29L
z++CNh60XqCe1pltPGi9Lj3oK9p44HrTarRJunqh9tXzvbyNx6oXvGeJNlYj
b1Tj+dnb2uPqreuJ6o0eDc9T42GeBp/XxNvUU9bb0OPQa7bHtde1B5u+pt6r
b9SA6gF7LOu/+sB6fRjPeY752SV+xOHw8/A5JfrwAPgJeHCJ33KoNQs+q8Sv
OAR+Bj6zxK+wZlmbziipZRvW6PsBJX6LNcradkxJ7dqtxv84tsSP2h8eCZ9a
4vdsUeNH7V/izwyo0a/Hl/hVe9f4a4NK/CP3nHtvxxJ/whgxVjbqaq8xbCz3
L/EPrJHWxh1Kaqd1w3phDbSueA+8F2uV9N/7wY/Dp5T4YfvCj8Enl/hf69f0
Sx6S6D/tXuP3HFfip1mDrdX7ldRm77n3fo8Sf8k97F4+oMTfOaFEq/uZ/ex6
KHfDI5p4K3qA97TxSPQGPTO4Dh7a5CxB4aCeVR+r5+yZ1Zfq29c6/aZeVK+p
5+wJ7Q3t0fSO7CnUO32a6EXPcG5o40F6tuMZz61tPJz/zn7gYfDdTc4ShvCa
EW1iyFjaocbPO7yk39uxxs8bWNIf+hpfe0SJX7d9jf94WEn/qWel16l+1cva
tsZ/PLSk/zyX6xNtYthYvhR+oU0PYy9jT2xv/GQT78mezd7thSZek56UZx3q
4U+7mjOw24/WInveybv9ZC98Q02ttIZZy66vqWVqZrXzjfDiTWqqtfXamtqr
BlYLX1dT6635au9hNdpejavWtUbPBP/dpnZbw319766231Sj/dXkavOhNdpY
Da2WvhVetUnPYO8wHN6kicZV695Vo4WsidbGO2u0r5pZ7Ty4phZZk+y9htRo
FXsae5vTanoZNYxa5qqaWDKm7EVuqdEeany1/jU12t+exN7k9hqtogZXi99R
o9XV6Gr122q0uZpeba+m8e9NUaJ1Svf62Uq03c01vYQ9kb3RxDXadMkSv06N
7/rknfZ3j+oVqzHcu8aQXoZ72Ngy5vQ+zGHGojnlhK7emGvMAXrjxvR+Xf0/
sas/6gX39JAuX7vX3dPndnpiy65+n9fpjf5dPTitq6/mc3Pm4K7+mktPr9GO
9pD2kuYcvXf3iLnInKlX7p4yl5pzrun0gbnIHKv3b0419x7JeLlJb21/Yr65
rtMX5hdzqt68e8xc6569pKtX7uV/u/pz/f/b78O6fOD+smYM7fKB+9+cfW2X
n8xn7vlLu/plLjijRiurkdXKw81RTTwU+6kzWZ+kiaZWW79ao4WtwdbiV2pq
sZpEbaJGVttuX6KdX67RKmoYtcxm3ev37bT2OzVa2xpuLX+t5t78pwHht2tq
uzXcWv5WzWf3O7AWv16jDf7TkPBLNffSe2rtfqNGS/ynIeCPanK3Od3c/jH8
cJOcbm6/t0abqdnUbvfUaDc1ndpuvG7/LlLS6zxfo73UTGqnXbrPc3RJr/Ai
fFYTzaX2erfmXnvPrR0f1vQS5nRz+wc199J7am5/ryb3q0HVou/DtzWpCdYG
a7RnKdZga/ebapSm01DurRovRQ9FL2W1nuiJx9v4Rav2RE881sYPubrGu9BT
0FtYpSf64tE2fs7ZNb2XPZm92Vk1WlpNbS+2Yk/0xINt/Ko1elIbrBH6T6v3
RP+MbONPrdSTWmXN0u9aoSf1/oE2/tbyPan397fpT86t6R3tGe0dL6/xavSA
9IIurPGKrBnWjgtqaoeaTO/p4hovSo9Jr+mcmt7TntLe8rIaL0mPS6/rvBqv
wZ7V3vWxkv3wLbw1fEWNV6FnpHd0JTxnEw9DL+PSGi2gJtDruqSmvuiJ6Y2p
4Tx7UpOp7W4s8eTfb+Ldqfk8q1LTqAX1GK0V1gz7J88sPLuwn/JsV0/T3x7o
t+h16oHr5+jv6L/Yn5nbzfH2Y3qc5n5rgN6nHqy/pdAT15vVg/W3G3rmerOe
mXh2omc6Wc09HNnVf71H7/ETXX33/evH6CV+xviyJsaMNWNQL86YMraMQb1D
PV5/a6Gnr/d7KuObJmcUX9WcH3zM/BMfq4lhY9mYGtR9f+qLF7vnD4M/anIG
or+pJ+bZsDGlV6Zn7G859Pz1kj0D8Kxc/8uzAc8w/O2FZ3iebehp299u1aQf
9QxEP0z/y35XT9f+Vk9Xr1e/TK2gZtAfs5+19ptDzCWe4ejnLd3ET/OMwrP2
fk3OLjxz8Lcx+m2eReiZ651v2+QsyTMaz7700D278QzE39Z4BuPZiGcU/vbE
MwzPLjzT8Lc5nol41uGZjL+18QzHsxrPRDz798zQsxLPkDxr0zP3bMkzHn8r
4BmnZz+eOflbof5NzqKs+Z7V6aGrBdSH5lpzrnpPj93f3ngmpPfunnfvqw/V
i9YcvTz32PCuJ1KPj2iiL91zU7fZQ+5F+2X7R/tN+zN7BnO1OdteQj2q/tQ/
0f+wB7Hfs9+0N/HM0bNHPfkFanKOucccptfuGaRnkZ5RzleT08xt5iy9eXOS
ucmcpZdiT+dZ84NNej37Z/0K+3v7Zf3L60ti2Fj+P0wzt9s=
          "]], Polygon3DBox[CompressedData["
1:eJwt12e0VNUVAOD3ZgaQqiIlUiRKSwA1SlG69IiUSM2iaaiGaqiGJh2jtEiN
QSCCSoxiIlWlGCk2iqGJgBgRcNEVxCAg5Nvrvh97nbO/s+/MffeeMu/O7oPa
DExlZWVtE7nEhnRWViPwdSYrq4z+z0VF/cfYzOysrPlqmrH7xX2irLFWxmZo
q8mrinL6raNeu0PeQX+Ea8e5tp68hLg9wnhDYxO1v5LfK+7Sb8mma4uKevoD
XTvMtUVjXNwpShlrYmxKJrnHuNeS+o3ZZG0l+S/D9ZuzZ7Wr47v1a/u8xj7v
on6puE78zHgD+QRtefEb/XHqnlH3oPHi7CH2JBvBirON6eT7jmWSe4p7+1A8
ygarG6WupjxtvALrwLqx6/p38NJxP5nkeU/S7pJ31h+tbpK6hvKF4qT8uvw2
8b7xF9kpliWKaDazRey0PCWKsi3sU9ZFO4ZNZo3k88RReX6Rj71jfD77Wl4w
nL3LKrif32qfYVPFPPl/1HVlY+VT1DWWrxS3sWqsDjutvy2dzImzmWQ+xLxY
Jr6P+xWl1W03/m46eeZfZZL5EPPiLVGYVVVXW90p/U3p5F0fV1c25pdYKi6q
KSxKqfvE+BJ2Vp5bFI85zf7GvpMXEiXYR2xrOpljZzLJHI65vFicUZMRxdRt
Nf4SuyC/RZRkH7P16WTOHs0k7++OnPuJ+yrNmhqbGu9bXj7G9ZvFc9RWkVeO
NaX/CHtOe4/87pjT+i3YtDAxXP8V3/uyWB7rQzzFlsvfdC/dYr2wEexVtoJ1
ZYVYddaLDWAFWcFYm6wn688KsFvYA6wPG8RuZjezGqw3G8gKsSpsEFvMXmXt
2R7RPdYtm8aayyupe4ItYItZK/aRaMOGsNGslvxj0ZYNZWNYbfn76WSNnswk
zyee0yeiHRumbqy6OrGejfeJ+RrzUSyR/zudPN9v9Cvq/0JsTifP91Qmebbx
jLeL9my46572eXXjXRiPzW8Re4V1YOtiHbNG7BF2Rb9AzGNtD9aP5VOzJZ28
r9OZZN+K/eumeHesm7pesZ+yvDHOHmO9WW6WO+YC68J6sDTLE/fKurKeLBN/
C3uczWILWFNWhNVlA9hQVoStjfnDGrLm7Ef9jaKQ/mvaf4jWrism6usPUjfc
WDHXzRVfynOJm9g647niPWg7s07xvOSZeL6so/wxdTf087P7td1ZX5bfZ93K
arG+7PdivLywqM36yQerKxx7BqvD+rMhsbexfDHP2eOsD8sTa4M9GWs71gHr
yN5LJ+vsRCZZY7HW1sS6Yg3UPazusv4H6eQcOhdrQr+GeFlcijUu7lC3w/jf
2bXYl0QFto+9wE7Ib8tOnmM8z5h/vVPJfhj74sVMsk92ZE/J/yi+lR937fNs
pXy9a0fKj4nn2OtsFRsce5U4J88be7FY49psUU5dO3kXdVf1L8ac0dZg9dgX
+hdYLm11Vpcd0f8vGx3nQ+wbrEfs6+LZmANsJftD/F3ihdh/2WY2Pp6N752U
Svab2Hfix8BXfAJbKn8d9ZXvEz3jjGUzWAv5XtEjzjA2nT2S87edl5eJ5yy6
+/z9rFec2fKZ6lrGmRBznz3A6rMvU8n+NyyVrPFY65dj3orZbJV8dTwz93fU
tRPZMvkbru0nf1jdS2wz2xLvT90lXoDdLb9HbFTzLfsp597iHt9m77D71LWJ
ee/z8soPigHx+yb2HNZOfkD0i72azWFt4rNi/2ctWTv2vf41VkrbIvYSMdJ3
/BB7NKsnb6LuuP71OCe0rVh7dkn/BisT65Z1YD/oH2KDtbPZQtZJflgMYXPY
i6yz/AsxlM1li1gX+f9if2f1WVN2IpWs1ZqpZI3HWj8oP6JuJPurfKm636WT
v6MkqxNzTWzNJM+0YCrJw4ey79gN/XtFDdfuN/4Z6xtnHZvNHpV/Lvqz6Wwu
axt7kBjFFrJlrLv8R1GUNWEt2Rn98/G3yCvG97Cdsb7ZD7F24/2yXank/V7P
ed/x3vu7v8uxfxprLG+h7qz+FVZM25S1Yudy9r9KqeSdxbvbKd+prhMbJZ+o
rkE6NmnnPmsbz096TT8Ve5K2PevKfor3Fe9Eni1yszXsNZatvYtVYp/r/yv2
T+39rBY7qf9ndkj+U/J1WatYLZ1p8Vsk5jgbqqY2m842xPthQ1gdNiPOguzk
9/0wVpfNZJvYB2w4q8meYevYJjaQXRXFWTPWmp2P3yPxTuQlRFm2O357sCvy
kqIc28OWx/XyUqI82xvrlt0e984asQsxZ9kReVrkYWvZX9hx+a2iYPw/wt6O
s1/bnLVlKfmD7nkqWxvrmQ1gK+K8ZZVYVXZU/58sv7YKq86OxV7IUtqyrDI7
GPsyS2vLsSrskP4bLKMtH3OIHdZ/M84pbWVWjX0de5d7maJdwzaw/jn76eRU
slfFnrUizkoxlq2IvV5dzzjH2CK2k+1nk1gztpjtYp+xyezXbAn7lB1gU1hD
Nj/OuZijbAxrxZazA+xLNp01YPPYNraDjWaN2AL2IdvFxrLGbCHbzvayCawJ
e5HtYPvYRHZGfCMvHnsne8/4Q+rmarey7WyUmgVx7slvFgXYeuOzYk+VX43f
PWJl7I+ufUW7n3/BnjNQlT0dz5utZb1ZPTaLvcc+ZCNiv2Zj4l3FucB6seps
fKyn2NfZE6wlezX2I3aETWPV2LiYI2wd65NOzpk5qeTsiDPkrfitLl5m++SH
1T2rrjlbxvayQ+xPOWfPUraH7Y73Ln8+9mj9G8mRmrXa+G7WTfs0n8qayP8P
xn/P/w==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkrh3EcwPHHfV9JKSJ/ABsZGGVgkgxsZGCgZGA0iM3GX8BKYlds7vu+
ktyL+4zXtwzv3+tTv289n2/PU9La3dAVE0XRoF4V5kddaDo2irI5x2Kusown
rOYD6/nNFqbFRVEnC1iofnMlh1nLMTZxgu2cZS8XeMsrvmtTz7rXooW2uMRt
LnOHK9wNO3GPa9znOg+4wU0dmrd4xG0ec4cn3OUp93jGSfe44YfO9RLuqBG7
bXCA8+zhDNs4zkaOsoZDrGC5+sz57GAKm/npGXW8YxWPWBruxSJeO3fJN2Xp
KZxVnh0zmcsM5jA9nGEaM5ga3gFTmMwkJZsTwsw4JoZ3zAT+Kl4/4T99yRrR
lJ/b/+/hD8CvSus=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 999, 473, 689, 1104, 912, 691, 1105, 913, 692, 1106, 
       914, 693, 1107, 915, 694, 1108, 916, 695, 1109, 917, 696, 1110, 481, 
       697, 1111, 918, 698, 1112, 919, 699, 1113, 920, 700, 1114, 921, 701, 
       1115, 922, 702, 1103, 1116, 923, 1000}], 
      Line3DBox[{704, 1004, 1205, 703, 488, 705, 1117, 924, 706, 1118, 925, 
       707, 1119, 926, 708, 1120, 927, 709, 1121, 928, 710, 1122, 1005, 1206, 
       711, 496, 712, 1123, 929, 713, 1124, 930, 714, 1125, 931, 715, 1126, 
       932, 716, 1127, 933, 717}], 
      Line3DBox[{719, 1006, 1207, 718, 1007, 1208, 720, 504, 721, 1128, 934, 
       722, 1129, 935, 723, 1130, 936, 724, 1131, 937, 725, 1132, 1008, 1209, 
       726, 1009, 1210, 727, 512, 728, 1133, 938, 729, 1134, 939, 730, 1135, 
       940, 731, 1136, 941, 732}], 
      Line3DBox[{734, 1010, 1211, 733, 1011, 1212, 735, 1012, 1213, 736, 520, 
       737, 1137, 942, 738, 1138, 943, 739, 1139, 944, 740, 1140, 1013, 1214, 
       741, 1014, 1215, 742, 1015, 1216, 743, 528, 744, 1141, 945, 745, 1142, 
       946, 746, 1143, 947, 747}], 
      Line3DBox[{749, 1016, 1217, 748, 1017, 1218, 750, 1018, 1219, 751, 1019,
        1220, 752, 536, 753, 1144, 948, 754, 1145, 949, 755, 1146, 1020, 1221,
        756, 1021, 1222, 757, 1022, 1223, 758, 1023, 1224, 759, 1147, 950, 
       760, 1148, 951, 761, 1149, 952, 762}], 
      Line3DBox[{764, 1024, 1225, 763, 1025, 1226, 765, 1026, 1227, 766, 1027,
        1228, 767, 1028, 1229, 768, 552, 769, 1150, 953, 770, 1151, 1029, 
       1230, 771, 1030, 1231, 772, 1031, 1232, 773, 1032, 1233, 774, 1033, 
       1234, 775, 1034, 1235, 776, 1152, 954, 777}], 
      Line3DBox[{779, 1035, 1236, 778, 1036, 1237, 780, 1037, 1238, 781, 1038,
        1239, 782, 1039, 1240, 783, 1040, 1241, 784, 568, 785, 1153, 1041, 
       1242, 786, 1042, 1243, 787, 1043, 1244, 788, 1044, 1245, 789, 1045, 
       1246, 790, 1046, 1247, 791, 1047, 1248, 792}], 
      Line3DBox[{796, 1154, 955, 794, 1155, 956, 798, 1156, 957, 800, 1157, 
       958, 802, 1158, 959, 804, 1159, 960, 806, 1160, 961, 808, 1161, 585, 
       810, 1162, 962, 812, 1163, 963, 814, 1164, 964, 816, 1165, 965, 818, 
       1166, 966, 820, 1167, 967, 822}], 
      Line3DBox[{821, 1262, 1060, 819, 1261, 1059, 817, 1260, 1058, 815, 1259,
        1057, 813, 1258, 1056, 811, 1257, 1055, 809, 1256, 584, 807, 1255, 
       1054, 805, 1254, 1053, 803, 1253, 1052, 801, 1252, 1051, 799, 1251, 
       1050, 797, 1250, 1049, 793, 1249, 1048, 795}], 
      Line3DBox[{824, 1061, 1263, 823, 1168, 968, 825, 1169, 969, 826, 1170, 
       970, 827, 1171, 971, 828, 1172, 972, 829, 1173, 973, 830, 1174, 1062, 
       1264, 831, 601, 832, 1175, 974, 833, 1176, 975, 834, 1177, 976, 835, 
       1178, 977, 836, 1179, 978, 837}], 
      Line3DBox[{839, 1063, 1265, 838, 1064, 1266, 840, 609, 841, 1180, 979, 
       842, 1181, 980, 843, 1182, 981, 844, 1183, 982, 845, 1184, 1065, 1267, 
       846, 1066, 1268, 847, 617, 848, 1185, 983, 849, 1186, 984, 850, 1187, 
       985, 851, 1188, 986, 852}], 
      Line3DBox[{854, 1067, 1269, 853, 1068, 1270, 855, 1069, 1271, 856, 625, 
       857, 1189, 987, 858, 1190, 988, 859, 1191, 989, 860, 1192, 1070, 1272, 
       861, 1071, 1273, 862, 1072, 1274, 863, 633, 864, 1193, 990, 865, 1194, 
       991, 866, 1195, 992, 867}], 
      Line3DBox[{869, 1073, 1275, 868, 1074, 1276, 870, 1075, 1277, 871, 1076,
        1278, 872, 1077, 1279, 873, 1196, 993, 874, 1197, 994, 875, 1198, 
       1078, 1280, 876, 1079, 1281, 877, 1080, 1282, 878, 1081, 1283, 879, 
       649, 880, 1199, 995, 881, 1200, 996, 882}], 
      Line3DBox[{884, 1082, 1284, 883, 1083, 1285, 885, 1084, 1286, 886, 1085,
        1287, 887, 1086, 1288, 888, 657, 889, 1201, 997, 890, 1202, 1087, 
       1289, 891, 1088, 1290, 892, 1089, 1291, 893, 1090, 1292, 894, 1091, 
       1293, 895, 665, 896, 1203, 998, 897}], 
      Line3DBox[{911, 1003, 685, 910, 1304, 1102, 909, 1303, 1101, 908, 1302, 
       1100, 907, 1301, 1099, 906, 1300, 1098, 905, 1299, 1097, 1204, 904, 
       673, 903, 1298, 1096, 902, 1297, 1095, 901, 1296, 1094, 900, 1295, 
       1093, 899, 1294, 1092, 898, 684, 1001, 1002}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1104, 252, 488, 280, 1208, 503, 295, 1212, 518, 
       310, 1218, 533, 325, 1226, 548, 340, 1237, 563, 355, 1250, 578, 1155, 
       370, 593, 1168, 385, 1266, 608, 400, 1270, 623, 415, 1276, 638, 430, 
       1285, 653, 445, 1294, 668, 460}], 
      Line3DBox[{253, 475, 1105, 254, 489, 1117, 281, 504, 296, 1213, 519, 
       311, 1219, 534, 326, 1227, 549, 341, 1238, 564, 356, 1251, 579, 1156, 
       371, 594, 1169, 386, 609, 401, 1271, 624, 416, 1277, 639, 431, 1286, 
       654, 446, 1295, 669, 461}], 
      Line3DBox[{255, 476, 1106, 256, 490, 1118, 282, 505, 1128, 297, 520, 
       312, 1220, 535, 327, 1228, 550, 342, 1239, 565, 357, 1252, 580, 1157, 
       372, 595, 1170, 387, 610, 1180, 402, 625, 417, 1278, 640, 432, 1287, 
       655, 447, 1296, 670, 462}], 
      Line3DBox[{257, 477, 1107, 258, 491, 1119, 283, 506, 1129, 298, 521, 
       1137, 313, 536, 328, 1229, 551, 343, 1240, 566, 358, 1253, 581, 1158, 
       373, 596, 1171, 388, 611, 1181, 403, 626, 1189, 418, 1279, 641, 433, 
       1288, 656, 448, 1297, 671, 463}], 
      Line3DBox[{259, 478, 1108, 260, 492, 1120, 284, 507, 1130, 299, 522, 
       1138, 314, 537, 1144, 329, 552, 344, 1241, 567, 359, 1254, 582, 1159, 
       374, 597, 1172, 389, 612, 1182, 404, 627, 1190, 419, 642, 1196, 434, 
       657, 449, 1298, 672, 464}], 
      Line3DBox[{261, 479, 1109, 262, 493, 1121, 285, 508, 1131, 300, 523, 
       1139, 315, 538, 1145, 330, 553, 1150, 345, 568, 360, 1255, 583, 1160, 
       375, 598, 1173, 390, 613, 1183, 405, 628, 1191, 420, 643, 1197, 435, 
       658, 1201, 450, 673, 465}], 
      Line3DBox[{263, 480, 1110, 265, 494, 1122, 286, 509, 1132, 301, 524, 
       1140, 316, 539, 1146, 331, 554, 1151, 346, 569, 1153, 361, 584, 1161, 
       376, 599, 1174, 391, 614, 1184, 406, 629, 1192, 421, 644, 1198, 436, 
       659, 1202, 451, 674, 1204, 466}], 
      Line3DBox[{267, 482, 1111, 268, 496, 288, 1210, 511, 303, 1215, 526, 
       318, 1222, 541, 333, 1231, 556, 348, 1243, 571, 363, 1257, 586, 1162, 
       378, 601, 393, 1268, 616, 408, 1273, 631, 423, 1281, 646, 438, 1290, 
       661, 453, 1300, 676, 468}], 
      Line3DBox[{269, 483, 1112, 270, 497, 1123, 289, 512, 304, 1216, 527, 
       319, 1223, 542, 334, 1232, 557, 349, 1244, 572, 364, 1258, 587, 1163, 
       379, 602, 1175, 394, 617, 409, 1274, 632, 424, 1282, 647, 439, 1291, 
       662, 454, 1301, 677, 469}], 
      Line3DBox[{271, 484, 1113, 272, 498, 1124, 290, 513, 1133, 305, 528, 
       320, 1224, 543, 335, 1233, 558, 350, 1245, 573, 365, 1259, 588, 1164, 
       380, 603, 1176, 395, 618, 1185, 410, 633, 425, 1283, 648, 440, 1292, 
       663, 455, 1302, 678, 470}], 
      Line3DBox[{273, 485, 1114, 274, 499, 1125, 291, 514, 1134, 306, 529, 
       1141, 321, 544, 1147, 336, 1234, 559, 351, 1246, 574, 366, 1260, 589, 
       1165, 381, 604, 1177, 396, 619, 1186, 411, 634, 1193, 426, 649, 441, 
       1293, 664, 456, 1303, 679, 471}], 
      Line3DBox[{275, 486, 1115, 276, 500, 1126, 292, 515, 1135, 307, 530, 
       1142, 322, 545, 1148, 337, 1235, 560, 352, 1247, 575, 367, 1261, 590, 
       1166, 382, 605, 1178, 397, 620, 1187, 412, 635, 1194, 427, 650, 1199, 
       442, 665, 457, 1304, 680, 472}], 
      Line3DBox[{277, 682, 683, 1116, 278, 501, 1127, 293, 516, 1136, 308, 
       531, 1143, 323, 546, 1149, 338, 561, 1152, 353, 1248, 576, 368, 1262, 
       591, 1167, 383, 606, 1179, 398, 621, 1188, 413, 636, 1195, 428, 651, 
       1200, 443, 666, 1203, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 444, 652, 1284, 429, 637, 1275, 414, 622, 
       1269, 399, 607, 1265, 384, 592, 1263, 369, 1154, 577, 1249, 354, 562, 
       1236, 339, 547, 1225, 324, 532, 1217, 309, 517, 1211, 294, 502, 1207, 
       279, 487, 1205, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1299, 452, 660, 1289, 437, 645, 1280, 422, 630, 
       1272, 407, 615, 1267, 392, 600, 1264, 377, 585, 1256, 362, 570, 1242, 
       347, 555, 1230, 332, 540, 1221, 317, 525, 1214, 302, 510, 1209, 287, 
       495, 1206, 266, 481, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
0DNr0cQCtDPIza28g4b+F617p6Q=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{358.7228227499175, 117.0596863562714},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.1, 0.1}, {-0.1, 0.1}, {0., 0.035202384566783006`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.110543049366851, -2.6447339294755596`, -0.03147187712937459},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6184254950263586`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"curious", "/.", 
      RowBox[{
       RowBox[{
        RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", 
       "uu$Shock"}]}], ")"}], "/.", 
    RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//.", 
   "lucaSubs"}], "/.", 
  RowBox[{"eqvdIf", "\[Rule]", "If"}]}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
  3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
  3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
  3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
  3.6184194199840984`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.099917043107081`*^-6"}], ",", "0", ",", "0", ",", "0", 
     ",", 
     RowBox[{"-", "1.3877787807814457`*^-17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.099917043107081`*^-6"}], ",", "0", ",", "0", ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.099917043107081`*^-6"}], ",", "0", ",", "0", ",", "0", 
     ",", "2.7755575615628914`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.099917043107081`*^-6"}], ",", "0", ",", "0", ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.099917043107081`*^-6", ",", "0", ",", "0", ",", "0", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.099917043107081`*^-6", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2.099917043107081`*^-6", ",", "0", ",", "0", ",", "0", ",", 
     "4.163336342344337`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.099917043107081`*^-6", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6184188656785555`*^9, 3.6184188922488213`*^9}, 
   3.618418927239171*^9, {3.618419011360012*^9, 3.6184190419703183`*^9}, {
   3.6184190966708655`*^9, 3.618419121541114*^9}, 3.6184191779616785`*^9, 
   3.618419214822047*^9, 3.618419315843057*^9, 3.6184194206641054`*^9, 
   3.6184194944798517`*^9, 3.618420664793667*^9, 3.6184218887060957`*^9, 
   3.6184219241984544`*^9, 3.61842224543569*^9, 3.618422439637648*^9, 
   3.6184245654164057`*^9, {3.6184246449680214`*^9, 3.6184246696272817`*^9}, 
   3.6184247116207633`*^9, 3.61842485402534*^9, 3.6184249421624603`*^9, 
   3.6184249997781363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], ",", 
     RowBox[{"ru", "\[Rule]", "0.00001131370849898476`"}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", "6.872318237675474`*^-6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], ",", 
     RowBox[{"ru", "\[Rule]", "0.00001131370849898476`"}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", "6.872318237675474`*^-6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], ",", 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.00001131370849898476`"}]}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", "6.872318237675474`*^-6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], ",", 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.00001131370849898476`"}]}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", "6.872318237675474`*^-6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], ",", 
     RowBox[{"ru", "\[Rule]", "0.00001131370849898476`"}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "6.872318237675474`*^-6"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], ",", 
     RowBox[{"ru", "\[Rule]", "0.00001131370849898476`"}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "6.872318237675474`*^-6"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], ",", 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.00001131370849898476`"}]}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "6.872318237675474`*^-6"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], ",", 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.00001131370849898476`"}]}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "6.872318237675474`*^-6"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6184256188916078`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ha", "/.", 
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.2048751977844185`*^-17"}], ",", "7.497942032642137`*^-18", 
   ",", "2.4442804650451073`*^-17", ",", "0.`", ",", 
   RowBox[{"-", "3.2048751977844185`*^-17"}], ",", "7.497942032642137`*^-18", 
   ",", "2.4442804650451073`*^-17", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.6184255903413224`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6183076627046423`*^9, 3.618307663824665*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys1$1$1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "/.", 
     RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618244590034284*^9, 3.6182446683943024`*^9}, {
  3.61824470267503*^9, 3.6182447434050303`*^9}, {3.6182447773787804`*^9, 
  3.6182447775625305`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHlcTd33+KMiIaFMRSRllnmINoVCkZlkSJmLnkxpoKJENGlOadY8z9Op
2zzXbdCsSUKIDCXxe146a52f830+/rkvb9u5677vvvvsvc7ae87pK/vOjOTh
4RHn5+Hh/fd1TrNq7O/fHyl4XZ0s5dHZW0rOXotyS9B9h3xZn/kj3oICEjJ2
sqluYxfy+UvaTCSfZZMPvtfPSu1oR65QdrvFvCeNnPlznUbkKxTksjLdY+j2
XOQqOh+Vhuy9ac5BvjnyRJHYdlOKh/4DvCd71pKx8UEU3Z4A5/vAjVUKS6A5
F/mYTdbdfHcyKToe5BN4l3x/9TyXbt+OfGphGX9+RRFFf17ks2z1RIIGyina
D3KHhQ/st9rj50HuPL5hWvy8Gvw84PUsUVzb0pGPnuHVRrFya0dLNnoGfsY2
w78ilkLPwCNdGqiG4ET0DPwbeR9fSCLRM3Bxn511qYe90DPwzY3741JHHEfP
wBVsLj4fGPRGz8Br5N2SPt+PQs/AH6wx8ey2T0LPwGe5yG75qJqJnoH3O/iu
fLsvBz0Dr7YRkX51uAA9A494aDmtVaMEPQPfqmhs8V62Aj2DP5dczaoXtVnY
Dni1DPlh8S4dPcOrQU6KqsaCJPQMfKbmGp8V52LQM/B7g1pvJu4MRs/AfS8k
zDax9kDPwDv1nqQcHatPwDNw2WgdxQoLB/QMXEWCMpTL90fPwHn6Oi7kz4tC
z8DVD52f8ul1PHoGHp/cw5kRkoqegVvZJK2VTMhEz8DXZP4Yv9YlGz0D7/i0
sXOXQR56Bk82LjwvfZ8komfkBY0Xt02Pw/+PfCDh22uvKPQMrzMOSvGL7ghB
z8CnJDaIqx/wQ8/Al66QvCBPuaJn4Id6Zi63D7VAz8Azl0pmXvA8j56BN5q5
CMwdskPPwFvSF9a7dnmhZ4z3Z8uB0ecD0TPwz+7zN3E0wtEzcEPxZIeM+THo
Gfm75lHifvHoGXnKSKNbM5PRM/hoUTJaurgvED0Dd+D2Joyx8UfPwBWOnyWv
5/vidYH3lCfaPrj/DD3Dq8orX++t6e7oGXjcj8fRvz87oWfg04RvcVLm26Nn
4P07CwLfpVlBe3wf03cb7bPVbsP1kc825waf3HMW/o7cm1tdlj/yFHoGXjE5
w+/mQiP0jPG8FIjKXXAfPQNfrD49X+akHXoGnrN1aYLOAidWf+ZSrV+DhWuF
tKm/+zOX4jFT4J+8/DirP3MpPblvD788M2D1Zy6l9k51IXfgHqs/c6mmpNkT
Qvwes/ozl9qYPTCQKf2E1Z+51KiFWj1hRi6s/sylKuxKWlwrcJzB65UOup/n
TPImf/dnLrUislxz3SZf8nd/5lJup/mORZzzJ3/3Zy71U3T9ASmHQPJ3f+ZS
pwt1Vd3Tgsjf/ZlLFRj7bhd+HUL+7s9caqnsC2I5MZz87ZlDuVva9Y66Hszy
zKHMQ55a9qf4Un975lDVT/eurx7hSv3tmUNtLKwquixmQf3tmUOZPv1wddHK
cyzPHCrb+oyCubodyzOH+qKoOuVZmSfLM4eadHvG1+M+ASzPHGqhutBJnWNh
LM//zl/EzLTTH0azPHOopWOM3HJex7E8c6gN36+VFW9NYnnmUEqvLvNW+aSy
PHOo/VXn1zX8ymB55lBRp6ITepdkoWf4HD1rxm62q05Cz8At46K5acti0TPw
zdpRRVzRUPQMvDPjx8vDrs/QM3DviwsOigiaM78T+o9jkK/ofXFrjA94b4SY
d4GwL3qGP2mxZYZX1MPRM/CtTZkLx+6LQ894/zwxw7XlWzJ6Bi7cdpU/xgPn
S8hTos8mK3jj/ZX5nvUn64Xp56JnnG+uypSesq0APQM/8FWn+c7UYnZ/JttF
X9/dfZPD7s+keLLo6aER6ez+TMYOHUs7LhrP7s/EuWTbEuO9Iez+TGTln2ff
6nWkWP2ZeK83DBxzz4Ldn8nrVOH4LRsC2P2ZxF7bYpr5IIbdn4m+9Y95p26k
sPszmV5Z/+rO8ix2fya3NBKSymVy2f2Z1L12sJaYVcjuz2Td1SsnroiUsvsz
Ufkd4HrSooLdn8nPrSLm9025LM9cImJb8PrAvQL2+Eys1qf1z7qYzfLMJf35
Jydzn6WxPHNJk7jS6rOXYlie/71Oh0bEF11vlmcuOeXkd3naizvs8Zm0FPAX
pWgFscdnYmUrprjjbAJ7fCZqM93t1FUz2eMzadYPvGN3Lpc9PpOLBTGX88yK
2OMz+TaTOv7To5w9PhNO8hnp6ce47PGZWHW+m7mqu5o9PpPdE/RF91x/QVjz
DdIpELLrmH0ZxZpvkIVvdDeT/QUUa75B9AqXr54ryszDgOvuf7dfKCKRYs03
yDeZLsMwrUD0DNw0cZ/dzMBr7PkGqan50bLycSh7vkGOh3zl5yqkoGfg3V/W
CFmczMbPCdxH5Op0H89C9nyDqK+KlEpvLEfPwAVDvrr0jKsirPkGeZ38xPPH
olrCmm+Q7MLlfgK76glrvkG868uDplxsYvXndqKelftCdg+X1Z/bSamrhNXJ
jaWs/txOXkfEnjrekMvqz+3k1wNb/YTeNFZ/bifaOleUtI+GsfpzO9kcy6u9
7e1p9vyZlLR/7AtLiGDPn8mK3PICdYkMVn9uJ3dKqqwj/8lj9ed//SWQ2Oiq
UlZ/bifSFQff17tzWf25nUzLHTuicVctqz+3k3EpWSJNP+tZ/fnfcT3y5vzm
8GZWf24nA5VTZl2JbCWs9SBRuJ0wJu5gDcVaD5J1/t2vqUmV6Bm4huPqRy7P
CtEzcOVWN+XI6VnoGfjFIz/H2MhEo2e8z2ztzTFPl8N5BvD2m/p8k3uj2OtB
wtdbnftpKBM9A5/qrzem4W4hegYuuthSuo2vEj0DnzXqgHKNUg16AT6/dc7F
wof1+Hd4XZHy0Tq9tJmw1oNkVlFL7RGBNsJaD5K5ibmvuQs6CCu/QRbIPZdb
q1HH5DtoLmicNVbtfhV6Bs69lZhYqV2KnoE7DL47zJuajZ6B+//Y3HtBMg49
AzfNIaKB9RfQM3CNXz025fdi0DPwy0NbZNb0MPc/4BFG4+/zOZegZ+DfjXWu
vpGoQs/Ap27c51fx5QV6Br52cG1VYmET+gK+uNnGbE95K/4dXtPSzKZnr0ef
yFWeXote4/8KPcO/T+p30U05zeR9gDftd1/WOliDnoH7Rz79xO9UgZ6B10+R
P3dYIw89A294alG7bWYiesZ5UGZvd+lMA/SM17l3bvqjf9f7OH8CLhhpZdiQ
g56Bb98fwrcsqBw9Y/vSfZmfNtSgZ+DC+mq/in0a0DPwuWNlZu3na0XPwOWb
523KTGS+D+DqkVIaSy6hT3y9bjbXyH1WN8mZf0e6MeE9Ba91Yz+ef+uF80Dk
u3+uvKD5tgja4/9bESVQ7mRRiV6A685ftGdvKJdiXZ8UZUrfslJ7QbGuT7zc
nlUbvKynWNcnN31tz/e6vcK/w/ucn+b/riOnC98PrreytmryNY1idntK5Ony
GuPGKorVnvTPc9utGlnHjp+0Cak4n2/rIp/Nu3R0Gz9Q8Nr+avvs4NXFwPHf
7VsnKFqqVFGs9mR6i4mCuVo9xWpPSrjn6+NfMPlW+H+Z6otH+umWYDv49+pq
/u+uptXYDuLls53WwjumAf8O/29hQaLVCNPXhNWeilUyPhwWWEJY7Skej5Gr
7nZXUax4yIsCMZ/pPg0UKx7yoURrJfXPa2IypzPt928mrzvmroSf+ckcUn/G
MO/379dMntLrQZb6G4ZD++C8QSGZxkyyOkS44vfvDmyvPTGt2ukMw6G9o0jU
V+fwFCL5p91LbL9RoLncJzsRObSv9Thf+tI/ljT8eV+m351ovNuzzCAcObRf
sV1h5951wUTqT7tybO+g4qG/juuMHNpfDj7bl6vqTGT+cArbEznf180uD+l1
oGsa8Dd0Ph/a43jW1ZSgfuAmtsd8NZ2XFhtuj/3B1Hih3oTT8cihfcqdge/n
xkdSs4bjxPbjXXJ3uF3IQA7tPdZtlbpkm0C9GPaA7UuORNnbJ2Ujh/ZHoq1V
JF3TKYlhz9h+UpfJ7UMbC5BDe0GnCyk6ahxq1fD3iO2PXt11SSyzBDm0v7j3
8e6C6lyqbrifYPs9puMW9/pUIIf2ReOj2+ceLaSMh/sh83vaftWX28FFDu3n
F1XfuNNcQkG/hfsGiStfVuyXgf0T+J7mxqQut2Tsh8BPjereMtIuDvsb8LYT
3U5y4yKxXwHnjeYJ0u/3x/6Dee9RK67tL3TC/oP5ieCFltPF1Qn0B+CL6fw5
fO/Ar43ymhB9yA+/X+D74iyGbl0Mx+8R+NTohOtzqFj8voCPsgrp4S9Mwu8F
+LcTXlpvuenoH3jfjB265y5noWfgl0ZlBx3ty0bPcB++fPrUdHurOPQMfPeS
zP13TKLRM3CNXiLe2BmGnoFPt/xtl1gWiJ6B14lR/I5J3ugZuKzW0JfWrYxn
4OozB9JWLjdHz8DD6Pw5eAYevUrQs/uODXoG3vSB/4ycjgd6Bh6umb1pS4kf
egb+sZi3ULs9GD0DX7Fm6wGr/kj0DHy9GufjwdGx6Bn4UYvT8ecmJaBnmNfI
zWnnj2jwR8/AnX8oNy/j+KJn4H1VkXHRwd7oGbin+pJp5yQ90TPwA+MH8y5+
ckXPwIUyC65fznREz8Bz9Z2l9G3t0DPwH3T+HDwDPx+lxdenbkrAM/Djh3/e
f9NxhYBnzKsv0ZxuRxaiZ+CP5B1z3zv9g56B1ycvtfi42Aw947z7wBOZbpsH
6Bn47e+D2nr9dqz+zKUux16ZLXf/AKs/cyn/6keuAruusfozl1rTcnvVnBQz
Vn/mUiL7EsUzdj9g9Wcu9aP9pnn4P3as/vzvulbc8dugnCOrP3OplkNRF3eO
cmX1Zy5VTufP/+7PXCqzqHvfa/dn5O/+zKWOmJt3uMf4kL/7M5fa98xuJsfF
j/zdn7nUzjSvw2+MA8jf/ZlLKdSH2Quffk7+7s9cSu5bSvFapWDyd3/mUqsm
F/KfXBxK/vbMofikG/dvcPCj/vbMoVof7rrceMKD+tszhzr/JOvCvRW21N+e
OdTOrVGNSp6Xqb89c6i77dzvmfl3WJ45VOmtkzcfJD5heeZQ/RuKoiRNnrE8
c6iJdP78b88cKrCl3H7hvVCWZw7l9UzBxSg2iuWZQ73Z4/mq7d95y9+eOdRK
nv6Vys4JLM8c6nbUPvOI+8kszxyq8FR4hcitNJZnDiUyUUDC6CKFnmEdw+3U
2Hy4MxY9A78677jZxu5w9Ax8ixmPedFof/QMfFaKEn/0bkf0DHzz2rJK7+Qt
FHgGHlq7sH/KSsYzcKsJ+kZDt/zQM/AUOn8OnoF/CxVN1/OMRc/AhX9lpwU/
TkLPwBeo6ae1m6SjZ+Cz9wq3jF+bhZ6BLzF8fXxhZDZ6Br7BL6N5u0weegau
VOJ0XOtZAbs/E981JYfsf6ez+zNJVSgKsBBOZPdnUr274MutOVHs/kwa4h/d
b9L2ZfdnsmjdXGcRMXOK1Z/Jg5XfDPwjHNj9mTiOuON1YfVzdn8mMXT+nNWf
idt5xeUlBsns/kw2R0h+ercyk92fyaogv8J/QrPZ/ZnM95Xy/S6Zz+7PRPxp
gKGJexG7P5MJztL7eSeVsfszGVFQ5ZSTU8HyzCXrczwTzozPYXnmkozPrwTf
L6ZYnrlE4LhdkBBJYHnmEn+b649O+YawPHOJXp6jrdJje5ZnLrlglzWwfCHb
M5f49Fln1fSGsMdnYknnz1njM9k4758AmQMUe3wmt4538PLOyWGPz+TAfKHV
n10K2OMzWda37mybUCl7fCb8L6N3dXMq2OMzubpVqfPkLy57fCatwU3GL9bX
ENZ8g8zRrckaKVZIseYb5EQlz7oQ/2yKNd8gGy4d0fDTSKNY8w2SsDJS+fOV
aIo13yAFvVOr+ca7U6z5BlF+/8iQCrBnzzdI+CvXzi1hEez5BjlG589Z8w3S
q1f+KMuFw55vkJhx/lNmCBWw5xvkWpCBt/69UsKabxAxX2mnMyaVhDXfIEMf
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
/H8k9iC2
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
          "]], Polygon3DBox[CompressedData["
1:eJwtmmXAVUUXRs/MXEJUBBQBG7uxO7C7sBMURQUVW0ARA7sAC7EbMLFFxQ7s
7kDF7tbP+tZyz495z6w758Z7zszez37m9NxrcJ+DctM0e/KnxbF9aZqdOS4L
H8MLd8L7O56Cl4QPgjdg/Bx4DfhYeHv4Ynh5+Ah4C/h8uB1tY3gd3v8C/QUZ
3w/uzfjp8Ky0XeFtGX+H/lKMD4Y3ZHwUvBx8OLw5fB68P3wDfAJ8K7wCfCS8
JXwBPBttN3g7Pu9d+qszPlxmfBzchbYjvDXjb9OfXL9vAHw8fB98MLwvfAK8
BHwgvD7vPxu+p/LejI+AF4cPgNdj/Cy4E217fw/jb9LvTNsB3gp+i/699frt
Ax8Hd6Xt7vWD36M/O20PeAf4ffqrcv7RcB8+fyzcjdYX3pHxD+ivyPhRfj7j
F8JP1P/38BS/9+76+/rDx8Krwcd4vTn/IngW2nbeL8bfoN+BtqXXH36Z/g+c
ty7cg+NR8Dscl4RbHA+Gl67XayN4NPw3vDK8DO9/HN4aHgMPZPw6+Cl4BHxk
ivs7FT4BHgaPgbeBz4UHcf718NPwifDRjJ8LbwufDx/I+AT4GXgkfEyK+bEZ
fJb3h/Fr4Js5fg5/QbuF/nOMn0z/2BTzpQ98HnwAY+Ph5+FT4BEprufvvL4J
3JPjUPhzjqvCnTkeDr/FcXE4czwIfqX+v6fz/kvhL3l9dXhWjkfCL9XfNzLF
fPyD1zeF5+c4DH6b4xJw4TgYfq3+vjM5/3L4BfgM53+K+fAifCZ8Yor7+Wq9
fmfAl8Fv8jmLwYnjgfCGzhF4CuOd2rCO4cfhB+BZ4A85bzl4Bo6HMLYsn3cY
vFmO6/8PvCa8Iuc/Ab8Mnw2flGL9f8F5q8FdOB4B/8v4WvBKjD8JP1njxREp
4sef8Irw0vCj8Cb1/9uL918F/wWvBPdi/DG4LW0j4wf8PP03GL8APhu+Em7R
NoDXgp+l38b/GV4bfs4AR1ubw8rwU/TX4/0nwbvzfVfAm9br2R++Gl6zztcd
4Evgdet82y3H/Ui03vAqfN5U+uvU+bprjuv/Ecfl4Q4cD4ULbX14Tc5/hv6i
nD8IXpfxM+Fl4EPhTXOsh5c57yX/N68Hbf06f/fI8f8+W3//8BTx1vm6Ezxf
jng7A20L47WfQ38l2k3wdfC/xgNjPHwTXLj/q8C3wOPhBN/H58wIT4d3NR7R
boUnwJnxNY2J8K1wW3gNY45rDW4DT+L95pe34T6M3VHzzLvwdsZn2l3wzXCL
8ycz3gH+GN6Fsdth/sXmHXhb4yc8A/wRvLPfDbeHP4R3gtfyHHgS3I7PWw9+
EL4Hngl+lvPnhn+B9zN+wHPBP8P7Gs9pF8LnwD/RX5J2ETwa/sV8QBsLj4J/
Nl7w/l7wr/Bk4xU8J/wTPAC+H54J/gTezflDmwLfDc/I71kavgy+EP7N+UN7
AL4L7sD4ysYw+Hq4gXv7mXTvhGeAe8GXw2Ph372WfF9b+H14B+MDvAz8G3wf
/FmO9TNLjvj8aY710THH+lqQdhw8lPO/of9BjvXSluND8LQc870dx4ddfzni
/b+cPwX+JMf6mznHej6Om/cIPA6+Ez4Yvs34CN8GT8+xHmbi+Ah8COO3G7/g
2713HOeDP+Pz7zZ2wQvD38L3OHfzf5eleQ/eHl6Idip8HPwt/cVoo+DT4B/p
96QNhQ+Bv6Q/D21fuB/8Gf05aXsbD+Dp9OemDYD7wp/Sn4u2j+sP/oT+6zni
0z/wA/C8tIHGL/hz+u/liH9tOD5oPM8R7/5m/H54ftow+FD4K+MB7Rz4VPgH
4yXnLwJ/B98LL0w7DT4e/s54QbsCvgj+g/4KtAnwlfDf9Kfy/jngH+F9XHhc
334cFuH1V43POfTEwhxfMb7n0B8L5cj/f+bQUwtwfBH+O4deWTBHPOld8/cu
OfKd67EbPI3vuwv+NYf+mSdH/P2e49Zwtxzx8rccemzeHPH8hxLv71D/319y
6Km5c8TzP0rM50VTzL9fS1yf+er8+wp+DL4f7sjE+L3E+lwkxfzdE74aPprP
u9n1UuOv92s4PCNtK3ijFNejPW1zeP0U//8E3vcR/KUxj/53vL8T/f81MT/7
wVfRH8bYTfBMrfh/N05xvV/h9QXhP+FB8C6cfwl8GK/fAHdvxf3ZifFp9DvS
toU3h1+nvzPnX+x84fyJ8Hc5fu/sOfLZtzn0W9cc+fYzzn8ZfjrF+nuE12f1
98N9jTXwzPCn8O7wY3BX+Gt4T7hdifXRK4defpTjbPBXjPeDWyXWy5I59OPD
HLvAXzC+B/wU3AP+Ad4bfgmeH/4D3r/O7+7w93B/eHnaePgK+C/6y9Kugy+D
/0d/Odr18OXwn/Rf5v0LeP3hgXCbEutzqRz6u22J9bt0Dv09FL4PHgPfAf+c
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

          "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
bb0YtZca5G42DbRF7zGH/7zH/H/yyn7M
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{324.3001230691285, 246.64854722928058`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {-0.4279008932352336, 0.7537357716610545}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.749121097704934, -2.8225917913673264`, 1.709325352377115},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6182446726758947`*^9, {3.6182447036550303`*^9, 3.61824474405003*^9}, 
   3.61824477836378*^9, 3.618250311407996*^9, 3.6182519455796533`*^9, 
   3.6182536633392954`*^9, 3.6182537131612883`*^9, 3.6182539068763285`*^9, 
   3.618306650144392*^9, 3.6184152313378267`*^9, 3.6184194846397533`*^9, 
   3.6184206591136103`*^9, 3.6184215321445*^9, 3.618421632711515*^9, {
   3.6184246450680184`*^9, 3.618424669807276*^9}, 3.6184247135307446`*^9, 
   3.6184249423024592`*^9, 3.6184250018081365`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6183085301119905`*^9, 3.618308542792244*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pts", "=", 
  RowBox[{"gtChebNodes", "[", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6182453963022804`*^9, 3.61824543657728*^9}, {
  3.61824547099228*^9, 3.6182454732397804`*^9}, {3.6182505524229913`*^9, 
  3.6182505560351267`*^9}}],

Cell[BoxData[
 RowBox[{"gtChebNodes", "[", 
  InterpretationBox[
   RowBox[{"\[LeftGuillemet]", 
    RowBox[{"JavaObject", "[", 
     RowBox[{
     "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
      "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
    "\[RightGuillemet]"}],
   JLink`Objects`vm1`JavaObject21042422561636353], "]"}]], "Output",
 CellChangeTimes->{{3.61824541774603*^9, 3.61824543758978*^9}, 
   3.61824547507728*^9, 3.6182505566846776`*^9, {3.6182505908890667`*^9, 
   3.618250604771388*^9}, 3.6182519456734023`*^9, 3.6182536633792973`*^9, 
   3.61825371369131*^9, 3.618253906906329*^9, 3.6183066501743927`*^9, 
   3.6184152319462304`*^9, 3.6184194852097597`*^9, 3.618420659193611*^9, 
   3.6184215321845*^9, 3.6184216334315224`*^9, {3.6184246450980177`*^9, 
   3.618424669847275*^9}, 3.618424714160738*^9, 3.618424942392458*^9, 
   3.6184250024081364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "pts", "]"}]], "Input",
 CellChangeTimes->{{3.6182454958872805`*^9, 3.6182455043885303`*^9}, {
  3.6182456490672803`*^9, 3.6182456795347805`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPointPlot3D", "::", "arrayerr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(gtChebNodes[\\(\\(\\*InterpretationBox[\\(\
\[LeftGuillemet] \
\\(\\(JavaObject[gov.frb.ma.msu.ProjectionMethodToolsJava.\
WeightedStochasticBasis]\\)\\) \[RightGuillemet]\\), \
JLink`Objects`vm1`JavaObject21042422561636353]\\)\\)]\\)\[NoBreak] must be a \
valid array or a list of valid arrays. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPointPlot3D\\\", ButtonNote \
-> \\\"ListPointPlot3D::arrayerr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6184194856297636`*^9, 3.6184206595536146`*^9, 3.618421532534504*^9, 
   3.6184216337715254`*^9, {3.6184246452280135`*^9, 3.618424670037269*^9}, 
   3.6184247143907356`*^9, 3.6184249425724564`*^9, 3.6184250027381363`*^9}],

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"gtChebNodes", "[", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", 
      RowBox[{
      "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
       "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
     "\[RightGuillemet]"}],
    JLink`Objects`vm1`JavaObject21042422561636353], "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.61824550579603*^9, {3.6182456538685303`*^9, 3.6182456804760303`*^9}, {
   3.6182505909999657`*^9, 3.618250604912572*^9}, 3.618251945735902*^9, 
   3.618253663829315*^9, 3.6182537137913136`*^9, 3.618253906976329*^9, 
   3.6183066502343936`*^9, 3.6184152321022315`*^9, 3.618419485649764*^9, 
   3.6184206595536146`*^9, 3.618421532534504*^9, 3.6184216337815256`*^9, {
   3.6184246452380133`*^9, 3.618424670047269*^9}, 3.618424714400736*^9, 
   3.6184249425824566`*^9, 3.6184250027481365`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"old", "=", 
  RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6182389326933084`*^9, 3.6182389488603086`*^9}, 
   3.618250547020631*^9, {3.6182507685938053`*^9, 3.618250847602072*^9}, {
   3.6182509429467645`*^9, 3.618250943713531*^9}, 3.6182513489887605`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.4028184534788868`", "}"}], ",", 
      RowBox[{"{", "0.1800087905719783`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.009306596966628888`"}], "}"}], ",", 
      RowBox[{"{", "0.1093050963637722`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.009305096363772136`"}], "}"}], ",", 
      RowBox[{"{", "0.10930659696662895`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.08000879057197827`"}], "}"}], ",", 
      RowBox[{"{", "0.09718154652111335`", "}"}], ",", 
      RowBox[{"{", "0.4480216674033834`", "}"}], ",", 
      RowBox[{"{", "0.1738226821552334`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.003119934041640182`"}], "}"}], ",", 
      RowBox[{"{", "0.10981203509096644`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.003118531511191888`"}], "}"}], ",", 
      RowBox[{"{", "0.10981354373006029`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.08051569189796416`"}], "}"}], ",", 
      RowBox[{"{", "0.09883705727486357`", "}"}], ",", 
      RowBox[{"{", "3.3881317890172014`*^-21", "}"}], ",", 
      RowBox[{"{", "3.3881317890172014`*^-21", "}"}], ",", 
      RowBox[{"{", "1.6940658945086007`*^-21", "}"}], ",", 
      RowBox[{"{", "1.6940658945086007`*^-21", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", "0.045203213924496555`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.006186108416744907`"}], "}"}], ",", 
      RowBox[{"{", "0.006186662924988735`", "}"}], ",", 
      RowBox[{"{", "0.0005069387271942614`", "}"}], ",", 
      RowBox[{"{", "0.006186564852580242`", "}"}], ",", 
      RowBox[{"{", "0.0005069467634313527`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.0005069013259858504`"}], "}"}], ",", 
      RowBox[{"{", "0.0016555107537502619`", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.0053553390593273735`"}], "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.0053553390593273735`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.005355339059327387`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.017487373415291652`"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"-", "1.3877787807814457`*^-16"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
      RowBox[{"{", "2.7755575615628914`*^-17", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "1.6653345369377348`*^-16"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
      RowBox[{"{", "2.7755575615628914`*^-16", "}"}], ",", 
      RowBox[{"{", "1.3877787807814457`*^-16", "}"}], ",", 
      RowBox[{"{", "0.0059634112168296255`", "}"}], ",", 
      RowBox[{"{", "0.029890709938444254`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.001006432063285434`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.22153151813719646`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.0010062336094576324`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.22154097067055342`"}], "}"}], ",", 
      RowBox[{"{", "0.10556916340444385`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.06032708857426314`"}], "}"}], ",", 
      RowBox[{"{", "9.631272830049747`*^-17", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "2.4076064492756233`*^-17"}], "}"}], ",", 
      RowBox[{"{", "2.407775855865074`*^-17", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "1.2038371059557018`*^-16"}], "}"}], ",", 
      RowBox[{"{", "2.407775855865074`*^-17", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "1.7455824383606072`*^-16"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "2.347517931997403`*^-16"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "3.130023909329871`*^-16"}], "}"}], ",", 
      RowBox[{"{", "0.005963411216829691`", "}"}], ",", 
      RowBox[{"{", "0.029890709938444233`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.0010064320632854281`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.22153151813719654`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.0010062336094576233`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.22154097067055342`"}], "}"}], ",", 
      RowBox[{"{", "0.10556916340444387`", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.060327088574263193`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "5.551115123125783`*^-17"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.11465345151265084`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
      RowBox[{"{", "2.7755575615628914`*^-17", "}"}], ",", 
      RowBox[{"{", "0.`", "}"}], ",", 
      RowBox[{"{", "5.204170427930421`*^-17", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "0.07465345151265082`"}], "}"}], ",", 
      RowBox[{"{", "3.469446951953614`*^-18", "}"}]}], "}"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.618250777654171*^9, 3.618250803364328*^9}, {
   3.6182508366795588`*^9, 3.6182508555983534`*^9}, 3.618250945544382*^9, 
   3.6182513520160723`*^9, 3.618251945814027*^9, 3.6182536638993177`*^9, 
   3.6182537141213264`*^9, 3.618253907056329*^9, 3.6183066502843943`*^9, 
   3.618415232476634*^9, 3.6184194859297667`*^9, 3.6184206596336155`*^9, 
   3.618421532654505*^9, 3.6184216342515306`*^9, {3.6184246453380103`*^9, 
   3.6184246701572657`*^9}, 3.618424714770732*^9, 3.618424942632456*^9, 
   3.6184250030081367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "fVec", "]"}]], "Input",
 CellChangeTimes->{{3.6183075803729963`*^9, 3.6183075844530773`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.6183075852030926`*^9, 3.618415232695035*^9, 3.6184194861397686`*^9, 
   3.618420659693616*^9, 3.6184215327045054`*^9, 3.6184216342615304`*^9, {
   3.61842464534801*^9, 3.618424670177265*^9}, 3.61842471501073*^9, 
   3.6184249426524553`*^9, 3.6184250032081366`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"theSys", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheSystem", "[", "]"}], "]"}]}], ";", 
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theResWeights", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theBasis", "[", 
   RowBox[{"setAllWeights", "[", "theResWeights", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valDrv", "=", 
   RowBox[{"theSys", "[", 
    RowBox[{"updateValDrv", "[", "theBasis", "]"}], "]"}]}], ";", 
  RowBox[{"fVec", "=", 
   RowBox[{
    RowBox[{"valDrv", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", "fVec", "]"}]}], "Input",
 CellChangeTimes->{{3.6182538073343287`*^9, 3.618253827974329*^9}, {
  3.6182538589143286`*^9, 3.6182538597343287`*^9}, {3.6182539171363287`*^9, 
  3.618253957736329*^9}, {3.6182539925063286`*^9, 3.618254002416329*^9}, {
  3.6182540648363285`*^9, 3.6182541455980215`*^9}, {3.618306819017769*^9, 
  3.618306820857806*^9}, {3.6183069070795307`*^9, 3.6183069146596823`*^9}, {
  3.6183070298419857`*^9, 3.6183070428722463`*^9}, {3.6183070817230234`*^9, 
  3.6183072042654743`*^9}, {3.618307234616081*^9, 3.618307347318335*^9}, {
  3.618307422109831*^9, 3.6183074230598497`*^9}, {3.618307524621881*^9, 
  3.6183075507424035`*^9}}],

Cell[BoxData["7.178567125591105`*^-16"], "Output",
 CellChangeTimes->{
  3.618307353158452*^9, 3.6183074238398657`*^9, 3.618307551312415*^9, 
   3.6184152333346395`*^9, 3.6184194863897715`*^9, 3.618420659743616*^9, 
   3.618421532774506*^9, 3.618421634511533*^9, {3.6184246453980083`*^9, 
   3.6184246702172637`*^9}, 3.618424715300727*^9, 3.618424942712455*^9, 
   3.6184250034681363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polys", "=", 
  RowBox[{"CreatePolynomials", "[", "res1$1$1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6183085962733135`*^9, 3.6183086383041544`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
    RowBox[{"9.87674087497543`*^-6", " ", "ru"}], "+", 
    RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.00001600000000006069`", " ", "ru"}], "+", 
    RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"9.876740874935582`*^-6", " ", "ru"}], "+", 
    RowBox[{"0.000011998913786626925`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
    RowBox[{"4.938370437440609`*^-6", " ", "ru"}], "+", 
    RowBox[{"0.000013967820897187178`", " ", "qq", " ", "ru"}], "+", 
    RowBox[{"5.999456893298824`*^-6", " ", "uu$Shock"}], "+", 
    RowBox[{"0.00001696902661074695`", " ", "qq", " ", "uu$Shock"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6183086146636815`*^9, 3.6183086388341646`*^9}, 
   3.6184152334906406`*^9, 3.6184194864697723`*^9, 3.618420659783617*^9, 
   3.6184215328245068`*^9, 3.618421634631534*^9, {3.618424645458007*^9, 
   3.6184246702772617`*^9}, 3.618424715350726*^9, 3.6184249427524548`*^9, 
   3.6184250035181365`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repVars", "=", 
  RowBox[{"ReplaceVariables", "[", 
   RowBox[{"lucaMod", ",", "polys", ",", 
    RowBox[{"{", 
     RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6183085555224986`*^9, 3.6183085855931*^9}, {
  3.6183086765549192`*^9, 3.6183087180457487`*^9}, {3.618308760656601*^9, 
  3.618308764206672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"inmake\"\>", "\[InvisibleSpace]", "2", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"qq", ",", "ru"}], "}"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
      RowBox[{"9.87674087497543`*^-6", " ", "ru"}], "+", 
      RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00001600000000006069`", " ", "ru"}], "+", 
      RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}]}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"duh\"\>"}],
  SequenceForm[
  "inmake", 2, {$CellContext`qq, $CellContext`ru}, {
   0. + 0.26774226536389156` $CellContext`qq + 
    9.87674087497543*^-6 $CellContext`ru + 
    0.000011998913786692228` $CellContext`uu$Shock, 0. + 
    0.00001600000000006069 $CellContext`ru + 
    0.000019437851313342215` $CellContext`uu$Shock}, "duh"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.618424645468006*^9, 3.618424670297261*^9}, 
   3.6184247154107256`*^9, 3.6184249427724543`*^9, 3.6184250035581365`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"prep=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.26774226536389156`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
         RowBox[{"9.87674087497543`*^-6", " ", "ru"}], "+", 
         RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ")"}]}], 
      "+", 
      RowBox[{"9.87674087497543`*^-6", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.00001600000000006069`", " ", "ru"}], "+", 
         RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}]}], ")"}]}], 
      "+", 
      RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00001600000000006069`", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.00001600000000006069`", " ", "ru"}], "+", 
         RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}]}], ")"}]}], 
      "+", 
      RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}]}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"huh\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "[", 
      RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}], ",", 
     RowBox[{"ru", "[", 
      RowBox[{"1", "+", "ProjectionInterface`Private`t"}], "]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"luh\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}],
  SequenceForm[
  "prep=", {
   0. + 0.26774226536389156` (0. + 0.26774226536389156` $CellContext`qq + 
      9.87674087497543*^-6 $CellContext`ru + 
      0.000011998913786692228` $CellContext`uu$Shock) + 
    9.87674087497543*^-6 (0. + 0.00001600000000006069 $CellContext`ru + 
      0.000019437851313342215` $CellContext`uu$Shock) + 
    0.000011998913786692228` $CellContext`uu$Shock, 0. + 
    0.00001600000000006069 (0. + 0.00001600000000006069 $CellContext`ru + 
      0.000019437851313342215` $CellContext`uu$Shock) + 
    0.000019437851313342215` $CellContext`uu$Shock}, "huh", {
    $CellContext`qq[1 + ProjectionInterface`Private`t], 
    $CellContext`ru[1 + ProjectionInterface`Private`t]}, "luh", {2, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.618424645468006*^9, 3.618424670297261*^9}, 
   3.6184247154107256`*^9, 3.6184249427724543`*^9, 3.618425003568136*^9}],

Cell[BoxData["\<\"need modification to actually compute expected value\"\>"], \
"Print",
 CellChangeTimes->{{3.618424645468006*^9, 3.618424670297261*^9}, 
   3.6184247154107256`*^9, 3.6184249427724543`*^9, 3.6184250035781364`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.26774226536389156`", " ", "qq"}], "-", 
    RowBox[{"qq", " ", "rhop"}], "-", 
    RowBox[{"6.123259125085261`*^-6", " ", "ru"}], "+", 
    RowBox[{"sigmap", " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
       RowBox[{"9.876740874935582`*^-6", " ", "ru"}], "+", 
       RowBox[{"0.000011998913786626925`", " ", "uu$Shock"}]}], ")"}]}], "-", 
    RowBox[{"betap", " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.26774226536389156`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"9.87674087497543`*^-6", " ", "ru"}], "+", 
          RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ")"}]}], 
       "+", 
       RowBox[{"9.87674087497543`*^-6", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.00001600000000006069`", " ", "ru"}], "+", 
          RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}]}], ")"}]}], 
       "+", 
       RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ")"}]}], "+", 
    RowBox[{"betap", " ", "rhop", " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.26774226536389156`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
          RowBox[{"9.87674087497543`*^-6", " ", "ru"}], "+", 
          RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ")"}]}], 
       "+", 
       RowBox[{"9.87674087497543`*^-6", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.00001600000000006069`", " ", "ru"}], "+", 
          RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}]}], ")"}]}], 
       "+", 
       RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ")"}]}], "-", 
    RowBox[{"7.438937526649988`*^-6", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"9.876740874935582`*^-6", " ", "ru"}], "-", 
    RowBox[{"phip", " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.26774226536389156`", " ", "qq"}], "+", 
       RowBox[{"9.87674087497543`*^-6", " ", "ru"}], "+", 
       RowBox[{"0.000011998913786692228`", " ", "uu$Shock"}]}], ")"}]}], "+", 
    RowBox[{"0.000011998913786626925`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.00001600000000006069`", " ", "ru"}], "-", 
    RowBox[{"rho$ru", " ", "ru"}], "+", 
    RowBox[{"0.000019437851313342215`", " ", "uu$Shock"}], "-", 
    RowBox[{"adj", " ", 
     RowBox[{
      RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", "0.`", ",", 
   RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
    RowBox[{"4.938370437440609`*^-6", " ", "ru"}], "+", 
    RowBox[{"0.000013967820897187178`", " ", "qq", " ", "ru"}], "+", 
    RowBox[{"5.999456893298824`*^-6", " ", "uu$Shock"}], "+", 
    RowBox[{"0.00001696902661074695`", " ", "qq", " ", "uu$Shock"}], "-", 
    RowBox[{"eqvdIf", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
        RowBox[{"9.876740874935582`*^-6", " ", "ru"}], "+", 
        RowBox[{"0.000011998913786626925`", " ", "uu$Shock"}]}], 
       "\[GreaterEqual]", "rUnderBar"}], ",", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
       RowBox[{"9.876740874935582`*^-6", " ", "ru"}], "+", 
       RowBox[{"0.000011998913786626925`", " ", "uu$Shock"}]}], ",", 
      "rUnderBar"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.618308720405796*^9, 3.618308764846685*^9, 3.6184152336466413`*^9, 
   3.6184194865197725`*^9, 3.618420659833617*^9, 3.618421532874507*^9, 
   3.618421634651534*^9, {3.6184246454880056`*^9, 3.6184246703072615`*^9}, 
   3.6184247154207253`*^9, 3.6184249427924542`*^9, 3.6184250035881367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Variables", "[", 
   RowBox[{"PiecewiseExpand", " ", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"repVars", "//.", "lucaSubs"}], "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6183143428492537`*^9, 3.6183144278709536`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"qq", ",", "ru", ",", "uu$Shock", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.16215540392940786`", " ", "qq"}], "-", 
           RowBox[{"4.938370437494973`*^-6", " ", "ru"}], "+", 
           RowBox[{"0.000013967820897187178`", " ", "qq", " ", "ru"}], "-", 
           RowBox[{"5.999456893328101`*^-6", " ", "uu$Shock"}], "+", 
           RowBox[{"0.00001696902661074695`", " ", "qq", " ", "uu$Shock"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
            RowBox[{"9.876740874935582`*^-6", " ", "ru"}], "+", 
            RowBox[{"0.000011998913786626925`", " ", "uu$Shock"}]}], 
           "\[GreaterEqual]", "0.02`"}]},
         {
          RowBox[{"0.03733059286226402`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
           RowBox[{"4.938370437440609`*^-6", " ", "ru"}], "+", 
           RowBox[{"0.000013967820897187178`", " ", "qq", " ", "ru"}], "+", 
           RowBox[{"5.999456893298824`*^-6", " ", "uu$Shock"}], "+", 
           RowBox[{"0.00001696902661074695`", " ", "qq", " ", "uu$Shock"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{
    RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6183143495793877`*^9, 3.6183143839000745`*^9, 3.6183144286909704`*^9, 
   3.6184152336778417`*^9, 3.618419486579773*^9, 3.618420659903618*^9, 
   3.6184215329245076`*^9, 3.6184216346715345`*^9, {3.618424645508005*^9, 
   3.6184246703272605`*^9}, 3.618424715470725*^9, 3.618424942812454*^9, 
   3.6184250036381364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotPolynomials", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"PiecewiseExpand", "/@", 
       RowBox[{"repVars", "[", 
        RowBox[{"[", 
         RowBox[{"{", "5", "}"}], "]"}], "]"}]}], "//.", "lucaSubs"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", "0"}], ",", 
       RowBox[{"eqvdIf", "->", "If"}]}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], ",", 
    RowBox[{"{", "\"\<eq1\>\"", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618308794669283*^9, 3.618308854394481*^9}, {
  3.6183117879461546`*^9, 3.618311813766671*^9}, {3.6183120001603985`*^9, 
  3.618312029280981*^9}, {3.618312101752431*^9, 3.6183121281829596`*^9}, {
  3.6183122726158476`*^9, 3.61831227723594*^9}, {3.6183125169007335`*^9, 
  3.6183125640016756`*^9}, {3.6183126131126575`*^9, 3.618312677883953*^9}, {
  3.6183127469553347`*^9, 3.6183128014464245`*^9}, {3.6183128365771265`*^9, 
  3.618312845207299*^9}, {3.618312893638268*^9, 3.6183129419692345`*^9}, {
  3.6183130191707783`*^9, 3.6183131162827206`*^9}, {3.6183134169887347`*^9, 
  3.618313464189679*^9}, {3.618313543391263*^9, 3.6183135686517677`*^9}, {
  3.618313602312441*^9, 3.6183136096425877`*^9}, {3.6183136943742824`*^9, 
  3.6183137094245834`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, InsetBox[
    Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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

      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmXn4VlMXht/37H0QzROVSrNSEU2aZzTRgE8UDcYk0kCTSKGBRCSpVJJm
Q0UpIaFUZiJDGUpFVFJJvvv5nve6vj9W6/7tznvGvdd61trlevXvfFuSyWQe
4p+AfxFfCL8tm8k0hO+E+8IN4AHwLfB/4Enwg3A9+Hb4Rrgu3B++Aa4UPH5u
zGQuYPxWuDfjjeFBcD/4OvgpeBLcCB4I3wrXhvvBfeA68G3w9fC18FT4Efgy
+CF4FPw4/AG8Hi4MN4AvgIvADeHa8KnwBfA5cC34KrgzXA6+BG4BN4EHw7fB
BeH6cC34LPhiuDl8BtwcvhAuBF8Inw+XgFvADeDT4Npwdbgk3BJuCJ8H/wfu
BDeFh8D94bHwWngFPBheAs+Dh8BL4efhu+Bl8Hz4fLgv3Avej1WBy+LPZfxG
+Fr4sP6GK+OfZXwj/BZ8O/wCPAv+i2/0sd4n/i/dH1wFv0vPDJ+O78/x8+GZ
sCbK8/AM+CZ4FjwVHgW/Bi+DH4DfgFfC98CvwkvhB+F18KvwSHglvAQeA6+B
l8OPwO/Bb8APw+/Ca+Eb4Znwk/Ak+H14HTwCXgEvhifA78CvwxPhDfAa+Hee
rSD8EmPlsbZwS8bPhjvBl8DD4DnwdPg+eCE8B74XXgDPhofDc+Fn4COaN3AJ
/FGsPFwS/ydWGi6OP4SdCRfFD+W3s+Gn4YNYKbgw/m+sInwm/oDmClwQfzfH
PwtPg++Ap8GT4dHwIngu/Ci8Ss+V9dp9EV4Aj4dfhhfBfeHH4AlwP3gK/DB8
DKsAl8KPY/wleCH8FPwmvAoeAD8NPwZPhlfDL8MD4WfgKfA0+C14NXwnPB1+
HK4Kd4bbwscVC+DS+MD4OXBFeC9WFE7wP2F54UL4H7V+4AL4fVgxOOJ/xvLB
RfB7tLbhDP4XrXnwBJaH85+Pr8bYD1rzcD78KYzXgqvCu7OOb8ex/dhP2I/Y
dsYJVZl/sa+zjoX/YF/Bio9/63JAVXx5xv7QmofzZzP/O+BsXDmdA64OV9Lv
4GpwBbg+3BO+SnNScQTOi9+J5YFPw/+KFYdPxu/QfeuZ8N9gqa6P/xY7CQ74
77CT4RR/AqsL18T/i9WDz8WX5bpXwpfCp6eO3Q140BKp428jOD98id4RXBS+
FK4HF0sdZ+vDReCOcF24ANxW7xoOqeNmFfgkuIWeGS4Md4DrwAXhdoq/cCG4
veIjnMLN9U7hmDomng2fDLfUXIFLwjfAjeGz4EGKp/AJ7EKtaXw+xi+Gz4MP
YNXg4vgkdb6pDBeHr1S8hh+JzhPL+ch5GG8N12BsYnTcf5nxUxhvpW/J2Klw
G7gmfBp8UeK81j96nj3J8dnUOawSY4ew6vAZ+PqMT4evhidF56QVHH9G6nzW
UM8BPwNfA9eDp8Ld4Lrwk8pVcEN4JtwDbgDPgLvDR3P5tTS+DuNPKMdoLHVe
vAKuDU/RPICPRefXMvi/o/NrWfzx6Px9Fv5XrAJcCP8bVhEurMWRWhNUhP/A
qsDF8L9jleGi+IPYOfDp+P1YJbgI/jBWEy6J/ydaN5TD/4nVgEvgj0TntjPx
f0Xns1L4f6P1RwX87dExYirv8I7o2PEUPCA6RkyDi3JsB263lWIG3BpurLUF
Xwq3UVyBO8Kt4fxwG7gJXAC+CG4KV+dc98Hv4s/m2e/n/9pp3uKbMF6HYxoz
Ppu/r2P8PI67n/H38ecz/hjjl2s+45sxXk9rF24K19V6hC+DL8r6fV8Dd8n6
fXeHuyqf6BxwB7iMvifcUbkF7gq3V66M1iKvBL/vHoxfnvX7vgHukfW3ug6+
Muv3fT3cPetv1Ru+OutveC18Rdbztw98DXxPdM57nvOPis558+ER0XnuOfjG
6Fg5Cb4pOoY+Ct8SHb8egwdHx/2Z8M3RMXcyPCQ61s+CB0XH9xlw3+h49zh8
W3SsfAJuw7tdzP0dhgdG54Bn4H7RcXMKfGd0rJ8Od+LYoTzLAP5+IDoPLWF8
THRMXwTfHR2Xn4WHRsf32fr+0Xl6ATwyOsfPg4dH5/K58NjoWL8YHhady+fA
46N150uaF9F5YiF8b3QOfgF+MDpnLIUfis5Vy+Bx0fnsRbgRzztL34axZvib
OFVPft8FHg4PVL7D/4btxPZhv2M/Y0exP7Ad2F+5nFcA25tj5b4jueM/wQ5w
vTLSKsHx5kt4q3JT7jy7M449X+C3KA8Gn0PHL2A8P1ws63MfzF1L93XA6fp/
5/gzdz/iX3LnXMpvv8cvSfy7/bl7LKU5lHGOWJY4F7+QOKZ+Bn+Q9Vz4CN4I
Hwp+7oP4w7lrZ3PX1PX0HIdyz6v39DS//RS/iYP+5Dfrc78tEayxlcsUmz+H
N2f9HDqn3vfnibW3hMP+3PuVntiSWD//wzlGR2ugE/BnykXSGPA/jNWBa2R9
L/oGu7Bbo/P6EY7ZoDgq7QF/nzWfkvVzHM29O+lbfXPVa3dFa4hjjP2W9bXK
4LcqxsPHg+99T+b/v5EWOobN4ZivNQeyzj8fwu9lPe+2wR/m7nNXbl7NZXw7
/lPFBfg7+Iusz384d435uW/6Ze63h3JzbB7j3+r9KXbA38CfwesSa/Wj3Gfp
4JpRGqB4cF0jbZCXY1rBjTi+FNwFbqf4El1r5cVPiK7BouKH8rbmgOJQ4poo
0TtOXO8E5bhcTD4VnhqtX6Uffk6so05Wzkn8vVLlnMRa66Sc1ugFd5PuysVz
5cQk+N6UBw/m7jmf4mUuH+VXHszlIOXH43D7jHPu4VwOKqh5lcsdpyn25PJU
AfhELpcp58bgHKEc+ncu9ylfh+AcIR2SBucO5d+TgjWhcmvZ4FpbOmdfLq/l
0ftj/OqMc7G01Sj4LuXH4Dyi3P10tK6VBssbnLOkK/IF5yDpivzBOUW6okhw
TpFGqhDcK5Cmko67A76Z85cLrvelx4oG5ynpt2LBuUw6s3BwzpIOKRT8/qUN
5kRrM+nAc4J7F9KcNYJ7C9KctYJrfOnYC4JrcGnd+soBGWvdXzlHY601aZDg
foV0rPTjI/ADyqfB9yzNfGpw7pYGqxrcJ5E2XoZdkVhzNgl+h9Leqg9VJy7U
d1YOyFgHtgnuaUiTr0lcP0rbrE18vLTNm4lrT+W1CdhW+HqOHxlcX0s3Dg/u
J0gHjgiux6UhP4yu5aRJ3kpctypvSqdsgt/mvoYF1+PSiuPhLXAf+PXEdat0
1/rEdavy+NuJa0nl6xWJ6zXl+pWJaxnl7iHB/YGunGdQcO3fGR4c3B/oAg+F
X89Yry5PXBtKG7ycuL6TrliduEaW3p4YHKNu4PhViWsxaYNXEteG0h6vJa6z
pAcuD+4dNef4+4J7BdLkDwX3jnrBt3L84/BE3kMPeCx8T9bf8B54CHwz/Cg8
Dr4FngyPh6+HH4bHwj3hcfB9cFd4BDwIvhweCQ+G+8AT4TFwL3g8PBruDU+A
74evgu+Fh8JXw6Ph4XC3xLp0GPxJdH9H+lM69CvGP2b8weBv2pPxcfBmuDd8
f3BfRbXD6OA+ieqOscF9FWkM1RyaV+9ynu7wGHgkPCa4P6Ma5JrEWndE1jWH
5smGrOsMXesd+Mrg/l4LrQP4SbgZvD66j6A67uPENbv05EeJ63TpzI2Ja2fp
qE8S9+6kl7Yl7rlJs32VuNcn3fVp4p6bdFrl4O/1jp4pcc0uLVct+H1uwH+Z
uL8nPXYGdhf8hp4vcS0vHfh14v6htOKmxL0L6b2diXt90ma/JO4fSnvvSNwb
lH77IXHfT9pvd+L+oerKisFzYD3+QOI+yavwnsS9KdWkm+EaGevMPxL3qVZq
nibuLUhv74XbZVxLbocbZawhSwZr3XXScdgw+E38WcFa8S3F1+Be4qW8/x7B
fbw2cL/gfmNHuC+8GG6vdRHck+wA3xncc+sEdw/uy7WGOwb3hJtG1+j67XPM
gQ7BMbNJdB0/Q+uU8dXRa0Z1/TXB463gzonv+U6OGcj4cvgyxjdF979Ufx1N
3L9dxf9ng/sqr+OPJO6vvgaXD153b+OPMd4NXq11n7gfpVrjlGAtvQZ/Y3Bf
tG10nadY9Ar3kIfxm+G1ykXYPPgijukT3Au9WM8V3CO9BC6Vul+p560ZvGbf
C9bJivet+P8Gwet9C35KdA9az9IweO1v1TWD+3u78Y2DY8tH+EbBceND/C3B
fblf8G2D+3XbNPei61jpFunhRdIcXPfC4Li0Gf99TktJI/VW3GR8F/7zaO0o
DflEdM9U7+3u4B7yr1p30fpVmvaS4P7kl/h2wT3Ar/BXB/cqf8DfHtxX3KP3
H93f/BGeG9130nrcEN0n/Qnuij3H8d9rXUdrX+nht6P7jDpn++A+5Nf4O4L7
kHvxa6P7nt/C3YJ7uTu1ZqPrfGm2AToX4/sUk6J7wZo/P0f3CKQDrwru/e7A
fxbdE5cu/TG6vyBtUDs4R2zC18UegD/Atwjuu36qeBPcY9+Pbx6cLz7BtwzO
NZ8pzkT371QXqH+t3KRvti26L6864pvovoN0bK/gHu/PimPRvX5p+x3R/Q5p
1J7BfV29zy+i9wlUR+yK7jtIT34X3ZuQBv42ujchbXxdcD9Z32h7dD9RNc6a
6Jz3je4zOhduh2dH98cUb6dF769ovYwKrst+wz8Vvf+htfZo9D6KYtrj0fsr
WrOTo/dRFA93R+t76fnp0XWv4nOz4Pz7Mb5VcE/7c3xrzVf4C82L6L6iYuCM
6J6kYuDM6L6iYuBb0T1uzY1no3uAismzovt+ihsfR/e49e1+iu4ZSRuvi+6n
a35WSb3/objxWnT+1vx/P3r/QOu3eur9D8XbX6J7N6oFVkXrAM3hF6PzvZ6r
Zuo9DMXYGqn3NhQDF0fX/IoPlVPvryjmrIjWK3r2V6P1hOLAe9H7FlrXK6N1
idbpy9F6QvPznNR7Nor5L0T3eDWfF+VisWLUvug+suqRhdH9FMWQvdE9KdUj
S6K1juLSgugestbC0mjdo9j1UfQeg+bD89F9YPXKqqXeA1N+mR/dN97IeNXU
+0PKQW/k9Nl3jG+N3v9QLNoYvWejGLglev9D6/qlaJ2ktVYp9Z6TYnWX4H0c
neey4H0WzeHOwXtAihuv5PSN1mat1HtO0q6dgvdxNP/fjN6bUXxolrqOlb5q
mbrulS5tnrrWlX4+P1hH6bmapK63pc2apq6lpT+1H6deiPpa56XeD5M2/iB6
j0fxs3zqfUHl3HnRfXXllzNT78kp/74bvael+LA8WsNpjZRJvZ8nDVwx9f6Z
clnp1Ht70mZlU+8RSrOdm3ofTlq9Reo6X7XGc9H9f/VFK6Tem5R+UD9hZ8b9
mT3RvUvVuZuj95kUn8ul3uNUrv8v+mTDVg==
             "]], Polygon3DBox[CompressedData["
1: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
aPXS2gbruJU+PyvZY6BN6Mn0ZjQFWmHf3FrjcW2TgzV8z2iNPl+8NLN2R8Mv
CK5JaHvmIHPp+Nxzk5rA3BuQu1Ywh5hbx+WeW9wTxtKw3PeKOc7YOTH33Oce
MbeG57531ATG4pDctYLvxFgamvu7UvMeCPZw1EJqFnO9f+5athGfw2PSfjzz
JbkX0BPQ0mimjjouX2gpauyjwRqZ2ktNo1b1y13r0Oj0KnoW2h1N0knHFXNr
FTRIZ3Gl3NqklN4ziLEvvitZsx0krlBoOWoaz+6q3LUOjYXWqq3X3sitAdGC
dcRv0YPFA3R8lF77Scd7R+uJ9jr3t7h8tN7oIP5HXCG6Px8k/le8T3R/7ppb
z1SK7nedxejrX7U/gVqp/dfJc5K5iQfGS1SM7m+dcuvtKtH9sEtuvVQ5ul8e
nFufM8eZ68xxvBeaEe1IDaOW8Zuohb8VeheNhFY6Q1vZEq4xHXR+d6Ev3xe3
E/8j3phcY9uL/y30IDWA3jQ6d234RfvjxTW1/yq5x9Hr+oj3KmEP9Hywx8Ib
lYvWc+10/i+di9H+o1nu+52i/ccB4p/FJaL1YnPxL+KS0XqxhfjXol7TC74r
9DJjjrl0fe6xuC63nv1W5z9IrnHM7SuK2ocGR4tXyOz1GBP0kl8LPc74Qo+2
1Ou/FfVopHaNxD+I/9V+uLiB9t+Jy0brvTbiP8R7RevNtuI/xXm0n2oq/lG8
W/sR4obafy/+R/th9E7tvxX/pf1QcT3tvynq2UBxLe138ayj9XVr8e/Mn9xe
8hd6cHJP7MrQK3rlt9ofI66i/XbmKuNKvFHvP41nJago/lJ8sfgLbR2Daxi1
jPyitI4/02vn6NyX2rro+FB6KDUjdw70CWOMuSzeQ7xVfG7yPeZe7xRfJH4s
/++WZh+LTxc/KS4p/lR8FvU+/2/aZJvEZzJfxHXFf6Cpksc3c/d38bXJ45ne
yY+6KXmOdQv2b8y9d7TV0/Gf9GSde0lcRbwLzSZ+V1xf/Bc9WvyCuJL4K/El
4hfFlcVfiy+lnzDOxTvEF1L/xWXF28UX0KvFe4q3ic8X/5S7vuyn/U76nbYW
wXNse+57eJyOa+S+t1u1tQyeoztyPwO8atXcz4Zn2F7nu2V+tt9pO1bH+2i/
Q+d2aX+0uLL228SfazswuCZTm9FIfLZkbu3Ea9yrvXO/l2t00Pu7Z742PR/t
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

             "]], Polygon3DBox[CompressedData["
1:eJwt13fcV2MbAPDn+f2eX3sPaShaVIgWbZrSolK00NSmZbRoEJVdeanQtsor
FVJWKrQHUfZ4s/LatPhen/P8cX3u+/re131+45xz3+ec1W9Ul5GprKysT0VG
VMvJymoChmdnZY2Rl0xnZVUVVcT5xtoYW6ytLBrqD1F3g3hMfomIgy2SLze3
e8xljdkwNpqViGOxRmwou4kVZ8VYJdaZdWd/6F/Aa4v6xjrKV2ovFaP0H1e3
Qt1Vxs8VtURdY+2NLdeeLz9P1NPvwFZoy4Xr9zV3YPxe4y3YjewJtpL1YGVY
LdaL9WMptlVczopmks+KzzxbXTM2Ut04daVZTVFD1MlJ6pdp84vS+q3VdVT3
g35D1kN7F7tTPC//1bzNxl+VP2vsN3kFXke/HxtqrCC7mF3Bbmcz2cXxO+P3
i4uMdTb2tPY0UVO/p7prxCPxv4ur2Uz5feY2M2ejuIBdGXUsn/x0deey3qw/
S7Oy7DzWhw1gOaw0O5v1YNeyf/TzsVLaVqwD+1E/m2W09VlT9on+q+afo23H
urDs+N/EhaKB+k7GntJWF031R6gbq65UfF92GbuF3SyWyM8Rzdko+Xh1p8Xx
4zzFMY21M7ZUuyly/S7qeqrLLy/KK7JO7Cr2u35BVkbblnVmP+k3Y4O189ki
1tHcD0RfNoXdxVrLW6obF+efLRWb5Tv4lWy0fIK6hvKdogsbwyayRvJdoisb
yyaxxvL9ohebyKazFvI2jnlL3BdsNevLWrHxcQ+w51hv1p5NZy+yNeI9+W7e
jY2TT1bXRH5A9GaT2AzWUt5a7c1x/7BVrA+7jE1mq9g6NoC1Y1PYaraeDYr7
hd3OnmcvscHs3XRyL5fIJOc5zncndXex9eo2qRvBUiwPa8CasY/13+d9tJPj
nmGt5IXUlWft2eXiIfk+3pNNkE9Td2l8Jr+TrWMb2XDWgc1ga9mrbBjLy4qy
5qwN+0Y/zfJqL2LNY63U355O7rNSfkf9uF7Fe+nkmi2ZSe7FuCc7mzuTvWTu
a+aOZJ+Lm9iDsW6ya+RfiNHsIbaA9ZR/Jkawe9k81k1+pqgU64/jtop1K9a1
uDdj7dFvEeuvtrCooN/B3K7m/qqfhxWJa5i1Zl/rZ6JW25S1Yl/pH3asIdp7
2IPsCvm2dLK2Fssk62qsr0XMPYN1VNdN3W9xHDZIO4/NFRtir1B7VqzH+q2N
PRl7grhW/z41881ta7xArFmsDevEjupX4OVjTY21X74w7nFxg/4j6h5X18l4
RXFG7APGWsb+oD0kH6A/Q9296jrIPxZD2ay4VtiV8o9EfzadzWHt5Z+IYWw2
e5h1kX8pxrCH2ULWS/6pGM7mxO9lXeN7+Oy6rD8bxgqwtmwSe46tZQPZXnEN
u41NZZfIm6i7jt0f6zVrwz4U/dg0NptdLs9RV4g1YY3D5Qf59WyqfJa6dvI9
4io2nk1hTeXvpJM9sXgm2V9jn10fa37sS+paqPs59gPHnKPdyN5mY9T0YHPZ
22w7m8CuZvPYFraDTYzPZA+xt9ibYre8v1jGDsgPq7snzg9bHvc2+5jNSif7
Vo1Ucj/Hff1LTrJfdk8la32s+af57o+q/Ua/pChi7ibj3dU9rN0c6xy7Tc0C
cUR+Ip4/xBvGj7EfWV6RT7xv3kCxwtgH8k/UzVbzH/G1vLgozDYaL6+utvZa
NojliTWc3cs2sS1sHDslTsjPEBXFR2r+Zv/TLyMqqXvdnOv4Yu1etkfsy0nW
tXKp5NzGOT6S+8x1cSrZy2NPPyX/yfEeZRvkbzneHfKj8b3ZK/Hfs9tjP1F7
H3uNbWXj45piS9l+dojdHXsCu5+9zraxm2MtZY+wbWwXmxzXLZvPtrKdbFJc
e2wJ2xe/lc1kG0Rl1jLOJTsW9yb7Xp4Spdlmdqa5DbSD2EhWRM0rsW6wFrG2
s7/158b6Kc8fwV5mFc2tpx3AhrNCak6KP+Vni9psp/G/4n6VZ0Qesd+84+yn
OBeiurotudfG0dxzFufuFnX/xPnUP1/UV3cglVzjD6aSPTX21jquyRPq/ohj
Ra26Xbnn98lUch/E/dBU3UJ138Y5jGds8WYqHqh8Tnxf0UD6fuwHsWbJs+M7
s3WxfrL/ywuJsmxb7APsB3lO3Bvs7dgH2HfZ8WBln9K8FWsm+0peNObHs2as
1bH/yAuKAuwV9gA7JD+ZfK2sF2NNirWSHY/nQbEm1sJYK1k67iW2PpVc9yfl
54lzYw+O/4kd1v8n9z1jbZxrvlJ7MDt5/5ijZn6ss3GvxfdhG3LP22e592nc
r8Nj7xBPGNstP6juTjV92eNsF/uAzWArxF/xP4nKbI/xpexXeQlRgb3HlrHf
4n+Kc862s6fYMXl5UZXti+cWn1FV2431Zsf1V6r7W15OVGF745mH5dPWiOuC
fa7/RjrZn/Nkkr0q9qzXxCXsenVD1J0uL+4zqrCurBc7of9fnl9bk9VlX8Q9
mk72xEwm2f/jOaBUPC/HOqiur7pTcd2lkz0xbyZ5dohniC3p5Hm4SCZ5X4n3
ludEilUxt5a5H+k/y7K1lVlN9qH+M3HytWexGroH9VextLZqnHN2SH917FPa
anEtsMOxb6STd8gCPreafvV08swwMJW8B8X7UDljy/nvcS3HfWjujthL0skz
T75M8jwRzxVPi+NxHkU1dftj7U8nzxn5M8l7a7y/xvtCW1aQFRKFxVf8Vvao
uYvNvS73+8T3qp1bH+8Vj6WT7xDf5Rn2c+wd4gH9F9gGY7fKX4xzx+qwRuxb
/SPsDu3imMuGyNeIYuxC1pAd0V/HSmrrxXrPvtdfy0po67LG7Lv4z32fi7SD
2ShWVE0ftojtjH2MTY89S9zGHmNL2PXy3uoWsh3sAJvGFoufY/+M/529Y7yX
ugXa7bFGsqmxz4oJbAFbyvrFPiYmsoVsGesfa5qYGv8be5YNlVdyvPpsIBvB
CrOXRFnWiLVkv8R/yQpoa7F67Ev9kuZWi7WW9WEnU8m71dhU8nwZz5lnOpdX
sNmp5N053qHHOtbLca2zS1k79lcqeW4qmErWpVifPpP/oG5WXOuxjqsbHWt4
3A/sXbaX/Rl7lrgnrn+2ht0U66u4mz3NXmA3ypeIX+TFYu1g76aSd7BpqeRd
MN4Jz/Gd/wUtV/22
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRmEcwPHjfr8lpYj8AWxkYJSBSTKwkYGBkoHRIDYbfwEriV2xufO6
35Pktrhf4/OU4Xs+T+/79J7fc85b1t7b1BMXRdGwXhXWj7rUbHwU5XKBpVxn
BU9Zywc28pttzEiIom4WsViD1tUcZT0n2MIpdnKe/VziC6/5rm09617LBopx
hTtc5S7XuBdm4j43eMBNbukw/A6PGOMxd3jCXZ5yj2fc5zmnneOGH7oIM4Uz
asxsWxziIvs4xw5OspnjrOMIq1ipAetCdjGNrfx0jwbesYbHLA/nYkl49vZd
8U05egp7VWDGbOYzi3nMDHuYwSymh3fAtHA/pjKZSUqxTmByeMfhM/4qUT/h
O33JGNGMy+3//+EP18NLAA==
          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{690, 1008, 473, 689, 1127, 912, 691, 1128, 913, 692, 1129,
           914, 693, 1130, 915, 694, 1131, 916, 695, 1132, 1016, 1236, 696, 
          1133, 917, 697, 1134, 918, 698, 1135, 919, 699, 1136, 920, 700, 
          1137, 921, 701, 1138, 922, 702, 1348, 1009, 923, 1010}], 
         Line3DBox[{704, 1017, 1237, 703, 1139, 924, 705, 1140, 925, 706, 
          1141, 926, 707, 1142, 927, 708, 1143, 928, 709, 1144, 1018, 1238, 
          710, 1019, 1239, 711, 1145, 929, 712, 1146, 930, 713, 1147, 931, 
          714, 1148, 932, 715, 1149, 933, 716, 1150, 934, 717}], 
         Line3DBox[{719, 1020, 1240, 718, 1021, 1241, 720, 1151, 935, 721, 
          1152, 936, 722, 1153, 937, 723, 1154, 938, 724, 1155, 1022, 1242, 
          725, 1023, 1243, 726, 1024, 1244, 727, 1156, 939, 728, 1157, 940, 
          729, 1158, 941, 730, 1159, 942, 731, 1160, 943, 732}], 
         Line3DBox[{734, 1025, 1245, 733, 1026, 1246, 735, 1027, 1247, 736, 
          1161, 944, 737, 1162, 945, 738, 1163, 946, 739, 1164, 1028, 1248, 
          740, 1029, 1249, 741, 1030, 1250, 742, 1031, 1251, 743, 1165, 947, 
          744, 1166, 948, 745, 1167, 949, 746, 1168, 950, 747}], 
         Line3DBox[{749, 1032, 1252, 748, 1033, 1253, 750, 1034, 1254, 751, 
          1035, 1255, 752, 1169, 951, 753, 1170, 952, 754, 1171, 1036, 1256, 
          755, 1037, 1257, 756, 1038, 1258, 757, 1039, 1259, 758, 1040, 1260, 
          759, 1172, 953, 760, 1173, 954, 761, 1174, 955, 762}], 
         Line3DBox[{764, 1041, 1261, 763, 1042, 1262, 765, 1043, 1263, 766, 
          1044, 1264, 767, 1045, 1265, 768, 1175, 956, 769, 1176, 1046, 1266, 
          770, 1047, 1267, 771, 1048, 1268, 772, 1049, 1269, 773, 1050, 1270, 
          774, 1051, 1271, 775, 1177, 957, 776, 1178, 958, 777}], 
         Line3DBox[{779, 1052, 1272, 778, 1053, 1273, 780, 1054, 1274, 781, 
          1055, 1275, 782, 1056, 1276, 783, 1057, 1277, 784, 1179, 1058, 1278,
           785, 1059, 1279, 786, 1060, 1280, 787, 1061, 1281, 788, 1062, 1282,
           789, 1063, 1283, 790, 1064, 1284, 791, 1180, 959, 792}], 
         Line3DBox[{796, 1181, 960, 794, 1182, 961, 798, 1183, 962, 800, 1184,
           963, 802, 1185, 964, 804, 1186, 965, 806, 1187, 1072, 1293, 808, 
          1188, 966, 810, 1189, 967, 812, 1190, 968, 814, 1191, 969, 816, 
          1192, 970, 818, 1193, 971, 820, 1194, 972, 822}], 
         Line3DBox[{821, 1300, 1079, 819, 1299, 1078, 817, 1298, 1077, 815, 
          1297, 1076, 813, 1296, 1075, 811, 1295, 1074, 809, 1294, 1073, 807, 
          1292, 1291, 1071, 805, 1290, 1070, 803, 1289, 1069, 801, 1288, 1068,
           799, 1287, 1067, 797, 1286, 1066, 793, 1285, 1065, 795}], 
         Line3DBox[{824, 1080, 1301, 823, 1195, 973, 825, 1196, 974, 826, 
          1197, 975, 827, 1198, 976, 828, 1199, 977, 829, 1200, 1081, 1302, 
          830, 1082, 1303, 831, 1201, 978, 832, 1202, 979, 833, 1203, 980, 
          834, 1204, 981, 835, 1205, 982, 836, 1206, 983, 837}], 
         Line3DBox[{839, 1083, 1304, 838, 1084, 1305, 840, 1207, 984, 841, 
          1208, 985, 842, 1209, 986, 843, 1210, 987, 844, 1211, 1085, 1306, 
          845, 1086, 1307, 846, 1087, 1308, 847, 1212, 988, 848, 1213, 989, 
          849, 1214, 990, 850, 1215, 991, 851, 1216, 992, 852}], 
         Line3DBox[{854, 1088, 1309, 853, 1089, 1310, 855, 1090, 1311, 856, 
          1217, 993, 857, 1218, 994, 858, 1219, 995, 859, 1220, 1091, 1312, 
          860, 1092, 1313, 861, 1093, 1314, 862, 1094, 1315, 863, 1221, 996, 
          864, 1222, 997, 865, 1223, 998, 866, 1224, 999, 867}], 
         Line3DBox[{869, 1095, 1316, 868, 1096, 1317, 870, 1097, 1318, 871, 
          1098, 1319, 872, 1225, 1000, 873, 1226, 1001, 874, 1227, 1099, 1320,
           875, 1100, 1321, 876, 1101, 1322, 877, 1102, 1323, 878, 1103, 1324,
           879, 1228, 1002, 880, 1229, 1003, 881, 1230, 1004, 882}], 
         Line3DBox[{884, 1104, 1325, 883, 1105, 1326, 885, 1106, 1327, 886, 
          1107, 1328, 887, 1108, 1329, 888, 1231, 1005, 889, 1232, 1109, 1330,
           890, 1110, 1331, 891, 1111, 1332, 892, 1112, 1333, 893, 1113, 1334,
           894, 1114, 1335, 895, 1233, 1006, 896, 1234, 1007, 897}], 
         Line3DBox[{911, 1015, 1014, 1350, 910, 1347, 1126, 909, 1346, 1125, 
          908, 1345, 1124, 907, 1344, 1123, 906, 1343, 1122, 905, 1342, 1121, 
          904, 1341, 1120, 1235, 903, 1340, 1119, 902, 1339, 1118, 901, 1338, 
          1117, 900, 1337, 1116, 899, 1336, 1115, 898, 1349, 1012, 1011, 
          1013}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{251, 474, 1127, 252, 488, 1139, 280, 1241, 503, 295, 1246,
           518, 310, 1253, 533, 325, 1262, 548, 340, 1273, 563, 355, 1286, 
          578, 1182, 370, 593, 1195, 385, 1305, 608, 400, 1310, 623, 415, 
          1317, 638, 430, 1326, 653, 445, 1336, 668, 460}], 
         Line3DBox[{253, 475, 1128, 254, 489, 1140, 281, 504, 1151, 296, 1247,
           519, 311, 1254, 534, 326, 1263, 549, 341, 1274, 564, 356, 1287, 
          579, 1183, 371, 594, 1196, 386, 609, 1207, 401, 1311, 624, 416, 
          1318, 639, 431, 1327, 654, 446, 1337, 669, 461}], 
         Line3DBox[{255, 476, 1129, 256, 490, 1141, 282, 505, 1152, 297, 520, 
          1161, 312, 1255, 535, 327, 1264, 550, 342, 1275, 565, 357, 1288, 
          580, 1184, 372, 595, 1197, 387, 610, 1208, 402, 625, 1217, 417, 
          1319, 640, 432, 1328, 655, 447, 1338, 670, 462}], 
         Line3DBox[{257, 477, 1130, 258, 491, 1142, 283, 506, 1153, 298, 521, 
          1162, 313, 536, 1169, 328, 1265, 551, 343, 1276, 566, 358, 1289, 
          581, 1185, 373, 596, 1198, 388, 611, 1209, 403, 626, 1218, 418, 641,
           1225, 433, 1329, 656, 448, 1339, 671, 463}], 
         Line3DBox[{259, 478, 1131, 260, 492, 1143, 284, 507, 1154, 299, 522, 
          1163, 314, 537, 1170, 329, 552, 1175, 344, 1277, 567, 359, 1290, 
          582, 1186, 374, 597, 1199, 389, 612, 1210, 404, 627, 1219, 419, 642,
           1226, 434, 657, 1231, 449, 1340, 672, 464}], 
         Line3DBox[{261, 479, 1132, 263, 493, 1144, 285, 508, 1155, 300, 523, 
          1164, 315, 538, 1171, 330, 553, 1176, 345, 568, 1179, 360, 1291, 
          583, 1187, 375, 598, 1200, 390, 613, 1211, 405, 628, 1220, 420, 643,
           1227, 435, 658, 1232, 450, 673, 1235, 465}], 
         Line3DBox[{265, 481, 1133, 266, 1239, 495, 287, 1243, 510, 302, 1249,
           525, 317, 1257, 540, 332, 1267, 555, 347, 1279, 570, 362, 1294, 
          585, 1188, 377, 1303, 600, 392, 1307, 615, 407, 1313, 630, 422, 
          1321, 645, 437, 1331, 660, 452, 1342, 675, 467}], 
         Line3DBox[{267, 482, 1134, 268, 496, 1145, 288, 1244, 511, 303, 1250,
           526, 318, 1258, 541, 333, 1268, 556, 348, 1280, 571, 363, 1295, 
          586, 1189, 378, 601, 1201, 393, 1308, 616, 408, 1314, 631, 423, 
          1322, 646, 438, 1332, 661, 453, 1343, 676, 468}], 
         Line3DBox[{269, 483, 1135, 270, 497, 1146, 289, 512, 1156, 304, 1251,
           527, 319, 1259, 542, 334, 1269, 557, 349, 1281, 572, 364, 1296, 
          587, 1190, 379, 602, 1202, 394, 617, 1212, 409, 1315, 632, 424, 
          1323, 647, 439, 1333, 662, 454, 1344, 677, 469}], 
         Line3DBox[{271, 484, 1136, 272, 498, 1147, 290, 513, 1157, 305, 528, 
          1165, 320, 1260, 543, 335, 1270, 558, 350, 1282, 573, 365, 1297, 
          588, 1191, 380, 603, 1203, 395, 618, 1213, 410, 633, 1221, 425, 
          1324, 648, 440, 1334, 663, 455, 1345, 678, 470}], 
         Line3DBox[{273, 485, 1137, 274, 499, 1148, 291, 514, 1158, 306, 529, 
          1166, 321, 544, 1172, 336, 1271, 559, 351, 1283, 574, 366, 1298, 
          589, 1192, 381, 604, 1204, 396, 619, 1214, 411, 634, 1222, 426, 649,
           1228, 441, 1335, 664, 456, 1346, 679, 471}], 
         Line3DBox[{275, 486, 1138, 276, 500, 1149, 292, 515, 1159, 307, 530, 
          1167, 322, 545, 1173, 337, 560, 1177, 352, 1284, 575, 367, 1299, 
          590, 1193, 382, 605, 1205, 397, 620, 1215, 412, 635, 1223, 427, 650,
           1229, 442, 665, 1233, 457, 1347, 680, 472}], 
         Line3DBox[{277, 682, 1348, 683, 278, 501, 1150, 293, 516, 1160, 308, 
          531, 1168, 323, 546, 1174, 338, 561, 1178, 353, 576, 1180, 368, 
          1300, 591, 1194, 383, 606, 1206, 398, 621, 1216, 413, 636, 1224, 
          428, 651, 1230, 443, 666, 1234, 458, 685, 1350, 686, 687}], 
         Line3DBox[{459, 667, 1349, 684, 444, 652, 1325, 429, 637, 1316, 414, 
          622, 1309, 399, 607, 1304, 384, 592, 1301, 369, 1181, 577, 1285, 
          354, 562, 1272, 339, 547, 1261, 324, 532, 1252, 309, 517, 1245, 294,
           502, 1240, 279, 487, 1237, 250, 473, 681, 688}], 
         Line3DBox[{466, 674, 1341, 451, 659, 1330, 436, 644, 1320, 421, 629, 
          1312, 406, 614, 1306, 391, 599, 1302, 376, 584, 1293, 1292, 361, 
          569, 1278, 346, 554, 1266, 331, 539, 1256, 316, 524, 1248, 301, 509,
           1242, 286, 494, 1238, 264, 480, 1236, 262}]}, {}, {}}},
      VertexNormals->CompressedData["
1:eJzVnXlYT9339wulooSMkTElDYpI6TSPhggpMxUqY4YMGRJJqEiISgNSqSRK
pdOEEg0oQkSSSCIVGfI79lrnS5/nez7dee77/j3PX65rX+f6dM5rv/d7r732
XtuQJast7TsICAgYCwkIdGT+zTh28qbr85R0yYpGOxfJTKqzgP7lxLt1OifH
nc752a4uOyto0NZ4quSRKWl/UgzP96itk8976EgtNoXnIwVCcn+2a5/9OLhj
UBwdsN+ItAcEwfPhEU0dl2tm0B+F4fnuueHk959aPG7odjCX/jwbfv+iLbQv
Gvq0/vHqIlr2uQlpV5SOuPGzvfnKhpALx4vpyBPmpN1A7uDtn+3Hq2T2ZWeV
0oHv1El7aI10zA/XazoHM20SPObnUpN61K9edLROh57TI/Zn+83mLiPl+2dQ
7g7VpH3pFmjXzx5u0m9hHDXtBLR36T7i/M92CbltC56fdaS7h3wj7bNrWuJ+
tg+Uc91TOz+eNggpJu3qL2TJ8yO7dCywr82gl9rA85nI+aCLZ/p4hrMock75
fopwezV9BuE8xBO4fT95LO9n+8xn450/JTtSMY0UX86ByDnornRy9YQM+tMf
cjaPDCa/f6eX3Li4gGK6X6MBaX933J+8j/mrlnv62aV0jd9EvpyTkbPI5m5l
w6UzqK1/kbN3P+1nmrJO/+HsuaAm/me7urpt8hebeDo2MoO0D0bOYWLdT1h/
yKCNkDONnP0m24olMZyFkPNV5HzXdZNlyJZ4algbnHNy4HeMY+ZOFjgVR7/Q
gN9JtoPn7zU2ED3rXKL+Vj2vRD1303b4eC2zlC5APR9GzoEZi/rtXJhLjUXO
MkMGkHb3bn19hgzIoLLsoH0xcl6cplvesjSOMkXO43ZD+4zz58v2yjvSzpHQ
Ph/17K24inCejHruhZwXiPUVsPyYQY9Fzly+EYC+sbVQbIyMazx1D32jvZy5
fKM3cs7cIhDleyCXbkHOdxWgf786lhHOa70N+XLm0vN4WeCzVcKS6Plbb+Aj
h5ztJLsT3yhCzv+0bzxdANwW715M9Dw9hvojzly+0V49c3Hm8g0uf+biPAw5
N/hIEd/IQ86HaoGbX50k4RwfXszXN7j0zOUbz5GzQ5wH8edZyJn15+8jlKuD
/y/8mYuzqg/8vm96KeFsKGTE1zdWIed8p7VEzwbI2Ro53+tuSBkynC+14Rux
6M8eLr31ZQZmUA7oz1y+waVnH/RnWe1ZtZ2t4ukk9OdRyLlKTGzswroMejZy
foacX/ZrIL4xAzknI+ce30SIngf9zf7cXt/g4tzeeOOf9g0uPXP5xj/NmUvP
7fUNFeS8ILWZ+POe/2XOXP7M5RttxRvmg2pJ/MxyvomcZW3eE994iZyvIudH
g/uTuM4AOU+3guf1Ve4Tzr4X9f5Iz+2NN/oi5+4+0sQ3ktuIN7g4L0HOLaqL
iG/MRM7t9Y224mdezq+8ob15oTXRs0oV9Ud6rv9wgvD3T3hEOKdp6fHl3F49
H3oFHATkehM9D1r07Y/0rLgJnm8YvJfo+fnR6j/yjbJroLcT26cTzqvV9f+I
c3v1/BD1vFFg9ZRAhvPmNnxj9eXdBT/b1/g0EM4DzVRIe8+L8L05DfMFvObl
UmfFv/H1DZ3OwLP42IC4MbPjqCbfb3+rb7TI+t36+Z6jry4knIPmaLXifChy
I/GNtjhz+fPDUfD7HQw/Ej3vX6z1r/jGt3j43inrlxPfcEfO7V2n/CeuG5tG
1iltxXVc65SOI4BDoWuf/p+7ZVLhyLmtefCf8uf2+gaXnrl8gyt+5vKN8qAJ
UT/bt+lNJfFzzFHJNfw4t1fP7eXM5Rvt1TMXZ6/xR8nvr8odSnwj3kL7j+K6
f9qf28v5EfpG2AxFsk5Zib4hYwvPP+ulTuK6L2Faf8TZCjnrzvka+TN+PvqH
ej6Gepauosg6ZTLqmSve2Iuc6REDiW9IIud/2jc+xMP3WuqpeufkJ1Oig4An
V36pgyO8T0DDJQXbE8l0V7dqvvHMaF3gHHlR+KFxQTIVuhk4c/nVVwf4/ZAP
WU2zgpNpAfx9rr9bi++/PCNzlVFhMiWE71+Pv3PmXVGWaVgy/XEnPK+G75P2
ZBT53jB8H644YXsfyD/IOedl2nxOowQSYT3VuRg4i4ma3PS9mkZbugLnzDPw
Ptf2SCjO/ZRGBUrC+1h0nnLu5/OqmiH+7hlpdKrV8DX88ngptfA+z04t+B50
JY0OcvjG9/e53n8nvr9wUN3GR8zzHfD9ufpLEPvF8NVuEueHYr8E4fvMD/Zc
vPFaGr0G38fPOZ3o/7Lw/oCbPgmUYD/wPeH3A8l7upwZdcjrhx+l8R7GhVxS
PzIeP/uKFHl/86P2BOmS9rPrWsjvZEaFje88JJxeaQXzsuXTeeR3xL++kbvB
tDv0gd+5fhd+f/2RMbfPDblC++e3bl+Zbu02kmk/iu3vLzwlv6/kMLllqU02
vdABfr8e20VPu6/uw7QvwfZL8bCOvunT80NyaB69XduUb7tGmTtpH9P7kGdT
QxE9XtO0VV7uM09e7lt+Fnm+QM9kbu/GItrDvnVeuogn3rNeVkT6ZWaWqKKb
dikt6KFB2n2vWhGe+94ZLJKkSumPbuDz+6tNL4krXtHZ/03KXis1gjq+z271
0sd1Ott0rpP26b2WDtRKiaAmSNqS9vCPl4kv9Zd7Heg0JpvK7PqW9O8pbA+1
unVAdGw2lYrtU1bC+LqtVLLl3YckSsYDxpc5tovHlCrV1CdR0ti+rsSG/M4u
cd3dHl/DKMfB70n7emwvPqju5Ps5jFqB7dFmML8nVs4+e/iJH20SDj65Yekx
0r7vw3Jq00s/OvhMLWnfdcudjEcXmzszO61OoDUDHsJ7XlAjeZuZPVI9uzsl
0JuH5JL2I6jb3XpZYlsY3XZA3cqjPitTlfZ0+02f1zS/EF2t+9HFttOwcPpK
R/D/ygB4fmlllz7yQ6/Qz7bA83biruT5LnMmEb3FztL/W/Xjinr4mi/mEDax
lFZAPThivw8tuUCpZUdQftjvx7sBz5kzP3awV8+m0s2A55ZpwLObfrXx88Yk
KsUdeIbuhH5MXDFvwIqO4VRNOPSjRMhB0h6+QGZjTr4fPSPqBcxfyP+io3GF
D8PZAPnPGv6CfNf4uiqjK74J1DxB+K5F1x8RPgckMuwPfvej1Jz1+HKekQi+
N+6oOOE8YTjw/IDjV89GU388w3kRjt+d4RXk7+odebdpDsP5/nIYXxsUFpHn
r/r7EM6Ppxvx5VyQ14f0b13WwYPvmXF31grih2P2Wok/Ob8cNp2Mo4iQBYQz
Zb+J8OztDOPIf/87wsENOTsYPiLj5QZy5hoXXPrfjZyHLJ1ium9lAk0h5wlB
Hch33Xqgp5LLcBY6ZsKXM5evzkLOpytUia9qIWcuPbsi596XehA930HOmgMg
Hp6daUT8TWGbIV9/k7bpRuLS2tr0lhCG89T48TAvSKRf/slZo4sA8bHO/RcR
zprIuSAUfMkHOffyAn2KF4L/rPcEfa4OgnaPkSOJz5idhfZI5Py8eh3xEyPk
7Imcs6OuEd8wRM4ba0BvMt3EvmownCNjDVvNaxJLX/SX+P7LN9rLWXIT9Fet
rTnhHN0b+kt8L+jWJ7w74bwpHXQrUADziPcBX6Ln/TiPrEDOtzAu1UPOY5Dz
LnpfXneGswNy3oC+sSxO4pNqVgR1BH3DD/1/9qy79R3GZVPn0P8N0Oeloqqa
nzQlUZLo886o5wf7pnfcKBBOLUc9b0TfTv0yWiKmxI8OQd+ehf48u1/MVZll
CbQ7+vMG5KxaWUl84xwP5+FaNNHzn/qzPep5kPkE4hsXUM9cvkGhnnt3Bd9Q
Rj1zcR6MnGM1YL6eiZy55uUz6M8TZ70lvnEX/fnv8g12fvzxctrXPasSaC0e
PRdSusQ3/m7OXHou2QQ8n+RIEj3femP4R74hgpz7L9ch8Y8GcvZHzjn3nYk/
B/xLnLn8eRNy1ujfRWMOE29EI2c23shNnmrc5ccvzjeQs110CImHk5HzS+Rs
q2lF4tsK5ExXaJD2y+d2kjg26oEOaVeaCv4T9liCcL62Qv+P9GyAnGcaQryx
DTlzxRtHkbP47hLiGynI2QU5B2fWEN9IQs5cvnEeOR+p0yK+YYqcvZGzf1wi
8Y0pyNkFOU+qe7nrIcM5CjmPQM6PvUeS9chu5DzhGOQHouIynY2GhtMi72F+
X78N2nt0Bz173KH46jnIEf6uwttuhLNMb/i7mx23kucD9x8knIuO6PHlLIGc
H130JPGGTht6PjdqF6zr3euInis9PhMOiWOAW6e55UTPK93q+er5uWIo5BOe
LiF6rgv5RNrpqmLIV+ycQ3xDuHsNaU+YkEq+SzheZ8VrhvOUG/BddeesCTef
VDnCuTRXhy/nDci5/8TRZB7ci5y59KyMel44wlrmBMP5OupZF/U8rJNH1FOG
s2obvuHWmJP/sz36uSbxje3PVEn7CSeriz85j8la/lknKYLydnYknLulpBM+
a6vzH3ZlOEuJNBEOdb2R24RSqcY6Zr2zA7htFof8zNx6TaFjTWGU74lvf+Qb
xy6C3g5fSyfrlE9zW3PeWzWZ+AbLmfXnz+nZhDPrz6yej6iJtdLzaJ37pD12
gSnR86ds7X/FN6Zm3SWcQ3OuE9+QbV5OOAsi56TxTWSd8r1zE991ylrU8x5R
WKcs5fENh5pBZJ1ihpy51ik2dpB/qLmqtO44Mw9aGrb2jc4TykfsEzjyH9/4
u/y5UQfiwLof4oRzn+N6f+QbHqhnR8XdxDd2o57jDt1O+MnZ+PgO4htfOiwl
nMPQn5t2F5D4OR/9eQdybs5+QuLnbORsqAA6rxwB6/TqQNC5+ceoaJIf2L2B
xM/agYIkr7UPOb9QyCyRckygjXk4Z9/WIfHG9DY4c/lGp8W9yPpXf6Eo0bOi
vDZfPXNx1p6XQtpVkwxIvDEoA/7ufp78+UXMn78wn0r0rGcH65TQsnF847p/
y5/TBGYT3xBFf154GnieHXe++0iGs9le+C6T7cAtyeI5WafcMYfveinYRJ6v
+CFK4rpO8dp8Oash5/yp40j83Iycm5Gz8rPXJH4e8Id6jkI962nsIeuUWNSz
L+qZWitN1imNqOeTyPnhLvCNO8g5DjlPsqklvrEEObfXN9j4TbfAi+Q52fht
Ia6vje3ESD6TXV9z5TPbm5/kyhe1N3/Ilcfg0m17835ceTx23ZdfTz069fDX
uo/Nv+kfgHiYzb9x5Ye51h1c6+j25nXbm3/TwXnNvzlDK4uZ11xwXluF+dWK
0LRlqhkR1FjMrwah38ZcuuAawfC8gX5rgjz9osv9KhuSqF7IMwzzb4vfmwe5
toRR7zD/xpWvYPOchncnknltE66jrTD/VmqmT/yWzb+1N8/JlX/jWkdz5YXa
y5lLt4cwL1RqZdiglRZBCWFeKBQ5VzQoDxvJcL6FnLfjvOZp8PzZq49JVEYb
6w5xzHOOtVHUT7njR1tinpNrXmtvnpMrL8S1jubyB658RXvX0Vz7C1x5Tq78
Wx/Mv22zAH9wwfxbW3l+2TdmxB/ayleweaH51zLyrX/Lv/1deU6u9R2Xb7Q3
HlZC38hcpxukynC2Rd9wQx9O2LciTjXzV/5NxQx8wPPugRVGzLy2dir4gCvq
eUdWJfGNNNTzKsxzjo0cQ+IHE8xzsj7s0jzHec9zP/oU+jCr53tv9FX8GD0b
8XA+tG/fvHP/JS/Em+dsrz9z+QZXXqi9eU6u/BvL2WJo0nmtq7/mOy7fMEV/
9kF/7t1GnpNrfTcT/dn4oXLvoGUJ9K5/Kc/Jpee/yze48hX/W3lOrnU0mxfa
WJhJ1tHRsX9tfff0TTXxjWQeziu6gZ6fI+eruL4rWmlGOEfg+o5Lz+31Da54
Yx9yrrPNI/EG6xsByHlp5WHiG5k882Cdfut5kIszV/6N5Sw5ojC0M+PP2jz5
5OgjECdHtZHn5FrfsevoBTyce6Ce7wa7kbguFvXMtb5rL2cuPW9CzmKmNiTe
OIacw3Hd0WmYGvGNJ7ju2Iqc+2S39mcu3+Ba3x1EzntWaxDfmIyc2fzbUqtK
kudk82/tzXNy5d+49Hwf9RzQYw7Jv91GPW/E9d1TXUPiG7dxfcflG1z5CjfM
C4kIziP5NyXMC3H5xvAvcC5FYdoTkn/Lcv32R77BtY6+hJxPjcsgvjG1jTwn
V/6Nax3d3ry9Ieq5YmrhA5rRs/qf+gbmOdP7viW+sRfznCKYf3thcjjZlNGz
COY5uXzDBfOcos5GMgebwyhvnjwnV1xXd+Zuq3MaXHkhrjwnV/6Ny5/bmxdq
r29w6ZnLNzoh55bOUj1zGM4deTjzrlP0Mf+mGW78Zsf3MOol5t+48hVt5d/+
ap6zLd84MF/lL+Xt/678G1dcx5Xn5Mq/ceU5uXxjx30VkucU2ewt5vTaj34R
IMw3z7kA82/Pa5ZUmv6Wf9t5AHQo/zmNxHXbB1F8Obc3//Z35ZNXvBIm51eL
bbXIOuVrF1W+65QQ5DzmRQLJb5Qi5wTMv+23qSJ6Xo75N3YeVD0I+Q2HNtaD
g3sPJe+ZoniAxBUXFSFe3YP8P87JeyfG+LYO8n8zpPECmTfPJJF+sQjJI+3C
heCr6o6eZF1jIQTfO2wDxPlHe90n8cyYw9WtxpH5guxW50DY9s7l6a36fRC+
587JF0jeNR7fs3T3TtJueQDqdzbXQ76LrS8uUNQ5PFsykxLB85/9h20i/Vv7
XOLmhzRHqtMiGEdt1cVTSi5hn3+ri++B9YDlWN/ajPWACVh3uRjrLkdg3aVH
0kLy++PerLH1YcbdrZvgD8lexeR9xr4Ke6OWXUrrpcO50DA8z+yN58Yn43nm
FKy7HCwaZyQknUG5/sW6eEpa6MLqXr/qW4cWxZB1k/OMqh6b58TTbvLZpJ2t
O+ujpiKb8VvdWTrytDx2fvwxhqcw8mzBc/izsO4vFs/hC94HPeyJdhN0C46j
D4mDHuqdYd4RjqFUTTUz6FpPnT/imdAynLSrSFYYvWfGl9EHeD7fAHwsOMLb
aXhWKd3rOPjYUeRZKlCeLrgwl9JEnnviYLxUvp61pILh+f5lHWlfgjwf0hM2
C9nHUebIc8Uy8LfwHN+gS8scaekI8Dd5kS1kXFxZ5UTOh58JKyTt/fA88Brz
o2fv1WfQE/A8sHEonCtzfX+vxZvR7Z2TJq102+FNi77Pb3XxXJy56neMRGAe
b+wE9e/vc8AneyHnGK8eSzMO5NLfkbN8hi55n6xuTwjnjfmtz+/x1r8vWGVJ
/HN9zo1TCQxngd6apP1EIeS3TQ8dm2C4IJdSK4F4bzjWlUhemBH3sn8GdQvr
SuyQs4SeyqJuS+KoKch54tWnEP80F+TvcHGkjw5rJO1z8By+/OumTc7z4mkT
PIevgJyfvslbFFyXQc9Ezlx17tO2wjyimRBN9BxjpcuXs0Yl7C9kRkYkCjJ6
pipAzyPd4HdSCxoJ54D58DtSyHn6y5UWRQznb8j5HtZJfcM6KWesk9KqCCPP
2y+bWqPC+MNzE9BD/0WHCOf6Km/ljow/GOpNgPfB+ndXrH//jvXvsshZsejw
rrMM53zk/D1BhHBzetif+IPgqaet/GHq4PmDJKp+1TuwnEtGbhjUMDeeNuWp
r3yF59utkLMR6nmy5OeN7xg9F6Gey7EecPd6i6l7f6u75OLc3vp3Wg3+bpbN
I+IbjX3h78px6Nka5+VuTR1oC4bzSJyXJ2H9TsH9rvl+jJ7PYP0Ol56TNkKe
9pYx+IbHWcjTLtQ3JtwyyoYSPSsMLmvFOVjG3+Jh4y/OvkeTiG/k3K08v8M6
ni4elg/jBTmnOhb0PPk+g56MnFPRnw3KKlPo3+pVK5CzqFjFOZPf6oi5OK+t
h3zCj4h8p10M55pEQ76cnYLgnOT82KFD3zN6bngIf3frLMh3eV4Czpu7ts4f
3uaJf2YiZ6GcL5J2DOc45Mzlz1Nuw/qRHliSumhABmVY/YavP3PVSWXqrSHz
XfinBTMEGc5zIq6DbyPnkrz9B58werZEzmxdcE+sOxuMnNk6YvWcUJsdf0HP
7a1//6KbTXjOc5/rF8JwPldrwtc3liFn8SHy64oYzhORsy5yVtXb4nyP4RyA
nLniCnn0DXusY73zh/Xv1ugbMljHaoi+wer5krmP7iNGz+ZtcGbjkJQDXhJF
v8UhrJ8swfpiS+TP1tGL/EX9s+0rXHrfLSxpu7/Y+s3I7Pk39H+r3+TqR7au
c/PWDSRuZOs61bAe/BDWgxthPfiqJ7COmOIGdYjVA/T59jtXO1dd83Js78qj
EyXUyTysK3dHndhj+8PJW+MaMkvp623o5wi2pzw79VaXGb/j29BVf2yfqPNl
ezozrq+2oTd2vA+ktBU7LI2jzNrQYXv1yd4nEH7BNqTT7Hh6Rhv1qorY/k7B
rPNgxjdsePw5PDAw7wej26GoW1afJunHty5j9DmTR5+TsI6V1eGQIIiTjRZs
J/HzkxSIk1NQV/66ED/rsr6xE/x8uzTo6vho0MMoAYjDVw95THTihHVtXP5M
Yb/nnSyZ+4LxjWPY78HYv5Zuj7sKMfOgMfbvxw22kKd1m03iOuPnzaTdHvsr
L3NUTI/FcdTUNvrryxHYX9Ow30biDZ2AF3x9Q2WONvmuB0qWZN3nvN6glT+s
c7VWPPWbP3Bx5qpjTUXOSaMVN/RlOOsj54iaieTvLpZ9QDj7fwCe7v7fod9t
XUZdYjivt4D3mY2cJXnijT7PIK/1ekcTGXfDcyAPENkZ1vuHF7tmV8/Lpewt
YL3vewvyWuWfe5Bx1G0Y5LVWXYQ4eeC5Qbkj58RRm6Qa+XKW14X4pNBwJ9F/
+gCIT5SQc5O556Nn7zLoOciZvU+gl1Tlp/Lf7hNYrQ/5E7OQRcSHP3fU5st5
djTEySHCcwjnfT4QJ082hd9ZfdFjgTzDuVoMfscS64UNsC77ENYL30ffS7ks
O/jqz7gOfW8eci7UnUziZ2XkvOqdJ+GsUxX7wp3Rc9NJNdIugvc57B/7gujZ
H+8ZGMpT/34TfalIF9pPRikTXzrlX9+Kc4FSEFkPthU/j0DO173EX81l9DyV
redFPe/yjPFQ+U3PbN3oytOGa1YznEOwbpSLcy7OUykre87TY3yjEucplcyx
5HeK7z830WA4HwqZyJfzTtTzuBvgG6tRz1y+EfvNjHD+uDVIbibD+fyaMaT9
JOrZ+MNQvyyGswXqeTByjklvupXFcL6OnG3RN/x1xt0QsYujJqFvPLJfSfKE
ywN6tpjvdaQPDOjE956BIcg5SmHayn4fMmiTNuKNTsj53IGR9+Ukf9VNc3E+
nAz7ZY/n5JH4WcMOuLlbQf7wtEPRfhGGs385fz1/xPr3o1j/TmP9e+OBAbB+
z3pC8htPJ0E/Vt6B/KGmrI7gMMY3ttWP5jsv04fBH5IaZxJ/PvWige88G51y
idzn8OLLwx2nhZxokYAuhPPhAsjLRTqsX/FpTjxdH/SQ7/wYvBHOoQktizGT
YDjnDcR5UCqJ8BkoA3HX7P38ffgR3ifQEe8TOID3CcxAnuHFW7oIMDwPt8Ez
x2g27N8FriD5N7vh8PsS/W6T+c6zKovkMer7wXwXgjzXhPZ/dp3hacZzb0Oz
8INZyxieMnifADvfeejLf+m1KI6y4JnvaHkj5d7HfvmDn/A08vzyDp0UVzM+
LNm3CnwAeXbeL+y2hPHhBcjz9egJ5P03LJpO58/YS6mPBf/MdQXOLy3d5ePW
RdNSssDZfxScA/F++2OD3EKaXrUZ9DP3GqzXhlylm1J25dApPrC+KFkL+YoP
ciGvlpQU0hUfoJ09J/ae55xYTPWwobcnZeh0E51y0H8aTU3au8rPKq1OR9j7
I+Qfsj/3Xjssk3IKeU3eP9wF+PTvZdtPNiOeEsd7KhxOQfywqqvYnsLt66jR
Q76QdrFEONfx7LjC3muHY2lLBTjXMU8I9muq82/EBxWl0x3sYL+GPdfxhud8
o086jNNtlVvnWk+OoKc5gR7WeMPzg6rFHSdOukpPWwnPK2cMITzjnGtkjTfd
oBtuGJP2PTuAj4fY7tfitwroXh0gn+OF5xLnh7U+l5jXC/ztzTb50i2KWdSk
GbhPtx44XBfKEFQrTqC0DgGHAne8x2PZtfwdLl7UnXPQfi8R8jbWE84KHlwX
RduFQ95G0BDykLHlrrGbs9Po7WsgD8nuk7rxnGO5dwHGi+Ieo553x6XQiQNB
DxNHgH62jLrqlLnyOh1Cw3w69jXkTyxy7GuuZOTT3VpAV+x5nnKe8zxbpRNJ
++H9B7vfqbhMKZvDudaBqU9xfS1xQH2TP/VoCMQn2iYQh4zQ6dx7nuVZOloO
4pC7pvBdb4eIm2yLSqXfusB3sfuPa3jO4WxOBD93aln+LdX2Gn1tDLxn323Q
j4POl5kMT7xN73WBfmTP0a3jPUdnCt9l0zQ44Pr5IGpZKHxXHZ4XvdRnyTVV
lTDa7jT0SxPeg7FiSOE8i5BkuhnvwWDPBdXznAt6cAb0MyxOpU7i/C16nQro
hz1XNoznXFmUJPhD+Ond2xoGBdLBcuAPj/D97y592//a/iQ6bB88z56HqeA5
D8Pu+5Tz7MtnCkK+WmeDiI7a5sv09eOQr2bPnyhxnPNZy3POJz8S1ilvy745
Zc3dSz29CeuUagPY3z9SXpv/jvGlRXeBw+V6Fzh3uiHB1ITxpeQR8HzSQ9iv
XCKaQnwpcibOgxrwXc3FgcSXlE/B39XF/crjuP++CfcrL6Av9Qhd/er2DJrS
QV86IQ0c1lkZTBslm0npzwMOThfAr0Yef78/IJuJb0vAr5ajL40WLojpnfjL
l0zvAB+zGbJhj/fH0sPCgM9i9KXUfpmTThek02LoS+z5nPM853Oqj8B85+Mf
LPlwUgRtXot55p3Ac8d28KXw48Bn6l7IPwv3f018SRfjw+viMK5HB24jvhQ7
D7gF4n7iGZ798RBH+K7JhfKy20dlUYWFsF4bjOc0Wg6nntS4m0BJSUKec5VS
KK4L9jHxrRd1MxS+y3kRjFO1cz/9Koq2DoRxqiMHnM1Ora3wSE+jx64Czpq4
D3sV92FFcR+2yQXax1LxjWqMLwndwvVveTP5rslX3b5IrrpOTzwG3CpngB66
dg2c58D4kmQ66IE9x6LBc47l3XeYT4N89hk9fXqZCtj1rZUvqRc225g5+1OP
0Ze6BML4EhvaQ8Vy1lla9jSMr+AgeP7ItqMzPken0rYNEEex+8iTefaRFRdD
v6cofLZyZXwpeTy8/zhD6MeFHia1towvFQ2HfmTPJ7zkOQfyRALihzE3p6lG
XwqiLgd+4+tLH9GXRg253+p+HvacRgLPOY0+Y0E/0a9GEl/q6gX6Yc9FyPKc
i9hqD+/5StwuYWiPQHrAaXjPMvSlTnLLJMy8kuiz6EvsvnkTz775Ttz318V9
/0rc918QDfNdr5FS9cpbLtMph2C++x6M+7C7VmRWCGVQASIwf9XgfvQ+3I+e
hvvRXHkDLSWIJ8vCq4daCmdQyrYQT7L71wY8+9c/8L4s6/NTyP7FKVwXsPva
ETz72o7oAy+nXFaLvZVO90IfUNHfQXTr/Tktf71UMb19Pej2UxX46qaTwQOl
Tl+mZkdCe+fRVWTfzbCk24at3vfoXXVmkIfxgv2g2Mt9d6cnPaAD1sF+0JoW
yM/XaMfLDUhJogonw3wncQ3mIz/p0CKXqYFU+BqMh5OFyHz0pGJe+SLRe/Tg
APh9VSVYd7zdFC0wecwDevsjPJclF3GjxCFOx2JTn7gbHidoU/Fh3Q+9r9Mp
fAPjUWLK1u0eBclU6lqYf+vegs7n+ga+q50eRvm8BZ6f70A/aigVRdp+CKI/
GEI/XqyFdWVZltuR67vv0lLGwKFsOMTzNZZ5Uikx9+l6UxhHr/VWDs2gA3Va
VkYmqWkk0+5uI7yvf2N8VRbrYqYn5MyaeI3qqw/6fBQEHOzHd7HTfZFKORjA
d4nuhPjnRvGWA25bz1J18lgvg+fejWzzOmqd8qfr1sLzATdBJ3PLDb4/7ZpI
P2+B97/8Hd7fc0pDwqgfd2gRG+xf6b5k3I3+pNrvlfx9OjUR/G1RT7Hu+jkb
0p/N7HjIu+o6XfFCbW7FDyb+0QJdzbvy2HOh0XXq/gTQ1cg9sN/k8qixTFso
hcq7CvtN0/eBzzSbdiX3VukvAz5C1cC/5wAJTavTUVR6FdZ/4XwdqfGhakig
F52I8/XyMnj+2ONZyr0+J9DfS+F5853AodNDF6X6qVm0w2Dg8Gg8rCNcm/Rl
um+5Qy97DXoLngT9lXE7cI56eAldvBHe565mQ4RDUXj6NC8p4Y6KhbTnjg8d
nzQz7/kV1lmn7k8eqDD1BiWsAL4dZQcc1KcKH/Dtc5XK3wQc+i+B/rU+2RQa
PjSCqgyG/rVcD981Sc5jrgIzrn284Lv6fYTxNVlhbO65gljqUhL0Szc8BzJI
11bsdO06umkhPP99IsQtPnPshypUxtOqefC9IU7w+6PWdO+QZphJ6++E54XH
wX5N2l6XQ41Hb9IXnrU+7z2H57x32hYYXyIuFVUdZEroqeNAP6+Er1sYr7iY
/mS89BsRtWLa3XHTpqw3TDz2EficOy9Z0X9WDrVeBtcRtZqk3UlhWlnSMJqy
VvpA2le8g3n8qqr73GrtaKp8AMzje3Eel/CSu7tKbS/9HudxNl+6kGc/hc2T
dOXJk7D5EJfy/77PNZNjn+s+z/4Iuw9yhGcfhN3XaOHZ1xidCuPryW1a7GjP
YtpcrPV+xz2e/Y6emMe24Lkvl82T7OfY/1rCsf81lmP/6w3H/oIsz/4CXQrj
S+1Bpv86xuejiuE9d9yG9/dS6kp8PkcG7zdAn38T2cck+MoDeg36fOehsL6b
KyQ2dUpyErWqCsZXV/T5nrtVxidMD6TC0Oc/mkAeb866N99+MD4f+hH6xXo9
1Nv2sA8nPp8oDvFz9pfMzJ8+v93fZOK1Iyfo20/kiM+7+eP5z7LAMZ0Zn4/b
AH+32yVoX/v6OPH5sgBo97gM7dOf3SY+f+wknv9Hnz+m8X7jCMbnR6HPf6uB
/0/BRzGX+DzVBPnJlj4pPX76/Oqo8xfGjEumt4ooEJ+3fBtC+F/plEp8fpk2
6NniC6wvJMWlB69hfP6KCozTeg3gVlopOtx2y1nKVxDXxSqQV/HOcDtIB/rT
b9WQ5wh4vljvQpiMeCI9ukaXr8/bfIBzXF0Cs9ZFMD6frgHvry8FPq8skyIh
wfj8K/R5LRnIiyoIOlQ8YXxezflzK5/v+HXshZZOv3w+egHEb922vUz42pRG
ab/WbuXz50arbjhyJoqi0eedcZyer4u2UzjqRYviOPUMh365eX0G8XkzD/iu
J7bgbytGiHpeZHy+hwtw63njIeSRUs5nT2N8/pOBLl+fj1Srifrp8wlZ8hW7
lArp4ZF1xOejV0D83FyWKxk3+Qb15hzEzzuTsX7NueO6E1JXqRmNcP5qAPp8
8qnnq5MGRFDV6PPfneCcbexw8PP5U4D/R/zeExFrHiWVr6ND8HsHdoJ8o4Wr
LfHzbS7Qnqk2k4yvtyaX+sYwfu6jBP21cBL4WGmf+nq7YzfpE2dAJ1vwnGcI
nvO8g+c8X4hIkd9ZNWXEg0zGz3N8IT68j35+2Gda59eqxbQn+vk0xe+Ew2qV
uxJzGD9/PP8jrEe2wrrs2J1H6uOG05TW6+ZWfn4s3kPiJRVNPeXx87M+/YRd
lX/5uSEFug3ZIkryYGWd8T5Ve9hfaPDatstjSDid4cb/Xke2zjeq5am1HLNe
WIx1kZexXi8P6/V2YL3ed6ybLsS66b32rfOHvHWmQlJ7ob7GU1svNSWCen3b
lm999CSsF9PO7yN4vj6JGvAX66MzPiwu3f7iV11ee+ugB54DX93zInhtNcPn
oAXeSyMNPLW7+48yYfjMUzDgy2cC1ueOxfpcDazP5aprPonrWZ8jayOrGA7X
cD377Cno4U6Tbe2SxiSquhPogb1XUHnVrERnwXDqLdY1G2BeUaJCk9QZfYmA
dstqmKfKzhuQuuaTJ4tb5Q//ap0yy8EvEeoN5yOH7VgHN+q0gLoXw6EY6+Bu
pgsSXblpQr3hU1/jVnlF3jpB9jx5hvvCvQ7MujiLp97HYn/rc85lDcCnUUZ/
/dkHfnT+CBwvmNdSlM/VkliRQOtjXourvq94JPjMRzWoCxb5Ad/F1vftMzsz
aQvzXSVt1Pdx1e0+tIXvWtBzDNHt8VD4LjZfl/K6db6OPY8tdu5Wq/PYXHWI
xxUgLk3XBh3K32t9T2Pd5tb3NHLVt7rgOIptntH1QPmvewasUD/NsRNdjzok
0CGoH666vEpj4BY6C/pd/Sv0O1fdUC17zjxxzM2A5Qn0DFzXc3Fub30i6wPL
mo+Oy/stL5eD+n/RS+KJMeOTKTz3z5yp6zrT7Lf7Z9KxLmNWxzLik2xdhnkJ
nBOIUYJ7q6Qf8L/nh81nHuXJZ27BPJ5XoPa9+N/qAo7heBl1WupGtno2dRXH
y2YcL/VDItcNbkqiknnGi5/Y1Gmbf4S1eQ8YWx83QTlltTTDfxLy5Ko3ZPN7
0Tz5vZj9EFdoSIJ/jjkLfLqjbuNi/Yh/nkfd2s+D+ai3KXBbqwfjLn4T8NzY
DPPvNgfgyVUHdAbrJoYarG16PSabKse6ib5ZwEG82xLiJ/4dgANbnyLW1YTk
uxzaqB/c3xHy8+XXpvkfYPzEtmdVqzwnL4e27uPyu3KYcIhE/bi/gLh92wAb
Ug94Mxo4vPaAdotl3oSDAgXtXHV8szMNyfu7i5WROj5r7a+kPfIKxGNnO1Ck
vqynTGMr//k/6qwH34J9B/fpZHyl9HreKv/JW0cTNhf6vX/+YzIuZqzkX3+n
h+Oi2Kr08n3mu9RwXHDVx5WdhHgptcmM+FWy9JdW73/ozX+vq21e1tof2lu/
JiwBfjIxGPi7nQP+XHVkJphnDlZRJvddDBwKnLnqm9pbz8XmUUV58qjDtGF/
bY2ZIbl/oF9f2F9j49ggnjiWrU9R56lPYe+TeVm1dIjjb/fJsPUXyjz1F2vw
vosnsfc+fWB8bADed8HW7yhfHpi03DeBuoD1O1z3pXDdW7IyFtaJi6yX9zrE
xJMLYiBuf35xJ7m3xLe3oJUmHUGZPoB7S9p7f8j42bBvXvd1dr4QM357xoA+
2fP5djzn8z8f6km+92jWwOoLzPv86AjxP9f9Hlp4v0eZqhPxJV+83+Nl58WE
T2BfFVI/2MHamO97tvf+DfYcmgSeQ5PHPMkwnHeGPY3RX8u8/2ycd/y+diQ8
N5qP8xrH8CyYvoS8f34KxFenrbuS+krzfDiPXYFxafj1xZpLG5KoGoxL2bp1
W557Rbjuu+hXBO9f+O0a8c+r+vp8v8vMA9qTLY8Q/7SpAT4rec4p6eP3KuP3
JvDcE7KZnUdGBY5RZ+Jwf5xH1LC/fL76knp/d+wvY1yP3FF4Qe6/6tnG/RX/
9H0UXBzcMF7Vx/soHmC86sBzblwb+QxEPiZ+dmR8TUc+B5DPAbx34t+69/X/
93t0uTiLImdpvF93AnI+ipxz8T7SE/+P3O8hqqlyIfm3+JlrfPXG75IM33gn
g9GPKX5XjQn4quYtuFfhywn9Vv1YhvcqsP3I5VdN3c3JOUN7lz0kn/B0H5wz
VJHpTuqUzw1XH5meFEG90YL7Ddh7BnYZ370R+RfuGYhMgPeZZgX3DNhiPnMu
+//R4PlSJfa+U2U4P7ZVo3H1dOZ9rMZAntkX7wGYOD1DfxwTl3rhPQCiWJ/+
Y9kdkt8Qw/p0lo97eBMl6vuLD1ed/nXU+YqdW0k+h63Tz+0B+cxx1q+Ccxmf
9JLU5dtfe/D9Nd0p4ofz8P1tSw4SniV7ffqNZ/xwQSbUfXfE9694VawjzPih
IL7/NtShQkdb4v/pqEOuuni230WwLv4/57UU4f2lY7aQ7xJXgfZYXEc038oa
4cB8lzquIzjr4jnOT35F/YzNKkgpYr63EvVzAevcTbDO/SvWuVNuEL8lv5FY
lMeMu/DchlZ5Cd46dwkTGF9TnCbe2fcljNI5BeNLDM/vVVh3KhNlvld5DP91
E1dcrYrxqkSnWqnZzPd+biNeZc89PuI59xgzEeuD7GyJz3/qDPdteqH/pFEF
Nyb8do/TWVxPzbK9cDOK4VCB66nLWId+tv/i4hUMhxU8920uO2gw3v3bL/8x
xnjYxs5KN+CxHy2N8TC7j+/Bs4/f3rry/wGklgPu
       "]],
     Axes->True,
     AxesLabel->{None, None, None},
     BaseStyle->{FontFamily -> "Arial"},
     BoxRatios->{1, 1, 0.4},
     DisplayFunction->Identity,
     FaceGridsStyle->Automatic,
     Method->{"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"},
     PlotRange->{{-0.5, 0.5}, {-0.000016, 0.000016}, {-0.023747097552639665`, 
      0.044872510553715904`}},
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]},
     Ticks->{Automatic, Automatic, Automatic}], {189., -189.}, 
    ImageScaled[{0.5, 0.5}], {360., 360.},
    ContentSelectable->True], {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6183126579335537`*^9, 3.6183126796639886`*^9}, {
   3.618312750685409*^9, 3.618312804296481*^9}, {3.618312838557166*^9, 
   3.6183128460073156`*^9}, {3.618312931089017*^9, 3.6183129427192497`*^9}, {
   3.6183130551814985`*^9, 3.6183131182727604`*^9}, 3.618313464959694*^9, {
   3.618313546691329*^9, 3.6183135698817925`*^9}, {3.618313603492465*^9, 
   3.618313610362602*^9}, 3.618313711094617*^9, 3.618415234052244*^9, 
   3.618419486789775*^9, 3.6184206600936203`*^9, 3.6184215333345118`*^9, 
   3.618421634911537*^9, {3.618424645707999*^9, 3.618424670527254*^9}, 
   3.618424715670723*^9, 3.6184249430324516`*^9, 3.6184250038681364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polys", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6183144817120304`*^9, 3.618314488812173*^9}}],

Cell[BoxData[
 RowBox[{"0.057330592862264024`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.10558686143448381`", " ", "qq"}], "+", 
  RowBox[{"4.938370437440609`*^-6", " ", "ru"}], "+", 
  RowBox[{"0.000013967820897187178`", " ", "qq", " ", "ru"}], "+", 
  RowBox[{"5.999456893298824`*^-6", " ", "uu$Shock"}], "+", 
  RowBox[{"0.00001696902661074695`", " ", "qq", " ", "uu$Shock"}]}]], "Output",
 CellChangeTimes->{
  3.618314490372204*^9, 3.618415234083444*^9, 3.618419486829776*^9, 
   3.618420660383623*^9, 3.618421533584514*^9, 3.61842163525154*^9, {
   3.618424645737998*^9, 3.618424670557254*^9}, 3.6184247156907225`*^9, 
   3.6184249430624514`*^9, 3.6184250038881364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotPolynomials", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PiecewiseExpand", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"polys", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ">", "rUnderBar"}], ",", 
          RowBox[{"polys", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", "rUnderBar"}], "]"}], "]"}], 
       "}"}], "//.", "lucaSubs"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", 
        RowBox[{"-", ".1"}]}], ",", 
       RowBox[{"eqvdIf", "->", "If"}]}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], ",", 
    RowBox[{"{", "\"\<eq1\>\"", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618308794669283*^9, 3.618308854394481*^9}, {
  3.6183117879461546`*^9, 3.618311813766671*^9}, {3.6183120001603985`*^9, 
  3.618312029280981*^9}, {3.618312101752431*^9, 3.6183121281829596`*^9}, {
  3.6183122726158476`*^9, 3.61831227723594*^9}, {3.6183125169007335`*^9, 
  3.6183125640016756`*^9}, {3.6183126131126575`*^9, 3.618312677883953*^9}, {
  3.6183127469553347`*^9, 3.6183128014464245`*^9}, {3.6183128365771265`*^9, 
  3.618312845207299*^9}, {3.618312893638268*^9, 3.6183129419692345`*^9}, {
  3.6183130191707783`*^9, 3.6183131162827206`*^9}, {3.6183134169887347`*^9, 
  3.618313464189679*^9}, {3.618313543391263*^9, 3.6183135686517677`*^9}, {
  3.618313602312441*^9, 3.6183136096425877`*^9}, {3.6183136943742824`*^9, 
  3.6183137094245834`*^9}, {3.6183140706038084`*^9, 3.618314074373884*^9}, {
  3.618314559783592*^9, 3.618314636245121*^9}, {3.6183147759179144`*^9, 
  3.618314799898394*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, InsetBox[
    Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnXlYTdv/x+OaE5mHQlHXGJWMsY4hQzJlyJh5isKVOUOS8RJChkSmZIij
OWVTJ5JZR4VSyJgTmTLr923v9dm3z9rrPM/v/nOf5/WsZ/fZr7P2e6+19t6L
+ZR5w6aXNTAw6FzBwOCv//3f/PGgiOLi3Eszfq1e+vVqoeBV+2y/p8t3qWYs
VO+L9shS8FOGtbw9sjIU/N2RRTMsHNNkHr/ikcWOu4Gq6eJxbsi8wuYfvW8l
H6btk2Qelr7hi/Ph45SHy9zFvM6JjJUnVQb0P+B/3I+MHjc2DNqrgA/Prld+
fqAaji/z5j45ruGbwqEemf9sfjz685JIqF/md27Nqd5pRjScr8yPetrOWjYi
FvzIfEmD75fje11QUZ8yd7p0qcEf6wTgl7718r99M0mn8Mxy8Mxy8Ay831/P
kWfgtZ3LOZT2DHxdcADyDLzofQvkGfhMVTzyDNw95W/kGbjl+/fIM/DHdeOQ
Z+C7iQ/yDHzwDCfkGXhFv9qJpT0DvxT1GHm22Gpx5tTXVwrPLAfPLAfPwNM2
FSDPwJvVr4Y8Ax8/5zjyDHyP0A15Bn63xn3kGfi68A7IM/Cm48tMKO0Z+KXy
t5BnuZ5ze5Fn4N9HT0OegQeUtUaegbc/8xN5HpoZvWljmzyFZ5aDZ5aDZ+Cu
xl+RZ+C2ufWQZ+B2HSORZ+Cdtg5FnoF3fa5DnoEfCnJAnoGbpdZEnoEf/vwE
eQbe1Owc8gz8mNNK5Bm45RIn5Bn4iSMNGipzI1tPbmTryY1sPbmRLbwJMLBU
5ka20CPEnJMb2YJhGQ0nN7KFB+OmcXIjWzgaXX6MMjeyhdiNwzm5kS006mgx
QZkb2cLavM+c3Phf/duvcHIjWxhCAji5kS1EvZ3ByY1soeG+Tg2V/Vmrpz9r
9fRnrZ7+rBUWNqpiqezPWmGIR2tOf9YKeTfucfqzVljaaimnP2uFqpsaj1H2
Z61wz3MKpz9rBZOjHTj9WStMT6sUo+zPWuFcmWxOf9YKP6zPcfqzVnCY5MPp
z1rBb9tIjmeNHs8aPZ41ejxrBINjtTieNYKrXQeOZ41wIeAJx7NGaPD9X45n
jbB4XCeOZ42QP+EfjmeNUN+4H8ezRuiXaMrx/L/jL/jI8awRjje7xvGsEe7f
D+J41ghl13siz3AerGeWg2eWg2fg/7ZqhDwDd/9JkGfg/pPfI8/A41IOIc/w
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
H7RCnoH3ILnIM/Chx3Yiz8AnV+mPPAP3nP8LeQbum6FGnoHv7jYdeWbn6ThX
s/XkarZwxz8FeQYe8eEw8gzcqYWAPAMXRrVGnoHbbNjLybds4Qh9vwvnWLZg
6NkFeQaeXKUQeQa+4kgI8gy8Y1dX5Bn4+3u1PpT2DDzU7TryDHxymTWc/qzV
05+1evqzVljrcovTn7VCpRVqTn/WClfvpnL6s1bYONWe05+1woCiM5z+rBUM
6ftduD9rhVdG/Tn9WSv0zzS4puzPWuFkcBynP2uFKrMXcPqzVpjTvvUHZX/W
Cjd/5XH6s1awunqA41mjx7NGj2eN0KWhluNZI4yvcInjWSOolqVzPP9vHDvP
ieNZI0ybnsjxrBEW0fe7sGeNkBzqwvGsEW4ercHxrBHSD97keNYIOfs2cDxr
hFe7enE8a4TCbb85njXC982xyDO7LgeeWQ6egRc8foA8A1dvv4U8A79g/hR5
Bm7iNQ55Br7yfjryDDyHvt8FnoEH956OPAN3nt8UeQZeNigXeQYennoAeQY+
tWgM8gy8drN6xaU9A78y5D6vPxM9/Zno6c/k8OEcXn8m5U2yef2Z2F3X8foz
ebF+Dq8/k4De+bz+TPrR97uY/kxW5njy+jPJ6Nae159J28CPvP5M1n8/z+vP
JHfUP7z+TDpHWxdz+jPZXruQl896PGv1eNYSl+nPeflMxhzP5+UzCVvwjZfP
5Ky/Fy+fiTr8Dy+fyXn6fheTz2TMMh9ePpOxlR14+UzG7iufwclnMq5lCi+f
yfi4jbx8Jq6OAzie/8cfGhpxxhsKzyxnxhvEsGU+b7xBwtp95403SAuTchU5
4w2y9OC/vPEGSTWvRTjjDdKQvt/FjDdIx9o7eOMNkpM+4hpnvEE27KmfwRlv
kHZjsnnjDfKgYTBvvEHWZE8t5ow3SMuDzY0442c9/TlPT3/OI5d173njZ1Lm
QsVMzviZHNZUr8gZP5NepwJ542eSt7054YyfyVr6fhczfiY1zx3ijZ/JlCPT
Of05j0Tsbs3pz3nkr00feONnMmJFDKc/55Hj81Zy+nMe+TKltxFnPqjwzHJm
PkgWqr/w5oPExaFuJmc+SEzcTSpy5oOkavRp3nyQ/C62J5z5ICmg73cx80Hy
3vEsbz5IXs9dfI0zHyS5O0kGZz5IMmMrPOfMB8ndx7c/cOaDJLXsnmLOfJAk
Np/IyQ2dntzQ6ckNHWm58CcnN3Tk1G2LTGVu6Mju2s05uaEjGYnxnNzQkXrz
hnJyQ0dc6PtdzHoLufk8gZMbOuJuv4GTGzpi6O/MyQ0dOfPa5LkyN3RkoOol
Jzd0pGC3mpMbOrJFtxx5Zp9rMOtvCs/AczqVCeass5E/o9tnctbTSPWLthU5
62Yk+NaNppz1MWKdM41w1sfIJfp+F7PeRUJX3+Cta5HCinuvcdavSOft0zI4
61TEu77Nc856FLkW/PsDZ92J1Gh5XfQMPsO/59a0GV+gmI94qK1G7f5SoJiP
tJjpFfjd750QGhCJ+m0efZ9n/rZ/0P0u6H5di6TE98KimrvRuALeIyKmhWi9
sbL5GJc+ywuFei8c0bjiu571wwha/+A6VZHPubT++flxaH4N9ddvMhON36D+
/hG1UA5D/X9CLqF1DKi/24/Zf0r7zOm9oLDajtcKn/t+XLLzbPVG4XPEeaNl
mZo3wvixF5DP6vQ9qCsNvJHP1MYnywQX5QvvLgQjn77pRX3KbX8rVG5hgPon
2eKweVZLnWAzYgLyaaln/S2X1t9K3RD53E/r/xx9HfmE+vs0Wo58Qv2meS2Q
T6h/eaVM5BPqn7TVF83vVLT+m//YoPFwFb9yt3VXlOtvVxyG1XSe+Fzh2fvn
IZeob8+FGo0vI8/29L2yhsf8kOcvs+xzV7Z+KbhNPYM8q5tsavYs+aWQ1t4Y
eZ6dkTGz74RXgpNmAfLsrGf9zZDWX8mpJfJ8lda/bG0W8gz1/2OyFXmG+gtr
EuQZ6v/q9g55hvp9zQ4iz3No/Xs7DkKe3cXr6LHCs/QeWq7Cs3RdPBGuPr2C
PM+k7+l5tA1Cns0jbiWMm/RUyDOMRZ6z3UzKXP7+VDigMkOeA8zc+ljsfCZM
s92APP/Qs/42l9b//EUn5DmP1v97iA55hvoPNghGnqH+K72GI89Qv+eN8ihv
of7QiBjkeQ+tf+rPWchzsvi731d4lt4PTFd4ln7HDMHr+A3k+W/63mNS7Gnk
OVC8fh8K4yM1yLOxeJ0+EmY4WSPP68TrMUtYdTgQeR6mZ/3tKq0/0bsv8mxP
6/cx/Y08Q/3X60Ugz1D/vgWzkOf9tP73bRohz1D/zb73kOf1tH7ry77Ic2ex
nit6no+kKDxLx78utHO7hzz/ou+R1u19AXl+IfarO0LG+DvI8yyx/9wVrEf1
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
I2DbuhXOZ1XnpfmUzJ/vDww0qHdeNVSaf8n8xOx5n3uVj1ClSPM1mc/u2nvQ
uk+RqibS/E7mVlXqhaQ8jVZVouNPNjcGSfNKBU+X5qcyn/DO2zk85YDKVprP
yrz8cvdHrj2OqOKl+a/Ms1fU3/LMNERlTN8HBh5Bv/NqI3rwkef7m33mv3+b
HqYaLs27Za7u5Te080O1ylyap8vcxGHayeUp4XTcflPm6/t0LXsxKlJVUVoH
kPnHvsbjio9GqzTSuoHMJ/R/GdHTP5a+P6x8vj9Nz3sCOuZ5vR99Xj+ZeS4/
lz6Xz2eev++iz99fMs/Z4+lz9gSab5B7nR6205TkW0krb9+D3aD9U/qcvYh5
nl6OPk//yDw3r0efm7sxz8db0efjhcxz8O70OfgZ5nm3M33ePYt5rj2NPtfe
SXOYvR/dpDkMPKh3NauSHPakOQzcNnbqvJIcPkVzmL1/QQ6z3IHmMHBjj7di
DsfSHAb+9+/Q/qVzGPjBvu1Xls5h9v4IOczyAcy4zpiO63JoDgPfMTIF5TDw
r/03hZfk8Fyaw8DbHrS0LZ3DwJ/uqfBv6Rxm79eNaA6z/DjNYeAGH4PEHN5L
cxi42e/DYg5vpjkMPH34LNOSHK5Jcxh4n5H1XpXk8Gqaw/JzNO8fYg5/pTkM
/Mfpx2IOv6c5zI4r7GgOszyB5jDwsXM6rirJ4bI0h4GHv38h5vBQmsPAE6Z6
3S/JYROaw8CTGvVdX5LD0TSHgT+fU+lASQ470xwG/vJagZjDqTSHgb+21Io5
bEZzGPhbn1gxh51o3rLjJS3NW+B3ptwU89aa5i3wi4OjxLyNpXkLvKa7r5i3
lWjeAp9Jv79wpXkLPCGkaWFJ3o6heQu88rNvYt42o3kLPHz+EzFvA2neAnct
ThHztjLNW+CV/M6JeXuF5i3wCNM9kWLe0nVIuE9lVussrkPS3JbvFxfHnRTX
bwuZvN1I85Z6ln/fGe3cxOPQemQPb3vliceB72LYcSZ8/wL8hfki9H0i8F9f
9qHvE4GXH/fdnPP9i1D98mjxfmei53kWfOcCXJsSj77HBz56+Rz0vSfwx21M
0HdbwCfnXkf7SwB/tWO5uA7/UM9zK/AAfJaXD/IAfNf0YxU431sJC7dWRN8B
AR8ZNVv00Jh5bsXuWwL8xYAV6HyBp+dYofMFfmVBbiHn+ykhqsIO9F088OP7
e4nrdXC+MA5/e38bOl/gVuln0fkCz7tUB50v8MBTK8TzzWSeW7H7hAC/ub0H
Oi/gLSt8RucF3NfrBDov4LmFY9F5ye9RM/t7AL/iEIfOC/iwj83QeQF/cshP
PK8mzPMsdv8N4Fv2VULfW8nziMKLqH7gDfp5ivU/Yp5nsftjAE+0sEV1yutg
u4PFOu2Y51zsPhXAzaffR/XI728H/SvWY8E852L3iwA+Z3O4+HcfMM+/2P0Z
gG/9dFQ8fnNmnAz7Iaxgnoux+wyw82K4rlkO/QG4Xf4j1B+AD9vxFnkGvjnM
DZ2v/Fws9RXKN+DsvgHAPSfaoO/4gPt5FKLrAvgpr3OoXwG/umku+h2B5+2x
Qt9LAv9zXCd6e6jnuRj4kdfxer9GfoDnGxQhP8C/5S7h7Gtxl1S69B3lHnD2
u37gJqQM+p4R+FGrJOQBeKtGa5EH4OFVHfB30LBO+6ucUel8gHFvl6AveH8w
yn3mG6DvPeX39GquR+cLfFCkISmde8DZ7+iB78+9j/f1otxPvQedF/A1a8ai
8wLuOawROi8YJ7PfvwNv+KRKReU+ME9IpsMudF7yc7GTjUjp3APOfp8O/EPv
M5x9Wp6QoUXzUf3Aw0I7GJXOPRgns9+Py+PtJUdQncAfHmxHSucecPY7buCN
52xA9QB/9WeQUencg/EV+z018Ma7epLSuQec/X4ZuPnIGUalcw/Gaez3wjBu
aUC/W4TcY8ct0B54B/pdHuQS8JS0+mIuwXHYdTzIB5bD8eXnMvR7NDi+/N3Z
dkuUe8AfjnwojnPg77LrePB3WQ5/F/hc+n0W/F35edAgW/R35fXAz6/Q+Ap4
UmCQmLdQD7teB/WwHK4v4H/6nhRzA+oEvol+3yTvC0G5naEK1Qn86M4iVCfw
GqZn0X0BuPex6eJ1B/Wz63VQv2J9jz7XA2635Db6/h34tolRKA/l46y9JeY/
nC/wEPqdEZwv8LBrTuh8gW+wLY/yH/jkAwI6X+DdKixFOQO87nwb8boGD+w6
HnhgOXgAvuMU3sceuNnSROQB+P5hmeg+CNzyzSAxH8AP8CT6fRD4Ad58/Wjk
B7j7vVrIjzwuMr2D/AD/OnMz8gO8e0QflHvAff4YoO/92fU9vC/9fxzvS6+2
5+9Lr7bn70uvtufvS6+25+9Lr7bn70uvts9B39dsTIBxzg/6fQ3er15tz9+v
Xm3P369ebc/fr15tz9+vXm3P369ebc/fr15tz+5Xz47H4LyA16PficB5Ab9b
bTXKc3Y9EH5HlsPxgben30fA8YE73vwXeQO+tGDwtdJ5zq4Hwt9lOfxd4EPo
9wLy/maUazbtRX8XuOsWV/R7Af/m1zSjdJ6z635QD8uh38rv51evnlk6z+X3
Iuj79vJ+SpR363cc74tCea/W7qhO4P2rt0fjQOCDPn1Hec6u+0H9LJf3u6Dc
8l4Ruh6B5zQ3QeNA4PcaN6lYOs+Bb6DvvcP5Ao8qF47OF3jz68vx/iSU793W
G50v8Mojq6L9SeTzapguXkdwvuw6IZwv8DXlfqHzBT63R3N0vsALC1qg8STw
U/YCym3gR+n76uABeLskAXkAXtVtE/IA/FX1EcgD8CvRjZEH4Edc36A8Ab66
XCTKE/b9q5V63qdawbw3BfuugE8YF31RJ6N9P2C8we5zAtfdyyoFiEN/Zvcb
gTrHxERx9lF5I0TlX0Acxo2wLy5wyHnHGjmIQx6GOOQhDnkF+7D9HxUvziI=

      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
mXK0UdHnRprTh6N90K3yB9E52xD1P9pPDdYzRteduipGSF2LflB7XXRde4L8
UHTud5vWQnR9/A7FDNF+bYD8U3QNfaj8Q7TfHAQ/GV1zv137dXTNfZh8eXS9
sb/GPLp+1UXrJbqOrOd9PbqOr/4MjK53ay4GRNd5NUd9os8JtGb7R58BaB7v
ia6bd9Y+GX1u8ZD20ujzgEnwoOgatOb0teh6/WTt7dG1/vHa/6Nr/RPhwdH1
a9nM5Oi6aD/FJ9G1tR7wmOj6W/fU9VDlKBpbxamKV1UPWR68L3RLfe6j+F05
4dzUueYZzOdX6DsLHp93o+MzxYo626on38E1S9ADCn5GnYUpzq1C+zvBe43G
c1l0DKr4TWcTqv2oBrIieJ9SPz8PPhPpC38Wnb8p//o33x9Hpz7zUuypnHZv
vrferXURXcPUs6yOjgsVHyqXVq6k2sv06HOUkfCq4D1UY7U5+JxFY7gh+Pyl
N7wuuM7QC14TXGfombouoHhV9Za+0WdF8tvjo+vSuv7l6L1/nPxYdEwwVnYd
XXdTTP5BdP1OMfb70XU6xeT7pz6v0fWlda+C76N5Ua6g/Oy96FqeYuNp0bWV
EfCi6PxEecrT0fHBKD1LdA1Rcenw6HNc7SOnpD4XkE1WSX1mNAW9Nrp2qZj2
kNRnalqDS6Jrhco1Yurzpvvky6PrdIqTs9RnRvejl0bXMZVTrIiu0yk3SVOf
Yd2r/SS6Dqi4/eDU52Wy+eXRNUfF2/ulPjt7AF0q9ZnXGPmq6HqochOdE8t3
yS7XR9dSFc/fHn2+KN/4fHQ8od+dFR1z3APPiY7J1Oej9ZwFr8H/aJte8DWz
o+MSPe+Q6LMo+dWZ0TGT7PCF6FhQfesXfaaovX5GdGx3l/xzHg/dCT+Xx16y
7RejY0E945Gpzze13o9Kfb4pX3FX9LmX9sfR0ede2h/XRNeXlV+MiD5rV7wx
MvqMXDHGp9F1Z+U7n0TXdpUHrYyupSpXWhx9Lqh8c1V0vVV509Do837tBcOi
z/u177wdnesqJ10YfRYr+5kUfaajtbwp+HyzD/xDHq9qLzgy8zsHykEOz3zG
rxxna3AMLB8+IfocROvxoMzvRijmPzjzewPKKQ7N/D6BcqJDMr83oJzol+CY
VvvF0ZnfdVA+NbLoeojixonR51DqW7nM7xYox5lQdP1Eue3Jmc/sFbdUznwu
rvjnlMzn+opttOeqHlZNuV3m9x6UE20LjqW113wffIar/ei4zO+CKL46PvM7
Iorl9gTnDrKTYzO/R6J9dlN0TV+55MboMwPlp+UzvzuiXK9S5ncdFFNtCc4d
tLeelPm8X/FYhczvnSgHPDHzuwWK2cZFn83Jv/2mfangvfXX4Jhc++bPwTG8
9m69/6BalGqCx2R+90Uxw+aia1+qCdbIPI46K///uzOJ65aK31XjUr2xf9H1
KJ3p7w7OobQuzsw8TzoL/jM4F5B/+ys4b5IPL5v5fRHld9Uz30vnpDUz9+OW
1O9vqPamOubO4PxL/vDb4LqUYoZlwbmVrv8fG5xtdw==
             "]], Polygon3DBox[CompressedData["
1:eJwtmnfgV9Mfxu8Z9xtFixJFCSVpUsnPqOyymkahKRnZe2+yshUysmWERLJF
RkZ2RUZ22bvh97y+z/3jfO557jmfO854v5/3874bjjxywPhYFMUz+sk6Lk9F
cZWONTreWxbF0SqvhKLYQufO0Ln11Ok51TdWfe2aolhL+D7h9YVnqO+/Ol4p
XOp4j/ARKs/p/+117gT+o/73q76B6o+r7RIdewlP1f076Xqbqf1t4S11vqXw
n8KdhF/UNV5T/7rCtwk3Uft04Sx8o3B94QeFD1aZqb4b6dx4ndtI+FjVV9P1
/1W9nvrfLtxUbY8It1Q5Sjir/Q/Vx6g8rv+31rkj1OdQ4aeFNxU+VnhDxoTx
Uf+/VR+t8pjaW+ncoWpPuv5k1ddU/YHqeR8WXlt4Db3PmsJ3CDcTfkztq3S8
Vnh1HacJr6P2p4U3FG6k/it1vIbn1/F+tXdV+8fC2whvrPZmws8ItxZuLHyk
+szR83TRudN0bgu1L1B9O9U3UfvOpfsP1POvL/yz2lsKP6r/vKS2dYWfFd5I
/ddSezvht4S3EN5AeLz6PK++m+vciTr3S/a7MwZz1Lap8JvCXZOv31n4Q+Gt
hVsLtxB+VLit8Cz1/124rfBs/X8uc6Hysupdde50nlntr6veibWn/6/Q8Wrh
Ojrex3pTe3fh1/WfecL/CHcTfk34DeE2wm8Id1b/5vp/W+F5wl2EWwg/L9xE
fffXeGwo/IdwR7W/oHOv6v8bCc8S7qD+Twn/JtxG+Cm1vyLcUfh94a3U3kr/
/17HicK/63pB+AXhE4UXCv+o/juqzBbuH/083YRvYb0L1xPeSvhu4f8J1xfe
UngK4y9cV7ix7veEcHNdt6twD7XfxfiqfU32i85fJlzoeJfaeqrcK7it2hvU
eH/eynrXsUb4f7peY+FJep/91Hdg6f03Rv3bq33v0uM1UnhT+gs/INwnen32
Lz3fo4Tb1XgPsZdKlT9V76Jyg9o3F15N7d1L379b9H7oKHwF9oT/CL+r5zpL
eInwX6X3E8+/hs53UXun0uO7SfTztxY+hvUg/I/qm6gcL1xXeAXzr3KCcD3h
lapvrHIc+014uertVS4SbiEcdb3NhS/Gngkn4S+S8VLh/9S2Wenna1LNb9vS
87uG8Cr2RvL9FggvYz+onIw9qP7/TLI9+lD4e2xL8vN/IPyd8N/J8x11zLr+
s8nP+5Haf8CWJr/fx8JLhQeU3p+jhTdT/8Fqj5rLhioNdG4INkn1RiobCHdW
/+vVv73qddT/n+T1l5LHv4vG+yPWH7ZTeAPhOcKbCjcR/iV5PpdX47WNrveg
8A7R9qcX9lO4r3BT4T7CTwrvIbyucF/8ifDQaHuwvfAM4d2ir7+t8EPCO0bb
nzV0/6nC6+i+j6ptu9L2dKdo/7NLaXs1KNo+7VraPw2O9h+7lX7+/aL3Zwdd
7z3hHrpeB+HvktffbzhB4efUvrbGqp/wOsK9S++33YWbCc9Se4PABGks1NZP
Za7gsOjx2l34VeEDou1zH/VfT/g+/We42rYXbip8q/Aw3gf7IzxFeKjwttxf
+CZskvBepe3XCF2vra63Z2l7OFy4TY3tE/fbPHl8Wwm/LNwuefxbZz9f++Tn
36m0fxkQbf9G6nwd4VOFD8C+CU8SXlGt/1L/v0m4gc4/pPbewusK36PnO0i4
l3Az4buEDxTeQbi58DThEdg74RbCDwqPFB6n69QX3lnHzZk/tW9Y+Q986U7C
6ws/LDxKuE62vWmk/qur/+HMt9o207njKz4yHXug+hNq+5DrBa/5B1jLKq1V
zyoPqv4B/ip4j0zDduP/VA8q96t+fjJXuUXvfwJ7i/dV23Kdu4N2nfsRWwlO
bttBZfWqTzMd+6ispvKv8Hnqv0z1fVWfqv7vMD7CKxkz1obqO6rUVVlB/+R3
m6L7H6//XpDsa28VPhFbpbJCfcfq3CPYJuGVwofgw5N9Ptzl2mguwBgxH1dE
j925wu2EbxY+rjQnY34mRnO1c5K5zk3Cxwpflsz97hI+RfjSZN98p/DJFX+D
a9whfFJpTsD8XRnNFZiLfpX9YU6Yi91VGldzwlz0rewVc3KOytbsr+B9drZK
T5X/dKq+jmepbKWyCpuq4/W6x3q61/nCn+jel5S2xdhkfO9lwvV5duE5wpcL
NxQ+Dc4g/Cb7i2sKX5XMIeASPXiHZA4Bl4BjTMRWCDfS/08Xnid8aWnbjo1/
Rfgi9e2lUhPMKy5U2V6lDLYrb1dzzlzfqfoFcCBsg/D9yWtjJ5V61Rp5M3tN
sZamqn61+jfV/c4Wfh+uXtoX4ZPwnW3Ut7dKHZWmKhPV3ljtZ6j9rWQOv7Hq
10dz+2tVmql+Lj4FrgkHFT4HHyV8HZxQ+DzhhcmcDG59XTRXu114V+HZXKM0
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
q7O5LpyX3OI1Ff8g50jukfnFV+6YzHX/DxIFXP0=
             "]], Polygon3DBox[CompressedData["
1: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
3jGTvLd4f534Gfy/aCtR/w==
             "]], 
            Polygon3DBox[{{969, 968, 1229, 358, 343, 1228}, {1133, 735, 852, 
             1366, 970, 971}}]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
        {GrayLevel[0], 
         Line3DBox[{246, 1, 242, 227, 861, 16, 875, 31, 890, 46, 905, 61, 920,
           76, 935, 91, 950, 106, 966, 967, 121, 995, 136, 1010, 151, 1025, 
          166, 1040, 181, 1055, 196, 1184, 231, 248, 211, 244, 236, 615, 212, 
          616, 213, 350}], Line3DBox[{408, 2, 844, 234, 246}], 
         Line3DBox[{279, 3, 408}], Line3DBox[{411, 4, 859, 264, 379}], 
         Line3DBox[{413, 5, 411}], Line3DBox[{415, 6, 413}], 
         Line3DBox[{417, 7, 415}], Line3DBox[{421, 8, 418, 417}], 
         Line3DBox[{423, 9, 421}], Line3DBox[{425, 10, 423}], 
         Line3DBox[{427, 11, 425}], Line3DBox[{429, 12, 427}], 
         Line3DBox[{431, 13, 429}], Line3DBox[{433, 14, 431}], 
         Line3DBox[{247, 15, 243, 235, 433}], 
         Line3DBox[{888, 30, 1181, 229, 247}], Line3DBox[{903, 45, 888}], 
         Line3DBox[{918, 60, 903}], Line3DBox[{933, 75, 918}], 
         Line3DBox[{948, 90, 933}], Line3DBox[{963, 105, 948}], 
         Line3DBox[{992, 120, 963}], Line3DBox[{1008, 135, 993, 992}], 
         Line3DBox[{1023, 150, 1008}], Line3DBox[{1038, 165, 1023}], 
         Line3DBox[{1053, 180, 1038}], Line3DBox[{1068, 195, 1053}], 
         Line3DBox[{617, 214, 618, 215, 619, 216, 620, 217, 621, 622, 218, 
          623, 219, 624, 220, 625, 221, 626, 222, 627, 223, 628, 224, 843, 
          233, 249, 225, 245, 237, 1082, 210, 1068}], 
         Line3DBox[{294, 278, 617}]}, {}, 
        {GrayLevel[0.2], 
         Line3DBox[{861, 1179, 629, 860, 1369, 1083, 862, 1227, 1258}], 
         Line3DBox[{875, 1261, 1473, 874, 1380, 1095, 876, 1244}], 
         Line3DBox[{888, 1105, 1390, 887, 1104, 1389, 886, 1103, 1388, 885, 
          1102, 1387, 884, 1101, 1386, 883, 1100, 1385, 882, 1475, 1263, 881, 
          1474, 1262, 1384, 880, 1099, 1383, 879, 1098, 1382, 878, 1097, 1381,
           877, 1096, 1588, 1204, 1219, 1188, 1231}], 
         Line3DBox[{890, 1264, 1476, 889, 1265, 1477, 891, 1245}], 
         Line3DBox[{903, 1114, 1399, 902, 1113, 1398, 901, 1112, 1397, 900, 
          1111, 1396, 899, 1110, 1395, 898, 1480, 1268, 897, 1479, 1267, 896, 
          1478, 1266, 1394, 895, 1109, 1393, 894, 1108, 1392, 893, 1107, 1391,
           892, 1106, 1589, 1205, 1220, 1189, 1232}], 
         Line3DBox[{905, 1269, 1481, 904, 1270, 1482, 906, 1246}], 
         Line3DBox[{918, 1121, 1407, 917, 1120, 1406, 916, 1119, 1405, 915, 
          1118, 1404, 914, 1486, 1275, 913, 1485, 1274, 912, 1484, 1273, 911, 
          1483, 1272, 1403, 910, 1117, 1402, 909, 1116, 1401, 908, 1115, 1400,
           907, 1583, 1271, 1206, 1221, 1190, 1233}], 
         Line3DBox[{920, 1276, 1487, 919, 1277, 1488, 921, 1247}], 
         Line3DBox[{933, 1126, 1413, 932, 1125, 1412, 931, 1124, 1411, 930, 
          1494, 1283, 929, 1493, 1282, 928, 1492, 1281, 927, 1491, 1280, 926, 
          1490, 1279, 1410, 925, 1123, 1409, 924, 1122, 1408, 923, 1489, 1278,
           922, 1584, 1192, 1207, 1191, 1234}], 
         Line3DBox[{935, 1284, 1495, 934, 1285, 1496, 936, 1248}], 
         Line3DBox[{948, 1129, 1417, 947, 1128, 1416, 946, 1505, 1293, 945, 
          1504, 1292, 944, 1503, 1291, 943, 1502, 1290, 942, 1501, 1289, 941, 
          1500, 1288, 1415, 940, 1127, 1414, 939, 1499, 1287, 938, 1498, 1286,
           937, 1364, 1497, 1208, 1193, 1235}], 
         Line3DBox[{950, 1294, 1506, 949, 1295, 1507, 951, 1249}], 
         Line3DBox[{963, 1130, 1419, 962, 1518, 1305, 961, 1517, 1304, 960, 
          1516, 1303, 959, 1515, 1302, 958, 1514, 1301, 957, 1513, 1300, 956, 
          1512, 1299, 1418, 955, 1511, 1298, 954, 1510, 1297, 953, 1509, 1296,
           952, 1365, 1508, 1209, 1194, 1236}], 
         Line3DBox[{967, 1420, 1131, 965, 1421, 1132, 969, 1228, 1259}], 
         Line3DBox[{992, 1534, 1319, 990, 1533, 1318, 988, 1532, 1317, 986, 
          1531, 1316, 984, 1530, 1315, 982, 1529, 1314, 980, 1528, 1313, 978, 
          1526, 1525, 1311, 976, 1524, 1310, 974, 1523, 1309, 972, 1522, 1308,
           970, 1366, 1521, 1210, 1226, 1257}], 
         Line3DBox[{995, 1320, 1535, 994, 1433, 1144, 996, 1250}], 
         Line3DBox[{1008, 1154, 1443, 1007, 1153, 1442, 1006, 1152, 1441, 
          1005, 1151, 1440, 1004, 1150, 1439, 1003, 1149, 1438, 1002, 1537, 
          1322, 1001, 1536, 1321, 1437, 1000, 1148, 1436, 999, 1147, 1435, 
          998, 1146, 1434, 997, 1145, 1591, 1212, 1223, 1196, 1238}], 
         Line3DBox[{1010, 1323, 1538, 1009, 1324, 1539, 1011, 1251}], 
         Line3DBox[{1023, 1163, 1452, 1022, 1162, 1451, 1021, 1161, 1450, 
          1020, 1160, 1449, 1019, 1159, 1448, 1018, 1542, 1327, 1017, 1541, 
          1326, 1016, 1540, 1325, 1447, 1015, 1158, 1446, 1014, 1157, 1445, 
          1013, 1156, 1444, 1012, 1155, 1592, 1213, 1224, 1197, 1239}], 
         Line3DBox[{1025, 1328, 1543, 1024, 1329, 1544, 1026, 1252}], 
         Line3DBox[{1038, 1170, 1460, 1037, 1169, 1459, 1036, 1168, 1458, 
          1035, 1167, 1457, 1034, 1548, 1334, 1033, 1547, 1333, 1032, 1546, 
          1332, 1031, 1545, 1331, 1456, 1030, 1166, 1455, 1029, 1165, 1454, 
          1028, 1164, 1453, 1027, 1585, 1330, 1214, 1225, 1198, 1240}], 
         Line3DBox[{1040, 1335, 1549, 1039, 1336, 1550, 1041, 1253}], 
         Line3DBox[{1053, 1175, 1466, 1052, 1174, 1465, 1051, 1173, 1464, 
          1050, 1556, 1342, 1049, 1555, 1341, 1048, 1554, 1340, 1047, 1553, 
          1339, 1046, 1552, 1338, 1463, 1045, 1172, 1462, 1044, 1171, 1461, 
          1043, 1551, 1337, 1042, 1586, 1200, 1215, 1199, 1241}], 
         Line3DBox[{1055, 1343, 1557, 1054, 1344, 1558, 1056, 1254}], 
         Line3DBox[{1068, 1178, 1470, 1067, 1177, 1469, 1066, 1567, 1352, 
          1065, 1566, 1351, 1064, 1565, 1350, 1063, 1564, 1349, 1062, 1563, 
          1348, 1061, 1562, 1347, 1468, 1060, 1176, 1467, 1059, 1561, 1346, 
          1058, 1560, 1345, 1057, 1367, 1559, 1216, 1201, 1242}], 
         Line3DBox[{1082, 1186, 1185, 1582, 1081, 1579, 1363, 1080, 1578, 
          1362, 1079, 1577, 1361, 1078, 1576, 1360, 1077, 1575, 1359, 1076, 
          1574, 1358, 1075, 1573, 1357, 1471, 1074, 1572, 1356, 1073, 1571, 
          1355, 1072, 1570, 1354, 1071, 1368, 1569, 1217, 1202, 1243}], 
         Line3DBox[{1181, 1094, 1180, 1580, 873, 1093, 1379, 872, 1092, 1378, 
          871, 1091, 1377, 870, 1090, 1376, 869, 1089, 1375, 868, 1088, 1374, 
          867, 1472, 1260, 1373, 866, 1087, 1372, 865, 1086, 1371, 864, 1085, 
          1370, 863, 1084, 1587, 1203, 1218, 1187, 1230}], 
         Line3DBox[{1184, 1182, 1183, 1581, 1069, 1353, 1568, 1070, 1255}], 
         Line3DBox[{1237, 1195, 1222, 1211, 1590, 1133, 971, 1422, 1134, 973, 
          1423, 1135, 975, 1424, 1136, 977, 1425, 1312, 1527, 979, 1426, 1137,
           981, 1427, 1138, 983, 1428, 1139, 985, 1429, 1140, 987, 1430, 1141,
           989, 1431, 1142, 991, 1432, 1143, 993}], 
         Line3DBox[{1256, 1229, 968, 1520, 1307, 964, 1519, 1306, 966}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{408, 630, 1369, 409, 644, 1380, 436, 1477, 659, 451, 1482,
           674, 466, 1488, 689, 481, 1496, 704, 496, 1507, 719, 511, 1520, 
          734, 1421, 526, 749, 1433, 541, 1539, 764, 556, 1544, 779, 571, 
          1550, 794, 586, 1558, 809, 601, 1568, 824, 616}], 
         Line3DBox[{411, 632, 1370, 412, 646, 1381, 438, 661, 1391, 453, 676, 
          1400, 468, 1489, 691, 483, 1498, 706, 498, 1509, 721, 513, 1522, 
          736, 1422, 528, 751, 1434, 543, 766, 1444, 558, 781, 1453, 573, 
          1551, 796, 588, 1560, 811, 603, 1570, 826, 618}], 
         Line3DBox[{413, 633, 1371, 414, 647, 1382, 439, 662, 1392, 454, 677, 
          1401, 469, 692, 1408, 484, 1499, 707, 499, 1510, 722, 514, 1523, 
          737, 1423, 529, 752, 1435, 544, 767, 1445, 559, 782, 1454, 574, 797,
           1461, 589, 1561, 812, 604, 1571, 827, 619}], 
         Line3DBox[{415, 634, 1372, 416, 648, 1383, 440, 663, 1393, 455, 678, 
          1402, 470, 693, 1409, 485, 708, 1414, 500, 1511, 723, 515, 1524, 
          738, 1424, 530, 753, 1436, 545, 768, 1446, 560, 783, 1455, 575, 798,
           1462, 590, 813, 1467, 605, 1572, 828, 620}], 
         Line3DBox[{417, 635, 1373, 419, 649, 1384, 441, 664, 1394, 456, 679, 
          1403, 471, 694, 1410, 486, 709, 1415, 501, 724, 1418, 516, 1525, 
          739, 1425, 531, 754, 1437, 546, 769, 1447, 561, 784, 1456, 576, 799,
           1463, 591, 814, 1468, 606, 829, 1471, 621}], 
         Line3DBox[{421, 637, 1374, 422, 1475, 651, 443, 1479, 666, 458, 1484,
           681, 473, 1491, 696, 488, 1501, 711, 503, 1513, 726, 518, 1528, 
          741, 1426, 533, 1537, 756, 548, 1541, 771, 563, 1546, 786, 578, 
          1553, 801, 593, 1563, 816, 608, 1574, 831, 623}], 
         Line3DBox[{423, 638, 1375, 424, 652, 1385, 444, 1480, 667, 459, 1485,
           682, 474, 1492, 697, 489, 1502, 712, 504, 1514, 727, 519, 1529, 
          742, 1427, 534, 757, 1438, 549, 1542, 772, 564, 1547, 787, 579, 
          1554, 802, 594, 1564, 817, 609, 1575, 832, 624}], 
         Line3DBox[{425, 639, 1376, 426, 653, 1386, 445, 668, 1395, 460, 1486,
           683, 475, 1493, 698, 490, 1503, 713, 505, 1515, 728, 520, 1530, 
          743, 1428, 535, 758, 1439, 550, 773, 1448, 565, 1548, 788, 580, 
          1555, 803, 595, 1565, 818, 610, 1576, 833, 625}], 
         Line3DBox[{427, 640, 1377, 428, 654, 1387, 446, 669, 1396, 461, 684, 
          1404, 476, 1494, 699, 491, 1504, 714, 506, 1516, 729, 521, 1531, 
          744, 1429, 536, 759, 1440, 551, 774, 1449, 566, 789, 1457, 581, 
          1556, 804, 596, 1566, 819, 611, 1577, 834, 626}], 
         Line3DBox[{429, 641, 1378, 430, 655, 1388, 447, 670, 1397, 462, 685, 
          1405, 477, 700, 1411, 492, 1505, 715, 507, 1517, 730, 522, 1532, 
          745, 1430, 537, 760, 1441, 552, 775, 1450, 567, 790, 1458, 582, 805,
           1464, 597, 1567, 820, 612, 1578, 835, 627}], 
         Line3DBox[{431, 642, 1379, 432, 656, 1389, 448, 671, 1398, 463, 686, 
          1406, 478, 701, 1412, 493, 716, 1416, 508, 1518, 731, 523, 1533, 
          746, 1431, 538, 761, 1442, 553, 776, 1451, 568, 791, 1459, 583, 806,
           1465, 598, 821, 1469, 613, 1579, 836, 628}], 
         Line3DBox[{433, 838, 1580, 839, 434, 657, 1390, 449, 672, 1399, 464, 
          687, 1407, 479, 702, 1413, 494, 717, 1417, 509, 732, 1419, 524, 
          1534, 747, 1432, 539, 762, 1443, 554, 777, 1452, 569, 792, 1460, 
          584, 807, 1466, 599, 822, 1470, 614, 841, 1582, 842, 843}], 
         Line3DBox[{615, 823, 1581, 840, 600, 808, 1557, 585, 793, 1549, 570, 
          778, 1543, 555, 763, 1538, 540, 748, 1535, 525, 1420, 733, 1519, 
          510, 718, 1506, 495, 703, 1495, 480, 688, 1487, 465, 673, 1481, 450,
           658, 1476, 435, 643, 1473, 407, 629, 837, 844}], 
         Line3DBox[{617, 825, 858, 1569, 602, 810, 857, 1559, 587, 795, 1586, 
          856, 572, 780, 1585, 855, 557, 1592, 765, 854, 542, 1591, 750, 853, 
          527, 1590, 735, 852, 1521, 512, 720, 851, 1508, 497, 705, 850, 1497,
           482, 690, 1584, 849, 467, 675, 1583, 848, 452, 1589, 660, 847, 437,
           1588, 645, 846, 410, 1587, 631, 845, 859}], 
         Line3DBox[{622, 830, 1573, 607, 815, 1562, 592, 800, 1552, 577, 785, 
          1545, 562, 770, 1540, 547, 755, 1536, 532, 740, 1527, 1526, 517, 
          725, 1512, 502, 710, 1500, 487, 695, 1490, 472, 680, 1483, 457, 665,
           1478, 442, 650, 1474, 420, 636, 1472, 418}]}, {}, {}}},
      VertexNormals->CompressedData["
1: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
       "]],
     Axes->True,
     AxesLabel->{None, None, None},
     BaseStyle->{FontFamily -> "Arial"},
     BoxRatios->{1, 1, 0.4},
     DisplayFunction->Identity,
     FaceGridsStyle->Automatic,
     Method->{"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"},
     PlotRange->{{-0.5, 0.5}, {-0.000016, 0.000016}, {0.02, 
      0.11012256783144504`}},
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]},
     Ticks->{Automatic, Automatic, Automatic}], {189., -189.}, 
    ImageScaled[{0.5, 0.5}], {360., 360.},
    ContentSelectable->True], {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6183126579335537`*^9, 3.6183126796639886`*^9}, {
   3.618312750685409*^9, 3.618312804296481*^9}, {3.618312838557166*^9, 
   3.6183128460073156`*^9}, {3.618312931089017*^9, 3.6183129427192497`*^9}, {
   3.6183130551814985`*^9, 3.6183131182727604`*^9}, 3.618313464959694*^9, {
   3.618313546691329*^9, 3.6183135698817925`*^9}, {3.618313603492465*^9, 
   3.618313610362602*^9}, 3.618313711094617*^9, 3.618314075063898*^9, 
   3.6183146385751677`*^9, {3.6183147823480434`*^9, 3.618314801038417*^9}, 
   3.618415234660648*^9, 3.6184194872197795`*^9, 3.618420660793627*^9, 
   3.6184215340045185`*^9, 3.6184216356615443`*^9, {3.6184246459979906`*^9, 
   3.6184246707872467`*^9}, 3.6184247159707203`*^9, 3.6184249433424487`*^9, 
   3.6184250041681366`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["trace", "Section",
 CellChangeTimes->{{3.618338017539955*^9, 3.6183380186099653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curious", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceVariables", "[", 
     RowBox[{"lucaMod", ",", "subbedPolys", ",", 
      RowBox[{"{", 
       RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "//.", 
    "lucaSubs"}], "//", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
  3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
  3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"2.2898349882893854`*^-16", " ", "qq"}], "+", 
    RowBox[{"2.4444855469471185`*^-7", " ", "ru"}], "-", 
    RowBox[{"2.9697406632510525`*^-7", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.6537020337875675`*^-12", " ", "qq"}], "+", 
    RowBox[{"8.907311964506169`*^-11", " ", 
     SuperscriptBox["qq", "2"]}], "+", 
    RowBox[{"1.54090327940371`*^-16", " ", "ru"}], "+", 
    RowBox[{"1.8668915258253024`*^-11", " ", "qq", " ", "ru"}], "-", 
    RowBox[{"2.499184843959513`*^-10", " ", 
     SuperscriptBox["qq", "2"], " ", "ru"}], "-", 
    RowBox[{"9.219239655106568`*^-16", " ", "qq", " ", 
     SuperscriptBox["ru", "2"]}], "-", 
    RowBox[{"1.0080263819565571`*^-16", " ", "uu$Shock"}], "+", 
    RowBox[{"1.9593868252089376`*^-11", " ", "qq", " ", "uu$Shock"}], "-", 
    RowBox[{"2.6229998974938523`*^-10", " ", 
     SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "-", 
    RowBox[{"1.1733547466974415`*^-11", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "1.048104230262825`*^-10", " ", "qq", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{"6.996884301717546`*^-10", " ", 
     SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{"5.794460393648489`*^-16", " ", 
     SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
    RowBox[{"2.5810797217539472`*^-15", " ", "qq", " ", 
     SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
    RowBox[{"1.1755017308461897`*^-15", " ", "qq", " ", 
     SuperscriptBox["uu$Shock", "2"]}], "+", 
    RowBox[{"7.039491224099255`*^-16", " ", "ru", " ", 
     SuperscriptBox["uu$Shock", "2"]}], "+", 
    RowBox[{"3.1356652415648007`*^-15", " ", "qq", " ", "ru", " ", 
     SuperscriptBox["uu$Shock", "2"]}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.49999840000000045`", " ", "ru"}], "+", 
    RowBox[{"1.943785131327913`*^-6", " ", "uu$Shock"}], "-", 
    RowBox[{
     RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.653646522636336`*^-12", " ", "qq"}], "+", 
    RowBox[{"8.907311964506169`*^-11", " ", 
     SuperscriptBox["qq", "2"]}], "+", 
    RowBox[{"1.8668915258253024`*^-11", " ", "qq", " ", "ru"}], "-", 
    RowBox[{"2.499184843959513`*^-10", " ", 
     SuperscriptBox["qq", "2"], " ", "ru"}], "-", 
    RowBox[{"9.219239655106568`*^-16", " ", "qq", " ", 
     SuperscriptBox["ru", "2"]}], "+", 
    RowBox[{"1.9593868252089376`*^-11", " ", "qq", " ", "uu$Shock"}], "-", 
    RowBox[{"2.6229998974938523`*^-10", " ", 
     SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "-", 
    RowBox[{"1.1733547466974415`*^-11", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "1.048104230262825`*^-10", " ", "qq", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{"6.996884301717546`*^-10", " ", 
     SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{"5.794460393648489`*^-16", " ", 
     SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
    RowBox[{"2.5810797217539472`*^-15", " ", "qq", " ", 
     SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
    RowBox[{"1.1755017308461897`*^-15", " ", "qq", " ", 
     SuperscriptBox["uu$Shock", "2"]}], "+", 
    RowBox[{"7.039491224099255`*^-16", " ", "ru", " ", 
     SuperscriptBox["uu$Shock", "2"]}], "+", 
    RowBox[{"3.1356652415648007`*^-15", " ", "qq", " ", "ru", " ", 
     SuperscriptBox["uu$Shock", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"eqvdIf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
         RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
         RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], 
        "\[GreaterEqual]", 
        FractionBox["1", "50"]}], ",", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
        RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
        RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], ",", 
       FractionBox["1", "50"]}], "]"}]}], "+", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox["1", "50"], 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "50"]}], "+", 
              RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
              RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
              RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], "<", 
             "0.`"}]},
           {
            RowBox[{"0.057330592860925615`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.10558686143826942`", " ", "qq"}], "+", 
             RowBox[{"4.938370437648776`*^-7", " ", "ru"}], "+", 
             RowBox[{"1.3967820897686778`*^-6", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"5.999456893727301`*^-7", " ", "uu$Shock"}], "+", 
             RowBox[{
             "1.6969026613300464`*^-6", " ", "qq", " ", "uu$Shock"}]}], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.618418646396363*^9, 3.6184186905768046`*^9, 
  3.6184187910678096`*^9, 3.618419170801607*^9, 3.618419494409851*^9, 
  3.618420664713666*^9, 3.618421227511343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subbedPolys", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6184209935269847`*^9, 3.6184210106171556`*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.599999999562307`*^-6", " ", "ru"}], "+", 
  RowBox[{"1.943785131327913`*^-6", " ", "uu$Shock"}]}]], "Output",
 CellChangeTimes->{3.6184210116171656`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"projEquations", "[", "lucaMod", "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//.", "lucaSubs"}]], "Input",
 CellChangeTimes->{{3.6184213381084595`*^9, 3.618421380132885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "0.5`"}], " ", 
   RowBox[{"ru", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
  RowBox[{"ru", "[", "t", "]"}], "-", 
  RowBox[{
   RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{{3.6184213421484995`*^9, 3.6184213805628896`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subbedPolys", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6184214069431534`*^9, 3.6184214300833845`*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.599999999562307`*^-6", " ", "ru"}], "+", 
  RowBox[{"1.943785131327913`*^-6", " ", "uu$Shock"}]}]], "Output",
 CellChangeTimes->{{3.618421415473239*^9, 3.618421432903413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nonStateVar"], "Input",
 CellChangeTimes->{{3.6184207793028235`*^9, 3.618420783472865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"lambda\"\>", ",", "\<\"rr\"\>", ",", "\<\"zz\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6184207848128786`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curious", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6184208995620384`*^9, 3.6184209019420624`*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.49999840000000045`", " ", "ru"}], "+", 
  RowBox[{"1.943785131327913`*^-6", " ", "uu$Shock"}], "-", 
  RowBox[{
   RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.618420902522068*^9, 3.6184212407814755`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["pts"], "Input",
 CellChangeTimes->{{3.6184187715576143`*^9, 3.6184187718676176`*^9}}],

Cell[BoxData[
 RowBox[{"gtChebNodes", "[", 
  InterpretationBox[
   RowBox[{"\[LeftGuillemet]", 
    RowBox[{"JavaObject", "[", 
     RowBox[{
     "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
      "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
    "\[RightGuillemet]"}],
   JLink`Objects`vm1`JavaObject17379594038411265], "]"}]], "Output",
 CellChangeTimes->{3.618418772387623*^9, 3.6184194944298515`*^9, 
  3.6184206647336664`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"curious", "/.", 
      RowBox[{
       RowBox[{
        RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", 
       "uu$Shock"}]}], ")"}], "/.", 
    RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//.", 
   "lucaSubs"}], "/.", 
  RowBox[{"eqvdIf", "\[Rule]", "If"}]}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
  3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
  3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
  3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
  3.6184194199840984`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7.255307465925398`*^-14", ",", "8.781655393708775`*^-12", ",", 
     RowBox[{"-", "1.2529141026924253`*^-6"}], ",", "8.78167501975945`*^-12", 
     ",", 
     RowBox[{"-", "1.3877787807814457`*^-17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.239174537598814`*^-14", ",", "1.3486508765037414`*^-11", ",", 
     RowBox[{"-", "1.2529141026924253`*^-6"}], ",", 
     "1.3486489138776622`*^-11", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.805721792733308`*^-13"}], ",", "8.781711145674543`*^-12",
      ",", 
     RowBox[{"-", "1.21546873180668`*^-7"}], ",", "8.781730772073887`*^-12", 
     ",", 
     RowBox[{"-", "2.7755575615628914`*^-17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.807335085565967`*^-13"}], ",", "1.348659438738284`*^-11",
      ",", 
     RowBox[{"-", "1.21546873180668`*^-7"}], ",", "1.3486574761470714`*^-11", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.807335085565967`*^-13", ",", "8.781690937329581`*^-12", ",", 
     "1.2154687318066812`*^-7", ",", "8.781710563241707`*^-12", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.805721792733308`*^-13", ",", "1.3486563351908356`*^-11", ",", 
     "1.2154687318066812`*^-7", ",", "1.3486543725509014`*^-11", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.239174537598814`*^-14"}], ",", "8.781746689646112`*^-12",
      ",", "1.2529141026924253`*^-6", ",", "8.781766315906904`*^-12", ",", 
     RowBox[{"-", "1.3877787807814457`*^-17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.255307465925398`*^-14"}], ",", 
     "1.3486648974374054`*^-11", ",", "1.2529141026924253`*^-6", ",", 
     "1.3486629348323377`*^-11", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6184188656785555`*^9, 3.6184188922488213`*^9}, 
   3.618418927239171*^9, {3.618419011360012*^9, 3.6184190419703183`*^9}, {
   3.6184190966708655`*^9, 3.618419121541114*^9}, 3.6184191779616785`*^9, 
   3.618419214822047*^9, 3.618419315843057*^9, 3.6184194206641054`*^9, 
   3.6184194944798517`*^9, 3.618420664793667*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["curious"], "Input",
 CellChangeTimes->{{3.6184192535824347`*^9, 3.6184192543724422`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.035484530727783625`", " ", "qq"}], "+", 
    RowBox[{"3.753481752350387`*^-7", " ", "ru"}], "-", 
    RowBox[{
     FractionBox["99", "200"], " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.26774226536389184`", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.26774226536389184`", " ", "qq"}], "+", 
          RowBox[{"9.876740873216277`*^-7", " ", "ru"}], "+", 
          RowBox[{"1.1998913788867687`*^-6", " ", "uu$Shock"}]}], ")"}]}], 
       "+", 
       RowBox[{"9.876740873216277`*^-7", " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.599999999562307`*^-6", " ", "ru"}], "+", 
          RowBox[{"1.943785131327913`*^-6", " ", "uu$Shock"}]}], ")"}]}], "+", 
       RowBox[{"1.1998913788867687`*^-6", " ", "uu$Shock"}]}], ")"}]}], "+", 
    RowBox[{"4.5599762634482184`*^-7", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"5.551115123125783`*^-17", " ", "qq"}], "+", 
    RowBox[{"1.54090327940371`*^-16", " ", "ru"}], "-", 
    RowBox[{"1.0080263819565571`*^-16", " ", "uu$Shock"}], "+", 
    RowBox[{
     FractionBox["1", "50"], " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"3.326823261318168`*^-10", " ", "qq"}], "+", 
       RowBox[{"9.334293338270072`*^-10", " ", "qq", " ", "ru"}], "+", 
       RowBox[{"9.796734534717189`*^-10", " ", "qq", " ", "uu$Shock"}], "-", 
       RowBox[{"5.866773733487207`*^-10", " ", "ru", " ", "uu$Shock"}], "-", 
       RowBox[{
       "2.6132909169973573`*^-9", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
       RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
       RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.326823261318168`*^-10", " ", "qq"}], "-", 
       RowBox[{"9.334293338270072`*^-10", " ", "qq", " ", "ru"}], "-", 
       RowBox[{"9.796734534717189`*^-10", " ", "qq", " ", "uu$Shock"}], "+", 
       RowBox[{"5.866773733487207`*^-10", " ", "ru", " ", "uu$Shock"}], "+", 
       RowBox[{
       "2.6132909169973573`*^-9", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
      ")"}]}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.49999840000000045`", " ", "ru"}], "+", 
    RowBox[{"1.943785131327913`*^-6", " ", "uu$Shock"}], "-", 
    RowBox[{
     RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", "50"], " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"3.326823261318168`*^-10", " ", "qq"}], "+", 
       RowBox[{"9.334293338270072`*^-10", " ", "qq", " ", "ru"}], "+", 
       RowBox[{"9.796734534717189`*^-10", " ", "qq", " ", "uu$Shock"}], "-", 
       RowBox[{"5.866773733487207`*^-10", " ", "ru", " ", "uu$Shock"}], "-", 
       RowBox[{
       "2.6132909169973573`*^-9", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
       RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
       RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.326823261318168`*^-10", " ", "qq"}], "-", 
       RowBox[{"9.334293338270072`*^-10", " ", "qq", " ", "ru"}], "-", 
       RowBox[{"9.796734534717189`*^-10", " ", "qq", " ", "uu$Shock"}], "+", 
       RowBox[{"5.866773733487207`*^-10", " ", "ru", " ", "uu$Shock"}], "+", 
       RowBox[{
       "2.6132909169973573`*^-9", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"eqvdIf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
         RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
         RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], 
        "\[GreaterEqual]", 
        FractionBox["1", "50"]}], ",", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
        RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
        RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], ",", 
       FractionBox["1", "50"]}], "]"}]}], "+", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox["1", "50"], 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "50"]}], "+", 
              RowBox[{"0.2677422653638918`", " ", "qq"}], "+", 
              RowBox[{"9.87674087475718`*^-7", " ", "ru"}], "+", 
              RowBox[{"1.1998913787859661`*^-6", " ", "uu$Shock"}]}], "<", 
             "0.`"}]},
           {
            RowBox[{"0.057330592860925615`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.10558686143826942`", " ", "qq"}], "+", 
             RowBox[{"4.938370437648776`*^-7", " ", "ru"}], "+", 
             RowBox[{"1.3967820897686778`*^-6", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"5.999456893727301`*^-7", " ", "uu$Shock"}], "+", 
             RowBox[{
             "1.6969026613300464`*^-6", " ", "qq", " ", "uu$Shock"}]}], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6184192551124496`*^9, 3.6184194945098524`*^9, 
  3.6184206648536673`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.618418255322452*^9, 3.6184182638625374`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", 
  RowBox[{"gtGrid", "[", "lucaBasis", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618338546365243*^9, 3.6183385723655033`*^9}, {
  3.618338615635936*^9, 3.6183386284760637`*^9}, {3.6183390558803377`*^9, 
  3.6183390804405837`*^9}, {3.6183391565713453`*^9, 3.6183392105318847`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"int[][] generatePolyOrdersForOuterProduct()\"\>"},
     {"\<\"double[][] getBasisAtChebNodes()\"\>"},
     {"\<\"Jama.Matrix getBasisAtChebNodesAsMatrix()\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"int getNumberOfShocks()\"\>"},
     {"\<\"int[] getOrders()\"\>"},
     {"\<\"double[][] getRanges()\"\>"},
     {"\<\"int getStateDim()\"\>"},
     {"\<\"int getStateDimWithoutShocks()\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.\
ChebyshevPolysAtEvalPoints getTheChebPoly()\"\>"},
     {"\<\"int[] getTheOrders()\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.GridVars \
getTheStateVars()\"\>"},
     {"\<\"String[] getVariableNames()\"\>"},
     {"\<\"int getVarIndex(String) throws \
gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionRuntimeException\"\>"},
     {"\<\"double[] getXformedChebNodePts(String) throws \
gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionRuntimeException\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"boolean \
hasVarQ(gov.frb.ma.msu.ProjectionMethodToolsJava.VarTime)\"\>"},
     {"\<\"static int[] incOrders(int[], int[])\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.GridPointsSpec \
incPowers(int[]) throws \
gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionRuntimeException\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"int numberOfGridVars()\"\>"},
     {"\<\"int powersPlusOneProd()\"\>"},
     {"\<\"void print()\"\>"},
     {"\<\"void setBasisAtChebNodesAsMatrix()\"\>"},
     {"\<\"void setBasisAtChebNodesAsMatrix(Jama.Matrix)\"\>"},
     {"\<\"void setNumberOfShocks(int)\"\>"},
     {"\<\"void \
setTheChebPoly(gov.frb.ma.msu.ProjectionMethodToolsJava.\
ChebyshevPolysAtEvalPoints)\"\>"},
     {"\<\"void setTheOrders(int[])\"\>"},
     {"\<\"void \
setTheStateVars(gov.frb.ma.msu.ProjectionMethodToolsJava.GridVars)\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.GridPointsSpec \
theMiddle(double) throws \
gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionRuntimeException\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"int varPosition(String) throws \
gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionRuntimeException\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.618339176761547*^9, 3.618339211401893*^9}, 
   3.6183399047408285`*^9, 3.6184152350974503`*^9, 3.6184159423493223`*^9, 
   3.618419494579853*^9, 3.618420664983669*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["barrier", "Section",
 CellChangeTimes->{{3.6183380378301573`*^9, 3.618338038940169*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookey", "=", 
  RowBox[{"projEquations", "[", "lucaMod", "]"}]}]], "Input",
 CellChangeTimes->{{3.618326569779497*^9, 3.6183266009594975`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "rhop"}], " ", 
     RowBox[{"qq", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"qq", "[", "t", "]"}], "-", 
    RowBox[{"betap", " ", 
     RowBox[{"qq", "[", 
      RowBox[{"1", "+", "t"}], "]"}]}], "+", 
    RowBox[{"betap", " ", "rhop", " ", 
     RowBox[{"qq", "[", 
      RowBox[{"1", "+", "t"}], "]"}]}], "+", 
    RowBox[{"sigmap", " ", 
     RowBox[{"rr", "[", "t", "]"}]}], "-", 
    RowBox[{"ru", "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "rUnderBar"}], " ", 
     RowBox[{"lambda", "[", "t", "]"}]}], "-", 
    RowBox[{"phip", " ", 
     RowBox[{"qq", "[", "t", "]"}]}], "+", 
    RowBox[{"rr", "[", "t", "]"}], "+", 
    RowBox[{
     RowBox[{"lambda", "[", "t", "]"}], " ", 
     RowBox[{"rr", "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "rho$ru"}], " ", 
     RowBox[{"ru", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"ru", "[", "t", "]"}], "-", 
    RowBox[{"adj", " ", 
     RowBox[{
      RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "rUnderBar"}], " ", 
     RowBox[{"lambda", "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"lambda", "[", "t", "]"}], " ", 
     RowBox[{"rr", "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"eqvdIf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "\[GreaterEqual]", "rUnderBar"}], ",", 
       RowBox[{"rr", "[", "t", "]"}], ",", "rUnderBar"}], "]"}]}], "+", 
    RowBox[{"zz", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6183266017494974`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "\"\<a\>\""}], ",", 
    RowBox[{"2", "\[Rule]", "\"\<b\>\""}]}], "|>"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6183298464814606`*^9, 3.61832986295179*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "\<\"a\"\>"}], ",", 
   RowBox[{"2", "\[Rule]", "\<\"b\"\>"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.61832986396181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"eqvdIf", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rr", "[", "t", "]"}], "\[GreaterEqual]", "rUnderBar"}], ",", 
        RowBox[{"rr", "[", "t", "]"}], ",", "rUnderBar"}], "]"}]}], "+", 
     RowBox[{"zz", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"xxL_Symbol", "[", "Global`t", "]"}], "-", 
     RowBox[{"Global`eqvdIf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"xxR_Symbol", "[", "Global`t", "]"}], "\[GreaterEqual]", 
        "yy__"}], ",", "zz__"}], "]"}]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"xxL", ",", "xxR", ",", "yy", ",", "zz"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.618330217858888*^9, 3.6183302427693863`*^9}, {
  3.6183302835802026`*^9, 3.6183304281130934`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"zz", ",", "rr", ",", "rUnderBar", ",", 
    RowBox[{"rr", "[", "t", "]"}], ",", "rUnderBar"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.61833033795129*^9, 3.6183304286931047`*^9}}]
}, Open  ]],

Cell["", "Subsection",
 CellChangeTimes->{{3.6183259609458356`*^9, 3.6183259650854216`*^9}}],

Cell[CellGroupData[{

Cell["To Higher Order (2,2,1)", "Subsection",
 CellChangeTimes->{{3.6182431159240584`*^9, 3.6182431196590586`*^9}, {
  3.6182504417300463`*^9, 3.6182504480671263`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"res2$2$1", "=", 
    RowBox[{"res1$1$1", "[", 
     RowBox[{"incOrder", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res2$2$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys1$1$1", "=", 
      RowBox[{
       RowBox[{"genPolys", "[", 
        RowBox[{
         RowBox[{"res2$2$1", "[", 
          RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
         RowBox[{"res2$2$1", "[", 
          RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
       "Chop"}]}], 
     RowBox[{"(*", 
      RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}],
       "*)"}], ",", 
     "\"\<ComputeInitialCollocationWeights did not converge\>\""}], "]"}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}, {
  3.6182461948467803`*^9, 3.61824619804428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sysPolys", "=", 
  RowBox[{"ReplaceVariables", "[", 
   RowBox[{"lucaMod", ",", "polys3$3$1", ",", 
    RowBox[{"{", 
     RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.61824623651553*^9, 3.6182462388867803`*^9}, {
  3.61824650534478*^9, 3.61824650582353*^9}}],

Cell[BoxData[
 RowBox[{"ReplaceVariables", "[", 
  RowBox[{"lucaMod", ",", "polys3$3$1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"lambda\"\>", ",", "\<\"rr\"\>", ",", "\<\"zz\"\>"}], 
      "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6182464407222805`*^9, 3.6182537149713607`*^9, 
  3.6183066510244093`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dimensions", "/@", "sysPolys"}], "=", 
   RowBox[{"sysPolys", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6182464687885303`*^9, 3.6182465227760305`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Map\\)\[NoBreak] in \
\[NoBreak]\\!\\(Dimensions/@\\(\\(ReplaceVariables[\\(\\(lucaMod, polys3$3$1, \
\\(\\({\\(\\({\\\"qq\\\", \\\"ru\\\"}\\)\\), \\(\\({\\\"lambda\\\", \
\\\"rr\\\", \\\"zz\\\"}\\)\\)}\\)\\)\\)\\)]\\)\\)\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.618253715151368*^9, 3.6183066511144114`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ListContourPlot3D"], "Input",
 CellChangeTimes->{{3.61824600263428*^9, 3.6182460096567802`*^9}}],

Cell[BoxData["ListContourPlot3D"], "Output",
 CellChangeTimes->{3.6182537151713686`*^9, 3.618306651144412*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some Plots", "Subsection",
 CellChangeTimes->{{3.6182430754078083`*^9, 3.6182430795040584`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.61824615171303*^9, 3.61824618306053*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"uu$Shock", "\[Rule]", 
       RowBox[{"-", ".1"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.618167852917569*^9, 3.618167853883819*^9}, {3.61824488735128*^9, 
  3.6182449484987803`*^9}, {3.61824502854753*^9, 3.6182450409287806`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(polys3$3$1 \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.618253715281373*^9, 3.618306651274414*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{325.2693240036593, 133.18716765729988`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.1, 0.1}, {-0.1, 0.1}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.7542734601794734, 3.290011276123111, 0.23853165461163603`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.6181678890370693`*^9, 3.6181680058093195`*^9, {3.61824487019003*^9, 
   3.6182449511737804`*^9}, {3.61824503321628*^9, 3.61824504406003*^9}, 
   3.618253715321375*^9, 3.6183066513344154`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.6181678576525693`*^9, 3.618167858658819*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(polys3$3$1 \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6182537154313793`*^9, 3.618306651444418*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{340.8631105226031, 122.61545252265445`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4032523210083827`, -3.078998644796519, 0.0255003710911432},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.618167883325819*^9, 3.6181680060093193`*^9, 3.618253715511382*^9, 
   3.618306651494419*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.6181678619638195`*^9, 3.618167863386319*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(polys3$3$1 \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6182537157013903`*^9, 3.618306651664422*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{340.8631105226031, 122.61545252265445`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4032523210083827`, -3.078998644796519, 0.0255003710911432},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.6181678793408194`*^9, 3.618168006120569*^9, 3.618253715751392*^9, 
   3.618306651714423*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.618167871875069*^9, 3.618167872705819*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(polys3$3$1 \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.618253715851396*^9, 3.618306651834426*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{318.91211802865433`, 148.08916957517854`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.07166010983093488, -3.3502533308964533`, \
-0.46975253855220195`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6181677944725695`*^9, 3.618167814560069*^9}, 
   3.618167876258319*^9, 3.6181680062818193`*^9, 3.6182537159113984`*^9, 
   3.618306651894427*^9}]
}, Open  ]],

Cell["\<\
One can also get and update (should be \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote], but it isn\[CloseCurlyQuote]t yet) all the model \
parameters simultaneously \
\>", "Text",
 CellChangeTimes->{{3.617531730237169*^9, 3.617531790921002*^9}, {
  3.6175318473302345`*^9, 3.6175318776722345`*^9}, {3.6179006868050604`*^9, 
  3.6179006931551237`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["higher order (3,3,1)", "Subsection",
 CellChangeTimes->{{3.6182504895591574`*^9, 3.618250501472868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"res3$3$1", "=", 
     RowBox[{"res2$2$1", "[", 
      RowBox[{"toOrder", "[", 
       RowBox[{"2", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"res3$3$1", "[", 
        RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
       RowBox[{"polys3$3$1", "=", 
        RowBox[{"genPolys", "[", 
         RowBox[{
          RowBox[{"res3$3$1", "[", 
           RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
          RowBox[{"res3$3$1", "[", 
           RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
      "Chop"}], ";"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}, 
   3.6181679893695693`*^9, {3.61824604683053*^9, 3.6182460838242803`*^9}, 
   3.61824616791928*^9, {3.61824620725928*^9, 3.6182462187505302`*^9}, {
   3.618250421467233*^9, 3.618250426093302*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "res1$1$1", "]"}]], "Input",
 CellChangeTimes->{{3.618253625607786*^9, 3.6182536340581245`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"int[][] allPowers(int[])\"\>"},
     {"\<\"double[][][] collocateParamsRange(double[][], \
gov.frb.ma.msu.ProjectionMethodToolsJava.DoEqns, double[], double[], int) \
throws Exception\"\>"},
     {"\<\"double[][][] \
collocateParamsRange(gov.frb.ma.msu.ProjectionMethodToolsJava.DoEqns, \
double[], double[], int) throws Exception\"\>"},
     {"\<\"double[][] \
collocateParamsTarget(gov.frb.ma.msu.ProjectionMethodToolsJava.DoEqns, \
double[], double[]) throws Exception\"\>"},
     {"\<\"int[] dropEnd(int[])\"\>"},
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"int[] expand(int[], int, int)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"double[][] getInitWeights()\"\>"},
     {"\<\"int[] getOrders()\"\>"},
     {"\<\"double[] getParams()\"\>"},
     {"\<\"double[][] getRanges()\"\>"},
     {"\<\"double[][] getResWeights()\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.StrategyIterSequenceInfo \
getTheStrategyIters()\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.DoEqns \
getTheSystem()\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.Basis \
getTheWeightedStochasticBasis()\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionResults \
incOrder(int[]) throws Exception\"\>"},
     {"\<\"int indexPower(int[], int, int[])\"\>"},
     {"\<\"boolean isConvergedQ()\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"int[] rawPows(int)\"\>"},
     {"\<\"void setConvergedQ(boolean)\"\>"},
     {"\<\"void setInitWeights(double[][])\"\>"},
     {"\<\"void \
setNewtonItersSeq(gov.frb.ma.msu.ProjectionMethodToolsJava.\
StrategyIterSequenceInfo)\"\>"},
     {"\<\"void setTheSystem(gov.frb.ma.msu.ProjectionMethodToolsJava.DoEqns)\
\"\>"},
     {"\<\"void \
setTheWeightedStochasticBasis(gov.frb.ma.msu.ProjectionMethodToolsJava.\
WeightedStochasticBasis)\"\>"},
     {"\<\"int[] theIndices(int[], int[])\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionResults \
toOrder(int[]) throws Exception\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6182536350581646`*^9, 3.6182537159614005`*^9, 
  3.618306651974428*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.61825374421253*^9, 3.618253764783353*^9}, 
   3.618253854814329*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Methods", "[", "theSys", "]"}]], "Input",
 CellChangeTimes->{{3.618253773303694*^9, 3.618253795114329*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"boolean equals(Object)\"\>"},
     {"\<\"Class getClass()\"\>"},
     {"\<\"double[] getParams()\"\>"},
     {"\<\"double get$adj()\"\>"},
     {"\<\"double get$betap()\"\>"},
     {"\<\"double get$phip()\"\>"},
     {"\<\"double get$rhop()\"\>"},
     {"\<\"double get$rho$ru()\"\>"},
     {"\<\"double get$rUnderBar()\"\>"},
     {"\<\"double get$sigmap()\"\>"},
     {"\<\"int hashCode()\"\>"},
     {"\<\"void \
noNans(gov.frb.ma.msu.ProjectionMethodToolsJava.WeightedStochasticBasis, \
double[][], double[][]) throws \
gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionRuntimeException\"\>"},
     {"\<\"void notify()\"\>"},
     {"\<\"void notifyAll()\"\>"},
     {"\<\"void set$adj(double)\"\>"},
     {"\<\"void set$betap(double)\"\>"},
     {"\<\"void set$phip(double)\"\>"},
     {"\<\"void set$rhop(double)\"\>"},
     {"\<\"void set$rho$ru(double)\"\>"},
     {"\<\"void set$rUnderBar(double)\"\>"},
     {"\<\"void set$sigmap(double)\"\>"},
     {"\<\"String toString()\"\>"},
     {"\<\"void updateParams(double[])\"\>"},
     {"\<\"gov.frb.ma.msu.ProjectionMethodToolsJava.EquationValDrv \
updateValDrv(gov.frb.ma.msu.ProjectionMethodToolsJava.StochasticBasis) throws \
gov.frb.ma.msu.ProjectionMethodToolsJava.ProjectionRuntimeException\"\>"},
     {"\<\"void wait(long, int) throws InterruptedException\"\>"},
     {"\<\"void wait(long) throws InterruptedException\"\>"},
     {"\<\"void wait() throws InterruptedException\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6182537825040617`*^9, 3.6182537962843285`*^9}, 
   3.61830665206443*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 CellChangeTimes->{{3.6179033593378525`*^9, 3.6179033620678797`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}], ";", 
  RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9, 3.6178019897616196`*^9, {3.6182439320120087`*^9, 
   3.618243954374336*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"making xx global\"\>"], "Print",
 CellChangeTimes->{3.6184194721996293`*^9, 3.6184216207313952`*^9, 
  3.618424702040859*^9, 3.6184249893361363`*^9}],

Cell[BoxData["\<\"beginning private defs\"\>"], "Print",
 CellChangeTimes->{3.6184194721996293`*^9, 3.6184216207313952`*^9, 
  3.618424702040859*^9, 3.618424989346136*^9}],

Cell[BoxData["\<\"why not numbers?\"\>"], "Print",
 CellChangeTimes->{3.6184194721996293`*^9, 3.6184216207313952`*^9, 
  3.618424702040859*^9, 3.618424989346136*^9}],

Cell[BoxData["\<\"why eval of shock t+1?\"\>"], "Print",
 CellChangeTimes->{3.6184194721996293`*^9, 3.6184216207313952`*^9, 
  3.618424702040859*^9, 3.618424989346136*^9}],

Cell[BoxData["\<\"done reading ProjectionInterface\"\>"], "Print",
 CellChangeTimes->{3.6184194721996293`*^9, 3.6184216207313952`*^9, 
  3.618424702040859*^9, 3.6184249893661366`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"Utilities`URLTools`\"\>", 
   ",", "\<\"JLink`\"\>", ",", "\<\"WolframAlphaClient`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6179036904952*^9, 3.617970765185636*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"2.`", " ", "\<\"qq\"\>"}], ",", 
   RowBox[{"6.25`", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"12.5`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"10.289203100491495`", " ", "\<\"uu$Shock\"\>"}], ",", 
   RowBox[{"20.57840620098299`", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{"64.30751937807185`", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{
   "128.6150387561437`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", 
    " ", "\<\"uu$Shock\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.61824419146638*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1684, 934},
WindowMargins->{{Automatic, 79}, {12, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3618410865-6993577"->{
  Cell[127938, 3129, 3476, 55, 100, "Print",
   CellTags->"Info3618410865-6993577"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3618410865-6993577", 518790, 10481}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[721, 27, 657, 14, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1403, 45, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[1502, 49, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[1594, 53, 146, 3, 33, "Subsubsection"],
Cell[1743, 58, 2307, 57, 86, "Input"],
Cell[4053, 117, 481, 9, 49, "Text"],
Cell[4537, 128, 1926, 48, 92, "Input"],
Cell[6466, 178, 1026, 29, 72, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7541, 213, 129, 1, 37, "Subsection"],
Cell[7673, 216, 10282, 291, 246, "Input"],
Cell[17958, 509, 3855, 106, 201, "Input"],
Cell[21816, 617, 734, 12, 40, "Input"],
Cell[22553, 631, 286, 7, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[22876, 643, 116, 1, 37, "Subsection"],
Cell[22995, 646, 3822, 97, 141, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26854, 748, 138, 1, 37, "Subsection"],
Cell[26995, 751, 692, 13, 40, "Input"],
Cell[27690, 766, 611, 12, 40, "Input"],
Cell[28304, 780, 637, 12, 40, "Input"],
Cell[28944, 794, 663, 13, 40, "Input"],
Cell[29610, 809, 612, 11, 40, "Input"],
Cell[30225, 822, 586, 11, 40, "Input"],
Cell[30814, 835, 621, 11, 40, "Input"],
Cell[31438, 848, 583, 11, 40, "Input"],
Cell[32024, 861, 690, 13, 40, "Input"],
Cell[32717, 876, 695, 13, 40, "Input"],
Cell[33415, 891, 609, 11, 40, "Input"],
Cell[34027, 904, 602, 11, 40, "Input"],
Cell[34632, 917, 643, 12, 40, "Input"],
Cell[35278, 931, 598, 11, 40, "Input"],
Cell[35879, 944, 618, 11, 40, "Input"],
Cell[36500, 957, 589, 11, 40, "Input"],
Cell[37092, 970, 618, 11, 40, "Input"],
Cell[37713, 983, 581, 11, 40, "Input"],
Cell[38297, 996, 923, 25, 61, "Input"],
Cell[39223, 1023, 736, 20, 61, "Input"],
Cell[39962, 1045, 315, 8, 30, "Text"],
Cell[40280, 1055, 122, 3, 40, "Input"],
Cell[40405, 1060, 97, 2, 40, "Input"],
Cell[40505, 1064, 197, 4, 61, "Input"],
Cell[40705, 1070, 366, 7, 30, "Text"],
Cell[41074, 1079, 309, 6, 61, "Input"],
Cell[41386, 1087, 218, 5, 40, "Input"],
Cell[41607, 1094, 107, 1, 25, "Item"],
Cell[41717, 1097, 164, 3, 40, "Input"],
Cell[41884, 1102, 213, 4, 40, "Input"],
Cell[42100, 1108, 348, 8, 40, "Input"],
Cell[42451, 1118, 585, 14, 40, "Input"],
Cell[43039, 1134, 139, 3, 40, "Input"],
Cell[43181, 1139, 176, 3, 40, "Input"],
Cell[43360, 1144, 149, 2, 40, "Input"],
Cell[43512, 1148, 178, 3, 40, "Input"],
Cell[43693, 1153, 389, 9, 40, "Input"],
Cell[44085, 1164, 402, 6, 40, "Input"],
Cell[44490, 1172, 374, 8, 40, "Input"],
Cell[44867, 1182, 332, 7, 40, "Input"],
Cell[45202, 1191, 384, 9, 40, "Input"],
Cell[45589, 1202, 573, 14, 40, "Input"],
Cell[46165, 1218, 836, 17, 40, "Input"],
Cell[47004, 1237, 104, 1, 40, "Input"],
Cell[47111, 1240, 845, 19, 40, "Input"],
Cell[47959, 1261, 985, 27, 40, "Input"],
Cell[48947, 1290, 571, 14, 40, "Input"],
Cell[49521, 1306, 329, 9, 40, "Input"],
Cell[49853, 1317, 524, 11, 40, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[50426, 1334, 112, 1, 58, "Section"],
Cell[CellGroupData[{
Cell[50563, 1339, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[50655, 1343, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[50826, 1350, 3233, 79, 181, "Input"],
Cell[54062, 1431, 702, 11, 23, "Print"]
}, Open  ]],
Cell[54779, 1445, 481, 9, 49, "Text"],
Cell[55263, 1456, 2359, 55, 101, "Input"],
Cell[57625, 1513, 1026, 29, 81, "Input"],
Cell[CellGroupData[{
Cell[58676, 1546, 174, 3, 40, "Input"],
Cell[58853, 1551, 793, 16, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59707, 1574, 129, 1, 37, "Subsection"],
Cell[59839, 1577, 10282, 291, 261, "Input"],
Cell[70124, 1870, 4687, 123, 241, "Input"],
Cell[CellGroupData[{
Cell[74836, 1997, 286, 7, 40, "Input"],
Cell[75125, 2006, 1287, 34, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[76461, 2046, 122, 1, 37, "Subsection"],
Cell[76586, 2049, 2703, 61, 81, "Input"],
Cell[CellGroupData[{
Cell[79314, 2114, 1973, 42, 81, "Input"],
Cell[81290, 2158, 2448, 47, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83775, 2210, 842, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[84642, 2227, 1185, 26, 23, "Print"],
Cell[85830, 2255, 2443, 52, 43, "Print"],
Cell[88276, 2309, 11000, 227, 119, "Print"]
}, Open  ]],
Cell[99291, 2539, 4208, 86, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103536, 2630, 134, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[103695, 2636, 1998, 28, 23, "Print"],
Cell[105696, 2666, 2004, 28, 23, "Print"],
Cell[107703, 2696, 2000, 28, 23, "Print"],
Cell[109706, 2726, 2006, 28, 23, "Print"],
Cell[111715, 2756, 2016, 28, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113780, 2790, 791, 19, 40, "Input"],
Cell[CellGroupData[{
Cell[114596, 2813, 1249, 27, 23, "Print"],
Cell[115848, 2842, 2507, 53, 43, "Print"],
Cell[118358, 2897, 353, 6, 23, "Print"]
}, Open  ]],
Cell[118726, 2906, 3804, 90, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122567, 3001, 795, 17, 40, "Input"],
Cell[123365, 3020, 4410, 100, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127812, 3125, 123, 2, 40, "Input"],
Cell[127938, 3129, 3476, 55, 100, "Print",
 CellTags->"Info3618410865-6993577"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131451, 3189, 416, 11, 40, "Input"],
Cell[131870, 3202, 13404, 345, 719, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145311, 3552, 326, 9, 40, "Input"],
Cell[145640, 3563, 82124, 1348, 141, "Output"]
}, Open  ]],
Cell[227779, 4914, 166, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[227970, 4923, 713, 17, 40, "Input"],
Cell[228686, 4942, 1788, 44, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230511, 4991, 87, 1, 40, "Input"],
Cell[230601, 4994, 2249, 55, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232887, 5054, 180, 3, 40, "Input"],
Cell[233070, 5059, 363, 7, 42, "Output"]
}, Open  ]],
Cell[233448, 5069, 94, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[233567, 5074, 593, 16, 40, "Input"],
Cell[234163, 5092, 83702, 1373, 271, "Output"]
}, Open  ]],
Cell[317880, 6468, 94, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[317999, 6473, 352, 8, 40, "Input"],
Cell[318354, 6483, 898, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319289, 6505, 193, 3, 40, "Input"],
Cell[319485, 6510, 913, 17, 21, "Message"],
Cell[320401, 6529, 932, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321370, 6552, 316, 5, 40, "Input"],
Cell[321689, 6559, 5979, 132, 174, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327705, 6696, 136, 2, 40, "Input"],
Cell[327844, 6700, 334, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328215, 6711, 1578, 36, 121, "Input"],
Cell[329796, 6749, 389, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330222, 6760, 174, 3, 40, "Input"],
Cell[330399, 6765, 1385, 25, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331821, 6795, 378, 8, 40, "Input"],
Cell[CellGroupData[{
Cell[332224, 6807, 1164, 24, 26, "Print"],
Cell[333391, 6833, 2497, 53, 48, "Print"],
Cell[335891, 6888, 230, 3, 23, "Print"]
}, Open  ]],
Cell[336136, 6894, 4303, 88, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340476, 6987, 348, 9, 61, "Input"],
Cell[340827, 6998, 3142, 71, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344006, 7074, 1635, 37, 40, "Input"],
Cell[345644, 7113, 58609, 951, 384, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404290, 8069, 149, 3, 40, "Input"],
Cell[404442, 8074, 674, 11, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405153, 8090, 2018, 46, 61, "Input"],
Cell[407174, 8138, 60798, 982, 384, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468033, 9127, 92, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[468150, 9132, 506, 11, 40, "Input"],
Cell[468659, 9145, 6873, 148, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475569, 9298, 157, 3, 40, "Input"],
Cell[475729, 9303, 222, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475988, 9312, 225, 5, 40, "Input"],
Cell[476216, 9319, 340, 10, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476593, 9334, 157, 3, 40, "Input"],
Cell[476753, 9339, 244, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477034, 9348, 105, 1, 40, "Input"],
Cell[477142, 9351, 161, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477340, 9360, 153, 3, 40, "Input"],
Cell[477496, 9365, 312, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477845, 9376, 99, 1, 40, "Input"],
Cell[477947, 9379, 461, 11, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478445, 9395, 713, 17, 40, "Input"],
Cell[479161, 9414, 2201, 49, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481399, 9468, 103, 1, 40, "Input"],
Cell[481505, 9471, 7311, 165, 281, "Output"]
}, Open  ]],
Cell[488831, 9639, 94, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[488950, 9644, 323, 5, 40, "Input"],
Cell[489276, 9651, 3155, 69, 590, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[492480, 9726, 94, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[492599, 9731, 168, 3, 40, "Input"],
Cell[492770, 9736, 1746, 54, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494553, 9795, 259, 7, 61, "Input"],
Cell[494815, 9804, 225, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495077, 9814, 868, 24, 40, "Input"],
Cell[495948, 9840, 243, 5, 40, "Output"]
}, Open  ]],
Cell[496206, 9848, 92, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[496323, 9853, 168, 2, 37, "Subsection"],
Cell[496494, 9857, 1036, 27, 81, "Input"],
Cell[CellGroupData[{
Cell[497555, 9888, 330, 7, 40, "Input"],
Cell[497888, 9897, 434, 11, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498359, 9913, 239, 6, 40, "Input"],
Cell[498601, 9921, 667, 12, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499305, 9938, 110, 1, 40, "Input"],
Cell[499418, 9941, 110, 1, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499577, 9948, 102, 1, 37, "Subsection"],
Cell[499682, 9951, 88, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[499795, 9956, 691, 18, 40, "Input"],
Cell[500489, 9976, 538, 11, 21, "Message"],
Cell[501030, 9989, 944, 23, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502011, 10017, 702, 19, 40, "Input"],
Cell[502716, 10038, 540, 11, 21, "Message"],
Cell[503259, 10051, 836, 22, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504132, 10078, 702, 19, 40, "Input"],
Cell[504837, 10099, 540, 11, 21, "Message"],
Cell[505380, 10112, 836, 22, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506253, 10139, 700, 19, 40, "Input"],
Cell[506956, 10160, 538, 11, 21, "Message"],
Cell[507497, 10173, 848, 23, 172, "Output"]
}, Open  ]],
Cell[508360, 10199, 366, 7, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508763, 10211, 110, 1, 37, "Subsection"],
Cell[508876, 10214, 1061, 26, 81, "Input"],
Cell[CellGroupData[{
Cell[509962, 10244, 135, 2, 40, "Input"],
Cell[510100, 10248, 2920, 68, 545, "Output"]
}, Open  ]],
Cell[513035, 10319, 117, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[513177, 10325, 131, 2, 40, "Input"],
Cell[513311, 10329, 2088, 50, 454, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[515460, 10386, 103, 1, 58, "Section"],
Cell[CellGroupData[{
Cell[515588, 10391, 412, 8, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[516025, 10403, 167, 2, 23, "Print"],
Cell[516195, 10407, 171, 2, 23, "Print"],
Cell[516369, 10411, 165, 2, 23, "Print"],
Cell[516537, 10415, 171, 2, 23, "Print"],
Cell[516711, 10419, 183, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[516943, 10427, 106, 1, 40, "Input"],
Cell[517052, 10430, 372, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517461, 10441, 81, 1, 40, "Input"],
Cell[517545, 10444, 622, 14, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)
], ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"before genPolys in createpolynomials 1\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.617797796114665*^9}],

Cell[BoxData["\<\"before genPolys in createpolynomials\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.6177977961346655`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sysPolys", "=", 
   RowBox[{"ReplaceVariables", "[", 
    RowBox[{"lucaMod", ",", "thePolys", ",", 
     RowBox[{"{", 
      RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
  3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
  3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".05"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forPlot", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ru", "->", ".0"}], ",", 
    RowBox[{"qq", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.61754333080116*^9, 3.617543350490963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3730516147770083`*^-7"}], ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617720577811262*^9, 3.61779779662467*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnHu0VuO+x9fIJVKGJbKxSaRc4sj9PkWlKys2NtqdV4pCW+cc2S7lkqit
Q1QbXVDkVllK0xKt3tlFbqVUuq5Cci9Zqzv21ll7zt/nabzf533GOP3TGJ/x
jLl+8/M+73c+8/fO+TTpfvsVPeuUlJScu1dJyR61/zdZ23narl1fJGPOe6bR
unveS64o+3jfh4ftjG66Y8qoij5VjjdtuaJv5wbboon7NXygT9Vyx7eXfr3i
4KE10aYX+t3UtP0Sxx/7Zt2AytKNUc/0OPMdb/nKbx07N/jGxs9x/LXFJ5xe
WbrG+JuOr3utctyM0gVRif2DNxq5zy/v9RmYt/ERvE77fptmli5I7PiOn9uk
7vUzS9ckVo/jvy7s/UVtPTZ+ieNXNSgrnVm6MbHzdXz1sWOaNBpak5gfx/dp
8/i7tX4S8+n4mT0evLLWJzzJzTvowW8em+15hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHru8NzRK5a2mul5hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHr+bOrhk9fc/LbnGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunuHqGa6e4eq5WzrPp3qe4eoZrp7h6hmunuHqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp4Xp/5f8TzD1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9
w9UzXD3D1TNcPS9I+dOeZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoar
Z7h6hqvn7CwGna+e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp6/zPxH6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHquSrL
E88zXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1fON2fXR8wxX
z3D1DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1vDJb73me4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp4vy+5fPM9w9QxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz92z+3HPM1w9w9UzXD3D1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9Wz9Zc8z/BAv87zDA/06zzP8EC/zvMMD/Tr
PM/wQL/O8wwP9Os8z/BAv855fu+4+5tVVaxN7ntgeccb95ybzJhVdkHvhdsj
/MPxb+Mj+POf1R1cO94dHx44fhQ4fhQ4fsTx4dQv3PVROb6MTwLjtR73d6l/
88Bvb+tT9XlSv9tZLV9I5iaPDHnsmB3lOyLjEfyWsa371HIdHwXGR4zHA8fB
A+OpX49P/Ryf+jm+1s9xAuO9+ymOE6jH1T+gydeVu3bt7uvu+49tN44csC1a
1fOe93ftWuH+7pxVR+VfvHWz44yHnzHxgE937Vrqxm8+/5lTbpq2yXHGw49O
61zkxufe3/T1oGHfO854+Or0737gxn96eZtRL976leOMhzdNj5O48fe9edaY
QcNWOs54ePOUv+HGT3/0o7qDhn1o+TCkEl5SMmvnv/OB8RxHx8MZf3g23s2H
RccPvOqRYR8mcMbDj8zqdOPr1TlozsPDVjrOePiKzIMb/9TfprWYcOtXjjMe
3jjz7MY329T1roeHfe844+GnZ5+jGz+9x97v1X6OjjsPxldm88SNf+mnFXUn
3LrZccbD+2fz0I3/6dXJr9fOQ8cZD2fe0u/VeQvX+QnXeQjX+QbXeQXX+QPX
+QDX+QDXzx2uny9cP0e4fl6uHvlc4Oofrp7p96pnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqG
q2dXj3iGq2e4eqbfq57h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4erZ1SOe
4eoZrp7p96pnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn
+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunl094hmunuHqmX6veoar
Z7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2dXj3iGq2e4eqbfq57h6hmunuHq
Ga6e4eoZrp7h6hmunuHqGa6e4erZ1SOe4eoZrp7p96pnuHqGq2e4eoarZ7h6
hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2dXj3iGq2e4eqZfF+jLeZ7hgT6b5xke6Jt5nuGB/pjnGR7oa3me4YE+
lefZ1VO87+Q847P56fO2DNrg9zl/tt8N1GdFabNVc1+e492P0CdXn21+fiRf
p/tc736kgfVpvT7Ggu9ebHWE328M9Q+Ps/rVJ/Wrz7etfvVJ/eqT+tUn9avP
lfc+VHngv/z+W69rvx7fZXre87njzDaDn/ifxPN5Sb0rK24+ZJbns97dexxf
t98sz+eS76aNeXnJLM/nqKt77N/2FL8f2zHQf1tt9atP6lef1K8+qV99Ur/6
pH7NgdFWv5e3w/o/efgx0z3Pm29be+d1n0/3PD/Y4cKuo0a943k+4LjnW638
07ue5+f3Kml+yAEzPM8nr8/Vv3r+DM9z5azZNSMfqfQ8Lwv033pY/eqZ+tUz
9atn6lfPz1n96pn61fNMq189b7TfCdVz//T7Ms3zvF/6vZjmeR6d5k/seT7+
0F9+a3zmW57n6duvXdet5i3Pc9vP3n3/2ckVnuf/DPTf+J1TPVO/eqZ+9Uz9
6vk4q189U796vtTqV8+b0s/9Vc9z/fTzneh5PiH9HCd5ntul3+vXPc83pd/f
cs/zxen3dIrn+dP0+zjF87w00H+rtvrVcwOrXz2faPWrZ+pXzz2tfvVM/V7/
zepXz3ul9Yz2PF+c/t1nPc8XpccfF+gnj/c835vOqxc9z8+k82eC57kinScv
eZ4/DfTf6ln96rm11a+eqb94P3m85/keq189j7L61fPbVr96viut/2bP85SU
/83zfEVaz4Oe54/T8YM9zxel5/uY5/n69DhPep6fSusf6XnO/r/L67+Ns/rV
83SrXz3/yepXz9Svni+w+tVzV6tfPT9j9avnVzLurYdvyY7jrYevy/6utx7+
KqvTWw/flp2Xtx7emHnw1sN7vpl689bDawL9txesfm+9YfWr5z9b/eqZ+tXz
7Va/ev7R6lfPm7LP3bvvyGfz3PM8LvteeJ4HZt8jz3OP7HvneW6bfU89z12y
77XnuVGWA57nVYH+W6XVr56ft/q99YbVr56pXz1favWr5zKrXz0fZPWr52VZ
bnueMz9TPM+3ZdeFQL/idc9zy+y643nO6pnoed6eXdcC99F+/+0zq189t7H6
1TP1F+9XvO55PtXqV88NrX71vM3q954TyNYhnucZ2brF83xits7xPI/N1kWe
5/2zdZTn+f5s3eV5rrHny9TzikD/rZ3Vr57ftfq99YbVr56pXz1Tv3qmfvVc
bfWr51nZutrzfEq2Dvc8j8/W7Z7nA7N1vuf5oey+wPO8NbuP8DzflN13eJ47
B/pveatfPVO/eqZ+9Uz96nmQ1a+eqV8997T6vb5Qdp/oeV6a3Vd6nutn96Ge
59bZfavn+ZfsPtfzfEt2X+x5XpPdR/+/+292n+t5pn7vPsXqV8/Ur55/tfrV
M/V7v49Y/d5zL1l/xvNs/RDPs/VPPM88l6ierT/jea6250zV8/FZ/8fzPDrQ
f1tq9atnng9Uz9Qf6Bd5nqlfPVO/9ovod+ET/8uM63Nf9Ov0c8GDHsf6Y5Ee
x47vcfqEgb6rq5Pnlum/8dwyz1vCed6S55nh+jwzXJ9nhuvzzHB9nhmuzzPD
9XlmuD7PDNfnmeH6PDNcn2eG6/PMcJ5nxmdv67OpT7j6hKtPuPqEq0+4+oSr
T7j6hKtPuPqEq0+4+oSrT7g+Hw7neWA8D7R+mnqGq2e4eoarZ7h6hqtnuHqG
q2e4eoarZ7h6hqtnuHqGq2e4eh5jfTP1DFfP8OLvO8SB/UniwP4kcWB/kjiw
P0kc2J8kDuxPEgf2J4kD+5PEgf1J4sD+JHFgf5LY89zL+mPqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4ep5tPXB1DNcPcPVM1w9w9UzXD3D
1TNcPcPVM1w9w9UzXD3D1TNcPcPV8yjrd+G58P333Pnqn/H4L3yPPne+fi6M
53MpfI8+571Hz3g+r8L363Pe+/WM53MsfO8+5713z/jCz3eOG6+fO+P53Avf
08957+kznvlQUvAv572/z/jCecJ7/TnvvX7GM38K3/fPee/7M555VbgPQM7b
B4DxzLfC/QFy3v4AjGceFu4bkPP2DWC8rMfceJ23jJf3jNx4nc/PWp9T5y1c
5ydc5yFc5xtc5xVc5w9c5wlc5wNcP3e4fr5w/Rzh+nnB9XOBq3+4eh5r/Uz1
DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPV8i/Ut1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcOLz+c4MJ/jwHyOA/M5Dszn
ODCf48B8jgPzOQ7M5zgwn+PAfI4D8zkOzOc4MJ/jwHyOPc/0UdUzXD3D1TNc
PcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3Di+dGPpAb+UBu5AO5kQ/kRj6Q
G/lAbuQDuZEP5EY+kBv5QG7kA7mRD+RGPpAb+UBu5D3P9P10PwF4oP/m+YQH
+m+eT3ig/+b5hAf6b55PeKD/5vmEB/pvnk84PudMb/tiRZ8Vrq+4tl+d+V1/
q4nqlr329z5Vu/uW179+ZI8OmzdGTy085Mt2wxc4/vtfzz616qdvosb/WjO5
os9cx1vfMKFk5ZK1Udk1rbe0Gx47fvBHb5yzZcSiaGa7/Y8a3nS26xOOe/Kx
x8eXrU7OOKz9lU3bf+z4SXVP+iVp8XWyfFurS6oqFjs+pE3DE/+j5YZkeLcv
ujZtv7sPuWV2/5MXHVaTXPZB/zv7VK12/Oh1t3+w97Nbk31POeyJij7OQ1JW
cmPuwsY7kyPT+pe6fmDzftd3WLnkp2heuv/AJ45/fGa/P/Re+G10eXpe7zm+
pvqIT7aM+CIqTz+XCsePvqNL74OHLo72mrWu/vCmH7l+3Q1R9YGndlqf5FMP
ix2vHLC89fiyH5N7pk46p6pimeMNunU7b8jE6uTM1M9qx88f0OWzpMXWpMbe
94fzvv/WlC90/bd//D719+3l30UD0uPPc/ycWfMXDJ74ZVQ/rfMdx9/dY/4Z
LTstjV4es/qf7YZ/6vpgNW+N6taw7w9J9z3vajS86TLHm/8atWt1bnVyZJ+D
T6mqWOX41Yeetu6uyi3J6mVvtm/a/nPHB53d7J4pF+5IJqfe3nf9q72G7DPt
4KHrolvS+TzD8S4jWtfp3GBZ1CH1/5nrFw1sccnErSN+Tuqm9a9yvO9bB21q
2WlLMqdgf4k4ec72l/gw5TNdP+eHo/MLey1cHv18YPkP7YavdH2SR7ts//XH
qs3JxHs77jG86VrHp/f9YcTR3bYnI9LvxRp3v7+0/vxxVT9tS3rJff2xlleT
5X58h+VVtdx3D7O86iX316dZXtXIfXS55dVWuV/eYHn1vdzn7myX5dIGuZ89
w3Kpu9y37rRc2ij3p1daLr0q96GrLJd6yP1mXculxnJfeYbl0lzLJe6DNJfg
XS2XnrZcgu+yXDrKcgnexnLpCssl+KGWS5WWS/DnLJdOs1yCt7BcWma5BB9s
ufSk5RKcXOpsuQRvYrm0j+US/HLLpcaWS9ynHGe59L7lEny+5BJ8reXSFMsl
d/9oubSn5RI8Z7k003IJPsNy6W7LJTi5dIblEvw8ySV4b8kl7gvIpfssl9x9
iuXS/pZL8BmSS3DNJbjmEpxcWmW5BNdcYl1NLvW2XIKXWS51tFyCPyS5BNdc
gpNL71susc781nKp2nIJPtRyaZLlEvwdy6WRlkuso8gluw666/JtGyc1qp1v
0X2Fv6smm+x3Ulk/uL7QfoXHifrYceR3Urfu3a/w+ht1sXl+v/0Oy/Hr2e+w
TV/8d84MdPyiARVPTCsda+uQNe46W72z4TW152W/s69wfK79Xl8nPc5wx8tm
NG8xvXRy1C39HCe56+a4esMqL2swz/ZpSXb/7ma/m5dnnt31cXnXUzvUeo42
Z5+L469eEE2t/VyiM3lezvgWe06gf/p3xzi+9x9/vbRjg7eicel8e9ldH/tu
GHPMIUNnJ5XZfNjN/3v0tt4LlyfL7Xd8d3233/HnFeybFCeVtm/Svtk8dPzx
8X+ZUDsPo8uyeet4sueyRrXz1p5PWOT4DfY8wz/T/H/B8Z7XfXn3u6WV0fqM
u+vsA890OTgprUwyzzMcX/nVUcdf1mBZ8nL2/XL8ozfubNto6Dp7bmGR48fa
cwhrsu+pu16/0PT2U2q/p1GT7Hvt+B179X+69nsd9cxywPG23w75/aJzq6PX
stxw/KTHT5x/YN8fojX2nAZ8sT2nMT37XBzv3mn9soOGzo46Zp+jWw80ue7W
9Zc3eCspyfLK8VZXvtL11E5Lk7uyfHP8X9+dkxsy8ctkU5aHjl/b7KjhO8q/
S06z5y7gFfbcxVbbJ4r1xhDbJ+rsLIcdv6736Edrczjqn+W24yd2eKVm8MTq
aFaW847vvKrX1HFlP0b1suuC42MPGXh/y07r7bmUxPEH7HmVvtn3aPfvPrcu
/2unBvOiFel8GO7WRY+fVe/G2aWTkwnZ9cjxSXNPeqLR0MVJ++z65XiPi37d
snXEF8ms7Hq3+zjd1k+qvd4lf8yuj47/OPajtbXXR/dcCpznUsgr+tvkVVl2
XXY8+mT6gNrrcjQyu447Xlo+7+uFh9VEK7PrvuPvHfHS0ye33BCdk60THO/1
Rb5n7TohmpOtKxw/5OKpN48rWx214D0m45UFz/k8U8m6qKSkb/qcTz71OdD1
5yf2u/f3eaVjk7bZesbx5r16Dd42YlFyWLb+cfyTKQ80X7VkbfJktl5yfO5T
L8+rXS8le2brK8cbL/vfHbXrq2RWth5zPPn7Owf95bca91wNnOdqyHPWM+T5
cZbn8HaW5w3t+SX4R/b8EjnP+oGcr7Kch5Pz+1jOw/9sOX+N5Tx8tOX8YZbz
8L0l51kPaM67Pq3kPFxzHk7Oj7Gch98mOQ/XnHfrJcl51g+a83ByvrPlPDxv
Of+L5Tm8u+X5d5bn8Ecsz3OW564/aXn+quU5/GPLc3Kb9cl4y+2jLLfh5HYP
y214G8lteAvL7Tctn+HdLJ+vsXyGn2D5vIflM/wSyWf475bP1ZbP8Oskn+Fv
Sz6z7hos+Qy/VvIZrvkMJ5/3tXyGk8//ZTkMf9xyeK3lMPxpyWH4ZMvhDpbD
8Jskh+HDJIfhGyyHyVXWexdJrsI1V+Hk6rmWq3Byda7lKvwPlqunW67C51iu
vmP5CX/B8rON5Se8meQnfIHl5xOWn3DNT/iRlp+J5Sc8b/l5b+G6N9pHnjtl
3avPncL1uVO4PncK1+dO4frcKZznTnmO1K3P5TlSuD5HCvfeK+T48hwpnOs1
58s6XM8XrucL1/OF6/nCOV/OC67nBdfzcseR84Lrc8hwrpucF+t5PS+4nhdc
zwvOeVE/XOt346V+uNYPp/7CfQbiwP6ccWAfztjVWfi+fxzYZzIO7CcZu3r4
u6yf9e+6Pp79XY4P1+PDOT7HYZ3Jcdz73caL79+VC+zflQvs35UL7N+VC+zf
lQvs35UL7N+Vc/t3Fe7TlQvs05UL7NOVC+zTlQvs05UL7NOVC+zTlXP7dOGN
daN6g6s3uHqDqze4eoNrTrp1r/iBqx+4+nHHFz9w9QPHDx5Y3xZ/v2mC5wGu
HuDqAa75CS/+XtIE73zdceR84Xq+cM1P1sl6XvDi77mUe+cF1/yEa/1ufNH3
UMq9+uGan6yfi/uPA/7jSPPT8aI+44DPONL8ZH2rfxeu+QnX48M1P1k3an7C
GZ99/4dUsk7g/Rdyleup5iqcfOA4cH2PBq65B+d7zd/lOqh/F+69Pyv7dVAP
XOuBaz1wzRk437vC91ziwL7fcWB/7ziwj/fu/S6oH158X6A4sN91HNjXOg7s
X717nwrOi+ty8X1pyr3zgut5wTU34HwfOV+4ni+8+D4z5d75wvV84Zozbt1i
32s8sN5QD3D1AC++n8kEzwNccwlOPuAH7r0PaFz9wNUPvPi+JRM8P249Jrmn
/UC80b9Sb3D1BldvcPUGV29wb18j4/reHxyf8N19wkLPjFfPcPUMV89w9ezq
LLqfxkhv/ax9wgHSJ8Q/5wXX84JzXhyH9YB+jnDNf7geH67e4Jr/XMe9fSqM
6/yBa/7DtR641gPXzxGu+c/1vbif2KsTrnXCi3uLA95ir0641sk6QeuEa51w
/T7C9ToF1/rhWj9c64fr9wWu3xe3XpLcZp1TfP7kA/Mn750vvPi6Nx/p9Qte
fL7lA/MtH5hvec8DvPg6Oe95oA+mHlwfr3gfzPMAD/TBvHU1PNAH896/hgf2
6/O8wQN9M8+b60MW75t563m4XtdYJwfem3Y5/H+q0Tx6
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnF1IFFEUxwfNIKFCV/sutA+zzF0po5L8gEjBrKC3giiCJIVICIQekkwt
guihDHoRV0MoWiIhiEp7yFJCQ7CXVcN8iR5EITGViqhmR/EMnusemdmd1b8v
wp/L3XN+99z/zN45s8nnLp04H6VpWlaMpkX/+1+SkDm49+JIrhb4u/a69Ko7
v+dTbn72xJeZ+o3fo57/Ojfe/yiR6A179ivHNwxsJbq7u0+pHyjYRvTxIr+u
11zZRfQfG3zKeKR5ScdLdXAGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AO
PWenrZfd8zttvNPylepp/j8z59eOFb7zzLJfNM/s+2had8clE/1I6qhSl86f
c9ZN9OIyr1I3z8P4wLT+fIjq3ypm9Qdtyh+k4w/eS6N6Y7NSX3J6PdEn0hM9
Kr2uKYroGd99St3kY1qj4WOc3npoI9EvVC5T6isvLyW668F9pV5K61NrMeqT
06V1K61DaV1ZVQ/S9ZWul5Q/OIMzOIMzOIMzOIMzOIMzOIMzOIMzONvHuYCe
+2k3jXM/cJ4fZ/C0lid8AH4LzuAMzuAMzuAMzuAMzuAMzuAMzuAc6ZxxXhSa
8zdp35dV80jnt+pzzTyn+oe58dI+Rq4eTP3MGtPPPB2PNF+7x4NnePcLOIMz
OIMzOIeGs933OdL1kq6jVetrVT1I60RaP9K6Wqj1A9+AP4MzOIMzOIMzODuN
M3iqeXJxFpavJXp1X5I+/2R+BtF722r18afepxDdu7lbyW3k+hqidz1L0ed/
GfuL5FX6sN+jitP8fOSo8XzEPH7MGM9xMJ9vlxjn29znunypRI8rb1Pmy8Vp
Hp9hjDefqycY5+rc8wUuL3Oc8UacXXd3Er3qwwtl/ByfseUriN73tVj5vCDY
OpxaLy6eYL+Xeee538159Rt5RbpfwZfgSzPzhS8tTl+Srpfd83C+kZJF76+y
6/zzqkNXOp2nejgwz6iP1tt4aqDeuOfmHH+uDrk+AS2JxtOZ3avrj9t30Hie
tuj6un2biJ78JFr0HH+uc0uOG6cPx9P44+8E4j8zSPf1eOZbXfeYOBQZHLj+
gWD7ELj9/tlYF85nuHi4Po2+GJrvyYFAvqt+bqf5vurQ9cNDW4he3jSo65V5
sbSuciqU8XN+xa0Lty+46wXHk7uecr7UMUl1rzugd7lMfPI+Kq/LnG8Hu9/d
DAfXHBy4PiuOg/k+pMa4D2lO3030wtW3lNykfT5V6ZTbeHuPrpfVU9/orG/V
9eL+OKK/uX3co8pXykfat8b5Ode/BJ8Pjc/b7ed2+zb8udaRPuw0X3Waf0ZK
32m4+kjDlW+4+pDtzsvu+K2K0y6ec32udH5unkjv53daP7l0vyw2n+T4wD/h
n1byDLd/ct+Lpb5q1Xs0Vvm53e/12H3dCdd7SeG6njrtPSyn3Vc4jc9C/V2j
SOEsvR+W5gX/D43/R0qcTrtOOc23ncYhUs7BnMbNqvev/wIBCpF+
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-1.5350392591410702`, 
   1.5350389845307473`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6177205827312617`*^9, 3.617797802744731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Output",
 CellChangeTimes->{3.617720583441262*^9, 3.617797804204746*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllNewtonIterInfo", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617543646721884*^9, 3.617543669001989*^9}, {
  3.61754379710327*^9, 3.6175438018433175`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"huh", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "//", "Dimensions"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.617543808223381*^9, 3.6175438640749397`*^9}, {
  3.617543938765687*^9, 3.6175439394656935`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205834912615`*^9, 3.617797804454748*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllFVals", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617544337890678*^9, 3.6175443467307663`*^9}, {
  3.6175444031613307`*^9, 3.6175444037713366`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "huh", "]"}]], "Input",
 CellChangeTimes->{{3.61754391610546*^9, 3.617543921335512*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205835312614`*^9, 3.6177978045147486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Norm", " ", "/@", " ", 
    RowBox[{"huh", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617544359790897*^9, 3.617544362200921*^9}, {
  3.617544449421793*^9, 3.617544452291822*^9}, {3.617544495513254*^9, 
  3.617544506473364*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     LineBox[{{1., 37.611884246245204`}, {2., 32.31548509037757}, {3., 
      5.862708750947969*^6}, {4., 1.465675809258381*^6}, {5., 
      366410.37643775373`}, {6., 91561.8311536904}, {7., 
      22727.048579896753`}, {8., 5195.825595533379}, {9., 655.898090414444}, {
      10., 9.652394706720582}, {11., 0.00578172379216631}}],
     FontFamily->"Arial"]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 11.}, {0, 3.664175044553892*^6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617720583841262*^9, 3.6177978050947547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["check initialization", "Section",
 CellChangeTimes->{{3.617648049920026*^9, 3.6176480578011045`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176463247456064`*^9, 3.617646327615635*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205839112616`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617645348426832*^9, 3.617645352746876*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox["\<\"JLink-Launch218\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox["\<\"JLink-Launch218\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject["JLink-Launch218", 91, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6177205842012615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176460986193385`*^9, 3.617646102029372*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.617720584221262*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6175465828181276`*^9, 3.6175465891481905`*^9}, {
  3.617642190098014*^9, 3.6176421988801064`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReinstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617647455953071*^9, 3.6176474604131155`*^9}, {
  3.61764758282434*^9, 3.6176475893044043`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                ScrollPosition->{0., 0.},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Links\\JLink\\JLink.jar\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-7b428f3f-564f-4daa-9473-\
f97408bd08d3\"", 1304, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.617720584462262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"duh", "=", 
  InterpretationBox[
   RowBox[{
    TagBox["LinkObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PanelBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquarePlusIconMedium"],
             ImageSizeCache->{12., {0., 12.}}],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = True),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               StyleBox[
                
                PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 300}, Automatic},
                 ScrollPosition->{0., 0.},
                 StripOnInput->True],
                LineBreakWithin->False],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquareMinusIconMedium"]],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = False),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 500}, Automatic},
                StripOnInput->True],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link protocol: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["\<\"SharedMemory\"\>",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open$$],
       ImageSize->Automatic],
      BaselinePosition->Baseline],
     DynamicModuleValues:>{}], "]"}],
   LinkObject[
   "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\lib\\JLink.jar\" \
-Dcom.wolfram.jlink.libdir=\"C:\\Program Files\\Wolfram Research\\Mathematica\
\\10.0\\SystemFiles\\os\\win64\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-3d3ffcbf-b63e-4bb7-97bb-\
12c7d6aa40b7\"", 147, 7],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.617647720216714*^9, 3.6176477215267267`*^9}}],

Cell[BoxData[
 RowBox[{"LinkObject", "[", 
  RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}]], "Output",
 CellChangeTimes->{3.617720584512262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", "duh", "]"}]], "Input",
 CellChangeTimes->{{3.6176477385068965`*^9, 3.617647746436976*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinkObject", "::", "linkn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\
\"C:\\\\\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Research\\\\\\\\Math\\\" \
\[Ellipsis] \\\".wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\[NoBreak] in \
\[NoBreak]\\!\\(LinkConnectedQ[\\(\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\"C:\\\\\
\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Resea\\\" \[Ellipsis] \
\\\".jlink.JLinkSystemClassLoader com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\\)]\\)\[NoBreak] has an invalid LinkObject number; the link may \
be closed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkn\\\", ButtonNote -> \
\\\"LinkObject::linkn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6177205849022617`*^9}],

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", 
  RowBox[{"LinkObject", "[", 
   RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6177205849822617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Link*"}]], "Input",
 CellChangeTimes->{{3.617647704275554*^9, 3.6176477093656054`*^9}}],

Cell[BoxData[{
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["System`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["System`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["ControllerLinking",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"ControllerLinking", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkFunction",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFunction", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkProtocol",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkProtocol", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ThisLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"ThisLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["GraphLinkEfficiency",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"GraphLinkEfficiency", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkHost",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkHost", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRankCentrality",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkRankCentrality", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$CurrentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$CurrentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkActivate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkActivate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkInterrupt",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkInterrupt", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRead",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkRead", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$Linked",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$Linked", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkClose",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkClose", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkLaunch",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkLaunch", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadHeld", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$LinkSupported",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$LinkSupported", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnect",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkConnect", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkMode",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkMode", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadyQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadyQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$ParentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$ParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkConnectedQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkObject",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkObject", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Links",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"Links", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$SetParentLink",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$SetParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkCreate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkCreate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOpen",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOpen", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkService",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkService", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkError",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkError", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOptions",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOptions", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWrite",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWrite", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkFlush",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFlush", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkPatterns",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkPatterns", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWriteHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWriteHeld", "System`"}},
          ButtonNote->"System`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]], "\n", 
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["JLink`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["JLink`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["CreateExtraLinks",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"CreateExtraLinks", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["FrontEndLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"FrontEndLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaUILink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaUILink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["SharingLinks",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"SharingLinks", "JLink`"}},
          ButtonNote->"JLink`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.19]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]}], "Print", "InfoCell",
 CellChangeTimes->{3.617720585162262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"urlClass", "=", 
  RowBox[{"LoadJavaClass", "[", "\"\<java.net.URL\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176473903024144`*^9, 3.6176474065625772`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"java", ".", "net", ".", "URL"}], ",", "<>", "]"}],
  JLink`JavaClass["java.net.URL", 30, {
    JLink`JVM["vm3"]}, 1, "java`net`URL`", False, True]]], "Output",
 CellChangeTimes->{3.617720585472262*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{"modEqns", ",", "tryMat", ",", "lucaBasis"}], "]"}]], "Input",
 CellChangeTimes->{{3.617721060199997*^9, 3.6177210880602756`*^9}}],

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", "lucaMod", "]"}], "\[RightGuillemet]"}],
    JLink`Objects`vm3`JavaObject23866079067504641], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.292289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.5`", ",", "0", ",", "0", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.299289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}]}], "}"}], ",", 
   "JLink`Objects`vm2`JavaObject9714448113598465"}], "]"}]], "Output",
 CellChangeTimes->{3.617721089840293*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"InstallJava", "[", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205856922617`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1628, 891},
WindowMargins->{{Automatic, -1710}, {45, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[CellGroupData[{
Cell[743, 29, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[842, 33, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[934, 37, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1105, 44, 1879, 50, 101, "Input"],
Cell[2987, 96, 577, 9, 23, "Print"]
}, Open  ]],
Cell[3579, 108, 481, 9, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4097, 122, 84, 1, 35, "Subsubsection"],
Cell[4184, 125, 1841, 48, 101, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6062, 178, 149, 3, 35, "Subsubsection"],
Cell[6214, 183, 977, 28, 81, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7240, 217, 129, 1, 37, "Subsection"],
Cell[7372, 220, 171, 2, 30, "Text",
 InitializationCell->True],
Cell[7546, 224, 10241, 291, 281, "Input"],
Cell[17790, 517, 319, 8, 40, "Input"],
Cell[18112, 527, 355, 9, 40, "Input"],
Cell[CellGroupData[{
Cell[18492, 540, 1197, 35, 40, "Input"],
Cell[19692, 577, 1802, 51, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21531, 633, 151, 3, 40, "Input"],
Cell[21685, 638, 666, 15, 40, "Output"]
}, Open  ]],
Cell[22366, 656, 1703, 42, 141, "Input"],
Cell[CellGroupData[{
Cell[24094, 702, 127, 2, 40, "Input"],
Cell[24224, 706, 12510, 263, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36771, 974, 365, 6, 40, "Input"],
Cell[37139, 982, 917, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38093, 1010, 2387, 69, 81, "Input"],
Cell[40483, 1081, 910, 21, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41442, 1108, 55, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[41522, 1112, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[41670, 1119, 4565, 117, 261, "Input"],
Cell[46238, 1238, 734, 16, 40, "Output"]
}, Open  ]],
Cell[46987, 1257, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[47301, 1267, 232, 5, 40, "Input"],
Cell[47536, 1274, 398, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47971, 1286, 184, 4, 40, "Input"],
Cell[48158, 1292, 117859, 3040, 213, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166078, 4339, 163, 2, 37, "Subsection"],
Cell[166244, 4343, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[166574, 4352, 345, 8, 40, "Input"],
Cell[166922, 4362, 1109, 25, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168068, 4392, 486, 10, 40, InheritFromParent],
Cell[168557, 4404, 1048, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169642, 4433, 256, 6, 40, "Input"],
Cell[169901, 4441, 553, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170491, 4458, 241, 7, 40, "Input"],
Cell[170735, 4467, 981, 26, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171753, 4498, 135, 2, 40, "Input"],
Cell[171891, 4502, 273, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172201, 4511, 203, 5, 40, "Input"],
Cell[172407, 4518, 614, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173058, 4537, 98, 1, 40, "Input"],
Cell[173159, 4540, 590, 13, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173786, 4558, 184, 3, 40, "Input"],
Cell[173973, 4563, 1440, 44, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175450, 4612, 574, 9, 40, "Input"],
Cell[176027, 4623, 1617, 41, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177681, 4669, 1533, 37, 40, "Input"],
Cell[179217, 4708, 714, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179968, 4731, 839, 23, 40, InheritFromParent],
Cell[180810, 4756, 737, 19, 40, "Output"]
}, Open  ]],
Cell[181562, 4778, 1594, 38, 40, "Input"],
Cell[183159, 4818, 1936, 47, 101, "Input"],
Cell[CellGroupData[{
Cell[185120, 4869, 3080, 81, 101, "Input"],
Cell[188203, 4952, 1091, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189331, 4980, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[189479, 4987, 4621, 118, 261, "Input"],
Cell[194103, 5107, 583, 10, 40, "Output"]
}, Open  ]],
Cell[194701, 5120, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[195015, 5130, 232, 5, 40, "Input"],
Cell[195250, 5137, 447, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195734, 5150, 184, 4, 40, "Input"],
Cell[195921, 5156, 12523, 321, 54, "Output"]
}, Open  ]],
Cell[208459, 5480, 702, 15, 40, "Input"],
Cell[CellGroupData[{
Cell[209186, 5499, 102, 1, 40, "Input"],
Cell[209291, 5502, 1121, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210449, 5524, 140, 2, 40, "Input"],
Cell[210592, 5528, 1036, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211665, 5549, 184, 3, 40, "Input"],
Cell[211852, 5554, 2302, 49, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214191, 5608, 385, 8, 40, "Input"],
Cell[214579, 5618, 1734, 30, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216350, 5653, 281, 7, 61, "Input"],
Cell[216634, 5662, 1595, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218266, 5695, 130, 2, 40, "Input"],
Cell[218399, 5699, 2197, 42, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220633, 5746, 442, 10, 40, "Input"],
Cell[221078, 5758, 1846, 35, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222961, 5798, 515, 11, 40, "Input"],
Cell[223479, 5811, 1879, 36, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225395, 5852, 305, 6, 40, "Input"],
Cell[225703, 5860, 1123, 22, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226863, 5887, 454, 11, 40, "Input"],
Cell[227320, 5900, 3606, 66, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230963, 5971, 206, 4, 40, "Input"],
Cell[231172, 5977, 1171, 24, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232416, 6009, 113, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[232554, 6014, 108, 1, 35, "Subsubsection"],
Cell[232665, 6017, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[232781, 6022, 586, 11, 40, "Input"],
Cell[233370, 6035, 1197, 24, 40, "Output"]
}, Open  ]],
Cell[234582, 6062, 533, 11, 40, "Input"],
Cell[235118, 6075, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[235229, 6080, 616, 12, 40, "Input"],
Cell[235848, 6094, 1248, 24, 40, "Output"]
}, Open  ]],
Cell[237111, 6121, 586, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[237722, 6137, 773, 21, 40, "Input"],
Cell[238498, 6160, 1285, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239820, 6189, 612, 17, 40, "Input"],
Cell[240435, 6208, 389, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240861, 6221, 348, 9, 40, InheritFromParent],
Cell[241212, 6232, 347, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241596, 6243, 509, 9, 40, "Input"],
Cell[242108, 6254, 1218, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243363, 6283, 183, 3, 40, "Input"],
Cell[243549, 6288, 355, 5, 40, "Output"]
}, Open  ]],
Cell[243919, 6296, 563, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[244507, 6311, 516, 9, 40, "Input"],
Cell[245026, 6322, 1201, 24, 40, "Output"]
}, Open  ]],
Cell[246242, 6349, 560, 11, 40, "Input"],
Cell[246805, 6362, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[247018, 6369, 669, 13, 40, "Input"],
Cell[247690, 6384, 1223, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248950, 6413, 631, 18, 40, "Input"],
Cell[249584, 6433, 853, 19, 40, "Output"]
}, Open  ]],
Cell[250452, 6455, 600, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[251077, 6471, 537, 10, 40, "Input"],
Cell[251617, 6483, 1190, 24, 40, "Output"]
}, Open  ]],
Cell[252822, 6510, 579, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[253426, 6525, 537, 10, 40, "Input"],
Cell[253966, 6537, 1186, 24, 40, "Output"]
}, Open  ]],
Cell[255167, 6564, 577, 11, 40, "Input"],
Cell[255747, 6577, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[255858, 6582, 514, 9, 40, "Input"],
Cell[256375, 6593, 971, 20, 40, "Output"]
}, Open  ]],
Cell[257361, 6616, 566, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[257952, 6631, 514, 9, 40, "Input"],
Cell[258469, 6642, 972, 20, 40, "Output"]
}, Open  ]],
Cell[259456, 6665, 558, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260063, 6682, 115, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[260203, 6687, 4543, 117, 261, "Input"],
Cell[264749, 6806, 261, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265047, 6816, 4372, 114, 281, "Input"],
Cell[269422, 6932, 528, 15, 40, "Output"],
Cell[269953, 6949, 398, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270388, 6964, 120, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[270533, 6971, 1009, 27, 81, "Input"],
Cell[271545, 7000, 400, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271982, 7015, 1055, 28, 81, "Input"],
Cell[273040, 7045, 308, 9, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273397, 7060, 72, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[273494, 7064, 139, 1, 35, "Subsubsection"],
Cell[273636, 7067, 292, 8, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273965, 7080, 47, 0, 35, "Subsubsection"],
Cell[274015, 7082, 85, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[274125, 7088, 122, 3, 40, "Input"],
Cell[274250, 7093, 125, 2, 40, "Output"]
}, Open  ]],
Cell[274390, 7098, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[274512, 7104, 197, 4, 61, "Input"],
Cell[274712, 7110, 122, 2, 40, "Output"]
}, Open  ]],
Cell[274849, 7115, 264, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[275138, 7124, 309, 6, 61, "Input"],
Cell[275450, 7132, 227, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275726, 7144, 121, 1, 35, "Subsubsection"],
Cell[275850, 7147, 247, 5, 30, "Text"],
Cell[276100, 7154, 218, 5, 40, "Input"],
Cell[276321, 7161, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[276453, 7166, 164, 3, 40, "Input"],
Cell[276620, 7171, 442, 14, 40, "Output"]
}, Open  ]],
Cell[277077, 7188, 162, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[277264, 7194, 213, 4, 40, "Input"],
Cell[277480, 7200, 174, 4, 40, "Output"]
}, Open  ]],
Cell[277669, 7207, 109, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[277803, 7212, 348, 8, 40, "Input"],
Cell[278154, 7222, 466, 14, 40, "Output"]
}, Open  ]],
Cell[278635, 7239, 188, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[278848, 7245, 561, 14, 40, "Input"],
Cell[279412, 7261, 729, 19, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280178, 7285, 139, 3, 40, "Input"],
Cell[280320, 7290, 406, 10, 40, "Output"]
}, Open  ]],
Cell[280741, 7303, 118, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[280884, 7308, 176, 3, 40, "Input"],
Cell[281063, 7313, 212, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281312, 7323, 149, 2, 40, "Input"],
Cell[281464, 7327, 674, 15, 40, "Output"]
}, Open  ]],
Cell[282153, 7345, 117, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[282295, 7350, 178, 3, 40, "Input"],
Cell[282476, 7355, 1459, 38, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283972, 7398, 389, 9, 40, "Input"],
Cell[284364, 7409, 1301, 25, 61, "Output"]
}, Open  ]],
Cell[285680, 7437, 153, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[285858, 7444, 402, 6, 40, "Input"],
Cell[286263, 7452, 2726, 59, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289026, 7516, 352, 8, 40, "Input"],
Cell[289381, 7526, 1022, 20, 61, "Output"]
}, Open  ]],
Cell[290418, 7549, 102, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[290545, 7554, 249, 5, 40, "Input"],
Cell[290797, 7561, 962, 21, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291796, 7587, 299, 7, 40, "Input"],
Cell[292098, 7596, 1280, 23, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293427, 7625, 108, 1, 35, "Subsubsection"],
Cell[293538, 7628, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[293654, 7633, 532, 10, 40, "Input"],
Cell[294189, 7645, 649, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294875, 7666, 489, 10, 40, "Input"],
Cell[295367, 7678, 2988, 60, 101, "Output"]
}, Open  ]],
Cell[298370, 7741, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[298481, 7746, 485, 10, 40, "Input"],
Cell[298969, 7758, 650, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299656, 7779, 485, 10, 40, "Input"],
Cell[300144, 7791, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303165, 7856, 462, 9, 40, "Input"],
Cell[303630, 7867, 608, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304275, 7888, 464, 9, 40, "Input"],
Cell[304742, 7899, 4270, 82, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309049, 7986, 464, 9, 40, "Input"],
Cell[309516, 7997, 566, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310119, 8014, 462, 9, 40, "Input"],
Cell[310584, 8025, 6168, 113, 241, "Output"]
}, Open  ]],
Cell[316767, 8141, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[316980, 8148, 531, 10, 40, "Input"],
Cell[317514, 8160, 648, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318199, 8181, 525, 10, 40, "Input"],
Cell[318727, 8193, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321748, 8258, 507, 9, 40, "Input"],
Cell[322258, 8269, 587, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322882, 8290, 507, 9, 40, "Input"],
Cell[323392, 8301, 4285, 87, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327714, 8393, 507, 9, 40, "Input"],
Cell[328224, 8404, 562, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328823, 8421, 505, 9, 40, "Input"],
Cell[329331, 8432, 6061, 114, 221, "Output"]
}, Open  ]],
Cell[335407, 8549, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[335518, 8554, 490, 9, 40, "Input"],
Cell[336011, 8565, 610, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336658, 8586, 490, 9, 40, "Input"],
Cell[337151, 8597, 4276, 84, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341464, 8686, 490, 9, 40, "Input"],
Cell[341957, 8697, 570, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342564, 8714, 486, 9, 40, "Input"],
Cell[343053, 8725, 6751, 125, 261, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349853, 8856, 121, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[349999, 8861, 674, 19, 81, "Input"],
Cell[350676, 8882, 1415, 48, 70, "Output"],
Cell[352094, 8932, 13113, 264, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365268, 9203, 99, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[365392, 9208, 517, 13, 40, "Input"],
Cell[365912, 9223, 239, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366188, 9235, 378, 7, 40, "Input"],
Cell[CellGroupData[{
Cell[366591, 9246, 136, 1, 23, "Print"],
Cell[366730, 9249, 136, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[366893, 9254, 452, 10, 40, "Input"],
Cell[367348, 9266, 933, 26, 40, "Input"],
Cell[CellGroupData[{
Cell[368306, 9296, 228, 6, 40, "Input"],
Cell[368537, 9304, 194, 5, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368768, 9314, 471, 10, 40, "Input"],
Cell[369242, 9326, 36275, 592, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405554, 9923, 1088, 28, 112, "Input"],
Cell[406645, 9953, 1153, 29, 55, "Output"]
}, Open  ]],
Cell[407813, 9985, 240, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408078, 9994, 408, 12, 61, "Input"],
Cell[408489, 10008, 151, 3, 40, "Output"]
}, Open  ]],
Cell[408655, 10014, 236, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408916, 10023, 130, 2, 40, "Input"],
Cell[409049, 10027, 163, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409249, 10035, 382, 9, 40, "Input"],
Cell[409634, 10046, 1263, 32, 235, "Output"]
}, Open  ]],
Cell[410912, 10081, 460, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411421, 10098, 107, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[411553, 10103, 106, 1, 40, "Input"],
Cell[411662, 10106, 278, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411977, 10116, 125, 2, 40, "Input"],
Cell[412105, 10120, 12237, 259, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424379, 10384, 106, 1, 40, "Input"],
Cell[424488, 10387, 276, 5, 40, "Output"]
}, Open  ]],
Cell[424779, 10395, 206, 3, 40, "Input"],
Cell[CellGroupData[{
Cell[425010, 10402, 179, 3, 40, "Input"],
Cell[425192, 10407, 13652, 286, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438881, 10698, 14347, 294, 82, "Input"],
Cell[453231, 10994, 749, 12, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454017, 11011, 137, 2, 40, "Input"],
Cell[454157, 11015, 1616, 28, 73, "Message"],
Cell[455776, 11045, 796, 14, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456609, 11064, 117, 2, 40, "Input"],
Cell[456729, 11068, 8691, 217, 309, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465457, 11290, 185, 3, 40, "Input"],
Cell[465645, 11295, 276, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465970, 11307, 33, 0, 72, "Section"],
Cell[466006, 11309, 503, 12, 40, "Input",
 InitializationCell->True],
Cell[466512, 11323, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[466842, 11332, 183, 3, 40, "Input"],
Cell[467028, 11337, 824, 22, 40, "Output"]
}, Open  ]],
Cell[467867, 11362, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[468181, 11372, 106, 1, 40, "Input"],
Cell[468290, 11375, 278, 5, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

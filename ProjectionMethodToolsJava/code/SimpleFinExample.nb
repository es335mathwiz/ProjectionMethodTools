(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    138358,       3295]
NotebookOptionsPosition[    130413,       3025]
NotebookOutlinePosition[    131032,       3048]
CellTagsIndexPosition[    130989,       3045]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Simple Example", "Title"],

Cell["Gary S. Anderson", "Author",
 CellChangeTimes->{{3.6172005766837215`*^9, 3.617200602415076*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[CellGroupData[{

Cell["Luca\[CloseCurlyQuote]s Simplest Financial Market Model", "Section"],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}}],

Cell[BoxData["\<\"\\\"c:\\\\Program \
Files\\\\Java\\\\jdk1.7.0_51\\\\bin\\\\javac\\\" -cp \
./;ProjectionMethodToolsJava-0.0.1-SNAPSHOT.jar;Jama-1.0.2-1.0-SNAPSHOT.jar  \
-target 1.7 ./lucaMod.java\"\>"], "Print",
 CellChangeTimes->{3.6178958867588773`*^9, 3.6178959645296545`*^9, 
  3.6178974392384157`*^9, 3.61789762127424*^9, 3.617897957505614*^9, 
  3.6178981481935472`*^9, 3.6178988067101326`*^9, 3.6178991062951303`*^9, 
  3.617899348605565*^9, 3.617899553359701*^9, 3.6178997842700195`*^9, 
  3.617900217402359*^9, 3.6179006108702974`*^9, 3.617900891827111*^9}]
}, Open  ]],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

The newWeigthedStochasticBasis \
function associates features of the model definitio,

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}}]
}, Closed]],

Cell[CellGroupData[{

9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^,

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

oupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell["The mathematica pro,

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"goodQkArray", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucaMat", "=", 
  RowBox[{
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.617627763020282*^9, 3.617627766890321*^9}, {
   3.617627799922654*^9, 3.6176278399040537`*^9}, {3.6176278824864836`*^9, 
   3.6176281084647675`*^9}, {3.6177381889885225`*^9, 
   3.6177381911185436`*^9}, {3.6177383746603785`*^9, 3.617738413470767*^9}, {
   3.6177385310319424`*^9, 3.6177386394130263`*^9}, {3.6177959800565042`*^9, 
   3.6177959979666834`*^9}, {3.617797284849552*^9, 3.6177972872395763`*^9}, {
   3.6178012830255404`*^9, 3.617801310705817*^9}, {3.6178068828165636`*^9, 
   3.6178069017467527`*^9}, 3.617807018587921*^9, {3.6178943096991043`*^9, 
   3.6178943124091315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.13387113268194584`", ",", "0.04938370437445493`", ",", 
     "0.`", ",", "0.059994568933253896`", ",", "0.`", ",", "0.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.08`", ",", "0.`", ",", "0.09718925656664626`", 
     ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.13387113268194584`", ",", "0.04938370437445493`", ",", 
     "0.`", ",", "0.059994568933253896`", ",", "0.`", ",", "0.`", ",", 
     "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178959028290377`*^9, 3.6178959729837437`*^9, 
  3.617897441328437*^9, 3.6178976279263086`*^9, 3.617897964069704*^9, 
  3.6178981538936043`*^9, 3.6178988126401916`*^9, 3.6178991127271967`*^9, 
  3.6178993571776524`*^9, 3.617899559799765*^9, 3.6178997919341*^9, 
  3.6179002232624173`*^9, 3.6179006168843613`*^9, 3.617900898877181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5354845307277833`", ",", 
       RowBox[{"-", "0.5354845307277833`"}], ",", "0.6172963046806865`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5354845307277833`", ",", "0.4645154692722171`", ",", 
       "0.6172963046806865`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6178959028990383`*^9, 3.6178959730237436`*^9, 
  3.617897441368437*^9, 3.6178976279663086`*^9, 3.6178979641397047`*^9, 
  3.617898153963605*^9, 3.617898812670192*^9, 3.617899112777197*^9, 
  3.617899357217653*^9, 3.6178995598397655`*^9, 3.6178997919741*^9, 
  3.617900223312418*^9, 3.6179006169443617`*^9, 3.6179008989271817`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

ox[{"InstallJava", "[", "]"}]], "Input",
 CellChangeTi,

Cell[CellGroupData[{

3.6176467083244486`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[",

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"lucaBasis", "[", 
    RowBox[{"setAllWeights", "[", "lucaMat", "]"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"simp", "=", 
     RowBox[{
     "JavaNew", "[", 
      "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"\
", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"res1$1$1", "=", 
     RowBox[{"ComputeInitialCollocationWeights", "[", 
      RowBox[{"lucaBasis", ",", "lucaMat", ",", "modEqns", ",", "simp"}], 
      "]"}]}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"res1$1$1", "[", 
       RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
      RowBox[{"polys1$1$1", "=", 
       RowBox[{
        RowBox[{"genPolys", "[", 
         RowBox[{
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
        "Chop"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
       "*)"}], ",", 
      "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"1.`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.617895911969129*^9, 3.617895982243836*^9, 3.6178960524245377`*^9, 
   3.6178961358753724`*^9, 3.617896436322381*^9, {3.617896576135781*^9, 
   3.617896589655916*^9}, 3.6178970711607313`*^9, {3.617897107381093*^9, 
   3.617897132223344*^9}, 3.617897228186305*^9, 3.617897295896982*^9, 
   3.617897441488438*^9, 3.6178976288063173`*^9, 3.6178979650317154`*^9, 
   3.6178981546036115`*^9, 3.6178988132201977`*^9, 3.6178991136472054`*^9, 
   3.6178993580676613`*^9, 3.617899560749775*^9, 3.6178997928041086`*^9, 
   3.6179002239624243`*^9, 3.6179006175143676`*^9, 3.6179008995771885`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

          RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[Invisib,

ce]", 
             TagBox[
              StyleBox[
               PaneBox["\<\"JLink-Lau,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ushk", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, 3.617539650968808*^9, {
   3.617539771520014*^9, 3.617539771530014*^9}, {3.6175447381456804`*^9, 
   3.6175447847461467`*^9}, {3.6176152216606865`*^9, 3.617615223130701*^9}, {
   3.617729256863103*^9, 3.6177292659831944`*^9}, {3.6178125174749517`*^9, 
   3.6178125207149844`*^9}, 3.617897909905138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974493185167`*^9, 3.6178976379364085`*^9, 
  3.6178978366444054`*^9, 3.617897912735166*^9, 3.6178979731717973`*^9, 
  3.6178981549536147`*^9, 3.6178988135202007`*^9, 3.6178991143192143`*^9, 
  3.6178993587876687`*^9, 3.6178995615097823`*^9, 3.617899793524116*^9, 
  3.6179002242924275`*^9, 3.617900617824371*^9, 3.6179008999271917`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175390631259155`*^9}, 3.6175396509788084`*^9, {3.617539771530014*^9, 
   3.617539771530014*^9}, 3.617726982672346*^9, {3.6178125554353313`*^9, 
   3.6178125576453533`*^9}, 3.617897982661892*^9}],

 24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.617539651018809*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.617703168939221*^9, 3.617703170609154*^9}, {
   3.6177251642891626`*^9, 3.617725171869238*^9}, 3.617897983211898*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974498685217`*^9, 3.617897638566415*^9, 
  3.617897836734406*^9, 3.6178981550936165`*^9, 3.617898813650202*^9, 
  3.617899114459216*^9, 3.6178993589376698`*^9, 3.6178995615897827`*^9, 
  3.6178997936841173`*^9, 3.617900224422429*^9, 3.617900617964372*^9, 
  3.617900900037193*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.6175396510288086`*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.6177251761492805`*^9, 3.6177251785693054`*^9}, 
   3.617726984322363*^9, {3.6178134560223618`*^9, 3.6178134697124987`*^9}, 
   3.6178979837519026`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.617539651048809*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.617725218189701*^9, 3.61772522000972*^9}, {
   3.6178134784125853`*^9, 3.6178134801226025`*^9}, 3.617897986241928*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.1720033044948844`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.017319066954171472`"}], "}"}], ",", 
   RowBox[{"{", "0.1021642000083067`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08715817144074917`"}], "}"}], ",", 
   RowBox[{"{", "0.0871581714407492`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.10216420000830667`"}], "}"}], ",", 
   RowBox[{"{", "0.017319066954171493`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17200330449488438`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974508185315`*^9, 3.6178976396464252`*^9, 
  3.617897836844407*^9, 3.6178981552736177`*^9, 3.6178988137302027`*^9, 
  3.6178991145292163`*^9, 3.6178993590176706`*^9, 3.6178995616697836`*^9, 
  3.6178997937741184`*^9, 3.6179002244824295`*^9, 3.6179006180543733`*^9, 
  3.617900900107194*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.6175396510588093`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252370898905`*^9, 3.6177252404999247`*^9}, 
   3.61772699007242*^9, 3.6178979869219346`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.6175396510688095`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252488600082`*^9, 3.6177252514100337`*^9}, {
   3.6178134902427034`*^9, 3.6178134918127193`*^9}, 3.617897987691942*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.08472361378071384`", "}"}], ",", 
   RowBox[{"{", "0.03403401316487946`", "}"}], ",", 
   RowBox[{"{", "0.031105181491203136`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.019584419124631255`"}], "}"}], ",", 
   RowBox[{"{", "0.019584419124631273`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.03110518149120312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.034034013164879424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08472361378071382`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974519785433`*^9, 3.61789764106644*^9, 
  3.6178978369144077`*^9, 3.6178981553936195`*^9, 3.6178988138102036`*^9, 
  3.617899114589217*^9, 3.6178993590976734`*^9, 3.6178995617397842`*^9, 
  3.6178997938541193`*^9, 3.61790022454243*^9, 3.6179006181143737`*^9, 
  3.6179009001771946`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.6175396510788097`*^9, {3.617539780840107*^9, 
   3.617539780850107*^9}, {3.617725260960129*^9, 3.617725262840148*^9}, 
   3.6177269918424377`*^9, 3.6178979883419485`*^9}],

   RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
         RowBox[{"phimat", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], "]"}], "//.", 
    ",

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.6175392088874583`*^9, 3.6175394582869225`*^9, 
   3.6175396510988097`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, {
   3.6177106269615965`*^9, 3.617710632491652*^9}, {3.6177252781303005`*^9, 
   3.617725279760317*^9}, 3.617897989161957*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.617897452878552*^9, 3.6178976420764503`*^9, 
  3.6178978369544086`*^9, 3.61789815547362*^9, 3.6178988139002047`*^9, 
  3.617899114659218*^9, 3.6178993591996746`*^9, 3.6178995618597856`*^9, 
  3.61789979393412*^9, 3.6179002250724354`*^9, 3.617900618194374*^9, 
  3.617900900287195*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.617539208947458*^9, 3.617539467326923*^9, 
   3.6175396511088095`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.617725307870598*^9, 3.6177269974024935`*^9, {3.617813504982851*^9, 
   3.617813510372905*^9}, 3.6178138325861273`*^9, 3.617897990611972*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rut", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.617539479096923*^9, 
   3.61753965114881*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.6177253085806055`*^9, 3.617813838136183*^9, 3.617897991391979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.12529172487167858`", "}"}], ",", 
   RowBox[{"{", "0.12529172487167858`", "}"}], ",", 
   RowBox[{"{", "0.012154639881830978`", "}"}], ",", 
   RowBox[{"{", "0.012154639881830978`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.01215463988183095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.01215463988183095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.12529172487167856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.12529172487167856`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.617897453788561*^9, 3.6178976431064606`*^9, 
  3.617897837004409*^9, 3.617898155583621*^9, 3.6178988139802055`*^9, 
  3.6178991147192183`*^9, 3.6178993592696753`*^9, 3.6178995619397864`*^9, 
  3.617899794014121*^9, 3.617900225142436*^9, 3.617900618264375*^9, 
  3.6179009004171968`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175394824969225`*^9, 
   3.61753965114881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725310980629*^9, 3.617726995772477*^9, 3.6178979921219864`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175394837869225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.6177253135206547`*^9, {3.6178135164529657`*^9, 3.617813518572987*^9}, 
   3.6178979926919923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.06264586243583929`", "}"}], ",", 
   RowBox[{"{", "0.06264586243583929`", "}"}], ",", 
   RowBox[{"{", "0.00607731994091548`", "}"}], ",", 
   RowBox[{"{", "0.00607731994091548`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.006077319940915471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.006077319940915471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06264586243583928`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06264586243583928`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.617897454868572*^9, 3.6178976443664727`*^9, 
  3.6178978370344095`*^9, 3.6178981556536217`*^9, 3.617898814060206*^9, 
  3.617899114789219*^9, 3.6178993593596764`*^9, 3.6178995620197873`*^9, 
  3.6178997941041217`*^9, 3.6179002252024364`*^9, 3.617900618344376*^9, 
  3.6179009004971976`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.6175394860369225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725316300682*^9, 3.617727031702837*^9, 3.617897993301998*^9}],

" ", "\<\"ru\"\>"}], ",", 
   RowBox[{
    RowBox[{"0.30864815234034326`", " ", "\<\",

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.6175396511888103`*^9, {
   3.617539859270891*^9, 3.6175398592808914`*^9}, 3.617725318670706*^9, {
   3.617813531043112*^9, 3.6178135320331216`*^9}, 3.6178979939920053`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.1720033044948844`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.017319066954171472`"}], "}"}], ",", 
   RowBox[{"{", "0.1021642000083067`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08715817144074917`"}], "}"}], ",", 
   RowBox[{"{", "0.0871581714407492`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.10216420000830667`"}], "}"}], ",", 
   RowBox[{"{", "0.017319066954171493`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17200330449488438`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974561185846`*^9, 3.6178976456964865`*^9, 
  3.6178978370744095`*^9, 3.6178981559036245`*^9, 3.617898814290208*^9, 
  3.617899115169223*^9, 3.6178993597396803`*^9, 3.6178995624397917`*^9, 
  3.6178997945441265`*^9, 3.617900225432439*^9, 3.6179006185643783`*^9, 
  3.6179009007071996`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175396511888103`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.6177253196207156`*^9, 
   3.6177270480029993`*^9, 3.6178979946020117`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175396511988106`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725320590725*^9, {
   3.6178135365931673`*^9, 3.617813538953191*^9}, 3.617897995162017*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.08472361378071384`", "}"}], ",", 
   RowBox[{"{", "0.03403401316487946`", "}"}], ",", 
   RowBox[{"{", "0.031105181491203136`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.019584419124631255`"}], "}"}], ",", 
   RowBox[{"{", "0.019584419124631273`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.03110518149120312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.034034013164879424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.08472361378071382`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974573285966`*^9, 3.617897646966499*^9, 
  3.61789783709441*^9, 3.617898155993625*^9, 3.61789881442021*^9, 
  3.6178991152292233`*^9, 3.6178993598196807`*^9, 3.6178995625297923`*^9, 
  3.6178997946941276`*^9, 3.61790022555244*^9, 3.617900618634379*^9, 
  3.6179009007772007`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.617539651208811*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725322270742*^9, 
   3.617727051953039*^9, 3.6178979958220234`*^9}]
}, Closed]],

Cell[CellGroupData[{

7305539759*^9, 3.6177977779444833`*^9, 
   3.6177982740094438`*^9, 3.6177983149198527`*^9}]
}, Open  ]],

Cell[CellGrou,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res2$2$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res2$2$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"1.`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617897458848612*^9, 3.6178976487505217`*^9, 
  3.6178982846949124`*^9, 3.617898412256188*^9, 3.6178984603066683`*^9, 
  3.6178985579476447`*^9, 3.617898814570211*^9, 3.6178991153692245`*^9, 
  3.617899360019683*^9, 3.6178995626797943`*^9, 3.6178997948741293`*^9, 
  3.6179002257124414`*^9, 3.6179006188143806`*^9, 3.617900900967202*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res3$3$1", "=", 
   RowBox[{"res2$2$1", "[", 
    RowBox[{"toOrder", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res3$3$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys3$3$1", "=", 
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
    "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"1.`", " ", "\<\"uu$Shock\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"0.2677422653638917`", " ", "\<\"qq\"\>"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "\<\"ru\"\>"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "\<\"uu$Shock\"\>"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617898569887764*^9, 3.617898814850214*^9, 
  3.617899115589227*^9, 3.617899360231687*^9, 3.617899562879796*^9, 
  3.6178997950841317`*^9, 3.6179002259344463`*^9, 3.617900619034383*^9, 
  3.617900901337206*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{


     RowBox[{"ww", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    RowBox,

Cell[CellGroupData[{

Equal]", 
    RowBox[{"109.38161705673144`", " ", 
     RowBox[{"ww", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"val", "[", "7",

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command, GenerateModelCode, outputs lists of state variables, non-state \
variables and shocks along with an instance of the class associated with the \
model."
}], "Text",
 CellChangeTimes->{3.6175329697524137`*^9, 3.617900660424797*^9}]
}, Open  ]],

Cell[CellGroupData[{

22432*^9}, 
   3.617736613542768*^9, 3.6177366,

2373`*^9, {3.6177367413840466`*^9, 
   3.617736756294195*^9}, 3.617736819824831*^9, 3.,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oldBetap", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"get$betap", "[", "]"}], "]"}]}]], "Input"],

Cell[BoxData["0.99`"], "Output",
 CellChangeTimes->{3.6178974592186155`*^9, 3.6178976491605253`*^9, 
  3.6178988148802137`*^9, 3.6178991156492276`*^9, 3.617899360251687*^9, 
  3.617899562959797*^9, 3.617899795124132*^9, 3.6179002259844465`*^9, 
  3.6179006191043835`*^9, 3.617900901387206*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", ".5", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"modEqns", "[", 
  RowBox[{"get$betap", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", "oldBetap", "]"}], "]"}]}], "Input"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.617897459258616*^9, 3.617897649190526*^9, 
  3.6178988149102144`*^9, 3.617899115679228*^9, 3.6178993602816877`*^9, 
  3.617899562989797*^9, 3.617899795164132*^9, 3.6179002260144467`*^9, 
  3.617900619144384*^9, 3.617900901427207*^9}]
}, Open  ]],

Cell["\<\
One can also get and update (should be \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote], but it isn\[CloseCurlyQuote]t yet) all the model \
parameters simultaneously \
\>", "Text",
 CellChangeTimes->{{3.617531730237169*^9, 3.617531790921002*^9}, {
  3.6175318473302345`*^9, 3.6175318776722345`*^9}, {3.6179006868050604`*^9, 
  3.6179006931551237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"theOldParams", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"getParams", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "theOldParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175318845050344`*^9, 3.6175319564834347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.99`", ",", "1.`", ",", "0.5`", ",", "0.5`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6178974592986164`*^9, 3.6178976492305264`*^9, 
  3.617898814930215*^9, 3.6178991157092285`*^9, 3.6178993603016877`*^9, 
  3.617899563009797*^9, 3.617899795204133*^9, 3.6179002260344467`*^9, 
  3.617900619204385*^9, 3.617900901467207*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

7376101727343`*^9, 3.617737612032753*^9}, {
   3.6177377137937703`*^9, 3.6177378742153745`*^9}, {3.6177379364159966`*^9, ,

3.6177379388360205`*^9}, {3.6177380059066916`*^9, 3.617738064577278*^9}, 
   3.6177381609082413`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"ww", "[", "2", "]"}], "\[Rule]", 
     RowBox[{"0.16`",,

Cell[BoxData[
 RowBox[{
  RowBox[{"theStatePoly", "=", 
   RowBox[{"lucaBasis", "[", 
    RowBox[{"getTheState", "[", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175336874341993`*^9, 3.617533734673255*^9}}],

Cell["The polynomial ranges", "Item",
 CellChangeTimes->{{3.6175338258124323`*^9, 3.6175338467320137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getRanges", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09718925656664625`"}], ",", "0.09718925656664625`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.617897459358617*^9, 3.617897649270527*^9, 
  3.6178988149602146`*^9, 3.6178991157392282`*^9, 3.617899360331688*^9, 
  3.617899563039798*^9, 3.617899795244133*^9, 3.6179002260644474`*^9, 
  3.617900619244385*^9, 3.617900901507208*^9}]
}, Open  ]],

}]}]}], ",", "True", ",", 
     RowBox[{
      RowBox[{"val", "[", "5", "]"}], "\[Equal]", 
      RowBox[{"6.25`", " ", 
       RowBox[{"ww", "[", "2", "]"}]}]},

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getOrders", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}, {
  3.617533906331788*^9, 3.617533915991788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6178974593886175`*^9, 3.617897649300527*^9, 
  3.617898814970215*^9, 3.617899115769229*^9, 3.6178993603516884`*^9, 
  3.6178995630597973`*^9, 3.6178997952741337`*^9, 3.617900226084448*^9, 
  3.617900619294386*^9, 3.617900901537208*^9}]
}, Open  ]],

 "]"}], "\[Rule]", 
     RowBox[{"0.16`", " ", 
      RowBox[{"val", "[", "5", "]"}]}]}], ",", 
    RowBox[,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPhiFunc", "[", 
    RowBox[{"#", ",", "lucaBasis"}], "]"}], "&"}], "/@", " ", 
  RowBox[{"theStatePoly", "[", 
   RowBox[{"getStateVariableNames", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175341379817877`*^9, 3.6175341887334027`*^9}, {
  3.6176184695331807`*^9, 3.617618470953195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"2.`", " ", "\<\"qq\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"6.25`", " ", "\<\"ru\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"10.289203100491495`", " ", "\<\"uu$Shock\"\>"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6178974594286175`*^9, 3.6178976493305273`*^9, 
  3.6178988150102153`*^9, 3.617899115799229*^9, 3.6178993603916883`*^9, 
  3.617899563089798*^9, 3.6178997953141336`*^9, 3.617900226124448*^9, 
  3.6179006193543863`*^9, 3.6179009015972085`*^9}]
}, Open  ]],


         RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", "0.8729888060822211"}], 
       ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.4,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Join", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"lucaMat", ","}], "*)"}], 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{
       RowBox[{"getTheGrid", "[", "]"}], "[", 
       RowBox[{"generatePolyOrdersForOuterProduct", "[", "]"}], "]"}], "]"}], 
     "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6176160776422462`*^9, 3.6176161235027046`*^9}, {
   3.617616246203932*^9, 3.6176163025654955`*^9}, {3.617619782800314*^9, 
   3.617619787320359*^9}, 3.61789905024457*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "1", "0", "1", "0", "1", "0", "1"},
    {"0", "0", "1", "1", "0", "0", "1", "1"},
    {"0", "0", "0", "0", "1", "1", "1", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617897459468618*^9, 3.6178976493705277`*^9, 
  3.6178988150302153`*^9, 3.6178991158292294`*^9, 3.617899360411689*^9, 
  3.6178995631097984`*^9, 3.6178997953441343`*^9, 3.6179002261444483`*^9, 
  3.617900619384386*^9, 3.6179009016572094`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getTheGrid", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.617626649969055*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{
    "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
     "ProjectionMethodToolsJava", ".", "GridPointsSpec"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject29575430348472321]], "Output",
 CellChangeTimes->{3.6178974595086184`*^9, 3.617897649410528*^9, 
  3.6178988150502157`*^9, 3.61789911585923*^9, 3.6178993604416895`*^9, 
  3.6178995631297984`*^9, 3.617899795374134*^9, 3.6179002261644487`*^9, 
  3.617900619444387*^9, 3.617900901687209*^9}]
}, Open  ]],

{"4", "*", 
        RowBox[{"sigma$u", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "rho$ru"}], ")"}]}]},

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getStateVariableNames", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175357853313556`*^9, 3.617535796611356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>", ",", "\<\"uu$Shock\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617897459548619*^9, 3.6178976494505286`*^9, 
  3.617898815080216*^9, 3.61789911588923*^9, 3.617899360471689*^9, 
  3.6178995631497984`*^9, 3.617899795414135*^9, 3.6179002261844482`*^9, 
  3.617900619504388*^9, 3.61790090172721*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.617534500160631*^9, 3.6175345117608633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"2.`", " ", "\<\"qq\"\>"}], ",", 
   RowBox[{"6.25`", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"12.5`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"10.289203100491495`", " ", "\<\"uu$Shock\"\>"}], ",", 
   RowBox[{"20.57840620098299`", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{"64.30751937807185`", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}],
    ",", 
   RowBox[{
   "128.6150387561437`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", 
    " ", "\<\"uu$Shock\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974618186417`*^9, 3.617897651740552*^9, 
  3.6178988153102183`*^9, 3.617899116119232*^9, 3.6178993606916914`*^9, 
  3.617899563379801*^9, 3.6178997956441374`*^9, 3.617900226424451*^9, 
  3.6179006197343903`*^9, 3.617900901937212*^9}]
}, Open  ]],

, ",", "8"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
 ,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175345957204895`*^9, 3.6175345996202946`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974618986425`*^9, 3.617897651810552*^9, 
  3.6178988153302183`*^9, 3.617899116149233*^9, 3.617899360721692*^9, 
  3.6178995633998013`*^9, 3.6178997956941376`*^9, 3.617900226454451*^9, 
  3.61790061976439*^9, 3.6179009019772124`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}], "]"}]}], "//.", 
   "lucaSubs"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6177966373630776`*^9, 3.6177966786634903`*^9}, 
   3.617796709883803*^9, {3.6177967757344613`*^9, 3.617796776974474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974619486427`*^9, 3.617897651860553*^9, 
  3.6178988153802195`*^9, 3.6178991161892333`*^9, 3.6178993607716923`*^9, 
  3.6178995634398017`*^9, 3.6178997957241383`*^9, 3.617900226474451*^9, 
  3.6179006197843904`*^9, 3.617900902037213*^9}]
}, Open  ]],

.`", ",", 
     "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.617707622581292*^9, 3.617708386347966*^9, 3.6177084431685348`*^9,,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.6175346707167397`*^9, 3.617534680446253*^9}, {
  3.617534729073821*^9, 3.617534736143468*^9}, {3.617535094504675*^9, 
  3.6175350948646708`*^9}, {3.6175364743190355`*^9, 3.6175364745190372`*^9}, {
  3.6175365680499725`*^9, 3.6175365685399776`*^9}, {3.6175366308609433`*^9, 
  3.6175366319509106`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.7071067811865476`", ",", 
     "0.5`", ",", "0.7071067811865474`", ",", "0.49999999999999983`", ",", 
     "0.49999999999999994`", ",", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.7071067811865476`", ",", 
     RowBox[{"-", "0.5`"}], ",", "0.7071067811865474`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.49999999999999994`", ",", 
     RowBox[{"-", "0.35355339059327373`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.4999999999999999`"}], ",", "0.7071067811865474`", ",", 
     "0.49999999999999983`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.3535533905932736`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.4999999999999999`", ",", 
     "0.7071067811865474`", ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.3535533905932736`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.7071067811865476`", ",", 
     "0.5`", ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", 
     RowBox[{"-", "0.49999999999999994`"}], ",", 
     RowBox[{"-", "0.35355339059327373`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.7071067811865476`", ",", 
     RowBox[{"-", "0.5`"}], ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", "0.49999999999999983`", ",", 
     RowBox[{"-", "0.49999999999999994`"}], ",", "0.35355339059327373`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.4999999999999999`"}], ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", 
     RowBox[{"-", "0.49999999999999983`"}], ",", "0.49999999999999983`", ",", 
     "0.3535533905932736`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.4999999999999999`", ",", 
     RowBox[{"-", "0.7071067811865474`"}], ",", "0.49999999999999983`", ",", 
     "0.49999999999999983`", ",", 
     RowBox[{"-", "0.3535533905932736`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974624386473`*^9, 3.617897652320557*^9, 
  3.617898815820224*^9, 3.617899118569257*^9, 3.617899361231697*^9, 
  3.6178995659098263`*^9, 3.617899796214143*^9, 3.617900226984456*^9, 
  3.617900620344396*^9, 3.6179009024872174`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", "lucaMat", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}], "]"}]}], "//.", 
   "lucaSubs"}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{{3.617796291899623*^9, 3.6177962958796625`*^9}, {
   3.6177963821205254`*^9, 3.617796409490799*^9}, 3.617898737399439*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.09914105652431512`", ",", 
     RowBox[{"-", "0.009982544235962516`"}], ",", "0.05888646591720689`", ",", 
     RowBox[{"-", "0.05023713484307075`"}], ",", "0.05023713484307075`", ",", 
     RowBox[{"-", "0.05888646591720689`"}], ",", "0.009982544235962516`", ",", 
     RowBox[{"-", "0.09914105652431512`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09914105652431512`", ",", 
     RowBox[{"-", "0.009982544235962516`"}], ",", "0.05888646591720689`", ",", 
     RowBox[{"-", "0.05023713484307075`"}], ",", "0.05023713484307075`", ",", 
     RowBox[{"-", "0.05888646591720689`"}], ",", "0.009982544235962516`", ",", 
     RowBox[{"-", "0.09914105652431512`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08600165224744219`", ",", 
     RowBox[{"-", "0.008659533477085743`"}], ",", "0.051082100004153336`", 
     ",", 
     RowBox[{"-", "0.0435790857203746`"}], ",", "0.0435790857203746`", ",", 
     RowBox[{"-", "0.051082100004153336`"}], ",", "0.008659533477085743`", 
     ",", 
     RowBox[{"-", "0.08600165224744219`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.617897463018654*^9, 3.617897652860563*^9, 
  3.6178987423294888`*^9, 3.6178988163602285`*^9, 3.617899119009261*^9, 
  3.6178993617517023`*^9, 3.6178995664498315`*^9, 3.6178997965841465`*^9, 
  3.617900227454461*^9, 3.6179006209144015`*^9, 3.617900902837221*^9}]
}, Open  ]],

9999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]},

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"theStatePoly", "[", 
    RowBox[{"getStateVariablePolynomialWeights", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175382216625147`*^9, 3.6175382283435817`*^9}, {
  3.6178987697897635`*^9, 3.6178987712997785`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.13387113268194584`", ",", "0.04938370437445493`", ",", "0", 
     ",", "0.059994568933253896`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0.08`", ",", "0", ",", "0.09718925656664626`", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974630786543`*^9, 3.6178976529505634`*^9, 
  3.6178988164102297`*^9, 3.6178991190492616`*^9, 3.6178993617817025`*^9, 
  3.6178995664798317`*^9, 3.617899796634147*^9, 3.617900227484462*^9, 
  3.617900620954402*^9, 3.6179009028872213`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lucaBasis", "[", 
     RowBox[{"getTheNonState", "[", "]"}], "]"}], "[", 
    RowBox[{"getRelevantWeightsNSP", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175383075943737`*^9, 3.617538338314681*^9}, {
  3.6178987739598045`*^9, 3.6178987756698217`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0.13387113268194584`", ",", "0", ",", "0", ",", 
    "0.04938370437445493`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
    "0.059994568933253896`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6178974631186543`*^9, 3.617897652980564*^9, 
  3.6178988164502296`*^9, 3.617899119079262*^9, 3.6178993617917023`*^9, 
  3.617899566499832*^9, 3.6178997966641474`*^9, 3.6179002275044613`*^9, 
  3.6179006209744024`*^9, 3.617900902927222*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

77095650849595`*^9}, 
   3.617720571691262*^9, 3.617725368811208*^9, 3.617726972412244*^9, 
   3.617727057353093*^9, 3.6,

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysVal", "=", 
   RowBox[{"modEqns", "[", 
    RowBox[{"updateValDrv", "[", "lucaBasis", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sysVal", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sysVal", "[", 
     RowBox[{"getTheJac", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175400669839687`*^9, 3.6175402734860334`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Java", "::", "excptn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A Java exception occurred: \
\[NoBreak]\\!\\(\\\"java.lang.ArrayIndexOutOfBoundsException: Submatrix \
indices\\\\n\\\\tat Jama.Matrix.getMatrix(Matrix.java:297)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateCurrentVarTime.doValSwitch(\
NonStateCurrentVarTime.java:62)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateVarTime.evalVarNonState(\
NonStateVarTime.java:40)\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.NonStateVarTime.evalVar(\
NonStateVarTime.java:26)\\\\n\\\\tat \
lucaMod.updateValDrv(lucaMod.java:60)\\\"\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.617900903357226*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"$Failed", "[", 
    RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6178974641386647`*^9, 3.617897654130575*^9, 
  3.6178988176902423`*^9, 3.6178991208192797`*^9, 3.6178993635617204`*^9, 
  3.6178995682298493`*^9, 3.617899798864169*^9, 3.617900229424481*^9, 
  3.6179006233744264`*^9, 3.617900903357226*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"$Failed", "[", 
    RowBox[{"getTheJac", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6178974641386647`*^9, 3.617897654130575*^9, 
  3.6178988176902423`*^9, 3.6178991208192797`*^9, 3.6178993635617204`*^9, 
  3.6178995682298493`*^9, 3.617899798864169*^9, 3.617900229424481*^9, 
  3.6179006233744264`*^9, 3.6179009033772264`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

"], "Output",
 CellChangeTimes->{3.617720572921262*^9, 3.6177967488541927`*^9, 
  3.61779779352463,

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"biggerMat", "=", 
   RowBox[{"nxtWts", "[", 
    RowBox[{"lucaMat", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Dimensions", "/@", 
   RowBox[{"{", 
    RowBox[{"lucaMat", ",", "biggerMat"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.617541767748976*^9, 3.6175418089993887`*^9}, 
   3.617541841180711*^9, {3.6175418807711067`*^9, 3.617541912431423*^9}, {
   3.6178990734148016`*^9, 3.6178990740148077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "216"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178974642386656`*^9, 3.6178976541805763`*^9, 
  3.617898817740243*^9, 3.6178990900449677`*^9, 3.6178991209092803`*^9, 
  3.617899363711722*^9, 3.61789956830985*^9, 3.6178997989141703`*^9, 
  3.6179002294644814`*^9, 3.617900623414427*^9, 3.617900903467227*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"thePolys", "=", 
   RowBox[{
    RowBox[{"CreatePolynomials", "[", "res2$2$1", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
      RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
      RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
      RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}, {3.617899263634715*^9, 3.6178992952650313`*^9}, 
   3.617899529273444*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"before genPolys in createpolynomials 1\"\>"], "Print",
 CellChangeTimes->{3.61789956832985*^9, 3.61789979895417*^9, 
  3.617900229484482*^9, 3.617900623434427*^9, 3.617900903507228*^9}],

Cell[BoxData["\<\"before genPolys in createpolynomials\"\>"], "Print",
 CellChangeTimes->{3.61789956832985*^9, 3.61789979895417*^9, 
  3.617900229484482*^9, 3.617900623434427*^9, 3.6179009035672283`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["thePolys"], "Input",
 CellChangeTimes->{{3.6178998659148397`*^9, 3.617899868424865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5`", " ", "ru"}], "+", 
    RowBox[{"1.`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2677422653638917`", " ", "qq"}], "+", 
    RowBox[{"0.3086481523403433`", " ", "ru"}], "+", 
    RowBox[{"0.6172963046806867`", " ", "uu$Shock"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178998689148703`*^9, 3.617900229644483*^9, 
  3.6179006236044283`*^9, 3.6179009036072283`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sysPolys", "=", 
    RowBox[{
     RowBox[{"ReplaceVariables", "[", 
      RowBox[{"lucaMod", ",", "thePolys", ",", 
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
   ";"}], ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
   3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
   3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}, 
   3.6178994558446503`*^9, {3.617899508525177*^9, 3.6178995206352987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".00"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}, {
   3.6178999614757957`*^9, 3.617899961835799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnHuQVdWVxu/wEAQ0RA1m1AhmKMDRGtqICHr08Gyadzc00DxtmgbRkkqm
ZpIxitKilTB/pEYZKxGJ8TnG+GC07bSgRy62j8wkTkYbeeNrdGImsRCfExVl
zF7rW9v17Xtr+KfLz1X7rP07+66z93fO3me0fHvOyh6lUumC3qVSzy/+nvHy
zEePHn21vPnCWwa9ftUz5VL411ys+vuHN3WuOUB6U3F//xPb1hzYncQfuuu7
q4ZO7U70laGd35C+WuO7qujtiV7Sf5Wv255X1rsSXfOpEt+d6Npf0lvBJ4lX
njnnD87Nz5503X//6CnV642z11uNM8eDM+vgXDm+q4reTnqzcWYdnL3eZJxZ
B+fK8d055wPOfF1wZh2cq+jlaT/75p6d459MOLMOzl5vNc5et34lOjhX1tsT
HZy9HjlXaT/RwblyO91JPDhzPDhzPDhzPDi/9MipDx689LGkbng9jmevx/HM
7YAz6+BcWW9P2gdnr9t9ySvrXYkOzpXjuxMdnKvwSeLBmePBeVkY548k49nr
sT5zPDizDs6V47uq6O2JDs5V4nOv1xln1sG5Sv6kjzPOXo+cuR1w5nhwfjHw
/3kZ/QFnr9t1k3hw9nrk7HXjQHqjcfZ6jXHmfMC5st6V83XBuXI+3TnnD86s
g7PX43jmeHB+Pug/gZ6Bs9fHZeDs9ciZ2jHOXq8xzl6vM850XeNcuZ32vEr7
OecJztw+OHM8OHO/wJnbAWeOB2f57xsytA/OXo/PQY4HZ6+PM86V47tIN26k
DzHOpI8F5yrtJzo4V8mf9Fg3mAM4czw4c/vg/Jrw1/8fx7PX43jmeHD2uvUr
aQecOR6cvV5j+Xp9TAbOlfWunK8LzpWv251zv8CZ48GZ48GZ48H5gNSThLPX
I2eOB2eOB2fWwbmy3p7oyLdKfF6l/ZzzBOcq+ZMe6wbr4EzXtfFM7VvdWCHP
x4Qz6+Ds9WbjzPHgzDo4V9bbEx39qxKfV2k/0cHZ603GmXVw9vo48EnaB+cq
enmvzPeMGzh73a6b6ODs9cjZ643GmePBmXVwrhKfV9a7SI91g3VwrtLfRAdn
5gbOnA84z5L1S8LZ65Ezx4Mzx4Mz6+BcWW9PdHCuEp9XaT/RwblyfHeigzPr
4Oz1OJ6r6OUWWY8nnL0eOXM8OLMOzpXju6ro7cl1wblKfO711ca5Sj6JDs7c
Djh73eoq6a3GmePJr7P2ya+zfMivs/bJr0s4s05+XcKZdXCuEp9z/uTXmU5+
HcV351X6m+jk19l4IL/O4p8ZsW7Ygc6Xy9e27Z6+otfTOm+NPp7XSyWNz70e
fSpuh9rnOkb66ozaT3Sff73l733I+oLiLU+KT+qqv26p9N76312x5sAr5QHL
zj/nrnLkoHru9dUFxVv+FJ/M93w79WgnyR/tV8vft1+fUby1T/HJfa+WP/O/
5ow3i6NHo6/7F3+W21qKfSuveu7o0T103WWmez9zfnHe/QNfOHp0Z+KrQ2cf
9Zshz/+0+KPh3wrTOX5/uO6vEr8dOscPDe2Uk3joiP8sXHduMTzo/2rxgUPp
Ul33bSi83mzxlX3pDQXrp0p8Mh6gO/6lhcXpkmcSD5396j3CIYmHzvGDhXMS
D93n01iMkvvo49uWm474zwPPecVeGSe557bCdOazVsZhkg90jse4ZZ8c49Pr
y20cQu+h4xnjjf1kjCvWMX5Yx3iALuO5ycaD1y+x+w6d7zu3j/vo21li98u3
s8Tui49fZPyZAzhD/1zzB2fn97atMM7eB451ALq0s9A4s28MzqyDM/Se2i9w
hi79qjfOXl9gnNnHBmfWwZl1cGYdnP11I2fozNnziZzh98p9XGCcvQ88xziz
bwzOrIMz6+DMOjhX9s83FKyDs89/qnFm/xycoQu3GcYZek+NB2fon+t9B2fo
vXScgDP0T0N8g3GG3yvtZ8bZ+8BDjDP0I6GdicYZuvR3hnGGLs+XmcbZXzdy
9vHnGGfo0t/cOLN/Ds7Qhedk48z+OTj7+OnGmf1wcPb5NBhn6D103IIz/F6J
H5+Bs/eBh2TgDJ05Q5f7O8k4Q/8kxF9onKFLPrXGGbrwv9g4+/ga48z+OThD
7xv0gcYZuoy3c40z9GO0HXCG/nGIP984+/7OMM6+/fHGWfK7Ieup8eAMHfmD
M/Qjmic4Q0ee4Az9wxB/snH21z3bOEMXnqcZZ5/PqWPBGfpJ4e/hMeDs40sl
cGYdnH2eI40z9M/1dwHO0Jkz9H7hb2ac4ffyePY+8Awbz9BlnIzJwBm65pmB
M3ThPyoDZ+hvhfivZOAMXX6/8M83FF4/PwNn9s/B2cdflIEzdOEwIgNnn3+e
gTN0/Z1m4Az9Te0vOPv2Z9h6BH4vc/Y+cOQMXX/vxpl9bHBmHZxZB+fK/vmG
gnVwZh2cfb+mG2f2z8EZ+jHaDjizfw7O0IXzYBvP0LlusN8Lzl5fYpyhC+f5
xpnbAWfWwZl1cK7sn28oWAdn1sGZdXCGLuO80Tizfw7Ovr9zbDxD1+eUjWe+
LjjD75XrNhln9o3BGbrMK+YaZ99Og3F28W1zjDP7zOBc2T/fULAOzqyDM3Th
M8k4s38OztDleT3bODMHcIau6wjjDL13iF9mnOH3MmfvAy8zztCF82LjzD4z
OLMOzqyDc2X/fEPBOjizDs6sgzPr4Mw6OLMOztDxuwZn9s/BGX4vc/Y+cOTM
/jM4sw7OrIMzdF1PGWfOB5y9folx9voq4wxdxkOLceZ8wNm3s8I4+zxbjDN0
qcPzjDP08NxsazHO7BOSL6f6ioz8N9HblmfksyWcWSffzHTyx0wHZ9bJ70o4
s09O/pXp5FPpfWnNyI+y65LvZOMEPIePevb9G/74VFnyabV58jvue5C4vu78
6rB9T9/bpeuC+TZPhk8u897oF01+5wfbe7RAb7F58nHq00o7q6KP8fxbd4//
Ruo3ev8t+oQjNH/2i5C/6ItsPfKY5q/1zdYjnD94In/lafNk5A8fz55rV19f
nPBZ6r+tXvjmnQ1bt6veajz/d/TkH974d2Xl32g8J/ab23npyTtUn2s8+32/
55l9vgt9jvHsfuvRzfd277B1KHhumt96fG1N6sdOp+9CwXO/5s88ff7RF/L5
R/8N+SMePJE/+6LIn32hWyl/q7f/tPamU/9qa+LPv3fFy99b9MpW4w/O1027
eMmmTdvMpwXngSNuH7+38XHNf7Fxvr13afjJA59QfZFx/ps3mgfM/80TNv7B
udjx1Ls3/6Cw/oLzLvLHwLn1y/l/ibPPP3J2+X/Jf0P+7HP+jPIHZ59/5Pyk
5s/+29v6nlCfI8Z5bfi9PJr4nP3D7+JR4w/Ot4b605HUhzP/8uNPB4/+peqR
89aPFr6+7N1fJj5n7UuPP3fbg52J/3ZJFf8N7zll/TXdOCN/aX+WcUb+Os80
zj7/euM8QvNnzsif/bcpmj9zPhTu+33whYzzgHB/79d+jTHOfx3u4wMJ57rw
u34o8d9Whd/vFslzXYNxnhB+pw+XZd44zTi/EH6PDxsfcN7pfK1xxvmw5i/6
BON8nMs/+pxnufyj/4b80S9wXqn5s1+B/Hk8v6j5ox1w7h3yuRU+p80fJoTr
3pb4nONC+3ck/pv4qHcm/tvVYVzdbf0C51vC+LlH84z1uTOMk38xPw2cXyCf
DZz7af7SzreM8yTNv6/mD87IX8bDRPKT79T4Mcb5Kpd/9Dk3af7sCz2m+bPP
eWXI/1L19+psPD8c9H9IfM45IZ/ryuy//TrE/1DbGWecx4X+/sj4gPPi0M5N
mudE4/zjkP/NOs4z8t+u1HlbX/Pf7tD8xX8rGeetmj/7nI2af0n/gTPyL2n+
4HyR5s8+5xKXf+R8i+bP/tvPRc95PF8u7dh6E5wXyXXNJwHn/5I8VR+2DZyv
kH5ZPDi/LRzyATrewLlXe+CWn6x8wPmg+loyz4/+212av/j8o2w+vFrzP6Lx
4NxE+YMz8mf/7duav/AcZZz/oPkfr/cFnA/Jfc+Z83YZ54n/dof8LhL/bb38
jhL/rVV+d4nPWSu/08R/a5Dftfqcg23dMUjqgHI7x9Yd+5yflhvnQvOX59TF
xvl2zV/ipxnn6zR/0afaugP5gz84T9H82ees1/zZfztJ8z9R6oOtR3ZJ3U78
N+EDfZFxvkKeCxbv/YqHlM8U43yOPHdUn2ycJZ/7VZ9onD+S55rq42kd/Yjy
mW2cX9L8RZ9pnCdr/uxzIn+5L43kVzyk+lwbz9/S/KVuDDfOJ2r+7Cd/qPl/
Q8e/fScg8xBdPy4wzk/IvEV5zjfOZ8k8J/E5fyrzIs0z+m/Hyzwq8TnXybwr
8d/edfsGov+2p4r/Vqf5QwfnxzV/9t98/rXGGflLO9EX8vlHXwj5f6T3EZwP
U/7gvEPm1con+kI1Mg9PfKE7Zd5u1wXnE2Seb+MBnK+XdYHo6+YZ5w9kHaHj
rcE4r5J1h7YTOc90PuEC47zd5T/fOCN/0ecZZ+SP64Iz8mef8wbNnzkjf/bf
Vmr+7HNulnViwnmnrCsTzgNkHZr4b5Nk3artLDbOH8s6V/VFxvlyWRcnPudB
WUdbPr5upP6brnOF27roCyF/iV9qnPtr/qIvMc7IX/gvN86faP7ye59nnJH/
Ee2vvR/R/Hk8qz+T+G/Hue/rWoyz+icJZ/5+EpzVn0n8t8Nu/1D0384U/yfh
fKvz2SLnnZq/6JEzfx8Izshf4lsz8ossH3BG/sJ5pXFG/vhdEE99f73Uno+7
VNf2TYdfBx3tgAO/F1B/TJ9frRm1nx/WcUXfm+nvaz77ruZ74Ltl+G9y3Rb7
3hK6zHOm2D416DJPmGP7W1nH98zQ+wQd+yu7qujtpkuey22f2gjihu+ZffxC
2w/IOr5nrhzfnXP++J7Z+ZNtcX8r5wOel6nPdoxyBs/LnP8W9/1Bl/sbz3OA
Dp8NPFkHz8p6u+nS30XG0+cTeV5GPiF4sg6e/rpLjSfnA558XfDkPPE9cJX4
8nr10/4U2l9mnKHL73GhcYbe19930yXPJcaZdXCurLebLvnPNc5eX2yc15Mf
CM6sg3PldrqTeHD2euTM8eBcJV7rBnyzuF8b+jH+uqZjnPv9DjHe73eIut/v
wHp70j44+zytnuTQfb3qSnS/34Hb6c59PnFfts+nmc4nie34/Q5JvL5f2KLt
zzHO0GWdPsk4sw7O0MEHnKFLPjON82ryFcEZuvxephhnn+c04+zbn2ycfT5x
/3vlfLpNl3nmZOPsr7vIOEOX+mncqsWrj32P+kI1xhn6ntDOSNu/Ax39B2ev
R87Qe7v70mV6TzcO203H93W4jm8nM86V9S7T5X5NMM7+urXGGXo/vS/gzP0C
Z3/dOJ6rxJc3qd81JOijMr//vTk7FPo72/gjvn/4/zNsPw7i5e/osbgviAcv
v48+7oPC/UK85D/Lfi+Ihz+J++jzOZv23aP9Qdtwf337tXbfEd9fxxvuO+Ll
fl1E+/SbsxPC37hPH/HHaj4l9w/59LL9+5y/39ef5J8zT7/fP/LEuPLtZ4U/
BwDxw7ZhvCH+gXDfv2LjEPHq+9k49PnU07kBaD+OTx8/js4TQHzcf03jjc4Z
sPG2DeP2NvU5X5PfqY1P6JL/dKsbrGO8QT87tD/QxpWPv9D2/fn4ko0T6DL/
P9PuD3Txl0bZvj/of3J6V87XxX2E7sdDd+6vO9X2/fk8hxh/jgdnbh+cf+r8
2HHG2etx/zvr4Az9g3Dd821/JbcPzhwPztD1e2zjDF2eOxcZ58p6V+7bmW6c
/XWn2P5K6F8PV6sxzj7/eM4A9O+EdgbbeKb2rT5frr7lJ/6+mM6cffxC48zt
gDPr4FxZb0909K9KfF6l/ZzzB2focl8ajTN0GZ8zjTP0D/X3Ds7QX9PxAM7Q
79P5gx/PHbqun0vjuUN9mwU0njvUN1tC47mD+5X4t348d9Dvoj3R/XhO4vPK
epfpMn+uo/EMvZ7Gc/Rp/Xju0Lo0O/PjOfLx4znmA87Xkw8Jzl6P+7Khy31Z
ZJy9Psc4s08LzhwPzqyDc5X4vLLeZfrHVDdYB2fmAM6sgzN0uV+LjLOPj5zZ
L/V1Y3vCmXVfN7ab3+XrRtR93WC9PcnH140k3vxSqRtLqW4k+SS6rxuxHV83
tpvv7esG4udR3diecPa+Xzy3YcSXfcJ1kSd0cCb/jfh3VdHbk+uCZ5X43Ovx
PAHfTjy3gXXy3/Q9+KUZ+W/KrSEj/03jVxhP6IO0LnVtrb27c82esv/OsKHo
U/+Lf1xzIPUtf/zbk1+r2/h8og/+7OCDnWueNl3m7Y1F/YJJ79dt7Eh8yyfr
jh+ycehTid943ilT5w6d+uvku8fdH46feKDzxcSH3Ljs1SVDp+5O/MZZv1r7
vTUH9if+5LE1p9zYuebVJP70kP/OxCd8Npw/8B+JPjv065lE3xLuS2ei997x
+oCNQ/898QO3Bw4vJv7hVY88MPZA5y7T9f1FMTrw2Z/4ge/qfn/2Az8I+m8T
X+6a0P6ziT4g5Lkt8evu3bz/SN3GFxKfraXXlYM2Dt1l+mfazulrvlZzoHNf
Er9/V/vUoVNfyfm6DwZuz5l/1Vs5XB7G8xOJPi3wf8n8os+UT5+Q/76c47vc
+RIdet3Fxb8F/cnEz3nnhC3/U7dxL/kwS4v7r57ec+PQl3P2kf45/C4O2nof
7xFW07r+D/Ic1/7yenzY2MO07sa6b3XF9fXobe/SOlr+1hQf0Hr5tPB3SPH7
KuvcP1Zczw7a1lJx3VoqvU3rU/k7rriP1qEfaX9bab0JP2FwxXXlsG1Pa13C
Oki4TclQl3h99BOtSz7+/GyI1iWOn6N1yccPzwqtS9BlXXBhdq7WJW5nl9Yl
Xs/epHWJ17MztS5B/732q6/WJY4frHUJ6xThNil7TusSr8tQl3gd97DWJY7v
pXUJ+qea/5Nal3g99X2tS9DlO6ia7DytS9S+1SXou3U8oy5hXSDXnZpdq3WJ
9eO1LvG6BnUJuvyuGzPUJegyDs/NUJe8PjHbp3UJ+qt631GXeF59mdYl1qdr
XeL5POoSdMl/boa6xO08p3WJ572HtS5BlzozL3tA6xLPV2/WusTzKH0O2nNZ
fJ6m4lr/XtWeIzR/sP0O/X079jum96Ta3+VZf//81d/dgmydvof184GVxdC7
/1xn1ifzB5mHHEzeG+7X9/Veby16hHY2lvn5uCzcxweS5+mp+t6cn8tbhHPy
fu09uS9l/56ovhiN7+VUl3nI8mJtuO7mMr9vuiOMt3uT52Yh4yF5P7Vb3+Oz
/qw7N6nDvjM/Vsah6X1UnyXjNnl/NNTtJ4rvm46E+n9XEv+G6Mn7I+H8RKLf
K7+v5H3Q6W4fUHyvdFB+p/a8xnfdZ8jv2vSBQZ9VrJQ6kLz3+YXUjeS9z0H9
TgO6rCMaiq1yX8r8fme63Mec9ZLUq+T9zpVS3xL9kNTDZF5xrn53we99PtBz
ovx7mcHZGKnDZf/+YkyxVuq26XtD/Mhih9R50/to/v3kuUDvcer0O9iy6XIf
G4rvyO+I4muKPWE8bEzey9wjz6Oc85wqzy+aR9UWO+R5l/s8JxSnyfMxec+C
71L8dWdYvYK//TXpV1Yvz2XT9fvY7GZ5jpfZn98rz31+L1OMlXkCvX+pKbpk
XmF6yL9tcnE29jG59xf4fvsW/Wvzrm3bA8/1yfuLWpnPJPopMv9J3l/cJPOl
5L1AL5lfmf6QjKtih8zHcn5PhO9q+H0H6jn75yO0nkN/X5/LJ+r3S+zDo85j
/oDvbw9onWffuK/WefalF2idZ//5FK3z0MUvmpahzrNfijrv5w/zM9R5jked
5/nMZq3zPJ9BnWcddZ7nOajz7KOizrM+U+s8dN2vlH2s9ZznIW9pPWe9Wes5
+5z3aT337ddlqNt+3rI0G6J12/mHRxdlrVq32ZdD3fbxc7J2rc88X1qg9Zn1
nlqfWUd9Zv/wsNZn1lGfOU/UZ+93LbP6zL4Z6jP7gajPHH+s1mfW/1brMOsv
ax1mXw51mOOnaR2GflR11GFuB3WY/T3UVT8PXGh1leeNqKusX6B1lfWnta6y
PkrrKnTxT5qybVo/2WebrPWT/TrUT46/UesnXxf1k/26stZPn099drWf92rd
W2jfnWLei3ML8d0p+2D47pR1fHfKvhy+O/Xx8Vw7nm/jO1L26/AdKft1+I7U
rxfmxX2Frp0me16zX4f+eh9sgfWXfTb0l3X0l3X0Fzr2TaNf0GX8x/2/Xl9o
/fLfK8Z++fVF3Mfn1xeLrV/sj6FfrKNfbn3xBX/0y68jGi1/Xl8gf+hahy1/
Hx/z9/k00bmd0X/z5wxE3Z8zENcRfr8/1gsL6ZzJjmT/qff34n3H/Bn7ZHFd
7/vVWfs+Prbvvgf70j50zDPluufE/d1uHjuPzu9qzuT3Pp3O72rOtgd9JJ3f
1Vzl/K7m7KvhL5/f1aznWX2dzu9qzk4Jf/n8ruZsRPh7WuHP6cL884Rt/pyu
6BP6c7qiT+jP6WrOemue/pwucOBzupqrnNPVbOd0gZv/jmKyfZ8P/Q3had/n
Q3816MPt+3w/Xx1p3+dDv1Ju/IXg5v3Ds+x7e+gyP7zAvreHjv1u4OOvG/f3
Qf+dXNa+t4e+WtsBH/99S+SA+S3v12M/EBzYPwQHjgcHnm+jv+wr+n1J92i/
Rlp/2VdEf6HzPjvo8l3BcPtd8Hwb/WLd73OJ8230i+ORP8/DkT904TOe9qFs
yQ8pH+TPfqPnr/PttnriH+fhnn/UPc/oQ3qeHfbe0PNE/Hy7Ls+TcV3W0b6f
58f9TexPes6YZzYRn+12LpbktaHw8424TwTPU1lHz7X64J/7K2zfLvuBqHt+
PhDPr2A/ENdlPxDXhX6M5nMe+YEhfN1yy8c/xxdbPvx8Rz7s++F355/XMU/v
p11C537j+cvne3ck80z2A5E/dMw3/LlAsR1/LlDU/blA0Q/05wJFPxD98v5b
A51Ls0V9iTrrF/ts6Bf7gfg9sh+I/rIPif76+UMtnTMTfT/0F3oPbQf99d9v
z7Tnpu9vrXHAfGNk0EcYB++PxfMfoPP5D9BxvgE4+PnMNJtXQMf3A+Djv6/O
jA/7geDj/b1xxof9QH9uCb7rnmR8/j8/UNqfYdzgX8l70jG2/vL+WDzPAbr0
d4Jxc/5eaaJx877ZGOMGPXBumxTPNXLtxPMcoB8X/vts0+Uv5l2vjQFn9gPB
2X9fHc95cPl8MU8DZ+j4Dh+cofM5D9B5/ubzj+cPYN6yW5+D6Bf7gegX62gH
8wE+x8DPZ2ZY+9Bl/F9k7bNPCG5+njPNrovnOHwhO6fCzSsW2Pjx31vOtnyg
H9H5BvLh+Qny8fOQuO+e5yeeT/QDPR98V9lE88YOe457bnG+4blF3XOLPqGf
H0KPPL2/F/c7s0+IPL0+z+a3/rvEOH/geQvyZx35Q8f+buTPfiB+Lxw/qopP
6MdPnP/48QM/cBmNH/h1SzI/740+np/3Rt2Pt6j78Rb9PT/eYrwfb9En9PPk
2I6fJ0ef8BrywXR/Ivtg+nuJHNh/Ix/MdPLBTCcfTPsVz5mEjvsCbl6P+6+9
Hvdf+/bjOZPsK5JvpnziOZO+/XjOpI9vZJ76fG8taN+0zXv/DzFkBFA=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJytXV1sXcdxPrYohZZdR42s1E7tgC7SxhWCoAgKtGBxJOWl6GNQOFDeIhTx
Qx/a+KEFghaFhKCF+1AgBloUeYktoAUqQC1IwIYtyD42C8kSXTEWbYrk1Y/F
q5iWaJKSqB/qh/ph7zkz3w73m7O65wq5D9p7hnNnZ2dnZ2e/3T16/i9+/Ocv
PZpl2eD6LFuX4bNUULk9fu7fVk9fyomuz9meev6e6e9F9PX/lJCPZ6a3lb9N
7RpPyEnx49nRE/xBLtsT9SbsmWoX2zm0d1tv/K6/avtxcf/lh9SH6bAz02G3
W0xP+FWwf4/tcn6V6C/w98X+Fn7P9QY5CX0a8gd/TvlVyv4sH3YebygnRU+N
39T4Svq5Pt9KjIuk3VL8DeV0s3PTdqXiQ4rezT5N7d9VTkP/TNonMY5SdNi9
oZ5Jf+7WLvbbXv056N+j/7Df9tqPKXq3eN50fkn0Y9KfR2A3jg9FXDaOMz3a
J2XPpvH5Ye2cqjflz87f6vUJdh4hOeBL0VPx+dflP73mUWyfZD7TzW8btitl
55GE/JHBzj+rq6uvvFtf70iif3v158bj8dc0P/Zqz655ZkP+hJ2TcSPE21Se
yfyJelN5USp/65ZH9RxXG8rplk+m2sv2gZ0pDjz8OoXkz3WxZ9O4l8rHel2X
pfw51NfQnmH8No2ftfZv7Zzpkrc07t+Enbvm+T3aP7luajjPdovbqXVuar5z
8bNL3Gi8zoUcylfnuvht4/Xmtnr6w8bnXvOcpnlsb+sa8+em8S2Vt88l6Cl9
Uuti8Lu4AbkN/aGb3zb2/y56NpQf/NnVu62+3lR7r/eYJ3TDJZL4TMrOibjX
dL7rFid7nZdJn67zYGr8Mv16yj4Pa//3mvH3vxf/rpueD7tOaZznd/ETp/+2
+O8P7Z8J/SG/VzwzJb+f++Uh5TTVPzWue60XeptfbajKuWJutfwcT+VjiTxn
LtDb+vv+6rnF/pbdr/5+m+hTg1n0Mf51tfWG9jp+fXb8F6p6Z4Ld5Pm4iwMd
O+z5h+WFQuxxN/CPlIr3IT6cOLhGfof/svIvRvUaLn14EPSny2L99+HPQf8X
Kv73izuVXgtBzt3qeTrXkseja++jVTmVb6zK0cAvcg+58XhP5S/H9gj0qli9
FvifrEqsH2z+Av2Rqlwm/tT6q130kd1uVPV9lm+pnluBX9pzRu1zbm1/ZaX/
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
wXZO4W/I6+5RvyOvE3+4HOgrFf52x8Vn4BcrJF/G70mXbwxrf7A/PzivW0r5
c8E4Z7wvaHrGdvb5hsYNZ0+er4G78XoQ+NvvkZ7AORV/C/QY5zzs8KIbalfQ
CeeM4/Duq3mL9EzhnFqm6EUKfxO72jlMPe/lzn3hGX8HHf3C+7axPoYfSn+3
iwFpN/OrfD43vniQ9QT/C6QP6hO/vRPoun8HuUzXOOD5hb7QlQ59FmW8RP6/
sH8h4bfIw1n+sPrJF5wn5PX1tpV+zfk/y9H94iLeN8Y8O6Pzna1/la7rHZvf
Fa9UObfd+JJ5f5H58zhf4/Mts04fpg+U1hn6qGA99TnXcyld5cOe31N7sz1l
HmmRPsed/Ova37of6Opl/mGNJ5IPXAn6Cx7X0v76zNG/Lvo7O2vcZf6c6Vn0
aX7/XeSNknzEfXxwXvRQHv/d7Cz0A13lpOgy/5539Kz2s7T9cWmP5oF+f3NF
41+9HLPDfBQ3pw42ox8vHtd2kz4506uiY2f8rlm7RpSf+3fc0eej+cPkQH+u
9/FIjtcnbjePd8ZpQfe4dz0/1gtGx/ngb2u7Y/528UWlj8/flO7srPIDv/D9
Vy6lnT/RZ+QVa/Ol1fL8hMg5HOjQm/WB/lwv9BR5nzv6t6nerPaztH066iej
p/i1LOLfGf9TtfW2Cxl/lt/K74cUf2s5O8vfXw90xQF1/2WM6KOFTOyWp2l9
yfHO+7/d7CD8c45f6UGf/doulKBjHyHeTzB77q8dj0vKb/l2LNf0jOUaXcbj
os6/vO6eOnhGfkf6v65xxtaDcb57hM4jpe7de7r0y0dOz3gfyOjf7Py760c/
zb+cZXvX4sZV8XJ5f3/f/Zr7+5nkgQdcPPkiMa+JfU45/jPk5zLvfuz8aiWy
o9Gz2k+3+Lzo/EfKqYPsP8rn6l1O6CN28edRxS6XE/q3i29VpY0veR4pUMb0
YfXb0+Q/p3W+sLxL7PZpzvyoV/9OdvB+8kwmfrKjep+D4eQi95ju73zo+lf0
NZxW8rRD0J/G74LTk9oV6KL3Rcev9nJ2flrbdZ3kyPMF1158ezqSZ3Ybj8Zr
kJ8zP9arL0d+ZHaW+t+O6esTOG0nD0YZ6z+dc7vm1D9Zz5d1fF6qSstjYR9t
X+Af1/Eg8ixOpuwm/TGheR3nmf4+mvJrP9q6TH+fkAN84BDxH1B/Pkl+8qHS
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-1.0408340855860843`*^-17, 
   1.0408340855860843`*^-17}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6178974667186904`*^9, 3.6178976547705817`*^9, 3.6178988203202686`*^9, {
   3.6178989885539527`*^9, 3.61789899925406*^9}, 3.6178991213992853`*^9, 
   3.6178993129352083`*^9, 3.617899364171726*^9, 3.6178994648347406`*^9, {
   3.617899540709574*^9, 3.6178995691098585`*^9}, 3.6178997994841757`*^9, 
   3.6178999685158663`*^9, 3.617900231624503*^9, 3.617900625644449*^9, 
   3.6179009055872483`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

3415044829393`"}], ",", "0.467639,

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9, 3.6178019897616196`*^9}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6178974702427297`*^9, 3.6178976563426023`*^9, 
  3.6178988232523*^9, 3.6178991236133146`*^9, 3.6178993663737555`*^9, 
  3.6178995715378923`*^9, 3.617900233244519*^9, 3.617900626334456*^9, 
  3.617900906237255*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1646, 874},
WindowMargins->{{45, Automatic}, {Automatic, 48}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[721, 27, 503, 12, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1249, 43, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[1348, 47, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[1440, 51, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1611, 58, 1879, 50, 101, "Input"],
Cell[3493, 110, 569, 8, 23, "Print"]
}, Open  ]],
Cell[4077, 121, 481, 9, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[4595, 135, 84, 1, 35, "Subsubsection"],
Cell[4682, 138, 1926, 48, 101, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[6645, 191, 149, 3, 35, "Subsubsection"],
Cell[6797, 196, 1026, 29, 81, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7872, 231, 129, 1, 37, "Subsection"],
Cell[8004, 234, 171, 2, 30, "Text",
 InitializationCell->True],
Cell[8178, 238, 10282, 291, 261, "Input"],
Cell[18463, 531, 3855, 106, 201, "Input"],
Cell[CellGroupData[{
Cell[22343, 641, 734, 12, 40, "Input"],
Cell[23080, 655, 982, 21, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24099, 681, 286, 7, 40, "Input"],
Cell[24388, 690, 1194, 32, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[25631, 728, 55, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[25711, 732, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[25859, 739, 3486, 88, 141, "Input"],
Cell[29348, 829, 1190, 23, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[30587, 858, 108, 1, 35, "Subsubsection"],
Cell[30698, 861, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[30814, 866, 692, 13, 40, "Input"],
Cell[31509, 881, 919, 19, 40, "Output"]
}, Open  ]],
Cell[32443, 903, 611, 12, 40, "Input"],
Cell[33057, 917, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[33168, 922, 637, 12, 40, "Input"],
Cell[33808, 936, 863, 19, 40, "Output"]
}, Open  ]],
Cell[34686, 958, 663, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[35374, 975, 612, 11, 40, "Input"],
Cell[35989, 988, 872, 19, 40, "Output"]
}, Open  ]],
Cell[36876, 1010, 586, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[37487, 1025, 621, 11, 40, "Input"],
Cell[38111, 1038, 873, 19, 40, "Output"]
}, Open  ]],
Cell[38999, 1060, 583, 11, 40, "Input"],
Cell[39585, 1073, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[39798, 1080, 690, 13, 40, "Input"],
Cell[40491, 1095, 863, 19, 40, "Output"]
}, Open  ]],
Cell[41369, 1117, 695, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[42089, 1134, 609, 11, 40, "Input"],
Cell[42701, 1147, 867, 19, 40, "Output"]
}, Open  ]],
Cell[43583, 1169, 602, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[44210, 1184, 643, 12, 40, "Input"],
Cell[44856, 1198, 871, 19, 40, "Output"]
}, Open  ]],
Cell[45742, 1220, 598, 11, 40, "Input"],
Cell[46343, 1233, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[46454, 1238, 618, 11, 40, "Input"],
Cell[47075, 1251, 870, 19, 40, "Output"]
}, Open  ]],
Cell[47960, 1273, 589, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[48574, 1288, 618, 11, 40, "Input"],
Cell[49195, 1301, 866, 19, 40, "Output"]
}, Open  ]],
Cell[50076, 1323, 581, 11, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[50694, 1339, 120, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[50839, 1346, 923, 25, 61, "Input"],
Cell[51765, 1373, 939, 19, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52741, 1397, 736, 20, 61, "Input"],
Cell[53480, 1419, 812, 18, 40, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54353, 1444, 72, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[54450, 1448, 139, 1, 35, "Subsubsection"],
Cell[54592, 1451, 315, 8, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54944, 1464, 47, 0, 35, "Subsubsection"],
Cell[54994, 1466, 85, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[55104, 1472, 122, 3, 40, "Input"],
Cell[55229, 1477, 293, 4, 40, "Output"]
}, Open  ]],
Cell[55537, 1484, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[55659, 1490, 197, 4, 61, "Input"],
Cell[55859, 1496, 286, 4, 40, "Output"]
}, Open  ]],
Cell[56160, 1503, 366, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[56551, 1514, 309, 6, 61, "Input"],
Cell[56863, 1522, 394, 8, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[57306, 1536, 121, 1, 35, "Subsubsection"],
Cell[57430, 1539, 247, 5, 30, "Text"],
Cell[57680, 1546, 218, 5, 40, "Input"],
Cell[57901, 1553, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[58033, 1558, 164, 3, 40, "Input"],
Cell[58200, 1563, 605, 16, 40, "Output"]
}, Open  ]],
Cell[58820, 1582, 162, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[59007, 1588, 213, 4, 40, "Input"],
Cell[59223, 1594, 340, 6, 40, "Output"]
}, Open  ]],
Cell[59578, 1603, 109, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[59712, 1608, 348, 8, 40, "Input"],
Cell[60063, 1618, 637, 16, 40, "Output"]
}, Open  ]],
Cell[60715, 1637, 188, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[60928, 1643, 585, 14, 40, "Input"],
Cell[61516, 1659, 903, 21, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62456, 1685, 139, 3, 40, "Input"],
Cell[62598, 1690, 572, 12, 40, "Output"]
}, Open  ]],
Cell[63185, 1705, 118, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[63328, 1710, 176, 3, 40, "Input"],
Cell[63507, 1715, 372, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63916, 1727, 149, 2, 40, "Input"],
Cell[64068, 1731, 840, 17, 40, "Output"]
}, Open  ]],
Cell[64923, 1751, 117, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[65065, 1756, 178, 3, 40, "Input"],
Cell[65246, 1761, 1598, 39, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66881, 1805, 389, 9, 40, "Input"],
Cell[67273, 1816, 1392, 26, 61, "Output"]
}, Open  ]],
Cell[68680, 1845, 153, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[68858, 1852, 402, 6, 40, "Input"],
Cell[69263, 1860, 2894, 61, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72194, 1926, 374, 8, 40, "Input"],
Cell[72571, 1936, 1419, 26, 81, "Output"]
}, Open  ]],
Cell[74005, 1965, 102, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[74132, 1970, 332, 7, 40, "Input"],
Cell[74467, 1979, 657, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75161, 1998, 384, 9, 40, "Input"],
Cell[75548, 2009, 745, 13, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[76342, 2028, 121, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[76488, 2033, 674, 19, 81, "Input"],
Cell[77165, 2054, 766, 16, 107, "Message"],
Cell[77934, 2072, 477, 11, 54, "Output"],
Cell[78414, 2085, 479, 11, 54, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78954, 2103, 99, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[79078, 2108, 573, 14, 40, "Input"],
Cell[79654, 2124, 455, 10, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80146, 2139, 736, 16, 40, "Input"],
Cell[CellGroupData[{
Cell[80907, 2159, 203, 2, 23, "Print"],
Cell[81113, 2163, 203, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81365, 2171, 102, 1, 40, "Input"],
Cell[81470, 2174, 727, 15, 40, "Output"]
}, Open  ]],
Cell[82212, 2192, 845, 19, 40, "Input"],
Cell[83060, 2213, 985, 27, 40, "Input"],
Cell[CellGroupData[{
Cell[84070, 2244, 471, 10, 40, "Input"],
Cell[84544, 2256, 44524, 727, 290, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129129, 2990, 33, 0, 72, "Section"],
Cell[129165, 2992, 297, 6, 40, "Input",
 InitializationCell->True],
Cell[129465, 3000, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[129795, 3009, 106, 1, 40, "Input"],
Cell[129904, 3012, 469, 8, 40, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)
], ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"before genPolys in createpolynomials 1\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.617797796114665*^9}],

Cell[BoxData["\<\"before genPolys in createpolynomials\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.6177977961346655`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sysPolys", "=", 
   RowBox[{"ReplaceVariables", "[", 
    RowBox[{"lucaMod", ",", "thePolys", ",", 
     RowBox[{"{", 
      RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
  3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
  3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".05"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forPlot", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ru", "->", ".0"}], ",", 
    RowBox[{"qq", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.61754333080116*^9, 3.617543350490963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3730516147770083`*^-7"}], ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617720577811262*^9, 3.61779779662467*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnHu0VuO+x9fIJVKGJbKxSaRc4sj9PkWlKys2NtqdV4pCW+cc2S7lkqit
Q1QbXVDkVllK0xKt3tlFbqVUuq5Cci9Zqzv21ll7zt/nabzf533GOP3TGJ/x
jLl+8/M+73c+8/fO+TTpfvsVPeuUlJScu1dJyR61/zdZ23narl1fJGPOe6bR
unveS64o+3jfh4ftjG66Y8qoij5VjjdtuaJv5wbboon7NXygT9Vyx7eXfr3i
4KE10aYX+t3UtP0Sxx/7Zt2AytKNUc/0OPMdb/nKbx07N/jGxs9x/LXFJ5xe
WbrG+JuOr3utctyM0gVRif2DNxq5zy/v9RmYt/ERvE77fptmli5I7PiOn9uk
7vUzS9ckVo/jvy7s/UVtPTZ+ieNXNSgrnVm6MbHzdXz1sWOaNBpak5gfx/dp
8/i7tX4S8+n4mT0evLLWJzzJzTvowW8em+15hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHru8NzRK5a2mul5hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHr+bOrhk9fc/LbnGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunuHqGa6e4eq5WzrPp3qe4eoZrp7h6hmunuHqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp4Xp/5f8TzD1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9
w9UzXD3D1TNcPS9I+dOeZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoar
Z7h6hqvn7CwGna+e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp6/zPxH6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHquSrL
E88zXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1fON2fXR8wxX
z3D1DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1vDJb73me4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp4vy+5fPM9w9QxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz92z+3HPM1w9w9UzXD3D1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9Wz9Zc8z/BAv87zDA/06zzP8EC/zvMMD/Tr
PM/wQL/O8wwP9Os8z/BAv855fu+4+5tVVaxN7ntgeccb95ybzJhVdkHvhdsj
/MPxb+Mj+POf1R1cO94dHx44fhQ4fhQ4fsTx4dQv3PVROb6MTwLjtR73d6l/
88Bvb+tT9XlSv9tZLV9I5iaPDHnsmB3lOyLjEfyWsa371HIdHwXGR4zHA8fB
A+OpX49P/Ryf+jm+1s9xAuO9+ymOE6jH1T+gydeVu3bt7uvu+49tN44csC1a
1fOe93ftWuH+7pxVR+VfvHWz44yHnzHxgE937Vrqxm8+/5lTbpq2yXHGw49O
61zkxufe3/T1oGHfO854+Or0737gxn96eZtRL976leOMhzdNj5O48fe9edaY
QcNWOs54ePOUv+HGT3/0o7qDhn1o+TCkEl5SMmvnv/OB8RxHx8MZf3g23s2H
RccPvOqRYR8mcMbDj8zqdOPr1TlozsPDVjrOePiKzIMb/9TfprWYcOtXjjMe
3jjz7MY329T1roeHfe844+GnZ5+jGz+9x97v1X6OjjsPxldm88SNf+mnFXUn
3LrZccbD+2fz0I3/6dXJr9fOQ8cZD2fe0u/VeQvX+QnXeQjX+QbXeQXX+QPX
+QDX+QDXzx2uny9cP0e4fl6uHvlc4Oofrp7p96pnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqG
q2dXj3iGq2e4eqbfq57h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4erZ1SOe
4eoZrp7p96pnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn
+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunl094hmunuHqmX6veoar
Z7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2dXj3iGq2e4eqbfq57h6hmunuHq
Ga6e4eoZrp7h6hmunuHqGa6e4erZ1SOe4eoZrp7p96pnuHqGq2e4eoarZ7h6
hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2dXj3iGq2e4eqZfF+jLeZ7hgT6b5xke6Jt5nuGB/pjnGR7oa3me4YE+
lefZ1VO87+Q847P56fO2DNrg9zl/tt8N1GdFabNVc1+e492P0CdXn21+fiRf
p/tc736kgfVpvT7Ggu9ebHWE328M9Q+Ps/rVJ/Wrz7etfvVJ/eqT+tUn9avP
lfc+VHngv/z+W69rvx7fZXre87njzDaDn/ifxPN5Sb0rK24+ZJbns97dexxf
t98sz+eS76aNeXnJLM/nqKt77N/2FL8f2zHQf1tt9atP6lef1K8+qV99Ur/6
pH7NgdFWv5e3w/o/efgx0z3Pm29be+d1n0/3PD/Y4cKuo0a943k+4LjnW638
07ue5+f3Kml+yAEzPM8nr8/Vv3r+DM9z5azZNSMfqfQ8Lwv033pY/eqZ+tUz
9atn6lfPz1n96pn61fNMq189b7TfCdVz//T7Ms3zvF/6vZjmeR6d5k/seT7+
0F9+a3zmW57n6duvXdet5i3Pc9vP3n3/2ckVnuf/DPTf+J1TPVO/eqZ+9Uz9
6vk4q189U796vtTqV8+b0s/9Vc9z/fTzneh5PiH9HCd5ntul3+vXPc83pd/f
cs/zxen3dIrn+dP0+zjF87w00H+rtvrVcwOrXz2faPWrZ+pXzz2tfvVM/V7/
zepXz3ul9Yz2PF+c/t1nPc8XpccfF+gnj/c835vOqxc9z8+k82eC57kinScv
eZ4/DfTf6ln96rm11a+eqb94P3m85/keq189j7L61fPbVr96viut/2bP85SU
/83zfEVaz4Oe54/T8YM9zxel5/uY5/n69DhPep6fSusf6XnO/r/L67+Ns/rV
83SrXz3/yepXz9Svni+w+tVzV6tfPT9j9avnVzLurYdvyY7jrYevy/6utx7+
KqvTWw/flp2Xtx7emHnw1sN7vpl689bDawL9txesfm+9YfWr5z9b/eqZ+tXz
7Va/ev7R6lfPm7LP3bvvyGfz3PM8LvteeJ4HZt8jz3OP7HvneW6bfU89z12y
77XnuVGWA57nVYH+W6XVr56ft/q99YbVr56pXz1favWr5zKrXz0fZPWr52VZ
bnueMz9TPM+3ZdeFQL/idc9zy+y643nO6pnoed6eXdcC99F+/+0zq189t7H6
1TP1F+9XvO55PtXqV88NrX71vM3q954TyNYhnucZ2brF83xits7xPI/N1kWe
5/2zdZTn+f5s3eV5rrHny9TzikD/rZ3Vr57ftfq99YbVr56pXz1Tv3qmfvVc
bfWr51nZutrzfEq2Dvc8j8/W7Z7nA7N1vuf5oey+wPO8NbuP8DzflN13eJ47
B/pveatfPVO/eqZ+9Uz96nmQ1a+eqV8997T6vb5Qdp/oeV6a3Vd6nutn96Ge
59bZfavn+ZfsPtfzfEt2X+x5XpPdR/+/+292n+t5pn7vPsXqV8/Ur55/tfrV
M/V7v49Y/d5zL1l/xvNs/RDPs/VPPM88l6ierT/jea6250zV8/FZ/8fzPDrQ
f1tq9atnng9Uz9Qf6Bd5nqlfPVO/9ovod+ET/8uM63Nf9Ov0c8GDHsf6Y5Ee
x47vcfqEgb6rq5Pnlum/8dwyz1vCed6S55nh+jwzXJ9nhuvzzHB9nhmuzzPD
9XlmuD7PDNfnmeH6PDNcn2eG6/PMcJ5nxmdv67OpT7j6hKtPuPqEq0+4+oSr
T7j6hKtPuPqEq0+4+oSrT7g+Hw7neWA8D7R+mnqGq2e4eoarZ7h6hqtnuHqG
q2e4eoarZ7h6hqtnuHqGq2e4eh5jfTP1DFfP8OLvO8SB/UniwP4kcWB/kjiw
P0kc2J8kDuxPEgf2J4kD+5PEgf1J4sD+JHFgf5LY89zL+mPqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4ep5tPXB1DNcPcPVM1w9w9UzXD3D
1TNcPcPVM1w9w9UzXD3D1TNcPcPV8yjrd+G58P333Pnqn/H4L3yPPne+fi6M
53MpfI8+571Hz3g+r8L363Pe+/WM53MsfO8+5713z/jCz3eOG6+fO+P53Avf
08957+kznvlQUvAv572/z/jCecJ7/TnvvX7GM38K3/fPee/7M555VbgPQM7b
B4DxzLfC/QFy3v4AjGceFu4bkPP2DWC8rMfceJ23jJf3jNx4nc/PWp9T5y1c
5ydc5yFc5xtc5xVc5w9c5wlc5wNcP3e4fr5w/Rzh+nnB9XOBq3+4eh5r/Uz1
DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPV8i/Ut1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcOLz+c4MJ/jwHyOA/M5Dszn
ODCf48B8jgPzOQ7M5zgwn+PAfI4D8zkOzOc4MJ/jwHyOPc/0UdUzXD3D1TNc
PcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3Di+dGPpAb+UBu5AO5kQ/kRj6Q
G/lAbuQDuZEP5EY+kBv5QG7kA7mRD+RGPpAb+UBu5D3P9P10PwF4oP/m+YQH
+m+eT3ig/+b5hAf6b55PeKD/5vmEB/pvnk84PudMb/tiRZ8Vrq+4tl+d+V1/
q4nqlr329z5Vu/uW179+ZI8OmzdGTy085Mt2wxc4/vtfzz616qdvosb/WjO5
os9cx1vfMKFk5ZK1Udk1rbe0Gx47fvBHb5yzZcSiaGa7/Y8a3nS26xOOe/Kx
x8eXrU7OOKz9lU3bf+z4SXVP+iVp8XWyfFurS6oqFjs+pE3DE/+j5YZkeLcv
ujZtv7sPuWV2/5MXHVaTXPZB/zv7VK12/Oh1t3+w97Nbk31POeyJij7OQ1JW
cmPuwsY7kyPT+pe6fmDzftd3WLnkp2heuv/AJ45/fGa/P/Re+G10eXpe7zm+
pvqIT7aM+CIqTz+XCsePvqNL74OHLo72mrWu/vCmH7l+3Q1R9YGndlqf5FMP
ix2vHLC89fiyH5N7pk46p6pimeMNunU7b8jE6uTM1M9qx88f0OWzpMXWpMbe
94fzvv/WlC90/bd//D719+3l30UD0uPPc/ycWfMXDJ74ZVQ/rfMdx9/dY/4Z
LTstjV4es/qf7YZ/6vpgNW+N6taw7w9J9z3vajS86TLHm/8atWt1bnVyZJ+D
T6mqWOX41Yeetu6uyi3J6mVvtm/a/nPHB53d7J4pF+5IJqfe3nf9q72G7DPt
4KHrolvS+TzD8S4jWtfp3GBZ1CH1/5nrFw1sccnErSN+Tuqm9a9yvO9bB21q
2WlLMqdgf4k4ec72l/gw5TNdP+eHo/MLey1cHv18YPkP7YavdH2SR7ts//XH
qs3JxHs77jG86VrHp/f9YcTR3bYnI9LvxRp3v7+0/vxxVT9tS3rJff2xlleT
5X58h+VVtdx3D7O86iX316dZXtXIfXS55dVWuV/eYHn1vdzn7myX5dIGuZ89
w3Kpu9y37rRc2ij3p1daLr0q96GrLJd6yP1mXculxnJfeYbl0lzLJe6DNJfg
XS2XnrZcgu+yXDrKcgnexnLpCssl+KGWS5WWS/DnLJdOs1yCt7BcWma5BB9s
ufSk5RKcXOpsuQRvYrm0j+US/HLLpcaWS9ynHGe59L7lEny+5BJ8reXSFMsl
d/9oubSn5RI8Z7k003IJPsNy6W7LJTi5dIblEvw8ySV4b8kl7gvIpfssl9x9
iuXS/pZL8BmSS3DNJbjmEpxcWmW5BNdcYl1NLvW2XIKXWS51tFyCPyS5BNdc
gpNL71susc781nKp2nIJPtRyaZLlEvwdy6WRlkuso8gluw666/JtGyc1qp1v
0X2Fv6smm+x3Ulk/uL7QfoXHifrYceR3Urfu3a/w+ht1sXl+v/0Oy/Hr2e+w
TV/8d84MdPyiARVPTCsda+uQNe46W72z4TW152W/s69wfK79Xl8nPc5wx8tm
NG8xvXRy1C39HCe56+a4esMqL2swz/ZpSXb/7ma/m5dnnt31cXnXUzvUeo42
Z5+L469eEE2t/VyiM3lezvgWe06gf/p3xzi+9x9/vbRjg7eicel8e9ldH/tu
GHPMIUNnJ5XZfNjN/3v0tt4LlyfL7Xd8d3233/HnFeybFCeVtm/Svtk8dPzx
8X+ZUDsPo8uyeet4sueyRrXz1p5PWOT4DfY8wz/T/H/B8Z7XfXn3u6WV0fqM
u+vsA890OTgprUwyzzMcX/nVUcdf1mBZ8nL2/XL8ozfubNto6Dp7bmGR48fa
cwhrsu+pu16/0PT2U2q/p1GT7Hvt+B179X+69nsd9cxywPG23w75/aJzq6PX
stxw/KTHT5x/YN8fojX2nAZ8sT2nMT37XBzv3mn9soOGzo46Zp+jWw80ue7W
9Zc3eCspyfLK8VZXvtL11E5Lk7uyfHP8X9+dkxsy8ctkU5aHjl/b7KjhO8q/
S06z5y7gFfbcxVbbJ4r1xhDbJ+rsLIcdv6736Edrczjqn+W24yd2eKVm8MTq
aFaW847vvKrX1HFlP0b1suuC42MPGXh/y07r7bmUxPEH7HmVvtn3aPfvPrcu
/2unBvOiFel8GO7WRY+fVe/G2aWTkwnZ9cjxSXNPeqLR0MVJ++z65XiPi37d
snXEF8ms7Hq3+zjd1k+qvd4lf8yuj47/OPajtbXXR/dcCpznUsgr+tvkVVl2
XXY8+mT6gNrrcjQyu447Xlo+7+uFh9VEK7PrvuPvHfHS0ye33BCdk60THO/1
Rb5n7TohmpOtKxw/5OKpN48rWx214D0m45UFz/k8U8m6qKSkb/qcTz71OdD1
5yf2u/f3eaVjk7bZesbx5r16Dd42YlFyWLb+cfyTKQ80X7VkbfJktl5yfO5T
L8+rXS8le2brK8cbL/vfHbXrq2RWth5zPPn7Owf95bca91wNnOdqyHPWM+T5
cZbn8HaW5w3t+SX4R/b8EjnP+oGcr7Kch5Pz+1jOw/9sOX+N5Tx8tOX8YZbz
8L0l51kPaM67Pq3kPFxzHk7Oj7Gch98mOQ/XnHfrJcl51g+a83ByvrPlPDxv
Of+L5Tm8u+X5d5bn8Ecsz3OW564/aXn+quU5/GPLc3Kb9cl4y+2jLLfh5HYP
y214G8lteAvL7Tctn+HdLJ+vsXyGn2D5vIflM/wSyWf475bP1ZbP8Oskn+Fv
Sz6z7hos+Qy/VvIZrvkMJ5/3tXyGk8//ZTkMf9xyeK3lMPxpyWH4ZMvhDpbD
8Jskh+HDJIfhGyyHyVXWexdJrsI1V+Hk6rmWq3Byda7lKvwPlqunW67C51iu
vmP5CX/B8rON5Se8meQnfIHl5xOWn3DNT/iRlp+J5Sc8b/l5b+G6N9pHnjtl
3avPncL1uVO4PncK1+dO4frcKZznTnmO1K3P5TlSuD5HCvfeK+T48hwpnOs1
58s6XM8XrucL1/OF6/nCOV/OC67nBdfzcseR84Lrc8hwrpucF+t5PS+4nhdc
zwvOeVE/XOt346V+uNYPp/7CfQbiwP6ccWAfztjVWfi+fxzYZzIO7CcZu3r4
u6yf9e+6Pp79XY4P1+PDOT7HYZ3Jcdz73caL79+VC+zflQvs35UL7N+VC+zf
lQvs35UL7N+Vc/t3Fe7TlQvs05UL7NOVC+zTlQvs05UL7NOVC+zTlXP7dOGN
daN6g6s3uHqDqze4eoNrTrp1r/iBqx+4+nHHFz9w9QPHDx5Y3xZ/v2mC5wGu
HuDqAa75CS/+XtIE73zdceR84Xq+cM1P1sl6XvDi77mUe+cF1/yEa/1ufNH3
UMq9+uGan6yfi/uPA/7jSPPT8aI+44DPONL8ZH2rfxeu+QnX48M1P1k3an7C
GZ99/4dUsk7g/Rdyleup5iqcfOA4cH2PBq65B+d7zd/lOqh/F+69Pyv7dVAP
XOuBaz1wzRk437vC91ziwL7fcWB/7ziwj/fu/S6oH158X6A4sN91HNjXOg7s
X717nwrOi+ty8X1pyr3zgut5wTU34HwfOV+4ni+8+D4z5d75wvV84Zozbt1i
32s8sN5QD3D1AC++n8kEzwNccwlOPuAH7r0PaFz9wNUPvPi+JRM8P249Jrmn
/UC80b9Sb3D1BldvcPUGV29wb18j4/reHxyf8N19wkLPjFfPcPUMV89w9ezq
LLqfxkhv/ax9wgHSJ8Q/5wXX84JzXhyH9YB+jnDNf7geH67e4Jr/XMe9fSqM
6/yBa/7DtR641gPXzxGu+c/1vbif2KsTrnXCi3uLA95ir0641sk6QeuEa51w
/T7C9ToF1/rhWj9c64fr9wWu3xe3XpLcZp1TfP7kA/Mn750vvPi6Nx/p9Qte
fL7lA/MtH5hvec8DvPg6Oe95oA+mHlwfr3gfzPMAD/TBvHU1PNAH896/hgf2
6/O8wQN9M8+b60MW75t563m4XtdYJwfem3Y5/H+q0Tx6
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnF1IFFEUxwfNIKFCV/sutA+zzF0po5L8gEjBrKC3giiCJIVICIQekkwt
guihDHoRV0MoWiIhiEp7yFJCQ7CXVcN8iR5EITGViqhmR/EMnusemdmd1b8v
wp/L3XN+99z/zN45s8nnLp04H6VpWlaMpkX/+1+SkDm49+JIrhb4u/a69Ko7
v+dTbn72xJeZ+o3fo57/Ojfe/yiR6A179ivHNwxsJbq7u0+pHyjYRvTxIr+u
11zZRfQfG3zKeKR5ScdLdXAGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AO
PWenrZfd8zttvNPylepp/j8z59eOFb7zzLJfNM/s+2had8clE/1I6qhSl86f
c9ZN9OIyr1I3z8P4wLT+fIjq3ypm9Qdtyh+k4w/eS6N6Y7NSX3J6PdEn0hM9
Kr2uKYroGd99St3kY1qj4WOc3npoI9EvVC5T6isvLyW668F9pV5K61NrMeqT
06V1K61DaV1ZVQ/S9ZWul5Q/OIMzOIMzOIMzOIMzOIMzOIMzOIMzONvHuYCe
+2k3jXM/cJ4fZ/C0lid8AH4LzuAMzuAMzuAMzuAMzuAMzuAMzuAc6ZxxXhSa
8zdp35dV80jnt+pzzTyn+oe58dI+Rq4eTP3MGtPPPB2PNF+7x4NnePcLOIMz
OIMzOIeGs933OdL1kq6jVetrVT1I60RaP9K6Wqj1A9+AP4MzOIMzOIMzODuN
M3iqeXJxFpavJXp1X5I+/2R+BtF722r18afepxDdu7lbyW3k+hqidz1L0ed/
GfuL5FX6sN+jitP8fOSo8XzEPH7MGM9xMJ9vlxjn29znunypRI8rb1Pmy8Vp
Hp9hjDefqycY5+rc8wUuL3Oc8UacXXd3Er3qwwtl/ByfseUriN73tVj5vCDY
OpxaLy6eYL+Xeee538159Rt5RbpfwZfgSzPzhS8tTl+Srpfd83C+kZJF76+y
6/zzqkNXOp2nejgwz6iP1tt4aqDeuOfmHH+uDrk+AS2JxtOZ3avrj9t30Hie
tuj6un2biJ78JFr0HH+uc0uOG6cPx9P44+8E4j8zSPf1eOZbXfeYOBQZHLj+
gWD7ELj9/tlYF85nuHi4Po2+GJrvyYFAvqt+bqf5vurQ9cNDW4he3jSo65V5
sbSuciqU8XN+xa0Lty+46wXHk7uecr7UMUl1rzugd7lMfPI+Kq/LnG8Hu9/d
DAfXHBy4PiuOg/k+pMa4D2lO3030wtW3lNykfT5V6ZTbeHuPrpfVU9/orG/V
9eL+OKK/uX3co8pXykfat8b5Ode/BJ8Pjc/b7ed2+zb8udaRPuw0X3Waf0ZK
32m4+kjDlW+4+pDtzsvu+K2K0y6ec32udH5unkjv53daP7l0vyw2n+T4wD/h
n1byDLd/ct+Lpb5q1Xs0Vvm53e/12H3dCdd7SeG6njrtPSyn3Vc4jc9C/V2j
SOEsvR+W5gX/D43/R0qcTrtOOc23ncYhUs7BnMbNqvev/wIBCpF+
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-1.5350392591410702`, 
   1.5350389845307473`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6177205827312617`*^9, 3.617797802744731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Output",
 CellChangeTimes->{3.617720583441262*^9, 3.617797804204746*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllNewtonIterInfo", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617543646721884*^9, 3.617543669001989*^9}, {
  3.61754379710327*^9, 3.6175438018433175`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"huh", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "//", "Dimensions"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.617543808223381*^9, 3.6175438640749397`*^9}, {
  3.617543938765687*^9, 3.6175439394656935`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205834912615`*^9, 3.617797804454748*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllFVals", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617544337890678*^9, 3.6175443467307663`*^9}, {
  3.6175444031613307`*^9, 3.6175444037713366`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "huh", "]"}]], "Input",
 CellChangeTimes->{{3.61754391610546*^9, 3.617543921335512*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205835312614`*^9, 3.6177978045147486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Norm", " ", "/@", " ", 
    RowBox[{"huh", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617544359790897*^9, 3.617544362200921*^9}, {
  3.617544449421793*^9, 3.617544452291822*^9}, {3.617544495513254*^9, 
  3.617544506473364*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     LineBox[{{1., 37.611884246245204`}, {2., 32.31548509037757}, {3., 
      5.862708750947969*^6}, {4., 1.465675809258381*^6}, {5., 
      366410.37643775373`}, {6., 91561.8311536904}, {7., 
      22727.048579896753`}, {8., 5195.825595533379}, {9., 655.898090414444}, {
      10., 9.652394706720582}, {11., 0.00578172379216631}}],
     FontFamily->"Arial"]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 11.}, {0, 3.664175044553892*^6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617720583841262*^9, 3.6177978050947547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["check initialization", "Section",
 CellChangeTimes->{{3.617648049920026*^9, 3.6176480578011045`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176463247456064`*^9, 3.617646327615635*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205839112616`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617645348426832*^9, 3.617645352746876*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox["\<\"JLink-Launch218\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox["\<\"JLink-Launch218\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject["JLink-Launch218", 91, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6177205842012615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176460986193385`*^9, 3.617646102029372*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.617720584221262*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6175465828181276`*^9, 3.6175465891481905`*^9}, {
  3.617642190098014*^9, 3.6176421988801064`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReinstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617647455953071*^9, 3.6176474604131155`*^9}, {
  3.61764758282434*^9, 3.6176475893044043`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                ScrollPosition->{0., 0.},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Links\\JLink\\JLink.jar\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-7b428f3f-564f-4daa-9473-\
f97408bd08d3\"", 1304, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.617720584462262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"duh", "=", 
  InterpretationBox[
   RowBox[{
    TagBox["LinkObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PanelBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquarePlusIconMedium"],
             ImageSizeCache->{12., {0., 12.}}],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = True),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               StyleBox[
                
                PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 300}, Automatic},
                 ScrollPosition->{0., 0.},
                 StripOnInput->True],
                LineBreakWithin->False],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquareMinusIconMedium"]],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = False),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 500}, Automatic},
                StripOnInput->True],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link protocol: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["\<\"SharedMemory\"\>",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open$$],
       ImageSize->Automatic],
      BaselinePosition->Baseline],
     DynamicModuleValues:>{}], "]"}],
   LinkObject[
   "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\lib\\JLink.jar\" \
-Dcom.wolfram.jlink.libdir=\"C:\\Program Files\\Wolfram Research\\Mathematica\
\\10.0\\SystemFiles\\os\\win64\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-3d3ffcbf-b63e-4bb7-97bb-\
12c7d6aa40b7\"", 147, 7],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.617647720216714*^9, 3.6176477215267267`*^9}}],

Cell[BoxData[
 RowBox[{"LinkObject", "[", 
  RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}]], "Output",
 CellChangeTimes->{3.617720584512262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", "duh", "]"}]], "Input",
 CellChangeTimes->{{3.6176477385068965`*^9, 3.617647746436976*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinkObject", "::", "linkn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\
\"C:\\\\\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Research\\\\\\\\Math\\\" \
\[Ellipsis] \\\".wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\[NoBreak] in \
\[NoBreak]\\!\\(LinkConnectedQ[\\(\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\"C:\\\\\
\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Resea\\\" \[Ellipsis] \
\\\".jlink.JLinkSystemClassLoader com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\\)]\\)\[NoBreak] has an invalid LinkObject number; the link may \
be closed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkn\\\", ButtonNote -> \
\\\"LinkObject::linkn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6177205849022617`*^9}],

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", 
  RowBox[{"LinkObject", "[", 
   RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6177205849822617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Link*"}]], "Input",
 CellChangeTimes->{{3.617647704275554*^9, 3.6176477093656054`*^9}}],

Cell[BoxData[{
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["System`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["System`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["ControllerLinking",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"ControllerLinking", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkFunction",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFunction", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkProtocol",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkProtocol", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ThisLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"ThisLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["GraphLinkEfficiency",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"GraphLinkEfficiency", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkHost",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkHost", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRankCentrality",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkRankCentrality", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$CurrentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$CurrentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkActivate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkActivate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkInterrupt",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkInterrupt", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRead",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkRead", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$Linked",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$Linked", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkClose",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkClose", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkLaunch",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkLaunch", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadHeld", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$LinkSupported",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$LinkSupported", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnect",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkConnect", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkMode",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkMode", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadyQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadyQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$ParentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$ParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkConnectedQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkObject",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkObject", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Links",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"Links", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$SetParentLink",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$SetParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkCreate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkCreate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOpen",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOpen", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkService",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkService", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkError",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkError", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOptions",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOptions", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWrite",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWrite", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkFlush",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFlush", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkPatterns",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkPatterns", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWriteHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWriteHeld", "System`"}},
          ButtonNote->"System`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]], "\n", 
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["JLink`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["JLink`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["CreateExtraLinks",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"CreateExtraLinks", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["FrontEndLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"FrontEndLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaUILink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaUILink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["SharingLinks",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"SharingLinks", "JLink`"}},
          ButtonNote->"JLink`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.19]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]}], "Print", "InfoCell",
 CellChangeTimes->{3.617720585162262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"urlClass", "=", 
  RowBox[{"LoadJavaClass", "[", "\"\<java.net.URL\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176473903024144`*^9, 3.6176474065625772`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"java", ".", "net", ".", "URL"}], ",", "<>", "]"}],
  JLink`JavaClass["java.net.URL", 30, {
    JLink`JVM["vm3"]}, 1, "java`net`URL`", False, True]]], "Output",
 CellChangeTimes->{3.617720585472262*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{"modEqns", ",", "tryMat", ",", "lucaBasis"}], "]"}]], "Input",
 CellChangeTimes->{{3.617721060199997*^9, 3.6177210880602756`*^9}}],

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", "lucaMod", "]"}], "\[RightGuillemet]"}],
    JLink`Objects`vm3`JavaObject23866079067504641], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.292289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.5`", ",", "0", ",", "0", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.299289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}]}], "}"}], ",", 
   "JLink`Objects`vm2`JavaObject9714448113598465"}], "]"}]], "Output",
 CellChangeTimes->{3.617721089840293*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"InstallJava", "[", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205856922617`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1628, 891},
WindowMargins->{{Automatic, -1710}, {45, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[CellGroupData[{
Cell[743, 29, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[842, 33, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[934, 37, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1105, 44, 1879, 50, 101, "Input"],
Cell[2987, 96, 577, 9, 23, "Print"]
}, Open  ]],
Cell[3579, 108, 481, 9, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4097, 122, 84, 1, 35, "Subsubsection"],
Cell[4184, 125, 1841, 48, 101, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6062, 178, 149, 3, 35, "Subsubsection"],
Cell[6214, 183, 977, 28, 81, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7240, 217, 129, 1, 37, "Subsection"],
Cell[7372, 220, 171, 2, 30, "Text",
 InitializationCell->True],
Cell[7546, 224, 10241, 291, 281, "Input"],
Cell[17790, 517, 319, 8, 40, "Input"],
Cell[18112, 527, 355, 9, 40, "Input"],
Cell[CellGroupData[{
Cell[18492, 540, 1197, 35, 40, "Input"],
Cell[19692, 577, 1802, 51, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21531, 633, 151, 3, 40, "Input"],
Cell[21685, 638, 666, 15, 40, "Output"]
}, Open  ]],
Cell[22366, 656, 1703, 42, 141, "Input"],
Cell[CellGroupData[{
Cell[24094, 702, 127, 2, 40, "Input"],
Cell[24224, 706, 12510, 263, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36771, 974, 365, 6, 40, "Input"],
Cell[37139, 982, 917, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38093, 1010, 2387, 69, 81, "Input"],
Cell[40483, 1081, 910, 21, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41442, 1108, 55, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[41522, 1112, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[41670, 1119, 4565, 117, 261, "Input"],
Cell[46238, 1238, 734, 16, 40, "Output"]
}, Open  ]],
Cell[46987, 1257, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[47301, 1267, 232, 5, 40, "Input"],
Cell[47536, 1274, 398, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47971, 1286, 184, 4, 40, "Input"],
Cell[48158, 1292, 117859, 3040, 213, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166078, 4339, 163, 2, 37, "Subsection"],
Cell[166244, 4343, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[166574, 4352, 345, 8, 40, "Input"],
Cell[166922, 4362, 1109, 25, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168068, 4392, 486, 10, 40, InheritFromParent],
Cell[168557, 4404, 1048, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169642, 4433, 256, 6, 40, "Input"],
Cell[169901, 4441, 553, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170491, 4458, 241, 7, 40, "Input"],
Cell[170735, 4467, 981, 26, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171753, 4498, 135, 2, 40, "Input"],
Cell[171891, 4502, 273, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172201, 4511, 203, 5, 40, "Input"],
Cell[172407, 4518, 614, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173058, 4537, 98, 1, 40, "Input"],
Cell[173159, 4540, 590, 13, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173786, 4558, 184, 3, 40, "Input"],
Cell[173973, 4563, 1440, 44, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175450, 4612, 574, 9, 40, "Input"],
Cell[176027, 4623, 1617, 41, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177681, 4669, 1533, 37, 40, "Input"],
Cell[179217, 4708, 714, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179968, 4731, 839, 23, 40, InheritFromParent],
Cell[180810, 4756, 737, 19, 40, "Output"]
}, Open  ]],
Cell[181562, 4778, 1594, 38, 40, "Input"],
Cell[183159, 4818, 1936, 47, 101, "Input"],
Cell[CellGroupData[{
Cell[185120, 4869, 3080, 81, 101, "Input"],
Cell[188203, 4952, 1091, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189331, 4980, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[189479, 4987, 4621, 118, 261, "Input"],
Cell[194103, 5107, 583, 10, 40, "Output"]
}, Open  ]],
Cell[194701, 5120, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[195015, 5130, 232, 5, 40, "Input"],
Cell[195250, 5137, 447, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195734, 5150, 184, 4, 40, "Input"],
Cell[195921, 5156, 12523, 321, 54, "Output"]
}, Open  ]],
Cell[208459, 5480, 702, 15, 40, "Input"],
Cell[CellGroupData[{
Cell[209186, 5499, 102, 1, 40, "Input"],
Cell[209291, 5502, 1121, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210449, 5524, 140, 2, 40, "Input"],
Cell[210592, 5528, 1036, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211665, 5549, 184, 3, 40, "Input"],
Cell[211852, 5554, 2302, 49, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214191, 5608, 385, 8, 40, "Input"],
Cell[214579, 5618, 1734, 30, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216350, 5653, 281, 7, 61, "Input"],
Cell[216634, 5662, 1595, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218266, 5695, 130, 2, 40, "Input"],
Cell[218399, 5699, 2197, 42, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220633, 5746, 442, 10, 40, "Input"],
Cell[221078, 5758, 1846, 35, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222961, 5798, 515, 11, 40, "Input"],
Cell[223479, 5811, 1879, 36, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225395, 5852, 305, 6, 40, "Input"],
Cell[225703, 5860, 1123, 22, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226863, 5887, 454, 11, 40, "Input"],
Cell[227320, 5900, 3606, 66, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230963, 5971, 206, 4, 40, "Input"],
Cell[231172, 5977, 1171, 24, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232416, 6009, 113, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[232554, 6014, 108, 1, 35, "Subsubsection"],
Cell[232665, 6017, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[232781, 6022, 586, 11, 40, "Input"],
Cell[233370, 6035, 1197, 24, 40, "Output"]
}, Open  ]],
Cell[234582, 6062, 533, 11, 40, "Input"],
Cell[235118, 6075, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[235229, 6080, 616, 12, 40, "Input"],
Cell[235848, 6094, 1248, 24, 40, "Output"]
}, Open  ]],
Cell[237111, 6121, 586, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[237722, 6137, 773, 21, 40, "Input"],
Cell[238498, 6160, 1285, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239820, 6189, 612, 17, 40, "Input"],
Cell[240435, 6208, 389, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240861, 6221, 348, 9, 40, InheritFromParent],
Cell[241212, 6232, 347, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241596, 6243, 509, 9, 40, "Input"],
Cell[242108, 6254, 1218, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243363, 6283, 183, 3, 40, "Input"],
Cell[243549, 6288, 355, 5, 40, "Output"]
}, Open  ]],
Cell[243919, 6296, 563, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[244507, 6311, 516, 9, 40, "Input"],
Cell[245026, 6322, 1201, 24, 40, "Output"]
}, Open  ]],
Cell[246242, 6349, 560, 11, 40, "Input"],
Cell[246805, 6362, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[247018, 6369, 669, 13, 40, "Input"],
Cell[247690, 6384, 1223, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248950, 6413, 631, 18, 40, "Input"],
Cell[249584, 6433, 853, 19, 40, "Output"]
}, Open  ]],
Cell[250452, 6455, 600, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[251077, 6471, 537, 10, 40, "Input"],
Cell[251617, 6483, 1190, 24, 40, "Output"]
}, Open  ]],
Cell[252822, 6510, 579, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[253426, 6525, 537, 10, 40, "Input"],
Cell[253966, 6537, 1186, 24, 40, "Output"]
}, Open  ]],
Cell[255167, 6564, 577, 11, 40, "Input"],
Cell[255747, 6577, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[255858, 6582, 514, 9, 40, "Input"],
Cell[256375, 6593, 971, 20, 40, "Output"]
}, Open  ]],
Cell[257361, 6616, 566, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[257952, 6631, 514, 9, 40, "Input"],
Cell[258469, 6642, 972, 20, 40, "Output"]
}, Open  ]],
Cell[259456, 6665, 558, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260063, 6682, 115, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[260203, 6687, 4543, 117, 261, "Input"],
Cell[264749, 6806, 261, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265047, 6816, 4372, 114, 281, "Input"],
Cell[269422, 6932, 528, 15, 40, "Output"],
Cell[269953, 6949, 398, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270388, 6964, 120, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[270533, 6971, 1009, 27, 81, "Input"],
Cell[271545, 7000, 400, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271982, 7015, 1055, 28, 81, "Input"],
Cell[273040, 7045, 308, 9, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273397, 7060, 72, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[273494, 7064, 139, 1, 35, "Subsubsection"],
Cell[273636, 7067, 292, 8, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273965, 7080, 47, 0, 35, "Subsubsection"],
Cell[274015, 7082, 85, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[274125, 7088, 122, 3, 40, "Input"],
Cell[274250, 7093, 125, 2, 40, "Output"]
}, Open  ]],
Cell[274390, 7098, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[274512, 7104, 197, 4, 61, "Input"],
Cell[274712, 7110, 122, 2, 40, "Output"]
}, Open  ]],
Cell[274849, 7115, 264, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[275138, 7124, 309, 6, 61, "Input"],
Cell[275450, 7132, 227, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275726, 7144, 121, 1, 35, "Subsubsection"],
Cell[275850, 7147, 247, 5, 30, "Text"],
Cell[276100, 7154, 218, 5, 40, "Input"],
Cell[276321, 7161, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[276453, 7166, 164, 3, 40, "Input"],
Cell[276620, 7171, 442, 14, 40, "Output"]
}, Open  ]],
Cell[277077, 7188, 162, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[277264, 7194, 213, 4, 40, "Input"],
Cell[277480, 7200, 174, 4, 40, "Output"]
}, Open  ]],
Cell[277669, 7207, 109, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[277803, 7212, 348, 8, 40, "Input"],
Cell[278154, 7222, 466, 14, 40, "Output"]
}, Open  ]],
Cell[278635, 7239, 188, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[278848, 7245, 561, 14, 40, "Input"],
Cell[279412, 7261, 729, 19, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280178, 7285, 139, 3, 40, "Input"],
Cell[280320, 7290, 406, 10, 40, "Output"]
}, Open  ]],
Cell[280741, 7303, 118, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[280884, 7308, 176, 3, 40, "Input"],
Cell[281063, 7313, 212, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281312, 7323, 149, 2, 40, "Input"],
Cell[281464, 7327, 674, 15, 40, "Output"]
}, Open  ]],
Cell[282153, 7345, 117, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[282295, 7350, 178, 3, 40, "Input"],
Cell[282476, 7355, 1459, 38, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283972, 7398, 389, 9, 40, "Input"],
Cell[284364, 7409, 1301, 25, 61, "Output"]
}, Open  ]],
Cell[285680, 7437, 153, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[285858, 7444, 402, 6, 40, "Input"],
Cell[286263, 7452, 2726, 59, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289026, 7516, 352, 8, 40, "Input"],
Cell[289381, 7526, 1022, 20, 61, "Output"]
}, Open  ]],
Cell[290418, 7549, 102, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[290545, 7554, 249, 5, 40, "Input"],
Cell[290797, 7561, 962, 21, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291796, 7587, 299, 7, 40, "Input"],
Cell[292098, 7596, 1280, 23, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293427, 7625, 108, 1, 35, "Subsubsection"],
Cell[293538, 7628, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[293654, 7633, 532, 10, 40, "Input"],
Cell[294189, 7645, 649, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294875, 7666, 489, 10, 40, "Input"],
Cell[295367, 7678, 2988, 60, 101, "Output"]
}, Open  ]],
Cell[298370, 7741, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[298481, 7746, 485, 10, 40, "Input"],
Cell[298969, 7758, 650, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299656, 7779, 485, 10, 40, "Input"],
Cell[300144, 7791, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303165, 7856, 462, 9, 40, "Input"],
Cell[303630, 7867, 608, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304275, 7888, 464, 9, 40, "Input"],
Cell[304742, 7899, 4270, 82, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309049, 7986, 464, 9, 40, "Input"],
Cell[309516, 7997, 566, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310119, 8014, 462, 9, 40, "Input"],
Cell[310584, 8025, 6168, 113, 241, "Output"]
}, Open  ]],
Cell[316767, 8141, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[316980, 8148, 531, 10, 40, "Input"],
Cell[317514, 8160, 648, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318199, 8181, 525, 10, 40, "Input"],
Cell[318727, 8193, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321748, 8258, 507, 9, 40, "Input"],
Cell[322258, 8269, 587, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322882, 8290, 507, 9, 40, "Input"],
Cell[323392, 8301, 4285, 87, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327714, 8393, 507, 9, 40, "Input"],
Cell[328224, 8404, 562, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328823, 8421, 505, 9, 40, "Input"],
Cell[329331, 8432, 6061, 114, 221, "Output"]
}, Open  ]],
Cell[335407, 8549, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[335518, 8554, 490, 9, 40, "Input"],
Cell[336011, 8565, 610, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336658, 8586, 490, 9, 40, "Input"],
Cell[337151, 8597, 4276, 84, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341464, 8686, 490, 9, 40, "Input"],
Cell[341957, 8697, 570, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342564, 8714, 486, 9, 40, "Input"],
Cell[343053, 8725, 6751, 125, 261, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349853, 8856, 121, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[349999, 8861, 674, 19, 81, "Input"],
Cell[350676, 8882, 1415, 48, 70, "Output"],
Cell[352094, 8932, 13113, 264, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365268, 9203, 99, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[365392, 9208, 517, 13, 40, "Input"],
Cell[365912, 9223, 239, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366188, 9235, 378, 7, 40, "Input"],
Cell[CellGroupData[{
Cell[366591, 9246, 136, 1, 23, "Print"],
Cell[366730, 9249, 136, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[366893, 9254, 452, 10, 40, "Input"],
Cell[367348, 9266, 933, 26, 40, "Input"],
Cell[CellGroupData[{
Cell[368306, 9296, 228, 6, 40, "Input"],
Cell[368537, 9304, 194, 5, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368768, 9314, 471, 10, 40, "Input"],
Cell[369242, 9326, 36275, 592, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405554, 9923, 1088, 28, 112, "Input"],
Cell[406645, 9953, 1153, 29, 55, "Output"]
}, Open  ]],
Cell[407813, 9985, 240, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408078, 9994, 408, 12, 61, "Input"],
Cell[408489, 10008, 151, 3, 40, "Output"]
}, Open  ]],
Cell[408655, 10014, 236, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408916, 10023, 130, 2, 40, "Input"],
Cell[409049, 10027, 163, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409249, 10035, 382, 9, 40, "Input"],
Cell[409634, 10046, 1263, 32, 235, "Output"]
}, Open  ]],
Cell[410912, 10081, 460, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411421, 10098, 107, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[411553, 10103, 106, 1, 40, "Input"],
Cell[411662, 10106, 278, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411977, 10116, 125, 2, 40, "Input"],
Cell[412105, 10120, 12237, 259, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424379, 10384, 106, 1, 40, "Input"],
Cell[424488, 10387, 276, 5, 40, "Output"]
}, Open  ]],
Cell[424779, 10395, 206, 3, 40, "Input"],
Cell[CellGroupData[{
Cell[425010, 10402, 179, 3, 40, "Input"],
Cell[425192, 10407, 13652, 286, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438881, 10698, 14347, 294, 82, "Input"],
Cell[453231, 10994, 749, 12, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454017, 11011, 137, 2, 40, "Input"],
Cell[454157, 11015, 1616, 28, 73, "Message"],
Cell[455776, 11045, 796, 14, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456609, 11064, 117, 2, 40, "Input"],
Cell[456729, 11068, 8691, 217, 309, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465457, 11290, 185, 3, 40, "Input"],
Cell[465645, 11295, 276, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465970, 11307, 33, 0, 72, "Section"],
Cell[466006, 11309, 503, 12, 40, "Input",
 InitializationCell->True],
Cell[466512, 11323, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[466842, 11332, 183, 3, 40, "Input"],
Cell[467028, 11337, 824, 22, 40, "Output"]
}, Open  ]],
Cell[467867, 11362, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[468181, 11372, 106, 1, 40, "Input"],
Cell[468290, 11375, 278, 5, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

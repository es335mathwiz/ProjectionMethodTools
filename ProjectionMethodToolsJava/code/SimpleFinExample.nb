(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3009097,      59342]
NotebookOptionsPosition[   2975702,      58340]
NotebookOutlinePosition[   2976501,      58370]
CellTagsIndexPosition[   2976412,      58365]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Simple Example", "Title"],

Cell["Gary S. Anderson", "Author",
 CellChangeTimes->{{3.6172005766837215`*^9, 3.617200602415076*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9, {3.6181659633773193`*^9, 
   3.6181659731273193`*^9}, 3.618166013126069*^9, {3.6181660574148192`*^9, 
   3.6181661332398195`*^9}, 3.6181663014170694`*^9}],

Cell[CellGroupData[{

Cell["Applying \[OpenCurlyDoubleQuote]Reliable\[CloseCurlyDoubleQuote] \
Formula", "Section",
 CellChangeTimes->{{3.618161018883319*^9, 3.618161026312069*^9}, {
  3.618749407150393*^9, 3.6187494219442463`*^9}}],

Cell["Solution for a single period", "Subsection",
 CellChangeTimes->{{3.6191785505981045`*^9, 3.6191785661984167`*^9}}],

Cell["First attempt follows", "Subsection",
 CellChangeTimes->{{3.619178514147375*^9, 3.6191785259876122`*^9}}],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaSubs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"betap", "\[Rule]", 
        RowBox[{"99", "/", "100"}]}], ",", 
       RowBox[{"phip", "\[Rule]", "1"}], ",", 
       RowBox[{"rhop", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
       RowBox[{"rUnderBar", "\[Rule]", 
        RowBox[{"2", "/", "100"}]}], ",", 
       RowBox[{"qLow", "\[Rule]", 
        RowBox[{"-", ".5"}]}], ",", 
       RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
       RowBox[{"ruLow", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"-", "4"}], "*", 
         RowBox[{"sigma$u", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
       RowBox[{"ruHigh", "\[Rule]", "  ", 
        RowBox[{"4", "*", 
         RowBox[{"sigma$u", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
       RowBox[{"integOrder", "\[Rule]", 
        RowBox[{"{", "50", "}"}]}], ",", 
       RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
       RowBox[{"theMean", "\[Rule]", 
        RowBox[{"{", "0", "}"}]}], ",", 
       RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
       RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";", 
    RowBox[{"lucaReliableEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"0.26774226536389173", "*", 
         RowBox[{"qq", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
        RowBox[{"0.3086481523403434", "*", 
         RowBox[{"ru", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "-", 
        RowBox[{"0.5354845307277833", "*", 
         RowBox[{"zzz$0$1", "[", "t", "]"}]}], "+", 
        RowBox[{"0.6172963046806865", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"0.26774226536389173", "*", 
         RowBox[{"qq", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
        RowBox[{"0.3086481523403434", "*", 
         RowBox[{"ru", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
        RowBox[{"0.4645154692722166", "*", 
         RowBox[{"zzz$0$1", "[", "t", "]"}]}], "+", 
        RowBox[{"0.6172963046806865", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"0.5", "*", 
         RowBox[{"ru", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
        RowBox[{"1.", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"eqvdIf", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"qq", "[", "t", "]"}], "\[GreaterEqual]", "0.02"}], ",", 
           "0", ",", 
           RowBox[{"0.02", "-", 
            RowBox[{"qq", "[", "t", "]"}]}]}], "]"}]}], "+", 
        RowBox[{"zzz$0$1", "[", "t", "]"}]}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"rr", "[", "t", "]"}], "-", 
     RowBox[{
      RowBox[{"eqvdIf", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"lambda", "[", "t", "]"}], "\[GreaterEqual]", "0"}], ",", 
        "rUnderBar", ",", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}]}], "]"}], " ", "should", " ", "fix", 
      " ", "codesubs"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaReliableEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6181615332420692`*^9, 3.618161582344569*^9}, {
   3.618164221779069*^9, 3.618164225962819*^9}, {3.6181642809460692`*^9, 
   3.618164297294819*^9}, {3.6181652195085692`*^9, 3.6181652329598193`*^9}, {
   3.6181653021635695`*^9, 3.6181653078635693`*^9}, {3.618166246271819*^9, 
   3.6181662568418193`*^9}, {3.618167466622819*^9, 3.618167470505319*^9}, {
   3.618167550833069*^9, 3.6181675542068195`*^9}, 3.6182378559250584`*^9, {
   3.6182426906953087`*^9, 3.618242698692808*^9}, {3.6184220122313385`*^9, 
   3.618422023161448*^9}, {3.618426474936246*^9, 3.6184264756762533`*^9}, {
   3.6184280274519243`*^9, 3.61842803300198*^9}, {3.6184284588822803`*^9, 
   3.618428525516981*^9}, {3.618428769603446*^9, 3.6184288569063225`*^9}, {
   3.6184296114959345`*^9, 3.6184296452962723`*^9}, {3.618429786433695*^9, 
   3.618429860678444*^9}, 3.618493851243683*^9, {3.618649713134859*^9, 
   3.6186497153648367`*^9}, {3.618649757826413*^9, 3.6186497776862144`*^9}, {
   3.618749488568581*^9, 3.6187495573721533`*^9}, 3.6187496061361537`*^9, {
   3.6187499811231537`*^9, 3.6187500041031537`*^9}, {3.6187500345471535`*^9, 
   3.6187501533251534`*^9}, {3.6187503581691265`*^9, 
   3.6187503727589808`*^9}, {3.618750631937158*^9, 3.618750637098158*^9}, {
   3.618750918770158*^9, 3.618750969230158*^9}, {3.618751411705835*^9, 
   3.618751421075741*^9}, 3.618752063421159*^9, {3.6187529917361584`*^9, 
   3.618752992176159*^9}, {3.6187531659091587`*^9, 3.6187531756991587`*^9}, {
   3.6187532220091586`*^9, 3.6187532679391584`*^9}, {3.6187533192691584`*^9, 
   3.618753368150159*^9}, {3.6187534540701585`*^9, 3.6187534570301585`*^9}, 
   3.618753500110159*^9, {3.6187540452011585`*^9, 3.6187541122221584`*^9}, {
   3.6187543699421587`*^9, 3.6187543704321585`*^9}, 3.6187544122721586`*^9, {
   3.6187544935231586`*^9, 3.6187544951331587`*^9}, {3.6187545408431587`*^9, 
   3.6187545622431583`*^9}, {3.618754614013159*^9, 3.618754627183159*^9}, {
   3.618754920664159*^9, 3.6187549217841587`*^9}, {3.6187615002862206`*^9, 
   3.6187615135362206`*^9}, {3.6188245666286507`*^9, 3.618824570728651*^9}, {
   3.618824717893651*^9, 3.6188247279636507`*^9}, {3.618824925938651*^9, 
   3.6188249262886505`*^9}, {3.6188260041376505`*^9, 
   3.6188260047676506`*^9}, {3.6188285029956827`*^9, 3.6188285068556824`*^9}, 
   3.6188289064766827`*^9, {3.6188291795676823`*^9, 3.6188291808216825`*^9}, {
   3.6188293344211826`*^9, 3.6188293355711713`*^9}, {3.6188294822957077`*^9, 
   3.6188294962655687`*^9}, {3.618829559779934*^9, 3.6188295677398543`*^9}, 
   3.618830186227692*^9, {3.6188310797156925`*^9, 3.618831090265692*^9}, {
   3.618837026791727*^9, 3.6188370279317265`*^9}, {3.618844518292734*^9, 
   3.6188445202827344`*^9}, {3.6188493345017405`*^9, 
   3.6188493509617405`*^9}, {3.6188546856627445`*^9, 3.618854698122744*^9}, {
   3.6188585578047957`*^9, 3.618858558604788*^9}, 3.618858891414811*^9, 
   3.6188591380369525`*^9, 3.619024000319959*^9, {3.619024044990406*^9, 
   3.6190242258632145`*^9}, 3.6190242641935997`*^9, {3.619024958962559*^9, 
   3.61902505901356*^9}, {3.619025196863959*^9, 3.619025215554146*^9}, {
   3.6190256325063553`*^9, 3.619025723544277*^9}, {3.61902575481459*^9, 
   3.61902581215917*^9}, {3.6190262127432084`*^9, 3.619026222093302*^9}, {
   3.619026571187793*^9, 3.6190265840479217`*^9}, {3.6190266261493425`*^9, 
   3.619026833281414*^9}, {3.619189088058586*^9, 3.619189088128586*^9}, {
   3.619193694367586*^9, 3.619193738527586*^9}, {3.619193769407586*^9, 
   3.619193774947586*^9}, {3.6191952612925863`*^9, 3.619195274352586*^9}, {
   3.619196035506914*^9, 3.619196045386815*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\\"c:\\\\Program \
Files\\\\Java\\\\jdk1.7.0_51\\\\bin\\\\javac\\\" -cp \
./;ProjectionMethodToolsJava-0.0.1-SNAPSHOT.jar;Jama-1.0.2-1.0-SNAPSHOT.jar  \
-target 1.7 ./lucaMod.java\"\>"], "Print",
 CellChangeTimes->{
  3.61876111330422*^9, 3.6187615243662205`*^9, 3.6187719610903034`*^9, 
   3.618772298261303*^9, 3.6188243744236507`*^9, 3.618824600823651*^9, 
   3.6188247516236506`*^9, 3.618824969473651*^9, 3.618825724448651*^9, 
   3.6188258600356507`*^9, 3.618826026429651*^9, 3.618826128492651*^9, 
   3.6188282067426825`*^9, 3.6188285283696823`*^9, 3.618828918326682*^9, 
   3.6188292386136827`*^9, 3.6188293583409433`*^9, 3.618829517225359*^9, 
   3.6188295962195697`*^9, 3.6188302177816925`*^9, 3.6188311084396925`*^9, 
   3.618836025821727*^9, 3.6188360821677265`*^9, 3.6188365486187267`*^9, 
   3.6188370565857267`*^9, 3.6188391437137346`*^9, 3.6188391792977343`*^9, 
   3.6188432575787344`*^9, 3.6188435156757345`*^9, 3.6188436590507345`*^9, 
   3.6188437967567344`*^9, 3.6188440066717343`*^9, 3.6188440690017347`*^9, 
   3.618844535252734*^9, {3.6188449171617346`*^9, 3.618844958943734*^9}, 
   3.618845009405734*^9, 3.6188462063857346`*^9, 3.6188545072637444`*^9, 
   3.6188545507237444`*^9, 3.618854602773744*^9, 3.618854633528744*^9, {
   3.6188547032027445`*^9, 3.618854725432744*^9}, 3.618857489763782*^9, 
   3.6188576370037823`*^9, 3.6188581158116302`*^9, 3.618858603928335*^9, 
   3.618858911244811*^9, 3.6188591598373885`*^9, 3.6190223914385495`*^9, 
   3.619024250593462*^9, 3.619024390955868*^9, 3.6190245217791758`*^9, 
   3.6190245630415907`*^9, 3.6190251211011896`*^9, 3.6190252449574447`*^9, 
   3.6190258531235867`*^9, 3.6190260180962563`*^9, 3.6190261054101334`*^9, 
   3.619026252413605*^9, 3.619032085085745*^9, 3.619193718257586*^9, 
   3.619193751237586*^9, 3.619195313712586*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ingenmodcode:\"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", "lucaMod", "]"}], "\[RightGuillemet]"}],
    JLink`Objects`vm2`JavaObject10717000888221697], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qq", ",", "ru"}], "}"}], ",", 
     RowBox[{"{", "zzz$0$1", "}"}], ",", 
     RowBox[{"{", "uu$Shock", "}"}]}], "}"}]}],
  SequenceForm[
  "ingenmodcode:", 
   JLink`Objects`vm2`JavaObject10717000888221697, {{$CellContext`qq, \
$CellContext`ru}, {$CellContext`zzz$0$1}, {$CellContext`uu$Shock}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.61876111330422*^9, 3.6187615243662205`*^9, 3.6187719610903034`*^9, 
   3.618772298261303*^9, 3.6188243744236507`*^9, 3.618824600823651*^9, 
   3.6188247516236506`*^9, 3.618824969473651*^9, 3.618825724448651*^9, 
   3.6188258600356507`*^9, 3.618826026429651*^9, 3.618826128492651*^9, 
   3.6188282067426825`*^9, 3.6188285283696823`*^9, 3.618828918326682*^9, 
   3.6188292386136827`*^9, 3.6188293583409433`*^9, 3.618829517225359*^9, 
   3.6188295962195697`*^9, 3.6188302177816925`*^9, 3.6188311084396925`*^9, 
   3.618836025821727*^9, 3.6188360821677265`*^9, 3.6188365486187267`*^9, 
   3.6188370565857267`*^9, 3.6188391437137346`*^9, 3.6188391792977343`*^9, 
   3.6188432575787344`*^9, 3.6188435156757345`*^9, 3.6188436590507345`*^9, 
   3.6188437967567344`*^9, 3.6188440066717343`*^9, 3.6188440690017347`*^9, 
   3.618844535252734*^9, {3.6188449171617346`*^9, 3.618844958943734*^9}, 
   3.618845009405734*^9, 3.6188462063857346`*^9, 3.6188545072637444`*^9, 
   3.6188545507237444`*^9, 3.618854602773744*^9, 3.618854633528744*^9, {
   3.6188547032027445`*^9, 3.618854725432744*^9}, 3.618857489763782*^9, 
   3.6188576370037823`*^9, 3.6188581158116302`*^9, 3.618858603928335*^9, 
   3.618858911244811*^9, 3.6188591598373885`*^9, 3.6190223914385495`*^9, 
   3.619024250593462*^9, 3.619024390955868*^9, 3.6190245217791758`*^9, 
   3.6190245630415907`*^9, 3.6190251211011896`*^9, 3.6190252449574447`*^9, 
   3.6190258531235867`*^9, 3.6190260180962563`*^9, 3.6190261054101334`*^9, 
   3.619026252413605*^9, 3.619032085085745*^9, 3.619193718257586*^9, 
   3.619193751237586*^9, 3.619195316172586*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData["lucaReliableEqns"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.26774226536389173`", " ", 
     RowBox[{"qq", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"0.3086481523403434`", " ", 
     RowBox[{"ru", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"0.6172963046806865`", " ", 
     RowBox[{
      RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.26774226536389173`", " ", 
     RowBox[{"qq", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"0.3086481523403434`", " ", 
     RowBox[{"ru", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"0.6172963046806865`", " ", 
     RowBox[{
      RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", 
     RowBox[{"ru", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"1.`", " ", 
     RowBox[{
      RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"eqvdIf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "\[GreaterEqual]", "0.02`"}], ",", "0",
        ",", 
       RowBox[{"0.02`", "\[VeryThinSpace]", "-", 
        RowBox[{"qq", "[", "t", "]"}]}]}], "]"}]}], "+", 
    RowBox[{"zzz$0$1", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.61876111526422*^9, 3.618771968150303*^9, 3.6187723033613033`*^9, 
   3.618824378353651*^9, 3.618824605893651*^9, 3.6188247540836506`*^9, 
   3.6188249721756506`*^9, 3.6188257263786507`*^9, 3.618825865115651*^9, 
   3.6188260289396505`*^9, 3.618826133422651*^9, 3.6188282117126827`*^9, 
   3.6188285331796827`*^9, 3.6188289235186825`*^9, 3.6188292435636826`*^9, 
   3.618829363614892*^9, 3.6188295197053337`*^9, 3.6188296012435207`*^9, 
   3.618830223841692*^9, 3.618831113311692*^9, 3.618836028341727*^9, 
   3.6188360841277266`*^9, 3.618836553838727*^9, 3.6188370618257265`*^9, 
   3.6188391457937346`*^9, 3.618839181877734*^9, 3.6188432630787344`*^9, 
   3.6188435183357344`*^9, 3.618843661490734*^9, 3.6188437991267347`*^9, 
   3.6188440092117343`*^9, 3.6188440711517344`*^9, 3.6188445403647346`*^9, {
   3.618844922188734*^9, 3.6188449609937344`*^9}, 3.6188450119457345`*^9, 
   3.6188462089377346`*^9, 3.618854507423744*^9, 3.6188547272027445`*^9, 
   3.618857494953782*^9, 3.618857639473782*^9, 3.618858120771531*^9, 
   3.6188586090302844`*^9, 3.6188589160048113`*^9, 3.6188591650494976`*^9, 
   3.619022417378809*^9, 3.6190242880938387`*^9, 3.6190243959959183`*^9, 
   3.6190245649816103`*^9, 3.6190251237112155`*^9, 3.6190252474474697`*^9, 
   3.619025858363639*^9, 3.6190260206062813`*^9, 3.619026108002161*^9, 
   3.6190262574636555`*^9, 3.6191937581675863`*^9, 3.619195316232586*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"modParams", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",",
         "rUnderBar", ",", "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", 
     "N"}]}], ";", "\n", 
   RowBox[{"modEqns", "[", 
    RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}, {3.6182427033953085`*^9, 
   3.618242724237808*^9}, {3.6182428957790585`*^9, 3.6182429090240583`*^9}, {
   3.61824446597836*^9, 3.61824448509864*^9}, {3.618244528649624*^9, 
   3.6182445291784163`*^9}, {3.6184206482294874`*^9, 
   3.6184206489194946`*^9}, {3.618421512034299*^9, 3.6184215230044084`*^9}, {
   3.618422226795503*^9, 3.6184222273155084`*^9}, {3.6184256469838924`*^9, 
   3.6184256480939035`*^9}, {3.6185030815788217`*^9, 
   3.6185031093690996`*^9}, {3.618507087185193*^9, 3.6185070882551928`*^9}, {
   3.618507552643939*^9, 3.6185075539879575`*^9}, {3.6185749367776327`*^9, 
   3.618574941217677*^9}, {3.6185749891581564`*^9, 3.618574989988165*^9}, {
   3.618575171324982*^9, 3.618575171514984*^9}, {3.6185752899461684`*^9, 
   3.6185752984862537`*^9}, 3.618576505092454*^9, 3.6185765514149194`*^9, {
   3.6185765927593393`*^9, 3.6185765971993837`*^9}, {3.618578713080787*^9, 
   3.618578713510792*^9}, {3.618578933432021*^9, 3.618578934022027*^9}, {
   3.6185844884601364`*^9, 3.618584488740139*^9}, {3.6185845512047677`*^9, 
   3.618584551894775*^9}, {3.6185849550838623`*^9, 3.6185849690640016`*^9}, {
   3.618585052862852*^9, 3.6185850610829344`*^9}, {3.6185851166674976`*^9, 
   3.618585117117502*^9}, 3.618585319272545*^9, {3.618585767127076*^9, 
   3.618585767387079*^9}, {3.618587543637038*^9, 3.618587553627138*^9}, {
   3.6185947331803517`*^9, 3.618594749836527*^9}, {3.618595341567514*^9, 
   3.61859534520755*^9}, {3.6185965519137983`*^9, 3.6185966034243135`*^9}, 
   3.6185970381827173`*^9, {3.618597132957673*^9, 3.618597138867732*^9}, {
   3.6186498015899763`*^9, 3.618649805689935*^9}, {3.6186507867091646`*^9, 
   3.6186508010690207`*^9}, {3.6186510519980965`*^9, 
   3.6186510592083845`*^9}, {3.618651633808719*^9, 3.6186516516485405`*^9}, {
   3.618651720631852*^9, 3.6186517213018456`*^9}, {3.6186532451496463`*^9, 
   3.61865324682963*^9}, {3.618653283273266*^9, 3.618653284053258*^9}, {
   3.6186539178269362`*^9, 3.618653918576929*^9}, {3.618653977430341*^9, 
   3.618653978100334*^9}, {3.6186564087037134`*^9, 3.6186564104537134`*^9}, {
   3.6186565285867133`*^9, 3.6186565304467134`*^9}, {3.618748081051148*^9, 
   3.618748085581148*^9}, {3.6187604864321694`*^9, 3.618760495692169*^9}, {
   3.6187606881882925`*^9, 3.618760690248313*^9}, 3.61876148653522*^9, {
   3.6187615413272204`*^9, 3.61876154941022*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}]], "Input",
 CellChangeTimes->{{3.6181643453198195`*^9, 3.618164367401069*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>"}], "}"}], ",", 
   RowBox[{"{", "\<\"zzz$0$1\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"uu$Shock\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.61876111530422*^9, 3.6187615629402204`*^9, 3.6187719687503033`*^9, 
   3.618772303831303*^9, 3.618824379133651*^9, 3.6188246064036508`*^9, 
   3.618824754563651*^9, 3.618824972945651*^9, 3.618825726428651*^9, 
   3.618825865655651*^9, 3.6188260293996506`*^9, 3.6188261338526506`*^9, 
   3.6188282122026825`*^9, 3.6188285335996823`*^9, 3.6188289239986825`*^9, 
   3.618829243923682*^9, 3.6188293641348867`*^9, 3.618829520165329*^9, 
   3.618829601703516*^9, 3.618830224341692*^9, 3.6188311137316923`*^9, 
   3.6188360284417267`*^9, 3.6188360842077265`*^9, 3.618836554268727*^9, 
   3.6188370623557267`*^9, 3.6188391458637342`*^9, 3.6188391823577347`*^9, 
   3.618843263608734*^9, 3.6188435191357346`*^9, 3.6188436621707344`*^9, 
   3.618843799896734*^9, 3.6188440099517345`*^9, 3.6188440712117343`*^9, 
   3.618844540844734*^9, {3.6188449226337347`*^9, 3.6188449610437346`*^9}, 
   3.6188450127157345`*^9, 3.6188462089877343`*^9, 3.618854508663744*^9, 
   3.6188547276527443`*^9, 3.618857495453782*^9, 3.618857639913782*^9, 
   3.618858121261521*^9, 3.6188586094602804`*^9, 3.6188589164648113`*^9, 
   3.6188591655195065`*^9, 3.619022418368819*^9, 3.6190242882038403`*^9, {
   3.619024396575924*^9, 3.619024424896207*^9}, {3.619024536501325*^9, 
   3.619024565051611*^9}, 3.6190251246312246`*^9, 3.6190252479274745`*^9, 
   3.6190258588436437`*^9, 3.6190260210462856`*^9, 3.619026108682168*^9, 
   3.6190262579836607`*^9, 3.619193794777586*^9, 3.619195316302586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polyRange", "//.", "lucaSubs"}]], "Input",
 CellChangeTimes->{{3.6185831540086255`*^9, 3.6185831666987524`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6187611153142204`*^9, 3.61876156295022*^9, 3.6187719687703032`*^9, 
   3.618772303851303*^9, 3.6188243791636505`*^9, 3.6188246064236507`*^9, 
   3.6188247545836506`*^9, 3.618824972975651*^9, 3.618825726448651*^9, 
   3.618825865705651*^9, 3.6188260294396505`*^9, 3.618826133872651*^9, 
   3.6188282122226825`*^9, 3.6188285336196823`*^9, 3.618828924048682*^9, 
   3.6188292439536824`*^9, 3.6188293641648865`*^9, 3.6188295201853294`*^9, 
   3.6188296017535152`*^9, 3.6188302243616924`*^9, 3.6188311137516923`*^9, 
   3.618836028471727*^9, 3.618836084247727*^9, 3.618836554298727*^9, 
   3.618837062385727*^9, 3.6188391458937345`*^9, 3.618839182417734*^9, 
   3.6188432636287346`*^9, 3.6188435191657343`*^9, 3.618843662200734*^9, 
   3.6188437999267344`*^9, 3.6188440099817343`*^9, 3.6188440712317343`*^9, 
   3.6188445408947344`*^9, {3.6188449226567345`*^9, 3.618844961063734*^9}, 
   3.6188450127357345`*^9, 3.618846208997734*^9, 3.6188545087237444`*^9, 
   3.6188547276627445`*^9, 3.618857495473782*^9, 3.618857639933782*^9, 
   3.61885812132152*^9, 3.61885860950028*^9, 3.618858916494811*^9, 
   3.618859165569508*^9, 3.619022418388819*^9, {3.619024396595924*^9, 
   3.619024424906207*^9}, {3.619024536521325*^9, 3.6190245650716105`*^9}, 
   3.619025124641225*^9, 3.6190252479374743`*^9, 3.619025858883644*^9, 
   3.619026021066286*^9, 3.619026108702168*^9, 3.619026258043661*^9, 
   3.619195316312586*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["compute first order projection", "Subsection",
 CellChangeTimes->{{3.6182387696273084`*^9, 3.6182387747148085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"lucaBasis", "[", 
    RowBox[{"setAllWeights", "[", "lucaMat", "]"}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.618242282427308*^9, 
   3.618242288222308*^9}, {3.618772107192303*^9, 3.618772111676303*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simp", "=", 
   RowBox[{
   "JavaNew", "[", 
    "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res1$1$1", "=", 
   RowBox[{"ComputeInitialCollocationWeights", "[", 
    RowBox[{"lucaBasis", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"3", "*", 
        RowBox[{"Random", "[", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "stateVar", "]"}], "+", 
         RowBox[{"Length", "[", "nonStateVar", "]"}]}], "}"}], ",", 
       RowBox[{"{", "8", "}"}]}], "]"}], ",", "modEqns", ",", "simp"}], 
    "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res1$1$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"CreatePolynomials", "[", 
       RowBox[{"lucaMod", ",", "res1$1$1"}], "]"}], "//", "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", "\"\<ComputeInitialCollocationWeights did not converge\>\"",
     ",", "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.6184291133629093`*^9, 
   3.618429142187204*^9}, 3.618495827011609*^9, {3.618502907547064*^9, 
   3.618502927927268*^9}, {3.6185030281362824`*^9, 3.6185030289362907`*^9}, {
   3.6185053233954377`*^9, 3.618505336475569*^9}, {3.618507313591193*^9, 
   3.618507318451193*^9}, {3.618597158551937*^9, 3.618597164031992*^9}, {
   3.6185973146615195`*^9, 3.618597317501548*^9}, {3.6186564849757133`*^9, 
   3.618656486865713*^9}, {3.618772098702303*^9, 3.618772101402303*^9}, {
   3.6190243164941225`*^9, 3.6190243169141273`*^9}, {3.619025977752846*^9, 
   3.6190259789728584`*^9}, {3.619026875781839*^9, 3.619026901622097*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res1$1$1", "[", 
  RowBox[{"isConvergedQ", "[", "]"}], "]"}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.619193892157586*^9, 3.619195321282586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "polys1$1$1", "]"}]], "Input",
 CellChangeTimes->{{3.619193852537586*^9, 3.6191938676675863`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.619193868197586*^9, 3.619195321302586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "//", "ExpandAll"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.618752950506159*^9, 3.6187529617861586`*^9}, {
  3.6187615877422204`*^9, 3.6187615898722205`*^9}}],

Cell[BoxData[
 TagBox["polys1$1$1",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6187610086502204`*^9, 3.6187611160442204`*^9, 3.6187615907722206`*^9, 
   3.6187719697603035`*^9, 3.6187721223263035`*^9, 3.6187723064213033`*^9, 
   3.6188245804896507`*^9, 3.618824612355651*^9, 3.6188247567856507`*^9, 
   3.618825559577651*^9, 3.618825731888651*^9, 3.6188258720156507`*^9, 
   3.6188260355036507`*^9, 3.6188261368666506`*^9, {3.618828148536682*^9, 
   3.6188281693206825`*^9}, 3.6188282145646825`*^9, 3.618828536581682*^9, 
   3.6188289262706823`*^9, 3.6188292550756826`*^9, 3.6188293659548683`*^9, 
   3.6188295250652804`*^9, 3.6188296055634775`*^9, 3.618830228275692*^9, 
   3.618836035353727*^9, 3.618836086747727*^9, 3.6188365581387267`*^9, 
   3.618837065775727*^9, 3.6188391460337343`*^9, 3.6188391889897346`*^9, 
   3.6188432682987347`*^9, 3.6188435245957346`*^9, 3.6188436666007347`*^9, 
   3.6188438041267347`*^9, 3.6188440164617343`*^9, 3.6188445048147345`*^9, 
   3.6188445479807343`*^9, {3.6188449265767345`*^9, 3.6188449638037343`*^9}, 
   3.6188461860857344`*^9, 3.6188464771917343`*^9, 3.6188545089737444`*^9, 
   3.618854731314744*^9, 3.6188574995037823`*^9, 3.618857644083782*^9, 
   3.6188581258014297`*^9, 3.618858613200243*^9, 3.6188589196868114`*^9, 
   3.6188591689936*^9, 3.619022424339882*^9, 3.6190243329742875`*^9, 
   3.619024438076339*^9, 3.6190246799987698`*^9, 3.6190251301332912`*^9, 
   3.619025256717562*^9, 3.6190258592236476`*^9, 3.6190260226163015`*^9, 
   3.61902628492393*^9, 3.619195321452586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res1$1$1", "[", 
  RowBox[{"isConvergedQ", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.618824679429651*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.618824680119651*^9, 3.618824756815651*^9, 3.6188255595976505`*^9, 
   3.618825731928651*^9, 3.6188258720356507`*^9, 3.618826035553651*^9, 
   3.618826136926651*^9, {3.618828148576682*^9, 3.6188281693406825`*^9}, 
   3.6188282146046824`*^9, 3.618828536621682*^9, 3.6188289263206825`*^9, 
   3.6188292551056824`*^9, 3.6188293659748683`*^9, 3.6188295251252794`*^9, 
   3.6188296056034765`*^9, 3.618830228325692*^9, 3.618836035953727*^9, 
   3.618836086907727*^9, 3.6188365583187265`*^9, 3.618837066015727*^9, 
   3.6188391465137343`*^9, 3.6188391892497344`*^9, 3.6188432686187344`*^9, 
   3.6188435248957343`*^9, 3.6188436668807344`*^9, 3.6188438044267344`*^9, 
   3.6188440169017344`*^9, 3.6188445050647345`*^9, 3.618844548160734*^9, {
   3.618844926707734*^9, 3.6188449639537344`*^9}, 3.6188461862557344`*^9, 
   3.6188464774117346`*^9, 3.6188545091137443`*^9, 3.618854731654744*^9, 
   3.618857500033782*^9, 3.618857644613782*^9, 3.618858125841429*^9, 
   3.6188586132602425`*^9, 3.6188589197268114`*^9, 3.6188591690036*^9, 
   3.6190224243698816`*^9, 3.6190244553265114`*^9, 3.6190246800187697`*^9, 
   3.6190247102890725`*^9, 3.619025130163292*^9, 3.6190252567475624`*^9, 
   3.619025859283648*^9, 3.6190260226363015`*^9, 3.6190262849439306`*^9, 
   3.6191953214725857`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fv", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618772904955303*^9, 3.618772938035303*^9}, {
  3.618772983969103*^9, 3.6187729878290644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "/@", " ", 
  RowBox[{"fv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6187729225053034`*^9, 3.618772927325303*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.618772928565303*^9, 3.618772994109001*^9, 3.618824580539651*^9, 
   3.618824613165651*^9, 3.618824757195651*^9, 3.6188255604376507`*^9, 
   3.618825732368651*^9, 3.618825872705651*^9, 3.6188260362036505`*^9, 
   3.6188261373266506`*^9, {3.6188281486666822`*^9, 3.6188281694506826`*^9}, 
   3.6188282149746823`*^9, 3.6188285370416822`*^9, 3.618828926680682*^9, 
   3.6188292559056826`*^9, 3.618829366304865*^9, 3.6188295255252757`*^9, 
   3.6188296059734735`*^9, 3.618830228785692*^9, 3.618836036923727*^9, 
   3.6188360872377267`*^9, 3.618836558728727*^9, 3.618837066395727*^9, 
   3.618839146903734*^9, 3.618839189719734*^9, 3.6188432691387343`*^9, 
   3.6188435253857346`*^9, 3.6188436673107347`*^9, 3.6188438048167343`*^9, 
   3.6188440175417347`*^9, 3.6188445052047343`*^9, 3.618844548620734*^9, {
   3.6188449270977345`*^9, 3.618844964063734*^9}, 3.6188461866757345`*^9, 
   3.6188464775017347`*^9, 3.618854509233744*^9, 3.618854732024744*^9, 
   3.6188575005637817`*^9, 3.618857645093782*^9, 3.6188581262214217`*^9, 
   3.6188586136302385`*^9, 3.6188589200768113`*^9, 3.6188591694236083`*^9, 
   3.6190224251698895`*^9, 3.619024680348773*^9, 3.6190251304032946`*^9, 
   3.619025257197567*^9, 3.6190258596736517`*^9, 3.6190260228663034`*^9, 
   3.6190262853239346`*^9, 3.619195321782586*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["barrier", "Section",
 CellChangeTimes->{{3.6190245553615136`*^9, 3.6190245565615253`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polys1$1$1", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "-", 
   RowBox[{"prePoly", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.619026307124152*^9, 3.6190263318553996`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.31573069756516603`"}], "+", 
  RowBox[{"0.2866590455590083`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.15751992669400783`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}], 
  "-", 
  RowBox[{"0.03810087526758404`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.5088687090690225`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "-", 
  RowBox[{"0.1324024463220162`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "-", 
  RowBox[{"0.05663025533598329`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "-", 
  RowBox[{"0.04354443073669398`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6190263162652435`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"prePoly", "=", 
   RowBox[{"polys1$1$1", "//", "ExpandAll"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618752950506159*^9, 3.6187529617861586`*^9}, {
  3.6187615877422204`*^9, 3.6187615898722205`*^9}, {3.619025530767327*^9, 
  3.6190255461714864`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"theSys", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheSystem", "[", "]"}], "]"}]}], ";", 
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theResWeights", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theBasis", "[", 
   RowBox[{"setAllWeights", "[", "theResWeights", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valDrv", "=", 
   RowBox[{"theSys", "[", 
    RowBox[{"updateValDrv", "[", "theBasis", "]"}], "]"}]}], ";", 
  RowBox[{"fVec", "=", 
   RowBox[{
    RowBox[{"valDrv", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fVec", "//", "Chop"}]}], "Input",
 CellChangeTimes->{{3.6182538073343287`*^9, 3.618253827974329*^9}, {
  3.6182538589143286`*^9, 3.6182538597343287`*^9}, {3.6182539171363287`*^9, 
  3.618253957736329*^9}, {3.6182539925063286`*^9, 3.618254002416329*^9}, {
  3.6182540648363285`*^9, 3.6182541455980215`*^9}, {3.618306819017769*^9, 
  3.618306820857806*^9}, {3.6183069070795307`*^9, 3.6183069146596823`*^9}, {
  3.6183070298419857`*^9, 3.6183070428722463`*^9}, {3.6183070817230234`*^9, 
  3.6183072042654743`*^9}, {3.618307234616081*^9, 3.618307347318335*^9}, {
  3.618307422109831*^9, 3.6183074230598497`*^9}, {3.618307524621881*^9, 
  3.6183075507424035`*^9}, {3.618502070648615*^9, 3.618502073748646*^9}, {
  3.618829823883297*^9, 3.6188298259832754`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "6.829575334085791`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "6.829575308064939`*^-9"}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "6.8295753496983025`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "6.829575290717704`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "6.829575367045537`*^-9"}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6187610087902203`*^9, 3.6187611161542206`*^9, 3.618771969860303*^9, 
   3.618772306871303*^9, 3.618824580629651*^9, 3.618824614355651*^9, 
   3.618824757685651*^9, 3.6188255619176507`*^9, 3.618825732888651*^9, 
   3.618825873855651*^9, 3.618826037343651*^9, 3.6188261378266506`*^9, {
   3.6188281488366823`*^9, 3.6188281696106825`*^9}, 3.6188282154346824`*^9, 
   3.618828537491682*^9, 3.6188289270706825`*^9, 3.6188292570456824`*^9, 
   3.6188293666648617`*^9, 3.6188295261152697`*^9, 3.6188296064734683`*^9, 
   3.618829826473271*^9, 3.618830229275692*^9, 3.618836037563727*^9, 
   3.6188360875077267`*^9, 3.618836559168727*^9, 3.618837066905727*^9, 
   3.618839147403734*^9, 3.6188391901697345`*^9, 3.618843269648734*^9, 
   3.6188435258157344`*^9, 3.618843667780734*^9, 3.618843805436734*^9, 
   3.618844018021734*^9, 3.6188445053647346`*^9, 3.6188445490207343`*^9, {
   3.6188449275107346`*^9, 3.6188449642137346`*^9}, 3.618846187115734*^9, 
   3.6188464776617346`*^9, 3.6188467074127345`*^9, {3.6188467466327343`*^9, 
   3.6188467709527345`*^9}, 3.618846820936734*^9, 3.618846906167734*^9, 
   3.6188474288507347`*^9, 3.6188474981507344`*^9, 3.6188475451707344`*^9, 
   3.6188476226317344`*^9, 3.6188484783297405`*^9, 3.6188485436697407`*^9, 
   3.6188545093937445`*^9, 3.6188547324547443`*^9, 3.618857500953782*^9, 
   3.618857645533782*^9, 3.618858126531416*^9, 3.618858613980235*^9, 
   3.6188589203968115`*^9, 3.6188591697836156`*^9, 3.6190224256698947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "//", "Expand"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185838437106133`*^9, 3.6185838680148635`*^9}, {
   3.618584140273612*^9, 3.618584142573635*^9}, 3.6185966428697147`*^9, {
   3.618596849543801*^9, 3.618596851527829*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.17823258043525123`"}], "+", 
       RowBox[{"0.5124869772559646`", " ", "qq"}], "+", 
       RowBox[{"0.7378057258051319`", " ", "ru"}], "-", 
       RowBox[{"0.2859552328439653`", " ", "qq", " ", "ru"}], "+", 
       RowBox[{"1.4621160191067417`", " ", "uu$Shock"}], "-", 
       RowBox[{"1.003019061033961`", " ", "qq", " ", "uu$Shock"}], "-", 
       RowBox[{"1.2258801263702555`", " ", "ru", " ", "uu$Shock"}], "-", 
       RowBox[{
       "1.3567609893942219`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5`", " ", "ru"}], "+", 
       RowBox[{"1.`", " ", "uu$Shock"}]}]},
     {
      RowBox[{"0.07079005003824226`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.1198804216572763`", " ", "qq"}], "+", 
       RowBox[{"0.11801951425866859`", " ", "ru"}], "+", 
       RowBox[{"0.12366158298956541`", " ", "qq", " ", "ru"}], "+", 
       RowBox[{"0.2765617461186312`", " ", "uu$Shock"}], "+", 
       RowBox[{"0.6527723188697512`", " ", "qq", " ", "uu$Shock"}], "+", 
       RowBox[{"0.6426393144892378`", " ", "ru", " ", "uu$Shock"}], "+", 
       RowBox[{
       "0.6733614811097308`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"1.3567609893942219`", " ", 
              RowBox[{"(", 
               RowBox[{"0.1461072230000951`", "\[VeryThinSpace]", "-", 
                RowBox[{"0.37772826699917433`", " ", "qq"}], "-", 
                RowBox[{"0.543799336487817`", " ", "ru"}], "+", 
                RowBox[{"0.21076315952424385`", " ", "qq", " ", "ru"}], "-", 
                RowBox[{"1.0776518712846834`", " ", "uu$Shock"}], "+", 
                RowBox[{"0.7392746908811091`", " ", "qq", " ", "uu$Shock"}], 
                "+", 
                RowBox[{"0.903534326202581`", " ", "ru", " ", "uu$Shock"}], 
                "+", 
                RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
               ")"}]}], 
             RowBox[{
              RowBox[{
               RowBox[{"0.5124869772559646`", " ", "qq"}], "+", 
               RowBox[{"0.7378057258051319`", " ", "ru"}], "-", 
               RowBox[{"0.2859552328439653`", " ", "qq", " ", "ru"}], "+", 
               RowBox[{"1.4621160191067417`", " ", "uu$Shock"}], "-", 
               RowBox[{"1.003019061033961`", " ", "qq", " ", "uu$Shock"}], 
               "-", 
               RowBox[{"1.2258801263702555`", " ", "ru", " ", "uu$Shock"}], 
               "-", 
               RowBox[{
               "1.3567609893942219`", " ", "qq", " ", "ru", " ", 
                "uu$Shock"}]}], "<", "0.19823258043525122`"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{
              RowBox[{"-", "0.920400191170994`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "0.31461798857584755`"}], "+", 
                RowBox[{"1.782796994525743`", " ", "lookey"}], "+", 
                RowBox[{"0.285357287380399`", " ", "qq"}], "-", 
                RowBox[{"0.5584898956457433`", " ", "lookey", " ", "qq"}], 
                "+", 
                RowBox[{"0.8393109497936159`", " ", "ru"}], "-", 
                RowBox[{"1.3386174571012959`", " ", "lookey", " ", "ru"}], 
                "-", 
                RowBox[{"0.23883360898308942`", " ", "qq", " ", "ru"}], "-", 
                RowBox[{
                "0.06610452778635188`", " ", "lookey", " ", "qq", " ", "ru"}],
                 "-", 
                RowBox[{"0.11461286630535972`", " ", 
                 SuperscriptBox["ru", "2"]}], "-", 
                RowBox[{"0.543799336487817`", " ", "lookey", " ", 
                 SuperscriptBox["ru", "2"]}], "+", 
                RowBox[{"0.04442110941264185`", " ", "qq", " ", 
                 SuperscriptBox["ru", "2"]}], "+", 
                RowBox[{"0.21076315952424385`", " ", "lookey", " ", "qq", " ", 
                 SuperscriptBox["ru", "2"]}], "+", 
                RowBox[{"1.6711075232574173`", " ", "uu$Shock"}], "-", 
                RowBox[{
                "2.662528076711926`", " ", "lookey", " ", "uu$Shock"}], "-", 
                RowBox[{"0.7177123016344695`", " ", "qq", " ", "uu$Shock"}], 
                "+", 
                RowBox[{
                "0.3375976031563699`", " ", "lookey", " ", "qq", " ", 
                 "uu$Shock"}], "-", 
                RowBox[{"1.138935956291428`", " ", "ru", " ", "uu$Shock"}], 
                "-", 
                RowBox[{
                "0.8293304248525489`", " ", "lookey", " ", "ru", " ", 
                 "uu$Shock"}], "-", 
                RowBox[{
                "0.5108024455666537`", " ", "qq", " ", "ru", " ", 
                 "uu$Shock"}], "+", 
                RowBox[{
                "2.6393503916918144`", " ", "lookey", " ", "qq", " ", "ru", 
                 " ", "uu$Shock"}], "+", 
                RowBox[{"0.19043174932906473`", " ", 
                 SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
                RowBox[{"0.9035343262025811`", " ", "lookey", " ", 
                 SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
                RowBox[{"0.21076315952424382`", " ", "qq", " ", 
                 SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
                RowBox[{"1.`", " ", "lookey", " ", "qq", " ", 
                 SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
                RowBox[{"0.4542586265183472`", " ", 
                 SuperscriptBox["uu$Shock", "2"]}], "-", 
                RowBox[{"2.155303742569367`", " ", "lookey", " ", 
                 SuperscriptBox["uu$Shock", "2"]}], "+", 
                RowBox[{"0.3116237392128225`", " ", "qq", " ", 
                 SuperscriptBox["uu$Shock", "2"]}], "+", 
                RowBox[{"1.4785493817622182`", " ", "lookey", " ", "qq", " ", 
                 SuperscriptBox["uu$Shock", "2"]}], "+", 
                RowBox[{"0.38086349865812946`", " ", "ru", " ", 
                 SuperscriptBox["uu$Shock", "2"]}], "+", 
                RowBox[{"1.8070686524051622`", " ", "lookey", " ", "ru", " ", 
                 SuperscriptBox["uu$Shock", "2"]}], "+", 
                RowBox[{"0.42152631904848764`", " ", "qq", " ", "ru", " ", 
                 SuperscriptBox["uu$Shock", "2"]}], "+", 
                RowBox[{"2.`", " ", "lookey", " ", "qq", " ", "ru", " ", 
                 SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.09134187639579248`"}], "+", 
               RowBox[{"1.6408866945805674`", " ", "lookey"}], "+", 
               RowBox[{"0.26264290185695555`", " ", "qq"}], "-", 
               RowBox[{"0.5140342067194106`", " ", "lookey", " ", "qq"}], "+", 
               RowBox[{"0.7725019586419526`", " ", "ru"}], "-", 
               RowBox[{"1.2320637634208627`", " ", "lookey", " ", "ru"}], "-", 
               RowBox[{"0.21982249936609394`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{
               "0.060842620011826554`", " ", "lookey", " ", "qq", " ", "ru"}],
                "-", 
               RowBox[{"0.10548970405810866`", " ", 
                SuperscriptBox["ru", "2"]}], "-", 
               RowBox[{"0.5005130132620464`", " ", "lookey", " ", 
                SuperscriptBox["ru", "2"]}], "+", 
               RowBox[{"0.0408851975954232`", " ", "qq", " ", 
                SuperscriptBox["ru", "2"]}], "+", 
               RowBox[{"0.19398645231791675`", " ", "lookey", " ", "qq", " ", 
                SuperscriptBox["ru", "2"]}], "+", 
               RowBox[{"1.5380876838734132`", " ", "uu$Shock"}], "-", 
               RowBox[{"2.450591350803796`", " ", "lookey", " ", "uu$Shock"}],
                "-", 
               RowBox[{"0.6605825396301399`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{
               "0.3107248984839922`", " ", "lookey", " ", "qq", " ", 
                "uu$Shock"}], "-", 
               RowBox[{"1.0482768719021494`", " ", "ru", " ", "uu$Shock"}], 
               "-", 
               RowBox[{
               "0.7633158815782077`", " ", "lookey", " ", "ru", " ", 
                "uu$Shock"}], "-", 
               RowBox[{
               "0.4701426685501593`", " ", "qq", " ", "ru", " ", "uu$Shock"}],
                "+", 
               RowBox[{
               "2.429258605080384`", " ", "lookey", " ", "qq", " ", "ru", " ",
                 "uu$Shock"}], "+", 
               RowBox[{"0.175273418487498`", " ", 
                SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
               RowBox[{"0.8316131665664109`", " ", "lookey", " ", 
                SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
               RowBox[{"0.19398645231791672`", " ", "qq", " ", 
                SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
               RowBox[{"0.920400191170994`", " ", "lookey", " ", "qq", " ", 
                SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
               RowBox[{"0.41809972668855994`", " ", 
                SuperscriptBox["uu$Shock", "2"]}], "-", 
               RowBox[{"1.9837419766924043`", " ", "lookey", " ", 
                SuperscriptBox["uu$Shock", "2"]}], "+", 
               RowBox[{"0.2868185491449018`", " ", "qq", " ", 
                SuperscriptBox["uu$Shock", "2"]}], "+", 
               RowBox[{"1.3608571336297006`", " ", "lookey", " ", "qq", " ", 
                SuperscriptBox["uu$Shock", "2"]}], "+", 
               RowBox[{"0.350546836974996`", " ", "ru", " ", 
                SuperscriptBox["uu$Shock", "2"]}], "+", 
               RowBox[{"1.6632263331328219`", " ", "lookey", " ", "ru", " ", 
                SuperscriptBox["uu$Shock", "2"]}], "+", 
               RowBox[{"0.38797290463583345`", " ", "qq", " ", "ru", " ", 
                SuperscriptBox["uu$Shock", "2"]}], "+", 
               RowBox[{
               "1.840800382341988`", " ", "lookey", " ", "qq", " ", "ru", " ", 
                SuperscriptBox["uu$Shock", "2"]}]}], "<", 
              "0.19823258043525122`"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6187610088102207`*^9, 3.61876111617422*^9, 3.6187719698803034`*^9, 
   3.6187723069213033`*^9, 3.6188245806496506`*^9, 3.618824614395651*^9, 
   3.618824757855651*^9, 3.618825562027651*^9, 3.618825732928651*^9, 
   3.6188258738856506`*^9, 3.618826037383651*^9, 3.6188261379566507`*^9, {
   3.6188281488766823`*^9, 3.618828169640682*^9}, 3.6188282154946823`*^9, 
   3.6188285376116824`*^9, 3.618828927140682*^9, 3.6188292570756826`*^9, 
   3.6188293667048607`*^9, 3.6188295262752686`*^9, 3.6188296066334667`*^9, 
   3.618830229445692*^9, 3.618836037633727*^9, 3.618836087577727*^9, 
   3.618836559338727*^9, 3.6188370670657268`*^9, 3.618839147483734*^9, 
   3.6188391903897343`*^9, 3.6188432697687345`*^9, 3.6188435260267344`*^9, 
   3.6188436680407343`*^9, 3.6188438055767345`*^9, 3.6188440181117344`*^9, 
   3.6188445054047346`*^9, 3.6188445491707344`*^9, {3.6188449276647344`*^9, 
   3.6188449642437344`*^9}, 3.6188461872757344`*^9, 3.6188464777017345`*^9, 
   3.618854509733744*^9, 3.6188547327847443`*^9, 3.618857501283782*^9, 
   3.618857645833782*^9, 3.618858126581414*^9, 3.6188586140402346`*^9, 
   3.6188589204368114`*^9, 3.6188591698136168`*^9, 3.6190224257198954`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polys1$1$1", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6188393707317343`*^9, 3.6188393820417347`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"1.3567609893942219`", " ", 
         RowBox[{"(", 
          RowBox[{"0.1461072230000951`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.37772826699917433`", " ", "qq"}], "-", 
           RowBox[{"0.543799336487817`", " ", "ru"}], "+", 
           RowBox[{"0.21076315952424385`", " ", "qq", " ", "ru"}], "-", 
           RowBox[{"1.0776518712846834`", " ", "uu$Shock"}], "+", 
           RowBox[{"0.7392746908811091`", " ", "qq", " ", "uu$Shock"}], "+", 
           RowBox[{"0.903534326202581`", " ", "ru", " ", "uu$Shock"}], "+", 
           RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"0.5124869772559646`", " ", "qq"}], "+", 
          RowBox[{"0.7378057258051319`", " ", "ru"}], "-", 
          RowBox[{"0.2859552328439653`", " ", "qq", " ", "ru"}], "+", 
          RowBox[{"1.4621160191067417`", " ", "uu$Shock"}], "-", 
          RowBox[{"1.003019061033961`", " ", "qq", " ", "uu$Shock"}], "-", 
          RowBox[{"1.2258801263702555`", " ", "ru", " ", "uu$Shock"}], "-", 
          RowBox[{
          "1.3567609893942219`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
         "<", "0.19823258043525122`"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6188393831357346`*^9, 3.6188432705587344`*^9, 3.6188435268267345`*^9, 
   3.618843668990734*^9, 3.6188438062867346`*^9, 3.6188440193017344`*^9, 
   3.6188445063347344`*^9, 3.618844549490734*^9, {3.618844927936734*^9, 
   3.618844964483734*^9}, 3.6188461875457344`*^9, 3.618846478021734*^9, 
   3.618854510033744*^9, 3.6188547329947443`*^9, 3.618857501723782*^9, 
   3.618857646303782*^9, 3.6188581266214137`*^9, 3.6188586140702343`*^9, 
   3.618858920506811*^9, 3.6188591698436165`*^9, 3.6190224257598953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"polys1$1$1", ",", "lookey"}], "]"}]], "Input",
 CellChangeTimes->{{3.6189292382373734`*^9, 3.618929270408374*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "4", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "6", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "8", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "10", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "12", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "14", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "16", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "18", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "20", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "22", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "24", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "26", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "28", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "30", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "1", ",", "2", ",", "32", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "2", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "4", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "6", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "8", ",", "2"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "10", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "12", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "14", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "16", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "18", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "20", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "22", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "24", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "26", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "28", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "30", ",", "2"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "1", ",", "1", ",", "2", ",", "1", ",", "32", ",", "2"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6189292711783733`*^9, 3.6190224257998962`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"polyFunc5", "=", " ", 
   RowBox[{"Function", " ", "@@", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}], ",", 
      RowBox[{"polys1$1$1", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6189372975504603`*^9, 3.61893737520446*^9}}],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{"-", "0.920400191170994`"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.31461798857584755`"}], "+", 
             RowBox[{"1.782796994525743`", " ", "lookey"}], "+", 
             RowBox[{"0.285357287380399`", " ", "qq"}], "-", 
             RowBox[{"0.5584898956457433`", " ", "lookey", " ", "qq"}], "+", 
             RowBox[{"0.8393109497936159`", " ", "ru"}], "-", 
             RowBox[{"1.3386174571012959`", " ", "lookey", " ", "ru"}], "-", 
             RowBox[{"0.23883360898308942`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{
             "0.06610452778635188`", " ", "lookey", " ", "qq", " ", "ru"}], 
             "-", 
             RowBox[{"0.11461286630535972`", " ", 
              SuperscriptBox["ru", "2"]}], "-", 
             RowBox[{"0.543799336487817`", " ", "lookey", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.04442110941264185`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.21076315952424385`", " ", "lookey", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"1.6711075232574173`", " ", "uu$Shock"}], "-", 
             RowBox[{"2.662528076711926`", " ", "lookey", " ", "uu$Shock"}], 
             "-", 
             RowBox[{"0.7177123016344695`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{
             "0.3375976031563699`", " ", "lookey", " ", "qq", " ", 
              "uu$Shock"}], "-", 
             RowBox[{"1.138935956291428`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "0.8293304248525489`", " ", "lookey", " ", "ru", " ", 
              "uu$Shock"}], "-", 
             RowBox[{
             "0.5108024455666537`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
             "+", 
             RowBox[{
             "2.6393503916918144`", " ", "lookey", " ", "qq", " ", "ru", " ", 
              "uu$Shock"}], "+", 
             RowBox[{"0.19043174932906473`", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.9035343262025811`", " ", "lookey", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.21076315952424382`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "lookey", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.4542586265183472`", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "-", 
             RowBox[{"2.155303742569367`", " ", "lookey", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.3116237392128225`", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"1.4785493817622182`", " ", "lookey", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.38086349865812946`", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"1.8070686524051622`", " ", "lookey", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.42152631904848764`", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"2.`", " ", "lookey", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.09134187639579248`"}], "+", 
            RowBox[{"1.6408866945805674`", " ", "lookey"}], "+", 
            RowBox[{"0.26264290185695555`", " ", "qq"}], "-", 
            RowBox[{"0.5140342067194106`", " ", "lookey", " ", "qq"}], "+", 
            RowBox[{"0.7725019586419526`", " ", "ru"}], "-", 
            RowBox[{"1.2320637634208627`", " ", "lookey", " ", "ru"}], "-", 
            RowBox[{"0.21982249936609394`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{
            "0.060842620011826554`", " ", "lookey", " ", "qq", " ", "ru"}], 
            "-", 
            RowBox[{"0.10548970405810866`", " ", 
             SuperscriptBox["ru", "2"]}], "-", 
            RowBox[{"0.5005130132620464`", " ", "lookey", " ", 
             SuperscriptBox["ru", "2"]}], "+", 
            RowBox[{"0.0408851975954232`", " ", "qq", " ", 
             SuperscriptBox["ru", "2"]}], "+", 
            RowBox[{"0.19398645231791675`", " ", "lookey", " ", "qq", " ", 
             SuperscriptBox["ru", "2"]}], "+", 
            RowBox[{"1.5380876838734132`", " ", "uu$Shock"}], "-", 
            RowBox[{"2.450591350803796`", " ", "lookey", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"0.6605825396301399`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{
            "0.3107248984839922`", " ", "lookey", " ", "qq", " ", 
             "uu$Shock"}], "-", 
            RowBox[{"1.0482768719021494`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "0.7633158815782077`", " ", "lookey", " ", "ru", " ", 
             "uu$Shock"}], "-", 
            RowBox[{
            "0.4701426685501593`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "+", 
            RowBox[{
            "2.429258605080384`", " ", "lookey", " ", "qq", " ", "ru", " ", 
             "uu$Shock"}], "+", 
            RowBox[{"0.175273418487498`", " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
            RowBox[{"0.8316131665664109`", " ", "lookey", " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
            RowBox[{"0.19398645231791672`", " ", "qq", " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
            RowBox[{"0.920400191170994`", " ", "lookey", " ", "qq", " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
            RowBox[{"0.41809972668855994`", " ", 
             SuperscriptBox["uu$Shock", "2"]}], "-", 
            RowBox[{"1.9837419766924043`", " ", "lookey", " ", 
             SuperscriptBox["uu$Shock", "2"]}], "+", 
            RowBox[{"0.2868185491449018`", " ", "qq", " ", 
             SuperscriptBox["uu$Shock", "2"]}], "+", 
            RowBox[{"1.3608571336297006`", " ", "lookey", " ", "qq", " ", 
             SuperscriptBox["uu$Shock", "2"]}], "+", 
            RowBox[{"0.350546836974996`", " ", "ru", " ", 
             SuperscriptBox["uu$Shock", "2"]}], "+", 
            RowBox[{"1.6632263331328219`", " ", "lookey", " ", "ru", " ", 
             SuperscriptBox["uu$Shock", "2"]}], "+", 
            RowBox[{"0.38797290463583345`", " ", "qq", " ", "ru", " ", 
             SuperscriptBox["uu$Shock", "2"]}], "+", 
            RowBox[{
            "1.840800382341988`", " ", "lookey", " ", "qq", " ", "ru", " ", 
             SuperscriptBox["uu$Shock", "2"]}]}], "<", 
           "0.19823258043525122`"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Output",
 CellChangeTimes->{3.6189374068684607`*^9, 3.6190224258498964`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polyFunc5", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.6189376981994605`*^9, 3.61893771149946*^9}}],

Cell["\<\
Function[{qq, ru, uu$Shock}, \
Piecewise[{{-0.920400191170994*(-0.31461798857584755 + \
1.782796994525743*lookey + 0.285357287380399*qq - \
0.5584898956457433*lookey*qq + 0.8393109497936159*ru - 
      1.3386174571012959*lookey*ru - 0.23883360898308942*qq*ru - \
0.06610452778635188*lookey*qq*ru - 0.11461286630535972*ru^2 - \
0.543799336487817*lookey*ru^2 + 0.04442110941264185*qq*ru^2 + 
      0.21076315952424385*lookey*qq*ru^2 + 1.6711075232574173*uu$Shock - \
2.662528076711926*lookey*uu$Shock - 0.7177123016344695*qq*uu$Shock + \
0.3375976031563699*lookey*qq*uu$Shock - 
      1.138935956291428*ru*uu$Shock - 0.8293304248525489*lookey*ru*uu$Shock - \
0.5108024455666537*qq*ru*uu$Shock + 2.6393503916918144*lookey*qq*ru*uu$Shock + 
      0.19043174932906473*ru^2*uu$Shock + \
0.9035343262025811*lookey*ru^2*uu$Shock + \
0.21076315952424382*qq*ru^2*uu$Shock + 1.*lookey*qq*ru^2*uu$Shock - \
0.4542586265183472*uu$Shock^2 - 
      2.155303742569367*lookey*uu$Shock^2 + 0.3116237392128225*qq*uu$Shock^2 \
+ 1.4785493817622182*lookey*qq*uu$Shock^2 + 0.38086349865812946*ru*uu$Shock^2 \
+ 
      1.8070686524051622*lookey*ru*uu$Shock^2 + \
0.42152631904848764*qq*ru*uu$Shock^2 + 2.*lookey*qq*ru*uu$Shock^2), 
    -0.09134187639579248 + 1.6408866945805674*lookey + 0.26264290185695555*qq \
- 0.5140342067194106*lookey*qq + 0.7725019586419526*ru - \
1.2320637634208627*lookey*ru - 
      0.21982249936609394*qq*ru - 0.060842620011826554*lookey*qq*ru - \
0.10548970405810866*ru^2 - 0.5005130132620464*lookey*ru^2 + \
0.0408851975954232*qq*ru^2 + 
      0.19398645231791675*lookey*qq*ru^2 + 1.5380876838734132*uu$Shock - \
2.450591350803796*lookey*uu$Shock - 0.6605825396301399*qq*uu$Shock + \
0.3107248984839922*lookey*qq*uu$Shock - 
      1.0482768719021494*ru*uu$Shock - 0.7633158815782077*lookey*ru*uu$Shock \
- 0.4701426685501593*qq*ru*uu$Shock + 2.429258605080384*lookey*qq*ru*uu$Shock \
+ 0.175273418487498*ru^2*uu$Shock + 
      0.8316131665664109*lookey*ru^2*uu$Shock + \
0.19398645231791672*qq*ru^2*uu$Shock + \
0.920400191170994*lookey*qq*ru^2*uu$Shock - 0.41809972668855994*uu$Shock^2 - 
      1.9837419766924043*lookey*uu$Shock^2 + 0.2868185491449018*qq*uu$Shock^2 \
+ 1.3608571336297006*lookey*qq*uu$Shock^2 + 0.350546836974996*ru*uu$Shock^2 + 
      1.6632263331328219*lookey*ru*uu$Shock^2 + \
0.38797290463583345*qq*ru*uu$Shock^2 + \
1.840800382341988*lookey*qq*ru*uu$Shock^2 < 0.19823258043525122}}, 0]]\
\>", "Output",
 CellChangeTimes->{3.6189377784314604`*^9, 3.619022425909897*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Expectation", "[", 
    RowBox[{
     RowBox[{"polyFunc5", "[", 
      RowBox[{"qq", ",", "ru", ",", 
       RowBox[{"-", ".1"}]}], "]"}], ",", 
     RowBox[{"lookey", "  ", "\[Distributed]", " ", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ru", ",", 
     RowBox[{"-", ".16"}], ",", ".16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"qq", ",", 
     RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.6189293573663735`*^9, {3.6189374170184603`*^9, 3.6189375495964603`*^9}, {
   3.6189375933514605`*^9, 3.61893764289546*^9}, {3.61893778500146*^9, 
   3.61893780081546*^9}, {3.6189378379853997`*^9, 3.61893786405914*^9}, 
   3.618939250056507*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnAlUzF/4/9tsRd8kUYmiLAmhZIlLtrJEkb0kJSLZEkrWiIokhSxRkjZE
KY0+GYVo36ZmppmmPWshEerv33yee/+/+/t+z9/5nvM953Xu+fTMe+4889z3
3OfRdXS3cZaTkZEx6yEjI//3/+EzLqtLDmUxulVLH3V1iZnE5OMJvIQm5JCt
dqw+8DnmayvefY5ubUSLbgznlcx5hrlh2Fmr8CmNqPShVrzQ5QnmI79synns
3YDsu5/zEPOFzbscvr6oR0Xd6+9iHuj9ZMDqvvUot5uHYf47zqRWbFuHZLr/
nTQDHuT5Pj8wohZVS9cj4IvEFeUOH2qQQPp8zA1r/3SsmVaDNkvjwdzkxLoZ
+09LUIU0fsw3M5/CUsurkZX09WKeGvZURWdUNXKU6oO562DvxWtbRYjVE/P7
074kcEKrgDNb9j24kuImYPwnxQY+EDRinYG/GTlCtUKX6Ax87nKRre62Bqwz
8M+JgjUBD+uxzsALzLW0NH7VYZ2BNyhdv/Zqfh3WGfgkxU1VYRdqsc7Ak2e6
VJ0R1WCdgbtG37923ZDoDHz1vOlaJV4SrDPwA4N6rTXIrcY64ziHqa+K1CY6
47/7NF/Pu1qEdQY+JaJNq+001hPzES0RFx5OFGKdY5UGHHUTlDPO94vczvQh
OgM381hv3MemAesMfE2fSXZ3w+uxzsCfbLdt2txQh3UGvu5adtmsSURn4LPD
j+tPPVKLdQbuujWAtyyvBusMvEK+9r3vEKIz8AC3U478HRKsM/Bjd/bPWJpR
jXUGzol7tF+kQnQG7iHjNXpIjgjrDPzH/NGjU/dUYZ2BK4x2/xA0FOuJ+ZXo
ZR7RuXys86fbHlv0LIsZc8OfSx1NG7DOwBNfXFw1/Xg91hm4G9fXaVx+HdYZ
+JHRBZ4ztIjOwCVt7kFO22qxzsAvG2xNjEmtwToDv/XySVGvPkRn4L9z7DuO
rZNgnYHHGduNHpRQjXXGvOej9a9kiM7A/xzJHK0fJ8I6A7d8nhPVuqoK6wx8
RtGxsd8UhFhn4EX3mziGyVhPzPvada4Jd6nEOjt37/O3zNB7OuNnONdjnYHr
qOYe2J5Uh3UGfsyrcvsjGaIz8AX1Fr0GLK/FOgN3Xaa5+GxEDdYZeGvaUlON
LxKsM3CeXu1bZp4E64zjCeL39rlcjXUGHtbuIrzLF2OdgccViNqPnxJhnYH7
xmg4BRpXYZ3x848P1n1VJ8A6Az+8QTDeKIyPdQZ+w9Qx8PVirCfmRwckmAXJ
VVD7mct06Fsoq12so/YzlwlyUAi/VlNL7WcuE2o8bu+0ybXUfuYyfW9zQ9+d
rKH2M5f5EpPV4wFPQu1nLrPIcnLmmbESaj9zGZUTyi89j1ZT+5nL+MfHj/8W
L6b2M5cp8x24VXe9iNrPXEYmePVUT6Uqaj9zGaWiPTfbngmo/cxlvpu7XL+2
h0/tZy7DNBpP2jGmktrPXMaVEdg51fCo/cxlvuWs1/G9Xk7pnMTwbrt/+pBZ
S+mcxMjfN3uWp0rrnMTEfzx6iHGuoXROYsrszUZy0ySUzkmMl5x7ZpkyrXMS
c6tisGWHUzWlcxITwN17dOMBMaVzElM0NWrxh9EiSuckZqDai69XBUJK5yTG
dmXhge1BAkrnJCb451u+3UI+pXMSkyeforFHppLS+a8Oe8+ZxKTzKJ2TGNOF
tuNlDpZTOicx244qKhyaWoZ1lmH/PRoWlp/9qQbrDHzfn33iTvMarDNwbnTp
sfmXJVhn4Ne1UpKvfKrGOgPvsUHD69f8aqwz8B8FvyPLzMRYZ+AdPm/2FXyu
wjoD18wO31oXJcQ6A7e9veuI2gYB1hl4rLpl2saBfKwzcI3h+uovCyuwzsCj
shRCF57jYZ2BW3Q2Tq1bWo51Bt6zIL8z/B+sJ+biKWmNO0tK6P2Mzl/LSLwx
pIbez6hhcYKs0V4JvZ8Rb+PoM2/fVNP7GTlXTJi/e0Q1vZ/RkO2nt5t3iOj9
jO5+epWccr+K3s/IdYbuNuQipPcz2mx90VeoI6D3MwozGqp0TlhJ72fUWfH8
54qrFfR+RhGLfKzHr+PR+xkd8l2hqj2knN7P6OyZOWY61aX0fkYlqywKTKNL
6P2MbD66vN28s5jOz2iHRsM5z0USOj+j1VfrR2yKrKbzM6qc+EMnskNM52e0
3mDFvQsPRHR+RhOGCqsDt1bR+Rmt63fxVdhwIZ2fEa/d0+6+iE/nZxRfdfZ2
6bVKOj8jXsbb0F52FXR+RivDp0+3GMaj8zMatZcXEFpbRudnZL3g9rkv90rp
/Izy1MLRhj0ldH5GEaLnN0vMiun8jF5Hqt9f06eIrjeQRWg/9+UHqul6AwUX
zQjQuyum6w0kH3Vzwv2NIrreQE2RC17P1qyi6w2EioxWVZYL6HoDKRraVx64
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
f58Rcw9ot2iLKf/tKkeL8t902PhHDmw/cD+Z+G+KbPw9QxtPf3pJ/DcfNv6W
lfpaURXEf2tn4x+ycWtq8TvivyWx8XOeb633/kP8t51s/ApnRaPuqBCfczwb
/7jsYz2s9IjPqSHlyOHUovTbt4n/tkH6HIROp9tXjCY635D+XfT6zkfB7PvE
f5NI40ShTRyPKhOi82Lp60Kn4hVF9gfFWGde9/pgVPZu/sBdp4nP+aybH0cW
V2rVWy8Rn7OJ9bWcKP9NjY1/dG1e+WUT4r+tZuO39R+nlbWoEut8nY1ff7Vr
hYNDBda5no3/zQqzkN37eVhnWzZ+r3PrS38ElGOdBWz829WODv0ZSXzOFDb+
wi+bfuxLJz7nM+k+Rzeezi7zKyb+2xDp5wLFOb82zFlH/Ldn0s8RWm+e9GDv
S+K/2Us/d8in8bpJKo/4b7LSzyn69kppp2NzFdY5Svq5Rt9aHon3/RJinRdI
8wB65G6l8qUf8Tnfs75WAuW/cdj4DR5GGR9PJv6bJht/9NG9iVfyif/GYeNf
u/b+Je0m4r85sPEftFDZpSJHfE55Nv7p661e7BtCfM47bPyFN3QHLjUlPud8
Nv69Oubvw22Iz2kszdtI9GnK551yROce0jyPxvvFtu3VEGOdy6XfC2jEtDP3
nMeLsM7R0u8RlP/n+ZHkuVVYZ0/p9w5yrO3b6byW+JyW0u8ppN6uG3vQnfic
mtLvNTRkQVqfr77E53Rkfa3vlP82mY1/zBGv4O0mxH9TYONv80ib425TjnUu
Y+MPXP/Nhu9ehnW+y8Y/ambd4vuBpVjng2z8P0fNSWqJK8E6Q/wmY14o3XqD
/UykwcavZjVcxG3GvhxTLq1DkOmCdaqxTsR/y5DWLaj3/KwLtoeJ/xYtrXPQ
hwkOt1eHCrHO2tK6CA1Va8hJui8g/pu0jkL5nf3ObcvhY50zpXUXMvlzfp9P
bSXW+YK0TkOnhujJf/tTgXX+AD4Y5b+VsfEbLLVpWZlM/LdnbPzzt3eVzisn
/hvEn2k3TSWsnfhvQ9n4yyemjrLSID5nCxv/k2+Tb+2YQXxOiD/8kZNcmx3x
OYPY+FO85IqajxKfM1haV6PkxAUL9mcR/+2QtA5H1bKicaYS4r85Sut2lDLS
NNyyk/hvi6R1PtppoKj2QIv4nJOl5wI0U/OfoW7TiM85RHqOQLbynbNOrCY+
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
PFk=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
05uC6gK1Y1NPDIfr89//AWtORjg=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{337.070981676542, 177.68108825368782`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {0.15723446154231388`, 
   0.7712210072401626}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.302977457591917, -0.10944117172764878`, 0.7268855099467699},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6189374426224604`*^9, 3.61893745519246*^9}, 
   3.61893751354646*^9, {3.61893776388146*^9, 3.6189377753914604`*^9}, 
   3.61893879162247*^9, 3.618940186870507*^9, 3.6190234351823072`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InterpolatingFunction"}]], "Input",
 CellChangeTimes->{{3.6189391873545065`*^9, 3.6189391964045067`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"InterpolatingFunction\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"domain\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"table\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\) represents an approximate function whose \
values are found by interpolation. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/InterpolatingFunction"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.619023436832324*^9},
 CellTags->"Info3619009036-8586872"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
   "lucaSubs"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6189378175754604`*^9, 3.6189378277854605`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ru", ",", 
     RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"qq", ",", 
     RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6189378282954607`*^9, 3.619023436942325*^9}]
}, Open  ]],

Cell[BoxData["|"], "Input",
 CellChangeTimes->{3.6189375117064605`*^9},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"curious", "=", 
   RowBox[{"ReplaceVariables", "[", 
    RowBox[{"lucaMod", ",", "polys1$1$1", ",", 
     RowBox[{"{", 
      RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6188582536078773`*^9, 3.618858302851342*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"constraints explicitly involving future state or non state \
not implemented yet: augment model with dummy for now\"\>"], "Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.6190234371723275`*^9}],

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.6190234371823273`*^9}],

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.6190234371923275`*^9}],

Cell[BoxData["\<\"need modification to actually compute expected value\"\>"], \
"Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.619023437632332*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"PiecewiseExpand", "/@", 
    RowBox[{"(", 
     RowBox[{"curious", "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
   3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
   3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
   3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
   3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
   3.6184252168401365`*^9, 3.6184252176101365`*^9}, 3.6185009454232564`*^9, {
   3.6185014575884275`*^9, 3.6185014761286125`*^9}, 3.6186567156561656`*^9, 
   3.618772648988303*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"doop", "=", 
   RowBox[{
    RowBox[{"huh", "//.", 
     RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//", 
    "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}, {
   3.618501731363187*^9, 3.618501732103194*^9}, {3.6185018414602976`*^9, 
   3.618501842520308*^9}, 3.618574516393429*^9, {3.6185750502587676`*^9, 
   3.6185750560088253`*^9}, {3.618584449409746*^9, 3.618584450629758*^9}, 
   3.6188580207355285`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6188290503686824`*^9, 3.6188290525286827`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], 
     RowBox[{"ru", "\[Rule]", "0.11313708498984762`"}], 
     RowBox[{"uu$Shock", "\[Rule]", "0.18364813916258638`"}]},
    {
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], 
     RowBox[{"ru", "\[Rule]", "0.11313708498984762`"}], 
     RowBox[{"uu$Shock", "\[Rule]", "0.18364813916258638`"}]},
    {
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.11313708498984759`"}]}], 
     RowBox[{"uu$Shock", "\[Rule]", "0.18364813916258638`"}]},
    {
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.11313708498984759`"}]}], 
     RowBox[{"uu$Shock", "\[Rule]", "0.18364813916258638`"}]},
    {
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], 
     RowBox[{"ru", "\[Rule]", "0.11313708498984762`"}], 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "0.18364813916258638`"}]}]},
    {
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], 
     RowBox[{"ru", "\[Rule]", "0.11313708498984762`"}], 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "0.18364813916258638`"}]}]},
    {
     RowBox[{"qq", "\[Rule]", "0.35355339059327373`"}], 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.11313708498984759`"}]}], 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "0.18364813916258638`"}]}]},
    {
     RowBox[{"qq", "\[Rule]", 
      RowBox[{"-", "0.35355339059327373`"}]}], 
     RowBox[{"ru", "\[Rule]", 
      RowBox[{"-", "0.11313708498984759`"}]}], 
     RowBox[{"uu$Shock", "\[Rule]", 
      RowBox[{"-", "0.18364813916258638`"}]}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6188290466486826`*^9, 3.6188290529086823`*^9}, 
   3.618829259595682*^9, 3.6188293697948303`*^9, 3.618829529025241*^9, 
   3.618829609493438*^9, 3.618830233265692*^9, 3.618836042843727*^9, 
   3.6188360886777267`*^9, 3.6188365620027266`*^9, 3.618837070005727*^9, 
   3.6188391484337344`*^9, 3.618839193179734*^9, 3.618843273358734*^9, 
   3.6188435299067345`*^9, 3.6188436721107345`*^9, 3.6188438093567343`*^9, 
   3.6188440246917343`*^9, 3.6188445067647343`*^9, 3.6188445520907345`*^9, {
   3.618844930398734*^9, 3.6188449647637343`*^9}, 3.618846190245734*^9, 
   3.6188464783617344`*^9, 3.618854514953744*^9, 3.618854735464744*^9, 
   3.618857504757782*^9, 3.6188576491037817`*^9, 3.6188581266714125`*^9, 
   3.618858382264549*^9, 3.61885861449023*^9, 3.6188589209368114`*^9, 
   3.6188591702136245`*^9, 3.6190234378223343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "//.", 
  "lucaSubs"}]], "Input",
 CellChangeTimes->{{3.6188296617169166`*^9, 3.6188296732468014`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"qq", ",", 
     RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"ru", ",", 
     RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.618829673756796*^9, 3.618830233305692*^9, 3.618836042883727*^9, 
   3.618836088727727*^9, 3.6188365620427265`*^9, 3.618837070045727*^9, 
   3.6188391484737344`*^9, 3.6188391932397346`*^9, 3.6188432734187346`*^9, 
   3.618843529936734*^9, 3.618843672160734*^9, 3.6188438093867345`*^9, 
   3.6188440247317343`*^9, 3.6188445067847347`*^9, 3.618844552120734*^9, {
   3.618844930417734*^9, 3.6188449648237343`*^9}, 3.6188461902957344`*^9, 
   3.618846478391734*^9, 3.6188545149737444`*^9, 3.6188547355047445`*^9, 
   3.618857504837782*^9, 3.618857649133782*^9, 3.618858126711412*^9, 
   3.6188583822845488`*^9, 3.6188586145302296`*^9, 3.6188589209768114`*^9, 
   3.6188591702436247`*^9, 3.6190234378523345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ha", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Expectation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"lookey", " ", "\[Distributed]", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], "&"}], " ", "/@", 
    RowBox[{"Flatten", "[", "doop", "]"}]}], "//", "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}, {
   3.6184998897426014`*^9, 3.618499890762612*^9}, 3.6184999218229227`*^9, {
   3.618500989557705*^9, 3.618501056952385*^9}, {3.618501772587605*^9, 
   3.6185017733976135`*^9}, {3.618501847770361*^9, 3.6185018597644873`*^9}, {
   3.6185021226231403`*^9, 3.6185021229131436`*^9}, {3.6185022051179714`*^9, 
   3.6185022222521467`*^9}, {3.618574876317028*^9, 3.618574877927044*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.686949452896119`*^-9", ",", 
   RowBox[{"-", "2.1426259419049955`*^-9"}], ",", "0", ",", "0", ",", "0", 
   ",", "0.0010531371240157835`", ",", "0.001053130294440406`", ",", "0", ",",
    "0", ",", "0", ",", "0.0002294990490006037`", ",", 
   "0.00022949221942526052`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.618772655608303*^9, 3.6188245812196507`*^9, 3.6188246146756506`*^9, 
   3.6188247583856506`*^9, 3.618825562287651*^9, 3.618825733148651*^9, 
   3.6188258740556507`*^9, 3.6188260377136507`*^9, 3.618826138356651*^9, {
   3.6188281491466827`*^9, 3.6188281698306828`*^9}, 3.6188282159646826`*^9, 
   3.6188285379316826`*^9, 3.6188289309506826`*^9, 3.6188292597456827`*^9, 
   3.618829370114827*^9, 3.6188295292352386`*^9, 3.618829609783435*^9, 
   3.618830233865692*^9, 3.618836043253727*^9, 3.618836088887727*^9, 
   3.6188365622527266`*^9, 3.618837070215727*^9, 3.618839086957734*^9, 
   3.6188391496837344`*^9, 3.6188392006897345`*^9, 3.6188432175507345`*^9, 
   3.6188432814887342`*^9, 3.6188435391667347`*^9, 3.6188436809607344`*^9, 
   3.6188438183767347`*^9, 3.6188440333717346`*^9, 3.6188445582207346`*^9, {
   3.6188449366317344`*^9, 3.6188449709937344`*^9}, 3.6188461978757343`*^9, 
   3.6188464818217344`*^9, 3.6188545160737443`*^9, 3.618854735714744*^9, 
   3.618857517347782*^9, 3.6188575694897823`*^9, 3.618857660573782*^9, 
   3.6188581267914104`*^9, 3.6188583934544373`*^9, 3.618858626080114*^9, 
   3.6188589337068114`*^9, 3.618859183557897*^9, 3.619023454722503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "ProjectionInterface`"}]], "Input",
 CellChangeTimes->{{3.6189193324682713`*^9, 3.6189193384682713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"making xx global\"\>"], "Print",
 CellChangeTimes->{3.618919345558271*^9, 3.6189194331319246`*^9, 
  3.6190234550225058`*^9}],

Cell[BoxData["\<\"beginning private defs\"\>"], "Print",
 CellChangeTimes->{3.618919345558271*^9, 3.6189194331319246`*^9, 
  3.619023455032506*^9}],

Cell[BoxData["\<\"why not numbers?\"\>"], "Print",
 CellChangeTimes->{3.618919345558271*^9, 3.6189194331319246`*^9, 
  3.619023455082507*^9}],

Cell[BoxData["\<\"why eval of shock t+1?\"\>"], "Print",
 CellChangeTimes->{3.618919345558271*^9, 3.6189194331319246`*^9, 
  3.6190234553625097`*^9}],

Cell[BoxData["\<\"done reading ProjectionInterface\"\>"], "Print",
 CellChangeTimes->{3.618919345558271*^9, 3.6189194331319246`*^9, 
  3.61902345542251*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dubious", "=", 
   RowBox[{"CreateRHSPolynomials", "[", 
    RowBox[{"lucaMod", ",", "polys1$1$1", ",", 
     RowBox[{"{", 
      RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6188582536078773`*^9, 3.618858302851342*^9}, {
  3.6189194698355584`*^9, 3.6189194852454042`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"constraints explicitly involving future state or non state \
not implemented yet: augment model with dummy for now\"\>"], "Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.618919486455392*^9, 3.6190234554425106`*^9}],

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.618919486455392*^9, 3.6190234554525104`*^9}],

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.618919486455392*^9, 3.61902345546251*^9}],

Cell[BoxData["\<\"need modification to actually compute expected value\"\>"], \
"Print",
 CellChangeTimes->{3.6188583034413366`*^9, 3.618858382044551*^9, 
  3.6188586141702332`*^9, 3.6188589205668116`*^9, 3.618859169963619*^9, 
  3.618919486455392*^9, 3.6190234554725103`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dubious", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618919493765319*^9, 3.618919497919278*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "0.26774226536389173`"}], " ", "qq"}], "-", 
  RowBox[{"0.3086481523403434`", " ", "ru"}], "-", 
  RowBox[{"0.6172963046806865`", " ", "uu$Shock"}], "+", 
  RowBox[{"0.5354845307277833`", " ", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"1.3567609893942219`", " ", 
            RowBox[{"(", 
             RowBox[{"0.1461072230000951`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.37772826699917433`", " ", "qq"}], "-", 
              RowBox[{"0.543799336487817`", " ", "ru"}], "+", 
              RowBox[{"0.21076315952424385`", " ", "qq", " ", "ru"}], "-", 
              RowBox[{"1.0776518712846834`", " ", "uu$Shock"}], "+", 
              RowBox[{"0.7392746908811091`", " ", "qq", " ", "uu$Shock"}], 
              "+", 
              RowBox[{"0.903534326202581`", " ", "ru", " ", "uu$Shock"}], "+", 
              RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
             ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"0.5124869772559646`", " ", "qq"}], "+", 
             RowBox[{"0.7378057258051319`", " ", "ru"}], "-", 
             RowBox[{"0.2859552328439653`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"1.4621160191067417`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.003019061033961`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"1.2258801263702555`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "1.3567609893942219`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}],
             "<", "0.19823258043525122`"}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ")"}]}], "+", 
  RowBox[{"0.14193812291113342`", " ", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "0.920400191170994`"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.31461798857584755`"}], "+", 
              RowBox[{"1.782796994525743`", " ", "lookey"}], "+", 
              RowBox[{"0.285357287380399`", " ", "qq"}], "-", 
              RowBox[{"0.5584898956457433`", " ", "lookey", " ", "qq"}], "+", 
              RowBox[{"0.8393109497936159`", " ", "ru"}], "-", 
              RowBox[{"1.3386174571012959`", " ", "lookey", " ", "ru"}], "-", 
              RowBox[{"0.23883360898308942`", " ", "qq", " ", "ru"}], "-", 
              RowBox[{
              "0.06610452778635188`", " ", "lookey", " ", "qq", " ", "ru"}], 
              "-", 
              RowBox[{"0.11461286630535972`", " ", 
               SuperscriptBox["ru", "2"]}], "-", 
              RowBox[{"0.543799336487817`", " ", "lookey", " ", 
               SuperscriptBox["ru", "2"]}], "+", 
              RowBox[{"0.04442110941264185`", " ", "qq", " ", 
               SuperscriptBox["ru", "2"]}], "+", 
              RowBox[{"0.21076315952424385`", " ", "lookey", " ", "qq", " ", 
               SuperscriptBox["ru", "2"]}], "+", 
              RowBox[{"1.6711075232574173`", " ", "uu$Shock"}], "-", 
              RowBox[{"2.662528076711926`", " ", "lookey", " ", "uu$Shock"}], 
              "-", 
              RowBox[{"0.7177123016344695`", " ", "qq", " ", "uu$Shock"}], 
              "+", 
              RowBox[{
              "0.3375976031563699`", " ", "lookey", " ", "qq", " ", 
               "uu$Shock"}], "-", 
              RowBox[{"1.138935956291428`", " ", "ru", " ", "uu$Shock"}], "-", 
              RowBox[{
              "0.8293304248525489`", " ", "lookey", " ", "ru", " ", 
               "uu$Shock"}], "-", 
              RowBox[{
              "0.5108024455666537`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
              "+", 
              RowBox[{
              "2.6393503916918144`", " ", "lookey", " ", "qq", " ", "ru", " ",
                "uu$Shock"}], "+", 
              RowBox[{"0.19043174932906473`", " ", 
               SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
              RowBox[{"0.9035343262025811`", " ", "lookey", " ", 
               SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
              RowBox[{"0.21076315952424382`", " ", "qq", " ", 
               SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
              RowBox[{"1.`", " ", "lookey", " ", "qq", " ", 
               SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
              RowBox[{"0.4542586265183472`", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "-", 
              RowBox[{"2.155303742569367`", " ", "lookey", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "+", 
              RowBox[{"0.3116237392128225`", " ", "qq", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "+", 
              RowBox[{"1.4785493817622182`", " ", "lookey", " ", "qq", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "+", 
              RowBox[{"0.38086349865812946`", " ", "ru", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "+", 
              RowBox[{"1.8070686524051622`", " ", "lookey", " ", "ru", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "+", 
              RowBox[{"0.42152631904848764`", " ", "qq", " ", "ru", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "+", 
              RowBox[{"2.`", " ", "lookey", " ", "qq", " ", "ru", " ", 
               SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.09134187639579248`"}], "+", 
             RowBox[{"1.6408866945805674`", " ", "lookey"}], "+", 
             RowBox[{"0.26264290185695555`", " ", "qq"}], "-", 
             RowBox[{"0.5140342067194106`", " ", "lookey", " ", "qq"}], "+", 
             RowBox[{"0.7725019586419526`", " ", "ru"}], "-", 
             RowBox[{"1.2320637634208627`", " ", "lookey", " ", "ru"}], "-", 
             RowBox[{"0.21982249936609394`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{
             "0.060842620011826554`", " ", "lookey", " ", "qq", " ", "ru"}], 
             "-", 
             RowBox[{"0.10548970405810866`", " ", 
              SuperscriptBox["ru", "2"]}], "-", 
             RowBox[{"0.5005130132620464`", " ", "lookey", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.0408851975954232`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.19398645231791675`", " ", "lookey", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"1.5380876838734132`", " ", "uu$Shock"}], "-", 
             RowBox[{"2.450591350803796`", " ", "lookey", " ", "uu$Shock"}], 
             "-", 
             RowBox[{"0.6605825396301399`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{
             "0.3107248984839922`", " ", "lookey", " ", "qq", " ", 
              "uu$Shock"}], "-", 
             RowBox[{"1.0482768719021494`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "0.7633158815782077`", " ", "lookey", " ", "ru", " ", 
              "uu$Shock"}], "-", 
             RowBox[{
             "0.4701426685501593`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
             "+", 
             RowBox[{
             "2.429258605080384`", " ", "lookey", " ", "qq", " ", "ru", " ", 
              "uu$Shock"}], "+", 
             RowBox[{"0.175273418487498`", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.8316131665664109`", " ", "lookey", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.19398645231791672`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.920400191170994`", " ", "lookey", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.41809972668855994`", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "-", 
             RowBox[{"1.9837419766924043`", " ", "lookey", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.2868185491449018`", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"1.3608571336297006`", " ", "lookey", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.350546836974996`", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"1.6632263331328219`", " ", "lookey", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.38797290463583345`", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{
             "1.840800382341988`", " ", "lookey", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}]}], "<", 
            "0.19823258043525122`"}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ")"}]}]}]], "Output",
 CellChangeTimes->{3.61891949876927*^9, 3.619023455492511*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["do some low order plots", "Section",
 CellChangeTimes->{{3.6185022767966976`*^9, 3.6185022778567085`*^9}, {
  3.618594948368533*^9, 3.61859495408859*^9}}],

Cell[CellGroupData[{

Cell[BoxData["nonStateVar"], "Input",
 CellChangeTimes->{{3.618650291276863*^9, 3.618650295776863*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"rr\"\>", ",", "\<\"z2\"\>", ",", "\<\"z2exp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.61876102258022*^9, 3.61876162914622*^9, 
  3.6187720379343033`*^9, 3.618772138916303*^9, 3.618772323101303*^9, 
  3.6188246364256506`*^9, 3.618824772169651*^9, 3.6188282517586823`*^9, 
  3.618836137267727*^9, 3.6188371032197266`*^9, 3.6188391501337347`*^9, 
  3.618858400964362*^9, 3.618858635360021*^9, 3.6188589465708113`*^9, 
  3.61885919321809*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trouble", "=", 
  RowBox[{"Expectation", "[", 
   RowBox[{
    RowBox[{"dubious", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"lookey", " ", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618919644565813*^9, 3.618919669135567*^9}, {
  3.6189197457132745`*^9, 3.6189198144082747`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.618919647645782*^9, 3.6189196697955604`*^9}, 
   3.6189289175933733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Expectation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"dubious", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/.", 
         RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
        RowBox[{"lookey", " ", "\[Distributed]", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "]"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
   3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
   3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
   3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618428161337283*^9, 
   3.6184281636473064`*^9}, {3.6184289239089956`*^9, 3.618428929629053*^9}, {
   3.618494134656559*^9, 3.618494135156564*^9}, {3.61859576370079*^9, 
   3.618595780474964*^9}, 3.618596727244566*^9, {3.6186502699968634`*^9, 
   3.6186502705368633`*^9}, {3.6186503071068635`*^9, 
   3.6186503213268633`*^9}, {3.618760814572582*^9, 3.618760815152588*^9}, {
   3.6187610495502205`*^9, 3.6187610750442204`*^9}, 3.6187612851972203`*^9, 
   3.618836304359727*^9, {3.618836376953727*^9, 3.618836377453727*^9}, {
   3.618836682570727*^9, 3.6188366852007265`*^9}, {3.61891959782228*^9, 
   3.6189196390958676`*^9}, {3.6189198585142746`*^9, 
   3.6189198598842745`*^9}, {3.618928965467374*^9, 3.6189290006613736`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.618919603252226*^9, 3.6189196244860134`*^9}, 
   3.6189291869233737`*^9}]
}, Open  ]],

Cell[BoxData["|"], "Input",
 CellChangeTimes->{3.6189290222913733`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6187612813572206`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", 
         RowBox[{"-", "1.836481391625864`*^-8"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
   3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
   3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
   3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618428161337283*^9, 
   3.6184281636473064`*^9}, {3.6184289239089956`*^9, 3.618428929629053*^9}, {
   3.618494134656559*^9, 3.618494135156564*^9}, {3.61859576370079*^9, 
   3.618595780474964*^9}, 3.618596727244566*^9, {3.6186502699968634`*^9, 
   3.6186502705368633`*^9}, {3.6186503071068635`*^9, 
   3.6186503213268633`*^9}, {3.618760814572582*^9, 3.618760815152588*^9}, {
   3.6187610495502205`*^9, 3.6187610750442204`*^9}, 3.6187612851972203`*^9, 
   3.618836304359727*^9, {3.618836376953727*^9, 3.618836377453727*^9}, {
   3.618836682570727*^9, 3.6188366852007265`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
3777fetTj5oi8kvgCQfulnYoC9iX3C+BWxj5mW38JYN9zf0S+KL5a5v3xaey
7dwvge8KdDsWcz6F/BL8tn7ac0/DuCvkl8AHBV4dPuhSHvklGo+cDit6cnNY
IfdL4Gcf7r/h35ZCfgn8wFbT0e4DEsnPwP9XDt1+/aV3DvkZcOeRc4OijBXs
FPcz4H/qybY4LMhg47mfAT+tUezVsSeV/neMU+e1NMyM/dLpf6e4tvuTjKCi
S/S/g2+62GDfZZDCnvF+1fv6N/kNvpL3qzfitrxfSTn076Tjsh3/v/C8cuxD
qxEvTjA7vq/7xjqd+x9w9cfuUd3/O8/H9/NRzgqer+CffN8evFN5x+Piq3W3
O9/PpHpmq+7Lo/7oP4m+zemL94SRP8R7p38q2z26KIHl8vWgtL3xfD+/r7iz
dJ7TJVl3+PF1RxWPR6CceK+L2l9siCHdQNRz26ix9t1z4khPXGq3gNqgSPW7
Yj+qeLvRZstEP4qDSOPauMcH/jwyb8K8SpFXFnzkT405jXYiryy4f2dHUr23
0DkCv1oy/s6frkLPCHxQzFJdQyZ0iCjeHRAya+a4erofBD5Zkj8WfPOO6v37
K4R+EN27cdPJOJ8mdILA1aZ++vDaKaEHBO6g7av/KFDo/oAHNyfMfXtNBdlH
GteGfcCXdu/687NVIk8s+M7EncWjvhB5YsHjVgWG91jXk33onsjIHZ5K0zqy
D3jnrW3WF94ROkrgWpK8r+CTI7I0dRRCZ4fi7y6ZVb/FCZ0d8C2D5NH5ISLP
DHhkbvqmiADK70q80CfN9oe1ZWQHabwbdgDfu3bEPQ8zkccV/ODLBpcXRiKP
K3jYobOFoboijyt4uOm6meav+vtaSRxcmn8VPM7XMl/zosi/Cp6g89fHP58t
o/aCXzh9NcYyjPKsEv/ec+TUCB2Rl08aB0e7wL8PmzHk5at6ol3gbgOLTBZ0
Vol7xJzP9nO1im0V30saH0f9wXONdgb97iXymlJ9+p9NOulKujzE3e5dUdrZ
FlM9pfFx1BP8ff/WHXqNFVRP8Ls35s4YUyv6CXiyQj70+m7SqSFus2yDf7t/
AZUvjZujfPC9oy0sTxSU9RlPR/ngY2oMxh1JzZPoicjkveuJyOS964nI5L3r
icjkveuJyORTe9UTkcnDJXoi0nng6zojMrl6rzojIv7+us6ITF7Zq86ITG7T
q86ITB7Tq86ITD64V50RmfxxrzojMnm2RGdEGn9/XX9EJj8k0R+Rxt/xXeg8
uVvWihkTRT5M8F8s04qX+5fQdwGvTH9W+mW00B8Bf/E3iwrbEqE/Am6Ss145
o1Poj4A7fXa+foJxAdlZGpenvB+ce+Se8X50ROiMgBvsy35yOUAh8jZwvibY
qvtEaQbZmc4JHEl+a/v7l8nO4ANPTdReuYHOLRD/Oipq6OcKoQsgjctTvjvE
L9rtM76dKPJbgt82f1etYWkh2Q28YN0D+7+/WkfAbuC/xl88lHIln+wGHtoS
WGv8XOiwgOtL8lWC34/YNcomNJXsQ3F54zGJw3pSyD7gO05ksZbliWQf8Mhp
l04FHo6j9krj8mgv+KPIWdNX6ov8kxSXOXki53OXXJE3lfMZR3sczUOzqb3g
WSZpiSaxmdQu8BU8Xo92gdvwfdrX82mUshZJHkjwS8fPbAybJqf60L70gD26
zkWXqT7g//BeG6+zVORRxHzbgcfrKf+bZH4IPyO9d4z/FON7097f7a+/mu/h
eem9WkleF8XhtPdPu/9WTeVg3FSm/aCe/GoeiH4LblZ4z5o5CB0B6X1SlA/e
VXiyeUGTyMcO7lStadh0i/Lm0XjavmzId8Vj6+m94OMcP3McblhH/QfcdcYm
k2VDaqk+4Kb83iXqA75YaWhqV1tO9QEPznf662CZyFsOfjUxQFlbSHndaTzV
0IxtuttWI9EjKFC8dzNyccsjJdUTfPLxk9VPHoi84uBzPY46/3FX5F2X3mdE
/cGzHxz7ZmZ5GdUfvCIppHk26QAmEC/vMs48cLxU5J3g/MW+YSnhIUIHEOOy
Yfzf5r9MraZ2get92X9dTnoVtQtcoyd/787MSkleeoWi+4ws2i5b5PEGb3dw
zNPKK6f2Su8Vor3gto8nuSw6WkrtBZ9sk/pT08kb1F7w9w7YFK0+U0ztBVdr
vPLW49gi8lfgbWZOs7wTCsgOGB+nOpdn6e8Q+nHgA5TLth4JEvpx4HVLWq31
Dwv9OPDEZp/usHChHwe+a41G2ogokWcb3LU9eHNYvNCJA/fg9+xgH3BdnY/q
PgkqJvuApxrM/fqT8CKyD7j7uKWVs+MLyD7gWpM3O8/OvEL2AU+xPljKSvLI
n4MvtotzZLdFXl/pPS/YE/4/aKtnRFLuDXoe3J/fV0K7wAfKrz7KzMuicuCf
LxWFbb3rUkTfBbznslVI8pECKh9cm9/TQfl0/ud51tOgmEtkN/BxSvUxH3xI
fpj8dvPwXDf9lnx6L/jD7M4LSy3zqD+At3tOHBwdKOwjvReD+oA7rl//4tcR
lDePxgW95W2W9gHZ9F7wc8Grzw9PyKT3gk9f9vR+2JJ06ofgio+2jzHQEfm3
Mb74LZ4yodv0MpVP8cHTTa3r2i5Q+eA/3g/+tSklicoHP7fTJ1W9LZ76ObhC
t2ZWq6/IYywd19A/+8i7S/sqq/h+EeoJ7uM7xTZtYazIe8+5rENZs0svkt77
RpyLv1fK8V9IOf6L3svJ6rMcfN8PJflXpftL4/s4zwYufR71B/fleV/Rr2jf
sl/ys7YLx+i7oJ5D+X4a+mdf+TnxX/zuPUV7mbYf+Q3pPiGex//bz25NzJIl
keRPUE4NP28DO4BHnzqq1X9XCNUH5bvwe0+YR4EHnEiyMhh3jvoh6j+Jn2NB
+dJ6Ul5ibre7dh9bfTBb9E88v42fc4A9+7KPtHzUH/35FL9nBDvgvZvWueqc
2eYldFj48xpBkQ4vDA/Te6X/Bewv5RhHUJ+Fzw54eXsk0nulz/8XEOT/PQ==

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
3GfkfsebkB1y/+2n0j7VCuQ3mo/cOn1iiqfGKC7J7YtK/w5D7pL7+e8sfUaX
IS+kr2du/f1D6Rz6H6V121XpvMtWS1dKZ2ofaD8ohldeRLZKe+/h5APLF34D
OYc2WzqCsSrQaX6GIz9N+u2rtIe1l5/PXeeSblStZ6jeT/FY8NyoNqG6ieov
ren7Hjwk8xmUzbwy2U2dub1yn7tlaa9rn0/KvY/17Fchz80dq+g9Lknvsjyd
N521au550ZzMSXOiuXmMvma5bdt+2te5azAr0losl7+c/qb+//h8dW79sCby
nNxzqn26ae69qrmXrte9FC/cgWzGO26umDr3PPyEbJzWsUHud9DzS3/slmKe
N9ALpzP2PO71M31N03MqXt+SZ9tMuVPppdx6dzud2dw+9/bIvrnn933t99y2
akXuvaV9Na+0vy7deBB9P+bWfcuQ3+auJUpHfp/0ZHfpz3SdfZUrzB0PLNU9
cu8b3ad7GqNn+TXz8+jvddKYHnqudP2lyC1y29sc2Tt3XPVX0hHSD38h38yT
PUauzPxeK7X3c/sSXZB757ZvuueSNA/rIhfmjkk7Icfm9jneS+++Evm49GvS
sdLN49OeWaTnSs8j/fpA2ntTkKPSnGyW2weS7uqMvD+3X6P1fzm3vf8D+XZu
f1Hz+mp691zxQ1qLdZAf5Y7TGiI/zl0v+x25ILd/tj375/Pc5+U/6S7tdeQm
yKPSPASdR9pl9JfIxQl/T/sst53UHC9K77VG7r+pvwl4Vm7/T7r5tTT/itGG
sQ83rDnevB7cEjy7dIygfOmS0jnh34LzWw+DRyvPLVvJmDWR8/m8If3rV63P
VGtTvK+6tXyTMYXzroopVzL+E8Z1ALdCHhAdoylHqBq9fAnlaW4s7Q+opqo8
rfzNv8BPl47RFKu9k1lvq/b6dOF4Y3jhs/UyH6dw/blJv0nPKZ88Q3NZOl8q
PJkxjxaOx+4rbK82S+suv1qx2tqMv5X2nvwTZC/+PjftvXnI93L7n/vk/iy8
K7KW23eJuf+mfq1bSGundXsrrd3uyEPTedd5mp/O1HLkHNqtmWMfxQCLCp/R
2emcbo1U0UKxwoul4zflcJT/VoyhGOdSPtdH7sS89SscoyseXJ15z2m/6Tz1
Su+lPftO2rcdkf9mKYZhTt7l88/aG0lf6BkWgm/JbY8/Bg/NnTuQvZVdkU2Z
GM0VUF7u4uC6WGPwQ8E5k81T3u4y8EU820XBNbVG9F8I3lFnCHxGdP1JOcZ9
gt+riK6RqFZytfZpcB2wS8pHtpefgHwkuJ7YNeUmb5H/Tv8VwfVK5WmvA+9T
cR742uDan3LIo6K5F8o3PkD/gIpzwuOD427lct8Kfn7lq5+Orskp/zmT/gsr
zmlPCa4/Kq97fXA9UXnpA8FN5HpHn/uV6eyfFVw3XIf+M4NrhQ3AV0XXhpXv
PSPYdtRXTjr4PNakh8AtwVFzHl1HVE54QPAZXBN8QXAtcl3wyeBNwWspnx1d
G6umvPLu2j/KXwXXN+vRf3juPar9eURunSh9KP23IunAw3LrO+k62a4/k/1S
/ljvuwayPn2rcvv3WyL/zh2P9sttJ2QjTgrOddTlvv2D13QN8JXBdWrVjW8M
rikr/y87LL9KtngP5Eu54609kTNy+zbLkn/1aGqKieTf1svti8gP2UD3zx1X
y2ZOSTaiEXJy7nyYbPWizOdXsYh8aPnP8i0fy+yfN025OOXkfk3+vOanK5/v
zO1LyG+V/yffT36xfCb5n7KHd6T9sDizPyp/68/kM8u/VhwduUaXmt9veHrH
nXP7bfLZLg+uxas2cXDueGZ0spd3Jt/hruB6uvLz9wTXzZWfvy+4nq46yx3B
9Xfl6m8IroOrnjIkeJ+sB74suNa/fqo/HATeV7nuaP6B6hFjgvNUquPID5Lf
Jl9oFP1HVpzPHx7MDVAtQP7FsmRn++SOBxQLKJb6n73PrEd/S7r01mDOgGoH
w4Jr66qV3BLNkVIdYWjws6mecktw3b9NqjPojB+l2mi0nZOemc+Y6yquQ50U
Xfdtybx9FMzHOA38cTBP43TwWjXnIvdk7NzgusBJ9NetOS+8F/0fBvM9TtXe
qzlH2YP+tcFzCucnbw7mfe3CmDnB+cYT5a/WnGvegzGzg2sKA+n/Mth2qz51
PrgXeIfSecMx4A/4zjnp7Gyr2D3Yvp+l3FIwD2Q78DvBdfnjwe+mfMIJ4POC
+STbgz8I5recAr4qmL+h83h1MJesu2KiaH6J8K3RPLPdlN+ouZ6xG31r1Fx7
2F17puZ6xi7ab9E1vh7KS9Rc29iVvmbg5eC59F8TzUHRMzeomRM2ATw81YZ2
V8ya8hJng29L9aY9wCNSHWov+UHR3IsdwTdEc0R2kv3kmncUzg9fF82b0Xxe
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
Q5wM/Z5F3Fvp9P8Dzfvb0Q==
          "]], Polygon3DBox[CompressedData["
1:eJxFmwn0VtP3xu/7nnvP/TZqMDRKFCKNplSGNJAhlQwZGiQyhRIyJSoKUSma
kQohUUrIVElmMmeeIzM/Zfg/H89d679WZ33Pc/e5973DOXs/+9mnxgOH9jqv
nCTJrSFJUv39NybJ7jpwcSlJXlT/Jh3couOvCdfNkuQgHTtRuLfG35AnyRWy
fym8TvZask8TTtXP1G5Tfzdda7baTOFc7RCdP0Dj++r8m3R+d7WXhJcJ16lI
kld1zqka10/tNfU765o7yP6i7Os0tq9wS+FPhV8SPlztReGlwjtU+C+4rPPP
0fk3afxA4e3V/0pj3xQeL3yk8OPC2wq/oLHr1bZTv4fub4Ts5+s6c2SvI7wt
1xMeINxCz3KX2q0av5va2zrnRtl76HqrZD9UWH+S9Ro/SJ07NLa52i86dofG
H6PrXaz+BbLPlX174VrC/2hMP+FLhT8Tvk1jX1V/T7Xmwrtq/EWyN9S4vdTu
lL2hWm/93m6yv89zyx41/mnh83Q/zwv3kn1X4fdkXy+8g+y1hRPh/sJ1hbcT
TIUH8i513km67slqL6n/ls6/Qfaj1X9S9g3CE4SPEn5CuL7OryNcVeefLnyy
7K2EPxN+WXhv4Tm63210vd90zo/C98o+SP21sm/D3FCbLvsC/f1M9pnMD9lX
y36wrt9X+Fhd70bhT2SfLnyC7M8KV5P9Xd6n8M76/kcJD+f5NX6W7EcIXyh8
jvAM4aOFLxIeKjxb+Ei1V4SXC9fT+Y11D3Npup8pakfI/rLsj8peV/ZOOv9M
4YHCN8t2o+6nl/B2+v2Jwt3UlgkvkL2axjfTtY5Vm6NrzVZrq/6pag+qf7fa
+7reGv3dRtd5Ruf+or+P6/zTdb3ddf4o4WOFK4Q/lH208HHClYU/Fu6stlB4
ln6vssYfIPuJuv4tuuYPGtNJ9vmyz5C9QvZd9Hs7C9cXPke2Co3tqzZJ469W
G6bzu8m+VfZ3ZD9EbTbzUTjX+eNkP1l4G137U9ne1fWe0Xm/6ti16s9WCyX7
hCvUb6TWQP1tdf4Qje+g8z8t+9n/0DVuEO4ve238iOw7a3xj4Xoafzb+Qfbq
XFv2hvr9m4UHCdcR/kb2icKnCe8g/LXwVl37e7UJuv4YtVtkP132urJ/K/v7
wrcwn4SfFt6isZvVbtbY0Wrd1f9GbZb6d6mN1/hTNb6mxn+u8V3U7hGerfur
ovu5UPauwluE35btGuHjhato/Cf4A7UFwjNlr6TxE2TvJ1xL9i9k+0u/cYJ+
70b9HaF2veynyF5D9s9kv1q4j3Al4Y+EvxJ+UPhU4ea6Xk/h7YXf1fXPl/0D
XeN5Xe9x/V1a9NeqrSz5WDf1D1N7TP2maqv1vs/V3wFqK9W/LvW3vFD4I/Wb
6lgT4Ya6/nm6fle1pcLzhavq93eSvSH+Vfgs/JNwPe5f+AzhY4UvEx4uPI/1
qPvdSfgN4ReEm8u+l/BuwiOE98DnCTcVHi58mNqjwguFq+v3ntW9P6O2ouRn
aKDxdWWvLvtgjf1U158hfKLu/Tm+h/5+z/zT2HvUv0D2LsJ/avxbsl8l3Fs4
l22j8I66Xn2+j+xnCl9GTMD/y/6+8CXCR+E/hd8V3qjx/yMeqV2i/vmyd1b/
fzp/g+xNdGwX4QbC5wrfJrw1sY8fqf5uxFv1d5b9AtlH6vyjhUu6/nvMHf2t
pXuvrbYQn6DxzWTfReMvlH1X4abCOwoPFb5c5x+De9fYD4Sbyb6HcBPZhwnX
i54vUfg04TXEKPUX6djnOneI2oHq/6Rjr8t2VO44t1TXa6L3P5t1J3szHVus
/r9q8/C3+ibNdO4o4T1kq6Z2p/r3qj3E/Qo/qP445prGVlX7XMe/LY7R/5I5
r3aJcKXi+s8Tg/iewuvUX6P7P0P9h3V/LXQ/01lnwj10vV0y+zx83ylqn6pf
iuYy9FtVeE4zt4epfcw3TB0vWQPvqb9V4wfqWjvqWrto/CYduw5foDHP8k7V
BgtfoPYhPkFtpPqb1JbwblL7nR2K511CXFF/J7UhXJ97UbtGrT/rj2fEH6m/
hjkLTxHuU+BfdT9/Cp+le/pT/bH6u63aJ3AYjXlaY3rqb6+S729k6rm4v/Aj
6s/X2Pd4dzrWjfvI3J8Ij1B/hf5eoNZItljcD799nNpa9ZfKVuZ9lDzPH9Pz
1Fe/stpQ2YfL1lvtMuFr1Wapf67apSX70JvUH1r292ceXB19v8/ADSt8v/sK
/y7bBHy42ijhjTpnD2Kh8BElP+8l6n+nNr7kc3i+R/ATJRaM4oXwIjipjo3W
oSfgjmovlxzjieEPsOb191rhVbLdLXxRsI9aJjxfeITw5YwXXiB8sfAVcATh
+1hjwlcLP545/j1LLBfeJLxE9muDOeZq4YfwQcLXM3+EK6s9qfFfENPVr6T2
hPB8tVT9qmpPqf8mHFTP87DOHxPMudbIdr/wlcLXCD+Z2X+fx3rA5wgvJmbI
Plb4aWKF8CjhMcJPZR7DWOZ+S73/hfg02a/UsRWZ18M5fB/hB3T8UV3/W/Wv
Yl1r/Dv6ezYxq1iPD0XzRXhjM9nf1t8hJfsIfMV9wVySMXCax6JjzRvq76nx
V+vvpsTX5Nqsa9Y31zgLrFaj5DXGWntK559ecgz8jW8rfFXJvmOvCq/P81nL
xDD8Dz5c1xwlvDKzz8R34nOPzexz8b1waLj02mj/8Ijwc+rPC/4tfvOt1HiQ
+qeVHIPxR/gCfMIz6j+oedu+7PUzUW2C+rna14l90mrWsf72VbuBdyJcXW1s
yX5id/gQx9R/AI6gdgVcSec3yry2tha+gzXGGtlJx/Ysee18T86jfl0da5XZ
f+EbOLZZ/QY6NlX9XWRvo/5c3XNr4Q5q30WvL3wHY35SP2jMIyXzh6j+V9G5
4FPEi5j8l+y0KZvLtdb7/1LHXpX9efyj+g/LVqVs3/BAEUeIJ+RPP8L/Uuc6
09R+SZ3zgDneQNf7ITqXxEdujvav+JK9dc19dD9/Ci8oeQ2xnk7R/fysseNS
+29iUgeNvb/kWEWjv0jtb2KLrrlQ/a3qt9H4eRr7TuGrDi35+qzVjfgcXWtR
6jz2PrW/1L9d7R7G44My5zhw/T3Kzn3eLztnI1e7HH+tfhe1R9Vfrjai7G/B
++a9f6x+LbXFutx+wverf0DZffzedN3v1/rbTtduq/v9Xb93dMnfiG81RGOD
2pW8E3iLjv2dmC9lrH+Nr6v+ssLf3JU6L+GeufefU3+Lgfig1P6JsfgsfNfO
mef2H2rt4cZwWP1eDf3GleSCOvaKbK+rbZ85xyTXJMc9iLmnsaPLnpPkxOR+
9cpeK9OLOcPcqaGxe+v57i77HfFuiEEfRefr5O37yP5u2TGRWAiH/s/fJ74H
7mWNbDXV6hRrrrmOfViyz2ms/iQ9YxfhzryT1LnqMLWdS85ZW+Czy+Y0cBv4
BXzi75JzrZbku+T4Jcd/xvznL8s+F84L9x2pY49wbzo+smyf9W9iTQFtgZz8
4MycE+4Jh+4mfCdru2ztgJwfzgZ3I2fvlPldstZZ37xTcnBycTQTtBNyenJ7
NIxDMnNyuDmcuWtmzgx3JofvklmDQIuoKdwxc85G7gYnPiyzj8BX3K72WjTn
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
1o7IUclVO8h+ROIaMvW8hcJdS9YcyKf/D94+W9Y=
          "]], Polygon3DBox[CompressedData["
1:eJwt13f8zlUfx/Efrt91Sdkpe4TsTbL33nuTTWYyo1R3Imkno0QT0bxbKikV
GuJuaKE07qZVGrdS9/Pz+P7+eF/nfF7nfc73XN8zvxXGzOg7PXdWVtYxyqaS
6ayst/LIU0bcDuyH1UplZY3DpmBPY8WxPeJceZJ6bfzkopYa20bpXEmDZfn2
8xSmc6DO2FistfbmYVdhe7BBWD1sEjYD24aVwfaJC9LZWCdsHNaGbz62GHsT
662jd2GraDf2NzaGr5V4Lt+V2G5sNNYSm4MtwnZhA7G62ERsOvY8ltLe++IS
VA7rjpXne09cjApgXbGj6t3gv15Ny/zfY+JL+FpIZ/Mt5HuDrzT2rjg/5cM6
YpWivjp1qQmVEefx3LfjvVNeelNcSt298f/pLHU78A3HLvaMGdgcbAf2svx2
Wofn1d5l0iF8jaRT8Vl8L/E1xc6IG1JTbA7WDivD1x8biq3EmmB/iRtQE2x2
9Beb4r9WolP8pfNmZTXD/uZpRM345vK1xUor74cNwe7EBmP1scnYTOwFrCdW
Dfvd/9wqfpSaY//wXETN+eZhXbHKfL/wPSh+iOpg/+UpQ5X4RmG1sW/Epaki
NhIrgb0pzkOyWW2xXjLVtfeH9h4TP57z7t+J8Yn3TOPErfkK8HUQd1P3er5h
WGNsOjYbexmbgnXHrsNuxD7E6mLfistSZewSbIA29/Htp13YGexb+ZT3OZ+W
GrcfxOeru1u9fzBhVmu+8VgHwSL8WuwdrAZN5tkec0rdbTGP+TpJr+K7Dn83
fNgX4vPifWGDsS5YRb6f9el+8QN0AfYBz9/aLMLXI9rHuvBdjV+P7ccmYZ2x
xdgSbB/WB6uJjcUmY09hPbCq2G+e8Yh4C43CmmGz+Obz7cSqYYfFRagUNhBr
j5XlOxprW7yKqmAHY/3F2uTrH2sfq8H3P74nxE9SG+xcrBtfX76bYg3SGv+r
GC33rk4qH8HXRDqTby7fKzwjsabYZdg87FWsJnZEXDzGExuCneBZqZ3V2puY
O1m/1fk+5zk35iDfIKwqdkhciEpiA7DO2AXqn9TnDeL7Yj/ADvDkjvp8vbBu
yufyvYYdwgrHPMPmYa9jh7EiWDe6EDul7GH1NsaakZ+D7eQ7yFco1hB9JE7F
Pob15rsQ+zjWRswPrE/MDXVnq/sq9hlWMJ5LVbBflW3i2UznYbt4zvj/kqxW
WDnsP4Kisd9hXbAOWDl1j6m7Vnw31cK+jvGmC/hGYB2x8nzH+e4Rr6MJWEfs
Sr5/8e3F+mO1sfHYVOxZrBNWATuh7r3i9VQR+zA6Fv2R9MSGYhfxTcMux7bH
usTqYBOwadhzWDZtM747/bdPpKXEjbTdnO9avmV8r8e5QLN4xlNJvi3Ki8bB
Ke3I1112AU8h7H/iVtQem4mtTCd1nsLu4b9JXITvT3Eb6sg3i+84PiHO1Dhr
+FeIl9Gjyh/guzXOIfFcmi7/GLZTWUb8He2QL6GdkvS9eDutx9bwfcj/cpy9
9vKM8he1vzsuBPqRl77iqUZ1oKHKi/G+EWOhXthaxD7Ot1h8P+VXPx/PEtqg
fC3vDfj14gzfl+KqVFvZMHULYn+IW1KL2LPE59BJ+cbB+C7ly4/9LL44vNhk
rAJWTNvdsR70rfhyzxmC3RnvlO8rvovwttgC7Ar6S5wnzlXlU8NLvbAZWH/5
FTy3Kzuo7mxsaKz1OFuxr2O8scHYHdjd2JfY8+Li/vscL+WXnL041nWs75qZ
ZK9dJf0l3g3PcZ6GtDfOmOBxzsb80N6UmH/YJzlnUZxJb4s70yTtPCl+g++v
2GOxRdEXyqW9Nelk7scaqJFJ9pm7pCfwOzz3C55/Yt6kk3f/e4xFjG/MBfHZ
9KN8vTiD+cZo5yzeV9Q7R/7sWEM851Mmlbz3eP83iovHnMF6ivupuzjOX+ys
eL9Yf+zqnHE7DxuODaNbop/RZuzJ4jF8N/P9GOvXc8/X7xXSfelk74g9pFom
2SvulJakfPK91R2g7jWxLrGicQfCRmE3xn0SK4QNxIZjS+NcwApiA6Iv2LLY
S7CJ2BPY69hprCxWGBuEjcBuiL0OK4INxkZiy7FS8Q6xPthA7NrsZL3Guv0u
xi7uRZlkb4s9rnom2bdWxnui79QrR+VpX6wDdZ/z/6dSlZzxLYbnVqczT0/P
uEI752K5sE6xFrD58Z7TyXkV59aSOK/TyTO+zxnvGPeFMRaxHpR3EffiXxjn
Qtw9sdHYBOx2rHK867jjYuOx2+Lcwkpgo+LOhN2K/Rz3On39XrxVv8+I59EC
voLKdyk7KM6n7g/q1aVGvKNzzvk476tmkjPjjlg7MbfkR/KN5btF+cX0gXb+
Hftnzv68hlbHPSGT3B1ul7b0nGz55uq2U/cq5U3x3tiy2JvifIh7LNYXWy2+
F/okO1n/sQ/klxaIux9PQ2rAdynfFDotTtNn8hXoQv6+vAs8d63//pO+1aJ1
6WRNf5oztjHGM+O/efZS7R2JuxX/n3EHowfVSWcne/KQnOc2TCX7V+xjmzPJ
Phv77X34BuqbSc7+uAPUySTn9T3SAnwz+Q6LD8Ucxl6I7xn5D2iMspdiv6Zj
8qeoE20Wb4z5l0r2t7hjbhIPj3XkGYWzkz009tIf5B+MOy3f37EmeKbjveSX
6u/Nyj7mmYr1wJZgK7AD2FZxeW0v8v+PSNeKr4m1K78c+0NaIe6ndERclPbE
Nx3PQ9p5Iu7D2Dgqx9PCM1LKmilrq+xKrD52VFyJqmPjsXrYT+KKccZh47AG
8Q7ElakGNgFriB2PsaWa2MQ4U7BT4aH62DSsMfZreKgBNh17DZuq/5/GGNMe
casYN/n2fF35lvDlxd6Xn4Gvj/3D+2uEneCpQrWUTYp5j/0WMTUMf3byPRTf
RbUzyT3wbukaWk21Msm309pMcmeLu1vdTHIvXydtQyNSyT0i7hPfKG+HjcY2
Ys9iP2HtsTHYJuw57Fjc67Cx2Gbseew4tkP/xvm/B/CF8b0Sd2IqGmch31a+
L+JOp+4E5Y9jr2F/Km+O9Usl95K4n3yKtcaGxRmGraK09dIE64bdJl7N9168
F6wrdmv4sPexLXE3jrmNv0iPiPenk2/XBtnJ+ox12ljd9tjyOIvUfUvZnPgf
MRbYFuxkzr7RJ5X0I/rzStwr6BLsYfEzfEdz+jw87kPYfbQrk3zbxjdu/Uzy
7ble+kyspbgz8ryLPZ1OvkXjm7RBJvmu2SDtTzvjPh7j5BmPpZNvqfimqpdJ
vqHvlR7AT8vvTSXtfpROzul0KrlbxR3rUM6cqJRKzt44g+O7uiUNjP1CvNEz
Dmv7UfV7amdH3BFpq7gF34CYY3wP832ec79ql0r20thTn42zkk7Lt6YOfJfx
TYv24i6I3YR9lJ18W8Q3xuX4Z3E2q9eKBsX85NsU84Xv/0J3H1c=
          "]], 
         Polygon3DBox[{{1885, 1310, 1318, 511, 380, 1666}, {1713, 1226, 929, 
          930, 1227, 1714}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{321, 1, 309, 238, 1342, 16, 1356, 31, 1371, 46, 1386, 61, 
       1401, 76, 1416, 91, 1432, 1433, 106, 1461, 121, 1476, 136, 1491, 151, 
       1503, 166, 1517, 181, 1531, 195, 1679, 267, 328, 210, 319, 283, 954, 
       211, 955, 212, 270, 608}], Line3DBox[{765, 2, 1193, 276, 321}], 
      Line3DBox[{767, 3, 765}], Line3DBox[{769, 4, 767}], 
      Line3DBox[{771, 5, 769}], Line3DBox[{773, 6, 771}], 
      Line3DBox[{775, 7, 773}], Line3DBox[{779, 8, 776, 775}], 
      Line3DBox[{781, 9, 779}], Line3DBox[{783, 10, 781}], 
      Line3DBox[{785, 11, 783}], Line3DBox[{787, 12, 785}], 
      Line3DBox[{789, 13, 787}], Line3DBox[{791, 14, 789}], 
      Line3DBox[{322, 15, 317, 277, 791}], 
      Line3DBox[{1369, 30, 1664, 240, 322}], Line3DBox[{1384, 45, 1369}], 
      Line3DBox[{1399, 60, 1384}], Line3DBox[{1414, 75, 1399}], 
      Line3DBox[{1429, 90, 1414}], Line3DBox[{1458, 105, 1429}], 
      Line3DBox[{1474, 120, 1459, 1458}], Line3DBox[{1489, 135, 1474}], 
      Line3DBox[{374, 150, 1489}], Line3DBox[{1515, 165, 1697, 308, 647}], 
      Line3DBox[{1529, 180, 450, 1515}], Line3DBox[{1543, 194, 1529}], 
      Line3DBox[{470, 213, 414, 1187, 271, 214, 1224, 344, 215, 956, 216, 957,
        958, 217, 959, 218, 960, 219, 961, 220, 962, 221, 963, 222, 964, 223, 
       1192, 275, 329, 224, 320, 284, 1556, 209, 1543}], 
      Line3DBox[{374, 508}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1342, 1662, 1886, 1557, 1341, 1887, 1558, 1343, 1888, 1559, 
       1344, 1889, 1560, 1345, 1890, 1561, 1346, 1891, 1562, 1347, 1892, 1795,
        1993, 1348, 1893, 1563, 1349, 1894, 1564, 1350, 1895, 1565, 1351, 
       1896, 1566, 1352, 1897, 1567, 1353, 1898, 1568, 1354, 2077, 1663, 1569,
        1664}], 
      Line3DBox[{1356, 1796, 1994, 1355, 1899, 1570, 1357, 1900, 1571, 1358, 
       1901, 1572, 1359, 1902, 1573, 1360, 1903, 1574, 1361, 1904, 1797, 1995,
        1362, 1798, 1996, 1363, 1905, 1575, 1364, 1906, 1576, 1365, 1907, 
       1577, 1366, 1908, 1578, 1367, 1909, 1579, 1368, 1910, 1580, 1369}], 
      Line3DBox[{1371, 1799, 1997, 1370, 1800, 1998, 1372, 1911, 1581, 1373, 
       1912, 1582, 1374, 1913, 1583, 1375, 1914, 1584, 1376, 1915, 1801, 1999,
        1377, 1802, 2000, 1378, 1803, 2001, 1379, 1916, 1585, 1380, 1917, 
       1586, 1381, 1918, 1587, 1382, 1919, 1588, 1383, 1920, 1589, 1384}], 
      Line3DBox[{1386, 1804, 2002, 1385, 1805, 2003, 1387, 1806, 2004, 1388, 
       1921, 1590, 1389, 1922, 1591, 1390, 1923, 1592, 1391, 1924, 1807, 2005,
        1392, 1808, 2006, 1393, 1809, 2007, 1394, 1810, 2008, 1395, 1925, 
       1593, 1396, 1926, 1594, 1397, 1927, 1595, 1398, 1928, 1596, 1399}], 
      Line3DBox[{1401, 1811, 2009, 1400, 1812, 2010, 1402, 1813, 2011, 1403, 
       1814, 2012, 1404, 1929, 1597, 1405, 1930, 1598, 1406, 1931, 1815, 2013,
        1407, 1816, 2014, 1408, 1817, 2015, 1409, 1818, 2016, 1410, 1819, 
       2017, 1411, 1036, 1412, 1932, 1599, 1413, 1933, 1600, 1414}], 
      Line3DBox[{1416, 1820, 2018, 1415, 1821, 2019, 1417, 1822, 2020, 1418, 
       1823, 2021, 1419, 1824, 2022, 1420, 1934, 1601, 1421, 1935, 1825, 2023,
        1422, 1826, 2024, 1423, 1827, 2025, 1424, 1828, 2026, 1425, 1829, 
       2027, 1426, 1830, 2028, 1427, 1936, 1602, 1428, 1937, 1603, 1429}], 
      Line3DBox[{1433, 1938, 1604, 1431, 1939, 1605, 1435, 1940, 1606, 1437, 
       1941, 1607, 1439, 1942, 1608, 1441, 1943, 1609, 1443, 1945, 1946, 1610,
        1445, 1947, 1611, 1447, 1948, 1612, 1449, 1949, 1613, 1451, 1950, 
       1614, 1453, 1951, 1615, 1455, 1952, 1616, 1457, 1954, 1618, 1459}], 
      Line3DBox[{1458, 1617, 1953, 1456, 2041, 1843, 1454, 2040, 1842, 1452, 
       2039, 1841, 1450, 2038, 1840, 1448, 2037, 1839, 1446, 2036, 1838, 1444,
        2035, 1837, 1944, 1442, 2034, 1836, 1440, 2033, 1835, 1438, 2032, 
       1834, 1436, 2031, 1833, 1434, 2030, 1832, 1430, 2029, 1831, 1432}], 
      Line3DBox[{1461, 1955, 1619, 1460, 1956, 1620, 1462, 1957, 1621, 1463, 
       1958, 1622, 1464, 1959, 1623, 1465, 1960, 1624, 1466, 1961, 1844, 2042,
        1467, 1962, 1625, 1468, 1963, 1626, 1469, 1964, 1627, 1470, 1965, 
       1628, 1471, 1966, 1629, 1472, 1967, 1630, 1473, 1968, 1631, 1474}], 
      Line3DBox[{1476, 1845, 2043, 1475, 1969, 1632, 1477, 1970, 1633, 1478, 
       1971, 1634, 1479, 1972, 1635, 1480, 1973, 1636, 1481, 1974, 1846, 2044,
        1482, 1847, 2045, 1483, 1975, 1637, 1484, 1976, 1638, 1485, 1977, 
       1639, 1486, 1978, 1640, 1487, 1979, 1641, 1488, 2085, 1706, 1707, 1642,
        1489}], 
      Line3DBox[{1491, 1848, 2046, 1490, 1849, 2047, 1492, 1980, 1643, 1493, 
       1981, 1644, 1494, 1982, 1645, 1495, 1983, 1646, 1496, 1984, 1850, 2048,
        1497, 1851, 2049, 1498, 1852, 2050, 1499, 1985, 1647, 1500, 1883, 
       1986, 1755, 1648, 1501, 2086, 1708, 1709, 1649, 1710, 1876, 2087, 1665,
        1711, 1686, 1687, 1666, 1885, 2083, 1787}], 
      Line3DBox[{1503, 1853, 2051, 1502, 1854, 2052, 1504, 1855, 2053, 1505, 
       1987, 1650, 1506, 1988, 1651, 1507, 1989, 1652, 1508, 1990, 1856, 2054,
        1509, 1857, 2055, 1510, 1725, 1726, 2092, 1511, 1669, 1670, 2079, 
       1512, 2075, 1655, 1756, 1656, 1757, 1513, 1747, 1748, 1881, 2097, 
       1792}], Line3DBox[{1515, 1753, 1668, 1754, 1667, 2078, 1880, 1514, 
       1688, 1658, 1693, 1657, 1744, 2076, 1773, 1782, 1780, 1785}], 
      Line3DBox[{1517, 1858, 2056, 1516, 1859, 2057, 1518, 1860, 2058, 1519, 
       1861, 2059, 1520, 1991, 1653, 1521, 2101, 1759, 1760, 1522, 2089, 1713,
        1714, 2088, 1523, 1672, 1673, 2080, 1524, 1659, 1727, 1660, 2093, 
       1742, 1728, 1525, 1699, 1776, 403, 1794}], 
      Line3DBox[{1529, 1732, 1735, 1731, 1736, 2095, 1528, 1733, 1723, 1724, 
       1722, 2091, 1527, 1671, 1682, 1165, 1526, 1694, 1661, 1698, 2084, 1869,
        1689, 1777, 432, 1749, 1788}], 
      Line3DBox[{1531, 1862, 2060, 1530, 1863, 2061, 1532, 1864, 2062, 1533, 
       1877, 2063, 1718, 1534, 1872, 2064, 1675, 1535, 1150, 1761, 1763, 1762,
        1536, 2098, 1750, 1751, 1715, 1717, 1716, 2096, 1537, 1740, 1791}], 
      Line3DBox[{1543, 1654, 1992, 1542, 1133, 1541, 1764, 1767, 2102, 1769, 
       1768, 1540, 1765, 1766, 1758, 2100, 1884, 1539, 1871, 2066, 1684, 1674,
        1538, 1702, 1704, 1703, 2065, 1683, 1701, 1712, 1700, 1743, 1771, 
       1781, 2099, 1690, 1784, 1691, 1778, 1789}], 
      Line3DBox[{1556, 1681, 1190, 1555, 2074, 1868, 1554, 2073, 1867, 1553, 
       2072, 1866, 1552, 2071, 1865, 1551, 1878, 2070, 1737, 1739, 1738, 1550,
        1879, 2094, 1734, 1730, 1729, 1549, 2082, 1677, 1685, 1179, 1548, 
       1695, 1705, 1696, 1772, 1745, 1783, 1746, 1770, 1786}], 
      Line3DBox[{1679, 1678, 2067, 1873, 1544, 1752, 2068, 1882, 1545, 1680, 
       2069, 1874, 1546, 1870, 2090, 1719, 1721, 1720, 1547, 1692, 2081, 1875,
        1676, 1775, 1774, 1793}], Line3DBox[{1697, 1741, 1779, 1790}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{765, 966, 1887, 766, 980, 1899, 794, 1998, 995, 809, 2003, 
       1010, 824, 2010, 1025, 839, 2019, 1040, 854, 2030, 1055, 1939, 869, 
       1070, 1956, 884, 1085, 1969, 899, 2047, 1099, 913, 2052, 1110, 924, 
       2057, 1121, 935, 2061, 1127, 944, 2068, 1291, 1292, 1136, 955}], 
      Line3DBox[{767, 967, 1888, 768, 981, 1900, 795, 996, 1911, 810, 2004, 
       1011, 825, 2011, 1026, 840, 2020, 1041, 855, 2031, 1056, 1940, 870, 
       1071, 1957, 885, 1086, 1970, 900, 1100, 1980, 914, 2053, 1111, 925, 
       2058, 1122, 936, 2062, 1128, 945, 2069, 1184, 1185, 1197, 1198, 1320}],
       Line3DBox[{769, 968, 1889, 770, 982, 1901, 796, 997, 1912, 811, 1012, 
       1921, 826, 2012, 1027, 841, 2021, 1042, 856, 2032, 1057, 1941, 871, 
       1072, 1958, 886, 1087, 1971, 901, 1101, 1981, 915, 1112, 1987, 926, 
       2059, 1123, 937, 2063, 1231, 1232, 1233, 2090, 1151, 1186, 1152, 
       1326}], Line3DBox[{771, 969, 1890, 772, 983, 1902, 797, 998, 1913, 812,
        1013, 1922, 827, 1028, 1929, 842, 2022, 1043, 857, 2033, 1058, 1942, 
       872, 1073, 1959, 887, 1088, 1972, 902, 1102, 1982, 916, 1113, 1988, 
       927, 1124, 1991, 938, 2064, 1174, 1175, 1176, 2081, 1201, 1256, 1322}],
       Line3DBox[{773, 970, 1891, 774, 984, 1903, 798, 999, 1914, 813, 1014, 
       1923, 828, 1029, 1930, 843, 1044, 1934, 858, 2034, 1059, 1943, 873, 
       1074, 1960, 888, 1089, 1973, 903, 1103, 1983, 917, 1114, 1989, 928, 
       1299, 2101, 1300, 1301, 1150, 1220, 1222, 1221, 1223, 1314, 1339}], 
      Line3DBox[{775, 971, 1892, 777, 985, 1904, 799, 1000, 1915, 814, 1015, 
       1924, 829, 1030, 1931, 844, 1045, 1935, 859, 1060, 1944, 1945, 874, 
       1075, 1961, 889, 1090, 1974, 904, 1104, 1984, 918, 1115, 1990, 929, 
       1226, 2089, 1228, 1229, 1274, 2098, 1275, 1177, 1280, 1281, 1319}], 
      Line3DBox[{779, 973, 1893, 780, 1996, 987, 801, 2000, 1002, 816, 2006, 
       1017, 831, 2014, 1032, 846, 2024, 1047, 861, 2036, 1062, 1947, 876, 
       1077, 1962, 891, 2045, 1092, 906, 2049, 1106, 920, 2055, 1117, 931, 
       1168, 2080, 1169, 1282, 1285, 1307, 1336}], 
      Line3DBox[{781, 974, 1894, 782, 988, 1905, 802, 2001, 1003, 817, 2007, 
       1018, 832, 2015, 1033, 847, 2025, 1048, 862, 2037, 1063, 1948, 877, 
       1078, 1963, 892, 1093, 1975, 907, 2050, 1107, 921, 1237, 2092, 1118, 
       932, 1238, 1147, 2093, 1254, 1258, 1255, 1317}], 
      Line3DBox[{783, 975, 1895, 784, 989, 1906, 803, 1004, 1916, 818, 2008, 
       1019, 833, 2016, 1034, 848, 2026, 1049, 863, 2038, 1064, 1949, 878, 
       1079, 1964, 893, 1094, 1976, 908, 1108, 1985, 922, 1161, 2079, 1162, 
       1119, 933, 1311, 1253, 1335}], 
      Line3DBox[{785, 976, 1896, 786, 990, 1907, 804, 1005, 1917, 819, 1020, 
       1925, 834, 2017, 1035, 849, 2027, 1050, 864, 2039, 1065, 1950, 879, 
       1080, 1965, 894, 1095, 1977, 909, 1293, 1294, 1986, 1295, 1145, 2075, 
       1163, 1146, 1204, 1260, 1265, 1308, 1330}], 
      Line3DBox[{787, 977, 1897, 788, 991, 1908, 805, 1006, 1918, 820, 1021, 
       1926, 835, 1036, 850, 2028, 1051, 865, 2040, 1066, 1951, 880, 1081, 
       1966, 895, 1096, 1978, 910, 1213, 2086, 1214, 1215, 1270, 1283, 1286, 
       1287, 2097, 1271, 1340}], 
      Line3DBox[{789, 978, 1898, 790, 992, 1909, 806, 1007, 1919, 821, 1022, 
       1927, 836, 1037, 1932, 851, 1052, 1936, 866, 2041, 1067, 1952, 881, 
       1082, 1967, 896, 1097, 1979, 911, 1158, 1216, 2087, 1218, 1217, 1219, 
       1259, 1262, 1261, 1328}], 
      Line3DBox[{791, 1156, 2077, 1157, 792, 993, 1910, 807, 1008, 1920, 822, 
       1023, 1928, 837, 1038, 1933, 852, 1053, 1937, 867, 1068, 1953, 1954, 
       882, 1083, 1968, 897, 1210, 2085, 1211, 1212, 1144, 1159, 2083, 1310, 
       1318}], Line3DBox[{954, 1135, 1183, 2067, 943, 1126, 2060, 934, 1120, 
       2056, 923, 1109, 2051, 912, 1098, 2046, 898, 1084, 2043, 883, 1955, 
       1069, 868, 1938, 1054, 2029, 853, 1039, 2018, 838, 1024, 2009, 823, 
       1009, 2002, 808, 994, 1997, 793, 979, 1994, 764, 1886, 965, 1155, 
       1193}], Line3DBox[{956, 1154, 1188, 1203, 1252, 1202, 1327}], 
      Line3DBox[{958, 1137, 2082, 1180, 946, 1129, 1276, 1196, 1178, 1315, 
       1329}], Line3DBox[{959, 1138, 1244, 1246, 1245, 2094, 947, 1130, 1239, 
       1182, 1200, 1251, 2099, 1337}], 
      Line3DBox[{960, 1139, 1243, 2070, 948, 1131, 1206, 1170, 2065, 1207, 
       1208, 1209, 1323}], 
      Line3DBox[{961, 1140, 2071, 949, 1132, 1172, 2066, 940, 1272, 1284, 
       1289, 1290, 1288, 1273, 1334}], 
      Line3DBox[{962, 1141, 2072, 950, 1297, 1296, 2100, 1298, 1149, 1171, 
       1148, 2084, 1205, 1264, 1309, 1316}], 
      Line3DBox[{963, 1142, 2073, 951, 1303, 1304, 1302, 2102, 1306, 1305, 
       1166, 1173, 1165, 1194, 1199, 1257, 1333}], 
      Line3DBox[{964, 1143, 2074, 952, 1133, 941, 1235, 2091, 1234, 1236, 
       1266, 1267, 1164, 2076, 1268, 1331}], Line3DBox[{1187, 1269, 1332}], 
      Line3DBox[{1192, 1191, 1190, 953, 1992, 1134, 942, 1241, 1242, 1249, 
       2095, 1248, 1247, 1160, 1167, 2078, 1278, 1277, 1279, 1321}], 
      Line3DBox[{1224, 1225, 1240, 1153, 1313, 1324}], 
      Line3DBox[{1325, 1312, 1195, 1179, 1189, 1181, 957}], 
      Line3DBox[{1338, 1263, 1250, 2096, 1230, 939, 1125, 2088, 1227, 930, 
       1116, 2054, 919, 1105, 2048, 905, 1091, 2044, 890, 1076, 2042, 875, 
       1946, 1061, 2035, 860, 1046, 2023, 845, 1031, 2013, 830, 1016, 2005, 
       815, 1001, 1999, 800, 986, 1995, 778, 972, 1993, 776}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
+N+6G/paRNs7T7pmOxtzY49Nmb+R5oMZgqwcus9p9ewcLtHSjNPqevaTGCwM
XKAMtrX9ev0vCvvGyGiyUfJmanNBNAv+4W2jkv/gPcOsx6NHEwIO9iQtjerg
kZhua6BiVCmC3trcr2NvUZA96+Ynd5uAQEZX1uX+r/18+J7aU5Elhdx1LiXP
jEksd9wv8yHv9/UsbRZ3beihUB9n5aL0k4EPz3i7r12l9dnVPkr6NoUdC+/G
al0jcMHFM6yePu+XbBUv7Mxn45vyKE3fESz0M29t0eP8et9jyhu3rDTgQMkl
ZvDCaSZGj5TebUbnW0fSkudX3oxToX158q0svI673xjdKYKZVOK5fDkKGhbm
24/dIXGgZkH8UNnv2zX51vwxotUU3uhIKjQupvm7qnOO1x+8jz15fcjJ4zld
R7oeqrz+wYTaxvUyjH9xX9cnii0+spKNVJJ6F+DDQrSpjHiW4M/p2dR1Qdw/
j8aV96DhWG8CM6zLfMwSRBiYF7PzSD6FVVO9l0/dTeC4FWdSbqIIxppbKwNN
2ch9fl6JuY+FOcdjy7aL6Lzhq/lpw/m/+oQ1rUEtBDptXR2PJYtg17fS/N5h
uo67xsh1fyIw8KGy3erp7+s/de3Fx4QZB6cSb89jpjBhJ3GmS56ua+y9PnKO
4zmIXjylKSyLieRwLd+N5H+uvkxdyntTupv255Wtd8aIkdBvUp6p/+zX+khq
vUw8MsCG70+1c9GlTPB879+vaxIhTfqc8aZiDsRkNqdkzGAiMIkoC6DzmMVH
t8wtkRwsTZ690HYBE6/W6o1rp/sBW6OsAZsLFAR6VbnFtQRMh7gnvFJEGJfx
rSbgNIXXsaXLxlUTMCkRuDk8/nP+iTBQFW0v5cC4Uj98liITUQez7P66bwlg
OjR+esjBNM67XQ/lmajlzZ56oIbuu76lpwaeopAx+kQRySVQ/3RV+taHIrBe
v2CfCKLzlXaJVR9JoO57dl7jo9/Xc+6rg4ypP5tR0H7hR6VOI/xsrO9q0Pr0
b9wUsG0kG5qbo98WyzTi/qdedg/NC/YKviQVEs3Y3haaFjymEfW9quoz/iFf
/a58+E73G8feUsixbTwn0Uv3t8cPLdf0FeHGttSdTTcpBKh93qwmQ6Jr0je3
0kgRegsy2fZhFFjOqRK9o0iYV2yICbv1+/p08tWa1r7loMnu6Ytz2Uz0jdo6
IvYm3VebWHe93ctB3dTt9jrVTPhXPPKdQfO4niiDLRnLOCje1CoXX8nEmOrq
RfGv/sf2af/l8wmGZ5rKDC9x8MJ4btOQLhMT04tar9X+P/Yh/6/l3xwnrA+7
T+O/aN8SzelMXF7dmTy36vf3/UwWVR04SUHv2zeLvHoCTxZ+Ne948uf015wc
K31zOIXEC+2Sp3NIjHRVHbm78tfrm97znq9J9znW2tlvuy/TvGkoqlpZ9Of0
4eov3mVewgHH2elF2zAmPg2bVNrxL/z2K7lrw8HbkcJm7JvB+Pi2lAWNc9+j
+z/89+PhV/JpijsnYSkFu13fNz+yJaG4smEwsfg/p0/FwIukaREUbtVoLRhD
83Ttc3dVCug8nLqgN9gsjo2ze7Z8CFJkwfHF48dXWv6cns1nCswvGrGhezFG
f0QoCy++qWQ20Ly78eRi5drPFKaExxTb9zHwesM5+95rIngbhpQeBp3HdvHi
/I8xMUMpNHEV3R/a+J5s/FhKPy/x1trWloDO/umjfei+ZUH2UqL3DQX5zYuj
r68hcKhI891SOn8m5RyYzlGkMF7NqUPzGgkvz22DFN03mijcrlk9hUKxwSnH
xkgSmR0bH0bS/ILvpJVd5khB3Hz922kTSKRrtBmx8n7th9ztcU/d2mneVLgy
JZpF4tDAKv15dH/iGvF5l7MDG3JaOzLqHVjQbnc+vYg+R4x+nfRmVzbeecko
PF3PgkVS2LNDNB+pKlwx3kqV7ofX8/PW3WDivcMupk6zCMWL/IcZ1zTjQsP5
qI8sFsbYctY+pfvhzIsGm7zk2Ii5ZpIw8wYLCb6nzSs66D5Bf0eNYXszZKMf
nejLZ2HJCMPW8I+/1j/ufOeai+84UOxVq8zuJvHpodishPf/Io/VDE7NpPv/
h6Vsm/103+vEudZymPv761x7rNWYvohCmcPYsTLbSbzOm7yJWSSCmpVKZMJl
NqpNxTj7prFg6WWYuZ7Gz+uuI+C1UuiXMLM9P57Ad4XhCstviFBwYFSnijmF
itoVa67TPGji55O5h5//OTynLIuZa3OHwidH31a/qwRiDm+00aR5kOTekbNc
n7LpvufhG12aBz3fd9lXkvf7+zJcr7oUvqDg9+RNq+pWAn3NJXM23xEheKQh
FjawwYsztg5sYWL7Gauid3TfsvuigQpHlsK7kfBUuUtC2nXbB5lyEXzLNYae
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
wdRvaX+HFYGLyYEZOsFC1JcYVr6z5+FsoK2y9Di6Dzw63M4lgtbnY8dSgQsP
a4vtTIV1DBQ5b5rsd1WIm/xO+25XHvoeWpUev8ZA7NbY8pBbQiiNWtry0YOH
w1FveO+dGLj3hDE6MIV+vt7RsuMJl+bhrAVNFUxEXrutvcFeiC1K+zefzuWC
Kxi15kgUze/GUBoO24S45ZOYN+4FF49nvHlUYc/EwiXsb9Z7hTi9QW/O5XIu
lCtyA+smMVERHOauf5jG28vmI5LVXBztLe68wiOx4rGdhswJIeLHBrr6ElyE
HzqqOTaFxJOpdmxGqBAbrRtyGWwuZLmptthPIvpkru3Fi0IY/z1vR/7veTvy
f8/b+ThbK/NwJxdTFh4ILflCYCQl70MmCfFk+mT2k14ufoYYyyv+NVdwyZdg
10dCBKzUDOF950JYGR+ufpJA2Leb46lnQqgtn+c9cjiN27Bv2q0rCeQcqCVX
vxAiPCzPTU2SzktOowx3jiRwZOhZSNIbIUaFTZmjJcfDk5dKQzcqGJh6QeL9
hzohBi+0hGsq83Dp4Z6X588zYDLvobtmsxClK3OVtDZz4fdSNXC2GAsu7q39
R2l7j1ht6svdSds7LzEo4DUTxSpjmAW0vSEXJ69Z6cGFQ3uawenzTFyjtI72
0PZqSoUIig5yoXv1y2usZ8J2SmDoxLu032zMw+f7cbHg8yKnpxPo57+n5eo9
FqJ9hu6PmFNcfJhhNKmxiYRe7OgSwzwhxPYVjPgSxkVXANMwj+5vR/8o2KBf
KsTzv+ftVPw9byfj73k7tjlTus9d44LvcnPtFW0S9z8fnDtACHEqVcLxVTwX
wWMHX0Z+JDBbTPjuJVeIHXK9e3qSuSiMvXp65VMCpk0PMo93COF5YlOb/EMu
Xqf5vUvzoXlfkf/lGX00DlUibs7I5OKARV5L1WICb0ctVC38KcTOcaXWc/O5
qNtwYez97wxwJjf9MBlN83Rv1YIZJVw8/CJ9eWkhAw27Z7Y/kxPhpNuBByYS
tD4/Op+vWcTCCKNZgz45QnhMErN9L8WF2z5LGfsfTGQn9t7+ViJEWWJJoo0C
F8M2fveVL2Gi81st5f1OiL3T1+wtU+Fivwt/6ulQJi7leu4jaXuvOvl4LNCg
z8WWeYtSrJmQvNr/WZcnhGPyvf1XZnFxyfVx4yk5JiY72M/0+0DjJKPUoF2X
i/SY1cvGMUgIH6fkZnz59bydrC21Sw6Di7ToeZUmW0gsMOLJfJUUoVyhp/ee
OReeE70Ptk0lsSdmxvRhiiJozrUMe7+GC72cE8WmrQR0VH5afp8sQkf+hNx2
Oy42L6rq3ZhC55m9hDZ/pgj77Q9YDzhzsWFMzTo1DwLyYud9c+eL0Db13ajv
O7jwKstVjKX74TZF28bjRvQ6jaWPu/ZwEbDxQdT7LgZ6lu0fqWsuwjyTYEPD
BxTkM7/q6+9jIelto9CoTYj+D00RBU8otGanm/bpsRDGPjJ+eK8QZvUuJfq5
FCwk1Qj3fibUw9oK8uj4GlhL3kqg+f4J+TDZyAImlHa+uLBzjAjdZns7RpRT
kDxpLO9+iolctSUGgwoiGCxm7t/ynsLeI7Ije82YmLhouGsoba+2n15HKoOC
2bfDSgskmegy7ysRn/XreTshG8S6p7dS8Ng6ICi5SEJzhPvCsmUiOs/q/bD9
QME0KVx9/EYSWW93XJWzEIGquyh38DMF3Tu7nSYqk/j0qO/d6vUiSPqK+kK+
UWgRe1xdyyJQtG1S2MHNNB/84uUZIc6FzVPn0hU3CRjfr/cK2yXCuovLV4SN
5uJ7XdmxnVsJHFbu1jnvLcJAaOYdibUUrgzFery/w0KK9IKiookiWBaM3Oe/
kcLZjGXlq3ez0GUnmFY+TYTgkB/rRJspfN3bL3VkDgsXfswXvdCh+f62NgUr
VwqbStXs7bqZ8ElKz0wzFOGcpvyJRA96/csRFbwsJmarrFsYZiZCtU61XfdB
Wm6/PkLDjwktS63xdjYibMz32aLvR6Fy3tVKheVMdE8nvsk6/3quju63uqk3
wijsUumvG/aKhPaHiJGbaLvkHI5sKYik9bkxV0k8jAS/JuEA308E8eoWVu1V
Cv6Bxx89WU1i9jDhcZcQep2gdy2GHA48GwyWyRIssM2F7C5LEXDJ6o30Rw7s
Zy0NNI9jIS7854SlG0XYu1PfvvIHB+Y3V8jM3c7CrLTYy0e2iXChx1sqfwSF
+S554i+ns3BnR8lAkocIxyVCrEfKUEhSUz0xup221/tgT4kvHcfnkvqrxlOQ
sJa9N/iQiceBxtNrTokwWm4g9LgqhYfdWskJB5iw621Z/P68CBV/z71J+3vu
TeXfc2/8XSZFvplFQbS2bHRvPwmFta2zYxNEyD14wITSpfF/54VZch6JHR/3
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
PoP3eg03SBawsePbvI89DD45e6bJh/eUAPV2RvXRu2y8P2i0/kUMjcTSuF7e
ZQIypsv0DOrZSJb5IK92lkaKziT2Dh6BMYNWPDEJZaPsyofC8CPi60/+1bqU
ZvumjBw9lI99iYTq8J9cPNEn3znXiq8/KU5+YKAu5fmBupSSA3Up/6r9K6pn
jtmhQMAt4XSeAsP3C6x3bpdOEo8z9+TGrt0Rz0fwtPHE3gtcRMx8NUn2No3Z
VZZ1Q0L4qD5SH9J4mQvzrfImevfF47opA3Up5w/UpfQeqEspTp46UK9SYaBe
5dqBepV/1zzsKnoaYhBKYKh3lXHlKQ4+zeqYlnj478Mh/1+V/5M6kP/ye75d
eDfXaCKBp5qmN1cf58BmdPnziEpabJ3G4AF5xz/Ic2Ub5lR7Mevi6fgotgez
XvouiOT/JB6Je7+49SvOfxoO1Dn0HahzmDhQ51Cc/K/a7Z/UIfyX7fxX5c1x
s0vGniFQNFXJIaiFjebCw0vjGP54oSncdEoIAVlHhe6b3WzYNj1NNy/+6/qo
z6I3BbjzIfttuoV+DhdL9STbV1XRiLo5gj1ah49VXZ+fd97iYlLHR4XUhv/+
/xVXZ0+cvMG4a8QdHh+VddPWZqpwcTey8zGrgsbvMXaXneIJCD1fjsr8I18g
IK/oU7Z4/ecZym/1eMSHWfpkoledi+G1eStHVjN+fqAO3s2BOngtA3XwxMn/
Ljt0rLVWv2jUBq22rgM9igzvvm7o+OghDY/bp3ZaDW6DqTmR+HRCK2ZlrGg+
yvhhcfXr/mpdu79Nfx3k+n/jI24Xz6/zDhcpDQ7XtRNoHGJxWqNS+CivclYt
buZi3oTLDsXMuEieVLp7048P1wmljmECLka2nO/rKfrP+fnrOdPkNYv4OD53
U+GdKVz0y/M0bBmc8Ff9wMu+OLvyZgL5v1bIHbdkw2fdy5BL52g8ObfdXKBD
YKq8y3o7Bg8PvhCks/v+X//fvwuHbDs1nq/SzYeTYFOWPZeDfB/3usXMvNpZ
/yZ3LTN/lDusbeJs2Yh77usdlk7D6vRu/s53bTBJtH40/wnjH1SlN83mM+P7
SrelMe81QmIev3n9k4cLI9wdvN/+Sf0ZjyfXxzu1ofkxa5mjLw8yp2UUHv8b
9Y7EyUMH6gwcGagz8HagzoC45/ubbr18cYHAyMAlq5RT2bgVv9ZoW47453NG
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
pXoGF3lRM7mhBkxcHvF18+pvAli+f3a/x5+LxcUHtRzmUVgceCW6o1+Ae7Ft
Q3bN4iL9nOFGlUUU2u0Hn9kkTcJF7UxN6ScOHqj6uTfaU1hU2BpIjiAx6OV3
s4I7HNxePKpsn+t/5RVKDOQVnhvIK1QbW5O7eiaJTFULDbqejXXr6dGxDD7Z
Wfaq9NRsEnqLpR+FnmIjwaZqD8XgBB+jY9OemJEgJH9uqHRlQ6acPjyHwQnX
oxSedC0gsS08bWn1eMaezVIfd56lEFjW5jrYjsTkdSq3DhMsODw+sj3zEoUj
xLRF5lcE2Lef7ihi1vV+pWNPot0pZPUddW3KZ+LyHQXCKoULzjr3Yyf9KMz4
sumhV6kAU+w4RJwHF036zjNPBDPx0Xz1IsE9Jo5I64+MnczF2FtBayP3UHj+
xSbf5bEA83T3pVp0cjCuIane5xCF+Y7fKx49F+Dtfn729T/quyqEzjdO+K88
O71/yLPb8LtsSwUpgER8crRtH8PXzC/WLMmhcMWyu66vUwB+19AJCRUMfqiY
vJt/k8Eb5sk3dd8LUDHN2utYNBvJdsPO/XFfbofnZnoFM74H6NzD1nZseHyN
6GQx8Xpj5Ax9f2Z8lfvn8orl2Fh6fYyyKROvlx4VOAZLkYiLpi68rmch7f2c
5jjef+V5qfxDntdbR2flWsavGq66klLrycOPfJ01019T/2e+kv0/5CvpFoTf
r/5JYJfD+oj3hzgMDhplbWBAo7PbVjE3mMC+heoaDfE8xG8w31XExDvyCdGl
Fcr4W+VonrszD5UrFo/OVvrf83SeDeTpTJQ3qfLJIXD6gGo3WcjB598F22M8
aExe5JUSU0QwOHJ31JedHLxu27O9z5+GS9a6INEEAo6KJg2Jd3lI5UbZ/mb0
ceIQa1dOZeLsirdTyUgeHh9/F6DDxJ091ypP3NYlUECdcW1fzMMztUqune2f
5MXs+H7Fdg0B/X2ZymfaOFB5/FQvg/H/h2LIDz3JfFy+c/JOfxcPyTtXv5Vw
Z+KvUtKRgiw+9il0tI8t4EHddNq3jYyepIrNKO+bfMy3P5hA7ORhKYqNK5i4
xurkjvv1iA9nz2vNq015qBuyz344812NO+N5JW/acK3zzMnRqq24maMzuzia
0ceuPGvtzzb0zT1X//k1D+QEiW0rTzBx0Kv1ca8MHwfyIgwOZfJQnatRLzpP
Y8HnGtkrY/lQ3aM06LEfD8Gm8i9XX6VRSYQmj5rGR/FSmOVr80C8DrZ79m/U
lRK3X7R85N2zFcvbsFBr9d2tsq04mcXhc+/QMOMcfm7k3gbLcJm5T+p5mDxz
+fHs/+C521+9RyfuPpu458XVfa1c3KOXJklg89fwsn4GP9fFJqR7l4jfTxP3
foXpa0/fbyHgx6uQkrZk48Fs0x1K58Q/v3zdsc2zpwpga+0y5dtoNoZePqKw
d4v4+zZeHtkVzS8IKDb5qQbuZ+P4kg6r78dpHBST99TyltN5sJcP6q4U//0h
LqLfsKqD0//rHovnP9xjEafnAd1JT/d7E8gOqZXYwvC4PbmCMvNTNI4P3HPw
+795z0FcntHDsfctNuwisPqMSXdJ1x/9m56pZBXR8FkcpFtpzYfoHjcmsZCL
eelmG8Ke/fXvxoWtrzch+LhEvNbxreBifqEuy/lP6gn/L1nQosY=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{408.23049818171796`, 210.57551536027742`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {0., 0.595401382704308}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.0227591169310912`, 1.3000792051855394`, 0.789126974101192},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6187610227302203`*^9, 3.6187610692442207`*^9}, 
   3.6187616292862206`*^9, 3.618772041146303*^9, 3.618772139106303*^9, 
   3.6187722498073034`*^9, 3.6187723254133034`*^9, 3.6188246392556505`*^9, 
   3.618824774429651*^9, 3.6188282539786825`*^9, 3.618836137517727*^9, 
   3.618836305899727*^9, 3.618836378453727*^9, 3.6188366247967267`*^9, 
   3.618836688360727*^9, 3.6188371040097265`*^9, 3.6188391505437346`*^9, 
   3.618858403108341*^9, 3.618858637799997*^9, 3.618858949230811*^9, 
   3.6188591956681395`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polys1$1$1", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "//.", "lucaSubs"}], "//", 
  "ExpandAll"}]], "Input",
 CellChangeTimes->{{3.6187613680052204`*^9, 3.61876141532522*^9}, {
  3.6187722157233033`*^9, 3.6187722162233033`*^9}}],

Cell[BoxData[
 RowBox[{"0.07079004920350838`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.11988042079278372`", " ", "qq"}], "+", 
  RowBox[{"0.11801951228367245`", " ", "ru"}], "+", 
  RowBox[{"0.1236615906306724`", " ", "qq", " ", "ru"}], "+", 
  RowBox[{"0.27656174157334207`", " ", "uu$Shock"}], "+", 
  RowBox[{"0.6527723141624201`", " ", "qq", " ", "uu$Shock"}], "+", 
  RowBox[{"0.6426393037349973`", " ", "ru", " ", "uu$Shock"}], "+", 
  RowBox[{
  "0.6733615227170539`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]], "Output",
 CellChangeTimes->{
  3.6187613176912203`*^9, 3.6187613724252205`*^9, {3.61876140270522*^9, 
   3.6187614166852207`*^9}, 3.6187616293262205`*^9, 3.6187720420463033`*^9, 
   3.618772139146303*^9, 3.6187722191233034`*^9, 3.618772326093303*^9, 
   3.618824640205651*^9, 3.618824775049651*^9, 3.6188282546386824`*^9, 
   3.618836137557727*^9, 3.6188366252767267`*^9, 3.6188371040497265`*^9, 
   3.6188391508637342`*^9, 3.6188584037383347`*^9, 3.618858448347889*^9, 
   3.6188586384299903`*^9, 3.6188589500008116`*^9, 3.618859196248151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.6188367385407267`*^9, 3.618836741100727*^9}}],

Cell[BoxData[
 RowBox[{"0.07079004920350838`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.11988042079278372`", " ", "qq"}], "+", 
  RowBox[{"0.11801951228367245`", " ", "ru"}], "+", 
  RowBox[{"0.1236615906306724`", " ", "qq", " ", "ru"}], "+", 
  RowBox[{"0.27656174157334207`", " ", "uu$Shock"}], "+", 
  RowBox[{"0.6527723141624201`", " ", "qq", " ", "uu$Shock"}], "+", 
  RowBox[{"0.6426393037349973`", " ", "ru", " ", "uu$Shock"}], "+", 
  RowBox[{
  "0.6733615227170539`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]], "Output",
 CellChangeTimes->{{3.618836732860727*^9, 3.6188367415807266`*^9}, 
   3.6188371040897264`*^9, 3.6188391510137343`*^9, 3.618858403748335*^9, 
   3.6188584484178877`*^9, 3.6188586384599905`*^9, 3.618858950020811*^9, 
   3.6188591962681513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "*", "0.02"}], ",", 
          RowBox[{"polys1$1$1", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", ".18"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "}"}], "//.", "lucaSubs"}], 
    "]"}], ")"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwlyE0og3EAx/GnpSGs2GJFGNGazGIlW0tjlx3Yep5WY0tt5qIxSprJS1Mo
nBbZLC9lpY1EzcHbDpQyRymag3Jak7a2udD8f88O3z71FVkd9AiHoqgaEkxU
NOq8mbj6ibqh4a9XOAklUYcLMlRwGdLa0CosinRswIjOuQmp7lCZj+gMm/iQ
G5Xsw+uLKdb5yrkclIvk1A7x3nP6ekmULtlj8K62fCZBPGaOZ6GieOsbjgvK
knD9XV3wRXRT7kIoq/BrVVkYY820p/ugSlDVD3mdEhP0NGjM0NhrdEFbMrgA
pyWGZagLWPLquWc9xGflxDl8tGkuoLiOdwVD/CRtJobjpQys9/pzQ8SVXIr1
82Q0YSFWfQRYh4VKvpWYehMLIH+toxq+LNpZs7KSVug72JbC3Z/mLvjA3Cqg
XOnSw0PnkQEmBloG8z/Lmt7X/tmJbXtNnDHiP38p9f4=
  "]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXVcFM0bwM/A7sDAQFHE7o4xMUHFbuxAsLC7RcVAFMSiROmj62CPo44+
4JQTDsR47XztQH7+bndmuWfe4Z/34/fdz97sd+eee+aZ2dkOKzZZra4qkUjm
1pFIqv3977XhroaP9iRzHUoswioqHnIS4c86pdnhfxwTKT7lZsfCgjHxFFeH
GAVo10ZRfKnuPCEUz9Mdf4fiWTruQnH+79gIyMv44xHkxfz5Kb6Sbw/FNXz7
KW7JXy/FV/B+KC74ZHFujb30aqRtMeUZcuwZcuwZcuwZcuwZcuwZcuwZcuwZ
cuwZcuwZcuwZcuwZcuwZcuyZwTm/uk0P2RbfpzxDjj1Djj1Djj1Djj1Djj1D
jj1Djj1Djj1Djj1Djj1Djj1Djj1Djj0zOPfOc/uaTpPzKc+QY8+QY8+QY8+Q
Y8+QY8+QY8+QY8+QY8+QY8+QY8+QY8+QY8+QY88Mzq3W9fNMyjPk2DPk2DPk
2DPk2DPk2DPk2DPk2DPk2DPk2DPk2DPk2DPk2DPk2DODC/1HwejPCkZ/VjD6
s4LRnxWM/qxg9GcFoz8rGP1ZwejPCkZ/VjD6s4LRnxWM/qxg9GeKC9cVyvAc
yvAcyvAcyvAcyvAcyvAcyvAcyvAcyvAcyvAcyvAcyvAcyvAcyvBMcXA9omfI
sWfIsWfIsWfIsWfIsWfI+b9jIyDBniHHniHHniHHniHHniHHniHHnhkc9x/y
/0F/Jhz0Z8JBfyYc9GfCQX8mHPRn0F7SnwkH/Zlw0J8JB/2ZcNCfCQf9mXDQ
nwkH/RlyHA8ZnhUMzwqGZwXDs4LhWcHwrGB4VjA8KxieFQzPCoZnBcOzguFZ
wfBMcfz7TnmGHOQblGfIQb5BeYYc5BuUZ8hBvkF5hhzkG5RnyEG+QXmGHOQb
jP6cz+jP+Yz+nM/oz/mM/pzP6M/5jP6cz+jP+Yz+nM/oz/mM/pzP6M/5jP6c
z+jP+Yz+THE8/qI8Qw7Gg5RnyMF4kPIMORgPUp4hB+NByjPkYDxIeYYcjAcp
z5CD8SDlWRiPU54hB/UNyjPkoL5BeYYc1Dcoz5CD+gblGXJQ36A8Qw7qG5Rn
yEF9g/Is1Jcoz5CDeh3lGXJQr6M8Qw7qdZRnyEG9jvIMOajXUZ4hB/U6yjPk
oF5H+IFD96eurJ7EJZsdNC2OLKHyasiF4xHjeIqD81P3F3Jwfoqz2g/rkOB4
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
885vzO6McHAlx/PduRRt8l5zqKhjGuYI87Dnz0tSjpL7Qs5/InjdspGLHMj5
cfudxmWreh6+RM6P2x+0p/az2y5i+/H5rQYdOBPunQ+P59Q95i44bnEe31/S
fpuHkwq3DbpK2oPP06/msM7lZakItAeN9LTINFfnozczo9sdf02vl475S2dG
J1D1fMzh8W5X//8XQx2POTyeb2c4dTzm8Pho3ecGUcdjDo/fozuPN3U85vD4
3TruzFgnb02tk8fH//d6b2tqvfd+/nhqngVzePw+vp3U8ZjD42N5D9TxmP/3
+cMZ5w+n14Hz95Fehy/w/25PAqM9CdTxQj+kjseccTy1Dhz3T8hxP4Qc9zfI
cb+CHPcfyHF/+O916dbUunR83yHH9xdyfB//+/hwej25cF/++zwJFMeeGZxa
B449Q449Q449Q449Q449Q449//e6dGtqXTr2DDn2DDn2/N/Hh9PryQXP/32e
BIpjzwxOrQPHniHHniHHniHHniHHniHHnv97Xbo1tS4de4Yce4Yce/7v48Pp
9eSC5/8+TwLFsWcGp9aB6/dnBaM/Kxj9WcHozwpGf1Yw+jNcl25NrUvX788K
Rn9WMPozPD6c4vr9GZ4ngeL6/Zni1Dpwfc+hDM+hDM+hDM+hDM+hDM9wXbo1
tS5d33Mow3MowzM8Ppzi+p7heRIoru+Z4uB6RM+QY8+QY8+QY8+QY8+QY8+Q
83/W1Lp07Bly7Bly7Pm/jw+nOPb83+dJoDj2zODUOnDQnwkH/Zlw0J8JB/2Z
cNCfCQf9GbTXmlqXDvoz4aA/Ew76Mzg+nOKgP4PzJFAc9GfIqXXgID4zPCsY
nhUMzwqGZwXDM1yXbk2tSwfxmeFZwfAMjw+nOIjPDM8KhmeKU+vAQb5BeYYc
5BuUZ8hBvkF5/u916dbUunSQb1CeIQf5BuWZWk+un29QniEH+QajP+cz+nM+
oz/nM/pzPqM/5zP6cz6jP8N16dbUunSQPzP6cz6jP8PjwykO8mdGf85n9GeK
U+vAwXiQ8gw5GA9SniEH40HK83+vS7em1qWD8SDlGXIwHqQ8U+vJ9ceDlGfI
wXiQ8gzXUYO6EOUZclDnoTxDDuo2lOf/XpduTa1LB/UWyjPkoH5CeabWk+vX
QyjPkIP6BuUZroMFdTnK83+vmw2nOKinUZ4hB/UxyjPkoN5FeYYc1K8oz9Q6
ZP16FOUZcv08WUvyU+xTtu5Gq8lOIsc+d+UN6+/USVxnjn0OGKaZVnn9Ofb5
QReXxHXO2Ke/7nskcuxzre6+0/XGdYz6oYnuuug64cMJr7MmVWo/9ukWdOrZ
xUrtxz7ntjCV6K2rF3w2PpTUqnL7sc/sF9b9K7cf+5zgsuJZpG0h5bOK7l8a
yme8zrOG8rlb5/kB5ZP3/IDyyXsuonwG6DwXUT4DGPU33n8h5ZP3XEj55D1r
KJ+85weUT97zA8pnE53nIugT5eg8U5xz6JWSZVtM1994/wWUZ96/mvLM+1dT
nvl+fo/yzPu/R3nm/dN1zg+M+hvf/+n6G++/gPLM+y+gPJfq/Kspz7z/e5Rn
3v89yjPvn65zup2ZvmayUxblucmS01eLI7Mpz6d19yWH8sz7V1Geef8qyjPv
P4/yzPvPozyvY9TfynR+sijP83QesinPfH/LoTxPiL22pqIil/LM+1dRnnn/
eZRn3j/FOZPYZv2jbJMoz9d0/pMpz011/lMoz2d0/lMpz1V1/1JSnvk4k055
/qjrtxmU54+M+hvvP4nyzPtPpjzz/lMoz7z/VMoz7z+N8iw7c//qxUrtx54H
LmmcbVKp/djz/LywislO4ZTnSfZd19gVR1Keh7S4leXUKYbybKa7X3GUZ0Pd
fYmnPPP+5ZTnPTr/sF5lPeIzo/72ROcznPKcr/MWSXmW6/zEUJ6Dek2TRFZq
P/Z8PS9xTVGl9mPPZ+wHZ/+p4CjPCbrzJ1KeZ2/7mN5j8hHK84YJuX+6THai
PJvm3XaNsb1Ged7Wa9TVzpM9Kc8zdPfLh/LcU3df/CnPBrp/SSnP/H9dZdDz
3RaB/U0qtR97vqDjTpTnSV5Hs8MrtR97PqQ73pPyvHiJq2RjpfZjz8N05/Gn
PLd9aedWXhFMea7Jcyof7sKfh8qHJ/OfS+XD6/l2UvlwC/66qHx4Ke+Byocn
8N6ofPgFo/72b8X//8T2Y8/N+PtI5cND+PtO5cOL+X5C5cNV+H5F5cPj+X4I
82FUvlXXb6k8OYbv55TnI/z3gvLsxH+PKM+e/PeO8hzOf08pz6n895ryXMjH
Acrza0b9zZ6PM5Tn7zr/HOW5Dh/HKM9t+LhHee7Fx0nKM+LjKuXZko/DlOc+
fNymPEfzcZ7yPJr/XaA8K/nfEcrzTP53h/JcxP9OUZ5X8L9rlOcVjPrbK/53
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
Bzu4NngdTzxjPuPitc6Dp3LEM+a3YuY+CJ4jJ54xv+L3sH2yQSLxjLnjtXVr
NBGJxDPZx+Dsx4A3qxXEM+Z79+/5JDFMIp7hPgPYM+brl5091HVHMvGMufWM
5mkjTVOIZ8znjblZ3+p+CvGMuWW/LrPXnEglnjGfYCJ12zMojXjGfESzoY/O
PUsjnjHvb6Do4nVFSTzj5+KnaM/881QlJ54xPxNveWXT2UTiGfOsm40n/pyo
IJ4xr39I/e1YtSTiGXPL5S53G3JJxDPmF8YuXOC2J5l4xjzPpG2dzoNSiGe4
zwD2TPY9eOZpMywwlXjG/HLa6jYp69KIZ8zv3zXLnt5JSTxjbnj69f6ih0ri
GfP5NkG9Vl9LJ54xvzpty8P3czOIZ8yLeg64sKdJJvGMn4t/UpZ/YGyAgnjG
3C409+q4bUnEM+Y/j2aFjx+WTDxjfnxOeu6EKinEM+aNuqS+MlemEM+YX/uu
MJh0PpV4xrxLBmc8eW4a8Qz3GcCeMR9lGzN36lMl8Yx5+qjILdP804lnzGc3
CjtrsTWDeCb7JzwKvmM5NJN4xnxDWIBiuiSLeMb86zHfkhlpWcQz5ofn+nyf
eS6beMbPxe/7p1VL95PJxDN5rv/OjBstFqYQz5h3WX+y4/keqcQz5uXdEu7U
qEglnjHPf/O5x4G8NOIZ87tB3UO/eCmJZ8z3b14x2HZHOvEM9xnAnkl7PueO
WWyUSTyT9kTUSCt4m0k8k/bsHDltqjyLeCb7LQy1z1M4ZRPPpD2//OYOW51D
PJP2xD8qDhmcSzxj7ozOSpsZqIhn/Fy84SvrkPIVqcQz5gOv57m/Hp1GPGM+
23LshQftlMQz5vaSsINpv5XEM+bOoSabIorSiWfMw1Y5L/WKziCeMc83NLC8
eCWTeIb7DGDPmDfe+6yHrVU28Yx5357z2izqk0M8Yz7zYVrdyQ1yiWfMN18c
8mvQm1ziGXOlx+ztTVariGfMC3/Ws62tJj4Jfz4rZZVkXB7I68qQ9N2dKYtG
KWFdDrW+aOXNdUmH9Td0tH95uUnjDFhnQ2/v3Zl36mcGrKehebusQt48yYR1
M5TYurzOzOwsWB9D3eLvrIog8yekDkb2GQB1MPSnSnmLAw65sK6FBuQXDNky
VAXrV2i9ie9qkyAVrFOhG/YHnO51zIP1KJSfMos76ZIH606oZouub4bWE58H
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
0T36LBT3MxJ53d2eb4+9psdl7gajpE3K6fFX91aDj4vfd5GH684fSvEDh6yW
LiTfd5Gb6ny6UfyE3rplkfd68vSHGAdEXn/pjztiHBD5kSmSAjEOiPz7oJp/
xDgg8qjGJ5uZ96HHWR9O1vET44DIv21c4CDGAXFccFh3vdEUr6vrD2EU767z
4EfxQ2++2heQOFDp/Hrrt0Ue+bUkR4wPlc6v8xZBcY/c153mkvhQqZ06n3KK
T1DvGynGB5EXPrcdLMYHMW9frosnYRTX6OKSP8Xf6uKbO8U5sG4B83t7042N
SdyoNM5ap5ragsSNSuMIP5vhYtwQuZvxe5UYN0QeveLIP2Vi3CD8uO6+BFLc
renLdpXiBuEHwbw/5p8lEVsrxRPCI3T3UU7x9xuXr6oUTwjvH9ezixhPxDxz
4uP2eStIPBH5TTAPjnmzE+7JYpwR+fiYgm9inBH5F+nco2Ukzoh5VzyY58X8
qoH5GTH+iFz4nRXOI/7OvtWbH6Tm+ygOzoPA8RQH54ftobj++yW1nHWVGEX8
t/HkfYiYh190Mbn/YSOn/95JLfe90fCx3+xXgPdOajmzvk4/3zXdDt47qeXe
bKzWLWTHIfDeSS03OjH+/oaVJ8B7J7Xc5ea7jnaacVZoL37vpJb7MqBVy03t
LoL3Tmo542U73mU2cwbvndRyUxwKks3quoD3Tmq5HWF9rh2v4gbeO6nl3Esc
tzz+dh28d1LLZdR8PRG9uwXeO6nlfrfs1NByqwd4X6eGK7rQbeH51FPg/Z4a
7vHgvNqbOh4B7/HUcPkvj/oFbzgPfGq4VR525WtrXgI+Ndwji2uddy24Anxq
uMU/0yxO+V8FPjWcxufzdtfy68CnhvPzbTRd3cUd+NRwLypMV2pVHsCnhjOd
O3Ln091ewOffdgbMOvOm423gU8N5VN1w63OmD/Cp4R7OPxT22/4u8Knh2gVf
SaveDu87Ic4/LjYILK6X5g88q7kX80dPsrC7CjyrOaNu43Mc5JeBZzUXcXKE
olGbG8CzmhuzqE27V6vcgWc1d2dr6+LM4Z7As5prcLqla2ATb+BZzdl7GM45
//I28KzmiqObNdkivwM8q7mxqia5Vi6+wLOau/u80dkBdv7As5qrX9FgsuGE
QOD57+ca1q/x3SgYeFZz764cf7RxtxR4VnMentXlJatCgGc1Nzvo6E3LGaHA
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
9UbwnlySTy4Q9l2BdUu8PvB/MuR/AA==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
v0srlsw=
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1:eJwt13W4VNUaB+CBIQ7dXdIg3SAlnQLSSEp3d4q0dKOUCKJewgDrgnINQC9h
oai0ShiIKJ2+65n54zvPfO/81tm1Zu298/cc1npo4kgk8qVKqmYki0QmRSOR
dXC7PpV+uhrDVrGXWRL9M2o0W8m2sKh+jnqObWN7WE79L8kjkev6rCqbypEi
ElnMt8p9ov9abon+WTWRrWXbWEr9zOBsM3uLZdBXVif0SVRKNtBOzw5ZuZfZ
bpZJ/5g6o0+t0rKhctXY6TBOpWFDWBV2Up9MpWKDWC32s/52okgkMxvFarKf
2E2WiY1kNdg5dp1lZCNYRfYdu8N8jPRlD52DAvavHq+vKjoHtcO58fmuXBa5
0XJV2SmWEPabDWYtWWJjC7IKbBnryPKzuqw1e5N1Yo+yZuwp9j67ZruZWEVW
SRW33Q5yuVgNfTO5/8i1YxlZBVaPvcTas5ysOmvKXmOPJ0QiG9hRdpKVkGmr
MrDyrC7bJNeGpWalWA22lv1uX5KwwqyIesS+tJKLskLhnMgtl2vNUrGSrDp7
gT3JUrIS7DH2PKttX9azI+wEe1SmFlvHDrMfWfFwbW33e/0D5/mhymC7dfhv
LLnKKTfB/6vLftenULnYRNaI/a3PpAqyZ1k99keYKyo3m8SasGv6LKowm8nq
s8thnqk8bDJryK7qM6oCbDrrzKrb5y5sMDvEngrzl3Vmg9jnrDH7R59ZFQq/
U9aA/alPp/KyKWwWm2HsFraLZdQ/oe6HjCrFFsg1Y3fDMagS7LlwbM7fJmO/
YmdYaZm67EX2JTvNSrE6bCP7gp1iJVkF9a3+VqLYOtLHn+bsXjh+VZLNZ+XZ
Mf0NuSSsN6vEjrN7zOWK9GNN2Z1wLdSjbF6Yf+y8/r5cVjaGtWCJ7EsBXp4t
ZeXYN/prcr6K9GLz2HLNbv4JKxDGOY7CrB3rxXbJnbEDF8KCqBKF822+5JMb
IPe8/lVf3ZLLy/qzNewVdoPlYf3YaraV3WT52TC2ke1g91kBNpy9yHayB+wR
NpRtYOvDtm23MBvHXtG/E9Zn+1ycTWU72V6WmlVki9iH7DDLzaqylWw/O8YK
smpsFTvAvmWFWBW2lH3EvmD5whrLlrD/saMsb7i+bCH7gB1iuVgltpjtY0dY
HlaeLWB7wz0gzH/HUYSNZ6/q35VLLleIjWVb2dssGcvKWrLhbERYn4z9yfW4
4nM+VVpumnP1M/srrCGqDJvKbrMcxjZhHdgr7DrLwhqwNmxz/PpejN+Lwj1p
j20WVRPkXtO/J5dgX87KXdJnD+sVG2vsaXZWnz7sDxvOCho7wthN7HX2kCVl
xVkn1o+9y6JhO6wD68PeZolZEdae9Wa7k8bWqx/icy/MwTdkzrFffc6hiuJx
cjdYVmMbsrZsCysmO4XtYNvDfcT5K8mmszf1++TShfWVlWU92DC2z9jUrDzr
yZ5WP+jTqAqsV7gech/JpWRlWHc2lH3IUrDSrBsbwj5g6Vgl1oeNYp+wBFaK
dY2vdXtZdtaRzWWr2SWWjT3JprPF7Ey4/7IXorE5FebWyBSx+dKKPaOfpi7r
k6hirKO+r7HvGFs9WWx9DOvkFt/N12eRa+LzBDbXdz/I5WCd2Dy2hl1kZdlc
9h47yLIZm4yViK/PA9keubSsIusd9o19zEqxWext9inLYmxpNpu9w/azzKwM
m8PeZQdY1nAvZ9PY6+wDloaVYM+wN9iHLC0rx+ax99lnLDtLzkrG7ynh/vFf
+5KbPc2Wso3sCsvJurPFbFFYu/XpVWXWVz9a7lO5DKwK68fGsP0sM6sTjf1O
w+/1rD6jqsr668fKHZDLxKqxAWwcO8hysR5sCdvA/mQ3zedsrBFrx16OP79k
jsaemcKz0zcJsX3uFo1d73DdW5oHfRxzo/h2wza+M/ZpVi9+PcL8+5r1ZPXj
czIc2zesF2sQP95wbMdYj3Dfi8/7cC2/YsNYOzaWzWK/sO6sdvx3NJx9wYaz
9mwcm83Ox9f2IdHYOQ7nup19niDXh83Wr5S7JjeR9WVz2Cp2nU1hg9nCcF9g
99hkNogtYOvYXTaJDQxzm61ld9gI1oGNZ3PYBTae9Waz2Ar2D+vCasR/l+H3
e5h1C89T8d95WCOOsn6sKRvEJrEfWX/WjA1mk9kJNoA1Z0PYFHaSTWUj2XL2
Ekukn6ZGsRVsc1juwjGE5xUWXkqmslPGdmU14+tLWHOOxNercqx1WNtVHed0
iFwbNlo/Q+4nud6sYXzuhjn5bXydnByN3WfD/barsX3lGsfn6Xi543JDw/Mt
G8Nmsp/ZYNaajWLPsnNsEGvBhoV1iJ1m41gvNpMtZ3+zkewpNonNZ7+xUawz
m8wWsN/ZXfM+D3uCdWHb2D2Wl7UI+8t2sL9YGlaTNWfr2UV2W19cVWFz2AV2
S19MVWaz2R2W29jmrDPbzs6zm+EeoyqxWew+yyfXknVjO8PDnfNXiLVlPbVv
satyaVkt9gRbx/5m6Vht1oJtYP+w9Ozx8NtlG9ktlp01Zu3Z1vg7U8Fo7NqG
a3zcNh+wR1grfXe515PG3i9vJI69U4R3i/1yl9gDn0urmnKL5H5lD/VlVC22
MLy/yT7v/33OvmdFXYsxqiubGtZEdlluLOvJZrBl7CobzbqwKWwh+yN+j1rL
DrH/q/TmVXW2hn0WjkGuSHi2Z6vZQfYdKxzeR8KDLyvLavu4OP7OlDQae3cL
73BHEmLr7uPR2D063Kub2MZlueSsir6BsSuNnet/LmO72Mcsf3hXkEtgVVlD
tkruD5aMVWb12YqksWe4+dHYM0R4luhnG1fkUrBq+kZyq+VOsR/1UZWN9Wf/
Ar2r5Ig=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmXnATdX3xu/rnnv2u4+hQrMmiSapiEIIEQlJSqNv86x5UmkelIxlKHMo
Y+aikFCZJYQ0oEGleST8Ps/vuX/sd3/edfc595y91177WesedVXXDreVyeVy
PfmTp28RcrkRJblcr9Jcrjk8HH4RPhseBveEt9PvoC2jfUf7hfY57XvaT7SN
tF9LPE5jvqX9TNtK21a8ZjPtnZjLHVjI5Z7inhdkuVwH+DX4Wr7rPT4fCbeE
R8K9S33dj7RS2nXYF9CPwn4TvBgeA98IL4JH657c7xP4icTP+F3x2s+Kz7SJ
Vp3xj9M/Wern30L7inZ2wfe8h2srMeZ2+FHGXIl9A3wF/UHY74Qf07PxLr0Z
27zUz/hd8V3PZdxy+m58th/ju8LdGVMWvgV+CK4BP6bnhGsxD4FrHodL6Z/D
fjrXXg4vgR+ENzD+XXg9/VW0ufAwxpeHb4UfhveBb4MfKfXc6313sr5XY58H
D8d+M/wBPBZuy/1XaTz3X827NOf/wcW1/pL2Be08bCt1f8acBs+Er4XP5Znr
8H8fxrehX6H3wt6G+4+F+2LvCE+CX9K6wJPhl+FWxfd6IDHPhm/S+zLmLXhI
qZ9Fa3o39kuDv/cV7O353mbF57wM+yzsr8Lt4HHwGXzWFn4D7o/9PPh1uB/8
TdFftdZfF31V77gp2LYxeM5+KM7brfz/EfwG194Cfwi/Dr8dvU5ar9+K95T/
35J4XS7js0+D7631as//H8uX+PwK/n8bHiq/Cn53zUFr2hz4ZsaM47NL+b8T
73oNY+ZjH4FtHXyg5ll7hWeozpgepd5/ega9X3OuOaZo1+dai07cczbj9ynY
3+bA+xbs/4vgkwre7+/CB8FPw3Phw+Fn4IVwzYLjwFtwrmD/XwDXgJ+HF8O1
Co4hundfvrcJ37sCeyP+H4B9JdwYHgh/AJ9c8B5fA7coeB0/jt6HWutVcBN4
EPwJ3LJg33gfPhZ+QeNTfJHvGiQfx34E9mexfwv34vvvxf4b/Cr8GPwTPBB+
GP4dHgI/Dv8MD4IfgX+BB8Pd4V/hV+BH4R3wy3A3eDvcF74Pfo1+f55hIcF0
PvYjtYd5hrXwOQWvtXxsKWO60q+P3jPavz/A/bn+AezL4TML3iPfw/2w34/9
R/gl+EH5I+/bVHtKjL1uwXttCVyvYD9XfB3ImJZcU4txPeCDsTXANw4oxl7t
oRnYr0k8Z4r/7bTHGd+nxHOo9ddZ0Bb7ScFxSb7xWXScVdyuF7zWet8dxT2l
vXVm8DPINxrBg0q8Xo3hwfBxXN+Ftgt36kxfF3vvEvtbU/6fDl/N954FT4Ov
gi9kzJsl9iXNsc6I9tj7KM7Cs5n/NcxPG3iw5hturvGKAYw5BP6IMUuwN1Ms
wr6Md2lYcIxaCp9ecNz4Ex7BNU8E7xvNSWPtTVoVeCn3mai5g1fAb8CHwkvy
nmu9Y6vE+0nvfo5iON/bQXGMe26EL1Dsgv/hs5u0RvQTaIfDy7nPePgweBnc
iXFTSrx3PoyOxYq9F2GfWuI9crz2jc4frjtB+wluk3iu9Tyt4RO1hxTX4aP1
3ooZcFW9N9wMriYf1HkIHyWfgpsmjisD4Bbyd8UGuC78Ne16eH/6bbTr4Mr0
w3U9vIrn3wJfA1ekH0A7GP4AeyX5I1wH21batXClxHMov62f2GefhetpDRVv
4Abw58zhOfCVvPsXcCu4i/wTPltxWHEmsf1vvmsTfBlcln5x4mv/wl6ZfbGR
//+nfcq1LbBfDm+GW8JXwP3gsvAdzHdlxUj4NK254hDcUGulOAo3gmfQ6mkv
cP8qip3aE9i+od0AH0D/XGI9Iv9X/NZZIi1Swv930Vfl8zLw3fDR8Le0G+ED
6Stg7w7Xku8rrsOnwuXhR+CT4LFae51BeeuLB+BjsaXw/XAN+Hz4ffhO+OfE
mucI+nLYH4ZrwhF+ED4eXklrD+/NW7sthO/Cdgo8Cu4Av6n/4S8ZMxk+Wecs
XGDMfXB1bBncDT4BLgs/BJ8IL0o8538yPsF+L3wMtrXMe4T7sg6f8H8nOJGd
dhFcoF+jGAHn6TfrrIXL0/+QWHcdSv+l1hnel/4LWhd4H/p1tIvhlH49rTMc
6PM8wz1wNbiizky4duIzUBryZPinxBrvcPodiTXYYfQ/JtZmVejH0I6F1/Fe
n8GXw+Xkw7Qr4Qr0o+Xr8GLGbOU9z1Pc07kJn6FzHB6eeh7OhjvxDOsVkxNr
sTHwhZoDeB38lOZGWkRxVe9X1LHPwh3htfCT8Lu0RvAOvveSgnW69Mdc7I3h
n7DPhE+Hv8lbY0lrXYKtNjwa7ghPSr2vW/Fs8xW74V8YPw9uAv8Mr5LPwTn6
UvbdO/TtpEO4tpbiean1l3SYNLvOT2mw+xOf/9Jg9+kaeDXcHZ6VOs7I747M
HE8f5D4Rn7kZe7dS6wvp3nv5bCbjj1ScLPX7BngRz7Y3Oqa3VtxI7cMdpG1S
+/D58LzUe6qt9FLqNT1PegmuoXgLz0q8Xt/m/R7KgbTPJyV+x8+1Lxh/kN6P
8Q14hgmKV3xeHx6v+Yf/Su2fd+o8Su0nd8DL+awtvJv77MJ+tfYg9t2p4+c9
cD44ztwP/5s69t4tDZx6/14Lfw23g6+Bt6W+59XwitRrfaE48Zg9fNeyxD75
H7w2tW90ljZL7T8XwyXBZ8F98PrUPnCpchPWZan8UTo2tT9cAu9NfV7cC/+e
el90lZZIva9vggvBce8B5TWp9+Ytmge4LnwB/AdrN5T7t4CHJV7flTzn2NTa
oKV0bOLY/gf27xP7xiHav6n3/s3S86nPiNuko3jm7drD8knsHbFfL22Z2oev
k05LHXNu0DOkjjm3Kx9MHaNuhJelPgs6av55zhe55z2802rsrbEPhDdF5wnK
bZ+O3pPaF1MYc7z2rHKjok/Kz6frPIbX8i5TsZ8AP8eYCantTwfnEYonQ7FN
o50I91D+AZ8K94TnwHXgXsop4PpwH/gI3v1vvuN15SjYa2N/Ufk33EBxGF4I
nwn3h9+HG8L9gjWgagHKIWdgP4n+Bb1vYu36G888HXtN+Plg/ZvA8/LW7Dld
l7f+qgjPVVwKPms+Ds65S+BZeWvwMvAc+LHoPab92zn4XFutWgK2SvB8xnyc
WPv9rsJHcGx/jT4JPpvG0HegvQOvon8x2u/lt+cH52gr6Y9mfnZiHwePoq+M
fQH3bF/M6RQjqzLmXz57A1s1eBc8Hj4c/kvnMzyNvhrjP9HzYJ+SeF1K4KmJ
5/zT6Dxc+XudzGf8bOzHZ9YHU+AD4O8YPxzOZ/aP3nCZzN+h9U3gtxKv785o
TSy/2hWtX+U//0afQ8/Au6M1qNbon+g8R351QuZzcSq8J1qzan3/i9bH8rFP
E/v2v7zXcZk1zZvYj4X38tlk+BD4N3gUfCj8e+K1UD4qnX8F/x+M/Vf6kdgP
gn+BR8BV4D90ZsKHwX8mXrtj4P/gCXANeI/OJfjkzDpmJnxiZm0xTd+VWQ/N
gKvDuxk/ET41sy55C66dWQ+9DdfMrGOmy0fw4dNKPM+nZNY0s+BmtInYlwbv
9b0s7TTlHYn3yA/wAXz2aInnoXKwltNz7husu/T8FYO1nJ6nTLAW0vseQ+sl
n6evEKyd5FflgjWVfLJasBaVn6TBek/+dlSwftZzHhqsvbWOhwRrG/nSwcF6
Uusln7oEjonzY2ngSTx/abCeVHzIgvWh/LxqsB7WvJ0RrAkX0denvQYv1vwH
5xfz6L9KnBOVoT8uONd4R2OjY7Ri7ynBec17WsfgXEb5Qc3gfGS+9kJw/vKu
/DM4r5mrdQzOgxbQNwjWKh/QNwzWSx8G1wMyzXneekTxajNch8+GwguDa3uq
d0ob1Q7Ood7XtdF5hXKH/TO/zzDFh2DNL5+ZEh0HpEk+TBxjt3P/Honz3/Hw
R4nj6vd5n5OKqz/CGxLXN3bmnaMot90FPxx9zum865P6+W/X3GPbzT0nM6Yn
vAeeArcKzqOXKS4mjvnbsJ8bXAdYQd86OO9eTr8gcczfypjn4f+4z0T4vcRn
xxa4W3TurfrnkcH5mvaX6hZ5rUXedYuC1g5uEqwb/z8fxV5OPob9rGDN85Fi
Y3Cup/1YJTjP0j7VOXwpnNEfFpx7ag+qzqZ627pinaa8/DlvLbCv5j/vmk2q
9co7fkj/70ffJbgOqfpb02ANtoT+f8G1mjX0N9DWKD4H14r20TvmXU+qoGdQ
XsO6v534TFRNS/l4F31/5jNP+f606Piv2u/O1PmdYtrU6HNEGvXN6DNXOuf1
6LxCem9MdC4hXfQP195R4hg4NjrfkN6YHH2mSO9NjI6N0lQDovMZ5cXTo2Oj
asXjo2OvNOGE6Ngr3TguOt5KT6oWolrlDTrDovNDadFJ0fFWGu+l6BxMOfIr
0fmM9OTg6BxMevKv6DP4yeBai2qkqpXqfDta88wc/h19jj4VXANTvfpWnSGZ
cwz5Z5vM+ljn74jouoP0YcA+J7EOGRmdY0vLDY2uO0izDYrOu5RPDYnOA6Xf
hkXXHaTfRkfnitJ+r0bnh9LJv6auz+hsHRWdh0t/Ph6d3yqP0Hmvc/9G/n8i
Ov9XLvBVdN6lGvKs6LNPvyl8GZ2bqZ48M/qc0m8Ez0fnwNKKL0TXKaTDZ0Sf
Tartb4mOHapFbIve83fBW6P36p2Kq6nj9hB4Y3S+pN9WPo/OD/W7yYbo3wBU
W94cnRPqN5QtqffaUK79OjqO3A1/EZ1z6reDHtF6Wtq7Z3SdRflpr+j8RLlA
9+i8VzmO6rWqyV+sd4iuDUmTPxpdp1DOKO1TVRovb42rnG41/FR0TqWc68no
XFQ5VyvW/dSC49VD0XUl5cXPROeuyiWfjc4/lbv1i64RqC7UP7qOoDpP3+i8
VHlK7+icR3nNy9F1AdWXnovOaZUP9omugyh/OSdz7UNxdXh0/Uuav23m2qX0
p/S3dLjqxh0z/66j3xpUL1dN70quGZK6hqwa70up45jWtH/qOKk1fTl1zNFa
jEhdz1QdW7V5/bZyufZp6jlU3fK4Yp7eWboqdS1RdexRqWuYqm+PTF23VN17
dOrao+rkA1LHOuUpqvHrN5SLNO+Z81Vp43Gp96/29cDU8Vb19ldT62HVtMtl
PvOU41TIrIFUm03h2YnzhYqZ9aJ8tVLmM0++Nz61NlZMmAhXL7Eu3S+zjlft
VHpW+dEG/KR85nNUvwWUzXzOqfb7Smr9r1r64NQ5her2e1LX1qQ/62Wu70g/
1M1cU5MOiZnPPNXbs8znourGp2WuwUmDKfYol/mMZxiTuias3xR0Jigv26ia
Sea6oTSP3lu52CbsZ2auIUqfnJ65Hird0jBzrVOaR3V9/S52feJ6v37zug5u
lLm2KB3SNHM9V9qmfub6rHRRi8y1YJ1r7TLX1pVD6XcV/ZZ6e+LfZPTba1f5
d+aaoM47/W6j355u077KXF/WGd0ycx1Z+vb8zL9d6axslrl2LE2lfSm9dwHX
bmdOriqxLmqSuaYsTXhh5hqodMtZmWvQ0oeNM9dSpbv+D907E/M=
          "]], Polygon3DBox[CompressedData["
1:eJwtmWWgZMUZRN/s9Ezffbi7u7u7uy3u7gQNJLi7u+tiu7i7u7NIgOBOEjyB
QILknNT98WDPu/NGbnfXV1UzzTZ7DNt9yMDAwG78p/D/dZqBgbk7AwMfdAcG
jhs6MHARfBe8IxdfhS+B74F3hl+HL4cfhveA34Ivhu+Gd4Jfg1eHZ4L/wvMd
CV8GPwTvzvU34QvhO+Ed4Ffgc+Gb4S3hF+Gz4BHwxvBz8BXwI/Ce8F/h8/oD
Ax34NPgL+E9c3xGeEL4RPhO+Ft4IfhYeDj8K7wW/Da8JzwK/yfs7Gj4bvhHe
nOvPw3+uAwPjwQ9y/e8+PzwufD/8N/hSHv8g/Ace/wa8AjwUHsn1g+Dz4Vvh
rbn+MnwGfA28IfyMzw/vBE8E3wQfwPNPAD/K338Jn8P1m+AtuP4CvD+8Mzwx
fDO8NjwX/D6PPxZeDZ4afhk+wvsD3wJvxeNfgvfl+ceCb+f6Z/A28Avwaj3W
CP4jPCZ8K9c/hVfm7yeGn4IPhffm+ujwjfDH8F7waPD18EfwfvDY8J3w5/Aa
/P3M8BvwUfCBXJ8Qfhz+Cl6J6+O09/MQPx/Xx4cfhv8B7wOPAd8MfwKvwuMn
gZ+GD3M/8tPls63P7/7OXriG60/x7z/xu/e59nU/++FT+HL4U3gL+F34AvgT
eHP4Hfh8+DN4S/g9+EL4m37W5zP4Cvjf8J7wN/AI+Nt+1uNzeDj8A7w7/BV8
DfwjvAf8NXwt/DS8jJ8PPh7+HN7K9YMvgr+Cd4A/gS+Dr4WngS8ruT+X9vP5
zy3t/urn/p0OHwhf08/6XwofDD8JL+X+LdkfT8FLww+VnO8v4e3hj+FLh+Ye
bgd/VHJvv4C3Vg/gi+F/wX+Av4Svhr+Hd/Xew1fC/4R3g/8BXwV/DG8Gvw2f
5/mGB+BTS/bHOfDv/OqUkv34JryO+xc+A56H9T8Jnoz9ucTgwMB88CnwFPBS
8LzwyfDk8JLwwvCZ8DTw0vBs8DHw+PAi8NzwifCk8OLwG7ze2vBLvN7pvN5D
8MLu35L9+hd4LfhF+DT4fXgj9Qw+B34JXhl+Ej4JfhlexfMCnwy/Bq8BPw+f
Ar8IrwQ/AZ8IPw+v6HmAT4A/gDf2vMDnwu/BG8Kvw2fD78IbwK/BZ8Gvw2vC
L8Cnwm/3cxZehc+EH4AXgu8o0d+H4UXgu0r07gl4SfgB+Bh485rzs2Iver8t
/CK8ei/6tgM8Cl6rF/3dAn4aXqkXvd8SfgZeuZf5sAH3eFP+/S6/O4hrZ/F6
v7LeJ5Wc5zPhX+ATS/RkZx7zGo9dl795B94efhles5f5cjaP/43Hn1yiT9tx
/SWur9HLPJkKPh5u4HvgBeDL4CnhB+EZ4dPhseB74bng89VT+AF4iRp9nhF+
BF6yZn7MBD8KLwRfDk8FPwRPBB8BD8B3wzPDZ8Bjw/cNzX68Ap4afhheqmae
zQw/Bi/iPYGnhZfhXp3O5/svT3dCiZ7+getvOi+4/oH3s2beLtnLfNyoZp4t
3ct82bBmPi7Vi96vXzNvl+hlfqxbM68W72W+3dnP/LiR1zscvrmfeXhNib7e
2I9+X12i/3f14w9uKpkva9X4gYV7mc+7w285b+EPna81fmChXubv8jXzbA74
cXg3+A14g170elf4L/D68HvwLvDr8HruIXgz+El4hV78wqbwE/Dy8CjnTY1f
WbCX+bpSzfybC37SeVYzj+eGn4JXr/EfC8BPwyvW+I854Sfgq5o8/74lr78o
18+Gp+P6sqzXMvBF8GzwioOZB5vAX/D4CeFn4Pmc5/DgYPRc/3A5/APPN6If
f3EF/GOrt8PgD+EJePwr8OLws/CYg5k/6vG38MSD0ZtFnYfw6PAoeDH4GXgM
eGQ/83Q4/G+e//p+5u9V8M/wdf34jSvhn+CL4B58don/uBjuw+eUzOvL+5n3
58PftPNnCHxGiR+6AO7CZ5b4pQvhAp9VMs+v6sd/XAz/E76yH79xEfw9fEU/
/uIC+Nt2HiwLj4LH5vO8BS8HvwKPA38Irwa/BY83GP1cFX4THhc+kvU73PUu
Oe8HN5lfU8C3wwc1mVeTw7fBRzU5z/OUnN9Tm5z3tUv2z2lNzvM6JftnRBO9
279kv1/bRA//XHJer26yX/cr2c8HNpmXk8G3tvN8ED4P/ho+pIl/mBK+Az4c
3tt5VqIvxzfRl2VK9OS4Jnq2dIkeHQuf5vkv0btjmujhIiX6djJ8qXpacv5O
aaKPa5Xs98Oa+Jup4bvgk5ro4yolenUifJ76XqKHhzbxN1PBd8LD+/FrF8Lf
tXoyKXwt/B/4FngyeAT831avD4CHcn7mZr2mhQ+GR4fng6eDD4HHgOeHp4YP
hAfheeBp4IPg0eB54R15P+t14gn1L1uoQ/BH/GzpzKphf7+ej4cfcz3hYfD0
8KHwmPAC8Mb8/234Y3626kXfj+Tf4/DvBbk+OfwnuAfPAc8OHwtPAC8KLwaf
A08PLwcvC18Mzw6vBM8KHw2PBy8MTwL/ER4CzwpPCu/r54Fng2eBj4LHhRca
zPzZB+7As8CTwfvBBZ4dngL+M9yH54SXhi+EZ4VXgA90jsLvd5IBntBndzKv
N4FvZ72m5N/X87jfuJ+3wVPA18G/ws/C88OPwaMNxl/MCt8Nl8H43XnhR+Ch
8CPwbPA9cA++FZ4cHgn/wvM9Bs8B3wdXrj8Kzw7fC/fhu+Fp4VvgAfj1mvU5
3gwA38f1GeDb4S58DzwdfCvcGYz+D/d889lWhteBr4cXg9eAt4Lvg1eF14FX
ga+E54VXgVeFr4Lng1eF14avgxeFV4dHtPt5Fl5v2sHM59s8r1xf0/0E3w4v
C68F38v7mx6+jccPgXdu4u96rf+/q/Wri5bs912b+M/a5hFnyKhuMoKzxRny
Sjf3yNmixr7QzRqqva7Z293cU9fSM/pcN2vg2XVN/tbNTHGtXIN/dDODXBvX
4O/dzBjXxjX+ohtP6dq7R97pZg3dO67Rh/A8naydM+jVbtbE2eSa/7WbPeFe
UMPUMjVOr6WGqWVqnF5OzVP79Ph6q0l6uTfeI729GqfWndCJt9OD2lXc24k3
dca91s09d/apSWZ/PY9atQrPt0vJHnAvOCNf72ZPOTudIc4SZ4Re8uaSrkRP
pDdyz33SzZlwL+7BYz7rRHPervHMdhd6Nr20HYRdhBqkFun5zNLOBL2gM/aZ
bjTU2esMNjs7s53NzgyzsJnQWeLMtavQYziLneF2CXoAZ7se2q5Gj6i39kx8
1M0Z9azo8e0y9Ix6/zP43TudnDHPmjP52W403FntzH6+G01wlruHP+7G87i3
7RTUFfXlzRqPZzZ3Rur9nInORjOH3k+PpddyZur9nKnO1mc78ZbOVGerM/f/
3nhouiQ9sVlAj2F3oKfSezjDneVqttrtDHOWXdCJF59BzS6ZIWPWaPgCJZlR
bVdz5yvRXLV4RniOkhk1NjwTPGfJjBq3RnPnL9F0tViNXrbdr2q3M2GFkpng
rFCTFyyZGWr1zPBcJTNo/JoZs0x7Hnz/zoR5288zSbv//Tznt/t9ll66shHt
5zMjr1Eyc8zOZuTVSzyr2dkZsAk8spPZoMZtU6JZap8at22JZql9zqzNSjTT
Wabn3bREA/XCaqpdlx5brXUmzdOeF2eVnmHl9v2arZx5y5VkIGehM3fJkozv
LDaD2j2aIcymen67Qj2+WWCRXt6/r68Wm0HtHs0kZlMz0dbt51GLzTx2e2YQ
s9AuTfJ1v6QfMjNt1b5/s5SZye7NTGCWMuNs3N4vs4+dwvIlmcCuwYyzUXv/
12zXY9WSmev91aMs1uqV3kXPo17p0fRCavyirX7pdfQ8S5R0HHohPdHiJZ2I
XsmMY5doRjX76OH0cnpWs4yeVe+qZzUL6Vn1rsPb9dED6gX1gGYzPbxdnJ2S
3t5Mbten5zerm7ntBvV4ZnE7SLvIXZxJNR2mXaadWK+mw/muGw+vl7eTtZu1
U+tyfSQ8bknn9DPXr4PHK+mkfu3Hk+vN9exj8Pgb4AlKOr2Osxsev6Qz+72f
juabbjouuxs9s955n3b/HdJ+vnHbeXlYq5+TtvpvZ/NFO//MVnYqX3fTodm1
2Nl92Oql3sbO5/N2/tkF2el81k2HZNdjp/NpNx2MXY+d3chW39VrO6dvu+kE
7aKcJ6Pa+e28NHM/1eq7WdzO7oN2ntrl6dH16nvBE9RkGrONGWKsms5xrJKO
0S7STnLMko7TrtKObvSSDtTuzg6zKcmwZlk7vjFKOlO7PzvCUuJR7A71IHoR
Oyu7Us+QZ0mPYveqh9HLeMbsNu0QOyUZ16xrZjA7mDnGq+m4fuymU7P7smMd
uyTzmn3tbH/rppOzyzVDmaXMcKPVZCazk5lknJpO99duOjK7Xjvd37vp/Ox6
7Vz94sPO0S7Wzuxf3XRydml2bD9009nZvdnJ/dRNxjRr2gH+u5vOz27QjvX9
1g/Yvdq5+d2HHYpdnJ3Jy61f0y/Y0d7bnje7WzvCr7rp5OwO7cD+WNJB2I3Z
8d7dTeb2fNrZvddNh2OXZ4fzUjcdsN2OnexoJR2sXa0d7C/ddJJ2s7fAk5Zk
0qE136Hc002H73cr/4JfhKeCr27n+Wa9dEh+d3A/vHCrX3PWdLp2/2Z8u147
Xb9rMOPb9dr52eWb8e0C1e+dW71WT/XQu7R+TT3Xk+/a+jG9up2e3vqAVi/t
fLYv6XDsguxwNijp8Ox27PBWKsmsdnur8XzbwXfAq8HrwkfAr8I71WRCs6Ed
ln5jLnghrh8HTwmPDw/Cm8If8f5/5/nf5fPMCd8BT2SGa/XwO7ip0cWpzart
z8xc37+Ta3bMb7T+0+756NaPmqH002bkt1o2O4/F3/8XXh1+1eeHv4SXgB/v
J8MezvO/0omftH99spvOZySzbnl4fa5fDS/O9cXgFeFz4TngteF94MfhTeA3
arzbB/y8VdOZr9r6J/22fnn/1o/pr804e7X+1nlrJlPv/E5M/2gHbLZ8T32u
yVgHtP5Ov20m2rv1w2YlO//V2vnpdwF2nn43aKdnF3p/jbfSI+mV/Ex+lhl6
+ayH1XhTM45Z55Aa76qn1lsfWpN99LR62yNq9rqZyezknvcsXFJyFl6q2Yvu
UffqazV7x3v+/3tfk7X0xHrjY2qyg5nD7PFAjdfRE+oNT6nxynpwvbid3tSt
Hqp3D7efR8+od3yoxjvqOfQefsexTjvfzUMP1ngRPZXeyg5y4nYeq+cn18wu
Z5jZbJLBzEc7pl+4flRNNjNDmiU9I+6V+Xs5O+fCyzsrusn77kH33nMle/Oc
mn7u+276TjOw59U97973DLn3ay9nayp+ZiptR8G1C2r29n+66Ttfdo070QC1
4Pyavu/nbvrNJ2q8jPfAezGpr9nO+/+ovzWz1JlqVj5WD99JpjPbnVqT1cws
Zpeja7KhGdWsel6N1qv59qun6VE7yXhmvbNrvI0ex35DDXD/3FCiDSfVaIOZ
2Gw8sqa/mpXr0/H462qyx2zw9PAVNe/dNXFtrq/JGmYUs8oNNVnDDGIWua0m
q5g5zB4n1GR7M7XZ+vIab+Cecm8Nr+mXvEfeq4vUQHhISZ96VU1/ND08OXxN
zdrMCE85GI1QCyfsRTuubdfTNXQt1Tq176cSzbu9JtuYqcxWV9b0WdPBk8FX
1/RnM8BT2Be1+229kr7sjvb1zEhmpVtqspgZyCx0Yk3XYKdht3EpvI2zv6Q/
V4PV6r+VaPMjNVqihqll99ZkDT22XvueGq+tx9Zrq6Fq6dq9ZPX74FM7yShm
leNqtFnNtks4vqbLULPV7ptrspoZyCx0Y022MzOaHW+CD+sk85n9Lql5v0NL
+mxnjOfhryWz59aabGkmNZte1t5vz7hn/eIa76aHs/9+sWbWmeHMcq6ha+k9
L+aDmn5rWMn3T9s08QZ6Jr2TnXun9Uf69w2aeF09sl7ZGal2b972qe6hIa2/
s6vfs4l31HPqPfdq4j31pHrTPZp4Tz2mXtPPPLT1n3b76zXxznpqvfXpNd7c
17d72qiJV9Kj69XXb+K99eR687trspKZy+z1KvxcJzPH2eM9alr/qp9bl79f
sBPPrnffu4l31oPqRfes8e7ONGfbPlzftpMMY5bZtonX1KPqVf2OaN2Se+x3
R97jYW3+8rs/97h73U7RrnhYE2+vPps1dmryfa6eW++9Q5O1cE300noWZ/Ww
XrzMdk28sR5Xr7t9E6+rx9Xr7tckK5mhzFL7NslaZiizlJo0a+uvBms0SW1S
s0ZXO5pkNTOaWc15PlEnHkOvsVuTe+k9NUvs3sR7mjHMGls08dJ6fL3+xk2y
lZnN7LZlE++vp9Zbe4bHaf2/eUGPo57eX+J9nq/J9mZ8u4ezauaRnaXd5cE1
2c6MZ1e2SXseluvF6zhjnDXOFL9re6pmLVwz1+6Fmu7DTsRuRE1UG9WwAfd+
TRdiB2IXckZNN2qHapeqpqltauoQrj1T01XYWdi9qIFqoZr8G6//HNdv6KRj
sWs5s6Z7tXO1e920SVZ03pitnYE/t3nE7/424/oKnWQYs4wz66c2n5hnX2n3
ix5Lr6Vn1xtP1IuXd2Z/3+Z1v7t0pn3X5lPz7iZNsrWZ1eyqB9ALOPP9LmCr
Jq/la5qV7qzpMuw47DpG1Xg7PaJe8cIarXA/qzWPw5d00lnZXT1W013ZWdld
PVrTXekJ9YabN8lqZjSz2v8A5LbsCw==
          "]], Polygon3DBox[CompressedData["
1:eJwt13fYlmMbAPAnvePpFYUKLe2ihZZPw2jS1KaBUqJlNUgqkoxSaCAtDZqS
0t5TEynK+Oy9w0eq73ce9/vHeRzX+XvO677u937u57yut3SPgW0HnJFKpY6J
TDEnnUq1M3gkI5V6WLTLSaXmsvZstPxQnlTqjuxU6mXWho1kb7PebBZrxR5i
B9ht7HWRl5Vjg1kx+Rsik1VgQ1kJ+bNijfxY3lSqKtualUpNZKvYB6wy28ye
YavZUVaFbWGzrdva9Ubwg6yXmufEWvmH6qqxbeoaqZvA3mSrxLB8qdTjrJS5
bfgsdXXMGyeWyd9RU5atNncO+50tMue0PBXPQPzGFrKT7JR42PWyXa8Sv1is
9tmL6t42/s31GrreB+oWsH/Y6z4/0zi/WCpOx/2xwsZFxFxxnC1meYzPEK+I
v9hrLNs4LR6J5882WOM8a7xqjXnsD7ZEXV7jDDFazGab1BVSt0DdfPYnW6ou
0zhLjI112G51xdQtU/do/M1sCyvMFrLXWB5/bxl+H7tQvkSckq90vfOMC4kn
PJfy6prwpmKzz6bxd4x/d71G5h51vRnsU3ZGvHvs21jX3CLm1mFXiHXmzlT3
jXE+0UXdr+oWshPy5T4/y/hsMV18wP6xRgt1n6mbxX5h54ge7H9sMTspX2Hu
OcbnipfE++xvc5ur+1TdA+7lf+xCUVQsUz9b3a/GC4z/VvOPWMT+ZW+wAsYF
xRgxh21zvSKutygr+b219bfdG88v3lf1j8X3brxD3fnqFqubzLawz1lN9hab
ynaxb1ld9jabwrayL1gttocNZ1Pj3WVnslnx27JuTet24B3FLus+pO75eF/U
5Vc3W90ktpl9xmqw3ewF9hb7ntVn77Kn2fLoD6w8W8ueZ7vZd6wee4dNiN8/
e49VYOvYveypeP/YKT+tSex697eY7WcHxCj394C6SfHuyLPMfUndCPZC/BbY
WexlNoxNZltZNpsev8v4PuOdZAXZPDaKTYvviBVgc9nj7FX2FivOXmdPsoVs
LyvJ3mBPsAVsDyvBlrOR7MX4TbOz2Rw2hD3D1rK87IV4fv62hp79bbxX9E9/
2/3Rs4w3qstUN03dU2wR28cuYivYYPZ0vKcsD5vKlkVfcL2yfBArKh8aPVW+
Xl0Ge1Hd+OjH7F1Wjq2JHuFeOpj7aHwn7M7s5HnFc7uJdxEL1MwXHY3HqDvs
s77q9orLWFs2h10nb61uvfxHa/wg0vaPffxyde34XHXXyzur2yc/qaYlO2TN
/byGuvZ8Hmsub6Nug/wndQ3YdnU3sI3sZ3YV28Hask3sF3Y128nas+3sD9aE
7WWjWUFrXM0nsgrZSc9OZya9JXpMdfd8EztgfNrc1uoOm9uB7WB/sqZsP+vI
drK/WDN2gHVie9m/7ES8W6632zqXWKM5n6bumvgNicqsBXuJXSs/KOqyrtHz
Wdvcnh+9f0g66eclcpJeHj19aDrp3SVZaVEqJ+lRf7MyOUkvj55+fzrZMy7K
SfpT9Kn70sn+VZQ9YlzAulfJJ1i3ojkHxJXxDkTvYDdEvxbXsp7xDsY7Iu9t
7n/lBcUt7GvX3sOrqGvJprOG8tvVfSY/V/Rk3+fuo7GfDk4n+1xx9/I2u8bc
HvHbVHdjdrK3xh47KJ3sw8XUtTPeZnzcM26sbp/Pb2T72SnWir3HurCDLCXa
sCNseeyH1ijPhrDi8ftTdwXrw1axVqw7e0+eGX2SfWTuOFZVXbfolayxupvZ
YXmW6MQ+Vvcsq6Pu9tjTWUt141k11j36HWuUnfTiWplJL4ie0DwnOQ/EueDB
dLKnlWNjjS9S11o+09xaPn+SVWSd2HxWP3evrZCZ9PXo743MfYyVZK3kM9TV
jp7LKrHO7BXWIHoVq816R69kLdg6cQ67nI1mF8snqLuU3RJ7IGvKurFD8oxY
lx3zDHqyj+RniW7si6xkL4w98aF0sudWcH+3Gh8zPlPkiEKsB/vQOL/oau7n
5vZin8gLiJvZV+w29rH8bNGdfRn7Eavu/m6OvYE1yT0PxLlgeDrZm8vnJGeT
OKOMTCdnr0psjPEF5jaTTzW3WnZyBjk/Mzm7xBmmrrpR6eTQfKl8lLoL1HVl
78rzivbsQ/dyCzsizxad2SdZyfkizhkj0slZqaLrvWLcyfUekx9R18/na+Ke
WTU2gpWT3x3fsXyhd/xft/Bsbs/Zk5H03Oi94/Ml592JbI18tfiGDYp3kC2X
p1xvirl3scfZjdY5gSey/uZ+m/tdxHcyx9zGbIrxTnMvMHemukPm3mDePXwb
6yNvrm6p/BN11dnK6DV8XLwr7LQ1JrN74v2NPsdOsudYS3NXsq9YHXPXs1bs
TfY1u4JtZC3YCvYlq802sFezk74XZ7J8xjlxXlBXz/31i71QXfvs5F07mpH0
5ujRU9UfjfdX3QOxp8e7G2cmdVexgWwT6xjnI3Y1u4ttZp1YEzY9I3nG8ayH
x/mUtVQ3nO9X1zPOFawzG8veZ/3jnMLqs/5sA2uXnZx9lsg/dq2P4nm53hTW
QN2AOCOo6xBnDdaYDWLbWZc447CmbEh8T6xbnHFYEzaY7WBdY49nzdhQtot1
z07OJY0yk3NonEfb5CT7+bqM5D7ifsa4lxmshboH+T5ze+Q+63jmw9LJ/zVl
zR1o/EP0dNFP3e/xrrEfYw8T/dlxtsu8cq7XmE1h9eTbRWl2LXuO/Ue+Q5Rh
DdkkdmWcsc0/EWfIdHIGv9C6O3lZdY3kk9XVlW8ShVltNpZVlW8TJVgD9jSr
Kd8Q/YDVZGNYZfmq6MWsChvOysjXRj9h1dlIVl6+WuRnVdlDrKx8oyjEarHH
WBX5CpHFKrL7WUn5ynh+7BI2jJWSvxnPlVVmD7LS8vXiXFaDPcoukff1t38l
LyJuZz95Hpt5UXV12VPsMvkAdd/H3in6st/iN8h+jnOBGMj+zEre5xkZybk7
zt/Hfed3s59YSTFA3R/qmrKZ8oNqSrH5uX3ju4zkf6P4H+l830c/9nWMRR91
P6u7g30RfV70Yj+w6+KcGb3P9SqxJWyr+y7u76jPx7Ma8i2iGKvHxrHL5Xea
+6W8sOjNfjS3D/tcfl7sq+w79m78vszty9axW+XN1M2TH7ZuRbZU3ZHspF9E
3+iq/n35/wEQrDh1
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jsvZUEAwPHBvRfXM9loCT3xAfgEVEo63SpQUmwUCgpR7haiJIiSQpSe
u+ux3mvXM2LXWhpvIvhNovjnN5OcM2fOnFPe3NbQmhFC6Nad4vhKJ2pOhlDM
dpaxi1XsZy0HWc9xNnGaLfzGTu6yl2f8wnsOM5UKYZIlnI3r8S8ftKEbXWg2
M4RNznGL89zmAne4yJ/8yt34XH7XL+Ml/uYy97jCfa7ygD94yDUecSQrhH98
1LFudalqe1tnBWf4gRNMcChe550+8w97uMOOuDd+5BQbOcY6DrCGfazkJ5bG
ufVO4xmpSNf6r0L7K2Q+C5hmPnOYF8+S6bgf5jKTOXz1IV+UbfxMy4cnJuM5
MxG/N7PiedNtYdTk/P0/eANtXU6X
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0skqhWEAx+H3mA4XYNha4AZwA7gB7E17Ymue7cgFYK9DkigHSVbHPJMk
U8lsJfMji1/Pf/FNvX25tQ3l9ZEQQq+ejHfe8VTDaSFkcIw5nGQBF1nMdZb9
XctK3rGOH/xUk50TDaGTBRxiMUdZxglWcoHHPOeL1vSgazWneA9buMFWbrKN
W2znNju4w07usovd2rN7uM9eHrCPh+znEQd4zKrUEC74qhM96kYNvi3BGsZZ
zhhLOMJCDjKPHcxiphrtN+dQy1tW/D2XpUywiHHmM8ZsHrjvjM9K172utJoc
QpQrTOMyU7nEFC4wmfNM4hxnFbFnGDjNH3OK35zkF2P85Dg/WO0cLiP//8Mv
3MZS7g==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1378, 1674, 722, 1377, 2219, 1585, 1379, 2220, 1586, 1380, 
       2221, 1587, 1381, 2222, 1588, 1382, 2223, 1589, 1383, 2224, 2012, 2321,
        1384, 2013, 2322, 1385, 2225, 1590, 1386, 2226, 1591, 1387, 2227, 
       1592, 1388, 2228, 1593, 1389, 2229, 1594, 1390, 2425, 1675, 1595, 
       1676}], Line3DBox[{1392, 2014, 2323, 1391, 2230, 1596, 1393, 2231, 
       1597, 1394, 2232, 1598, 1395, 2233, 1599, 1396, 2234, 1600, 1397, 2235,
        2015, 2324, 1398, 2016, 2325, 1399, 2017, 2326, 1400, 2236, 1601, 
       1401, 2237, 1602, 1402, 2238, 1603, 1403, 2239, 1604, 1404, 2240, 1605,
        1405}], 
      Line3DBox[{1407, 2018, 2327, 1406, 2019, 2328, 1408, 2241, 1606, 1409, 
       2242, 1607, 1410, 2243, 1608, 1411, 2244, 1609, 1412, 2245, 2020, 2329,
        1413, 2021, 2330, 1414, 2022, 2331, 1415, 2023, 2332, 1416, 2246, 
       1610, 1417, 2247, 1611, 1418, 2248, 1612, 1419, 2249, 1613, 1420}], 
      Line3DBox[{1422, 2024, 2333, 1421, 2025, 2334, 1423, 2026, 2335, 1424, 
       2250, 1614, 1425, 2251, 1615, 1426, 2252, 1616, 1427, 2253, 2027, 2336,
        1428, 2028, 2337, 1429, 2029, 2338, 1430, 2030, 2339, 1431, 2031, 
       2340, 1432, 2254, 1617, 1433, 2255, 1618, 1434, 2256, 1619, 1435}], 
      Line3DBox[{1437, 2032, 2341, 1436, 2033, 2342, 1438, 2034, 2343, 1439, 
       2035, 2344, 1440, 2257, 1620, 1441, 2258, 1621, 1442, 2259, 2036, 2345,
        1443, 2037, 2346, 1444, 2038, 2347, 1445, 2039, 2348, 1446, 2040, 
       2349, 1447, 2041, 2350, 1448, 2260, 1622, 1449, 2261, 1623, 1450}], 
      Line3DBox[{1452, 2042, 2351, 1451, 2043, 2352, 1453, 2044, 2353, 1454, 
       2045, 2354, 1455, 2046, 2355, 1456, 2262, 1624, 1457, 2263, 2047, 2356,
        1458, 2048, 2357, 1459, 2049, 2358, 1460, 2050, 2359, 1461, 2051, 
       2360, 1462, 2052, 2361, 1463, 2053, 2362, 1464, 2264, 1625, 1465}], 
      Line3DBox[{106, 603, 107, 604, 108, 605, 109, 606, 110, 607, 111, 608, 
       112, 609, 610, 113, 611, 114, 612, 115, 613, 116, 614, 117, 615, 118, 
       616, 119, 617, 120}], 
      Line3DBox[{1467, 2054, 2363, 1466, 2055, 2364, 1468, 2056, 2365, 1469, 
       2057, 2366, 1470, 2058, 2367, 1471, 2059, 2368, 1472, 2265, 2060, 2369,
        1473, 2061, 2370, 1474, 2062, 2371, 1475, 2063, 2372, 1476, 2064, 
       2373, 1477, 2065, 2374, 1478, 2066, 2375, 1479, 2067, 2376, 1480}], 
      Line3DBox[{1482, 2266, 1626, 1481, 2267, 1627, 1483, 2268, 1628, 1484, 
       2269, 1629, 1485, 2270, 1630, 1486, 2271, 1631, 1487, 2272, 2068, 2377,
        1488, 2273, 1632, 1489, 2274, 1633, 1490, 2275, 1634, 1491, 2276, 
       1635, 1492, 2277, 1636, 1493, 2278, 1637, 1494, 2279, 1638, 1495}], 
      Line3DBox[{1497, 2069, 2378, 1496, 2280, 1639, 1498, 2281, 1640, 1499, 
       2282, 1641, 1500, 2283, 1642, 1501, 2284, 1643, 1502, 2285, 2070, 2379,
        1503, 2071, 2380, 1504, 2286, 1644, 1505, 2287, 1645, 1506, 2288, 
       1646, 1507, 2289, 1647, 1508, 2290, 1648, 1509, 2291, 1649, 1510}], 
      Line3DBox[{1512, 2072, 2381, 1511, 2073, 2382, 1513, 2292, 1650, 1514, 
       2293, 1651, 1515, 2294, 1652, 1516, 2295, 1653, 1517, 2296, 2074, 2383,
        1518, 2075, 2384, 1519, 2076, 2385, 1520, 2297, 1654, 1521, 2298, 
       1655, 1522, 2299, 1656, 1523, 2300, 1657, 1524, 2301, 1658, 1525}], 
      Line3DBox[{1527, 2077, 2386, 1526, 2078, 2387, 1528, 2079, 2388, 1529, 
       2302, 1659, 1530, 2303, 1660, 1531, 2304, 1661, 1532, 2305, 2080, 2389,
        1533, 2081, 2390, 1534, 2082, 2391, 1535, 2083, 2392, 1536, 2306, 
       1662, 1537, 2307, 1663, 1538, 2308, 1664, 1539, 2309, 1665, 1540}], 
      Line3DBox[{1542, 2084, 2393, 1541, 2085, 2394, 1543, 2086, 2395, 1544, 
       2087, 2396, 1545, 2310, 1666, 1546, 2311, 1667, 1547, 2312, 2088, 2397,
        1548, 2089, 2398, 1549, 2090, 2399, 1550, 2091, 2400, 1551, 2092, 
       2401, 1552, 2313, 1668, 1553, 2314, 1669, 1554, 2315, 1670, 1555}], 
      Line3DBox[{1557, 2093, 2402, 1556, 2094, 2403, 1558, 2095, 2404, 1559, 
       2096, 2405, 1560, 2097, 2406, 1561, 2316, 1671, 1562, 2317, 2098, 2407,
        1563, 2099, 2408, 1564, 2100, 2409, 1565, 2101, 2410, 1566, 2102, 
       2411, 1567, 2103, 2412, 1568, 2318, 1672, 1569, 2319, 1673, 1570}], 
      Line3DBox[{1584, 1680, 1679, 2426, 1583, 2424, 2115, 1582, 2423, 2114, 
       1581, 2422, 2113, 1580, 2421, 2112, 1579, 2420, 2111, 1578, 2419, 2110,
        1577, 2418, 2109, 2320, 1576, 2417, 2108, 1575, 2416, 2107, 1574, 
       2415, 2106, 1573, 2414, 2105, 1572, 2413, 2104, 1571, 933, 1677, 
       1678}], Line3DBox[{1682, 2005, 2645, 1904, 1681, 2530, 1905, 1683, 
       2531, 1906, 1684, 2532, 1907, 1685, 2533, 1908, 1686, 2534, 1909, 1687,
        2535, 1910, 1688, 2536, 2116, 2427, 1689, 2537, 1911, 1690, 2538, 
       1912, 1691, 2539, 1913, 1692, 2540, 1914, 1693, 2541, 1915, 1694, 2218,
        2646, 1916, 2006}], 
      Line3DBox[{1696, 2117, 2428, 1695, 2542, 1917, 1697, 2543, 1918, 1698, 
       2544, 1919, 1699, 2545, 1920, 1700, 2546, 1921, 1701, 2547, 1922, 1702,
        2548, 2118, 2429, 1703, 2119, 2430, 1704, 2549, 1923, 1705, 2550, 
       1924, 1706, 2551, 1925, 1707, 2552, 1926, 1708, 2553, 1927, 1709}], 
      Line3DBox[{1711, 2120, 2431, 1710, 2121, 2432, 1712, 2554, 1928, 1713, 
       2555, 1929, 1714, 2556, 1930, 1715, 2557, 1931, 1716, 2558, 1932, 1717,
        2559, 2122, 2433, 1718, 2123, 2434, 1719, 1200, 1720, 2560, 1933, 
       1721, 2561, 1934, 1722, 2562, 1935, 1723, 2563, 1936, 1724}], 
      Line3DBox[{1726, 2124, 2435, 1725, 2125, 2436, 1727, 2126, 2437, 1728, 
       2564, 1937, 1729, 2565, 1938, 1730, 2566, 1939, 1731, 2567, 1940, 1732,
        2568, 2127, 2438, 1733, 2128, 2439, 1734, 2129, 2440, 1735, 2130, 
       2441, 1736, 2569, 1941, 1737, 2570, 1942, 1738, 2571, 1943, 1739}], 
      Line3DBox[{1741, 2131, 2442, 1740, 2132, 2443, 1742, 2133, 2444, 1743, 
       2134, 2445, 1744, 2572, 1944, 1745, 2573, 1945, 1746, 2574, 1946, 1747,
        2575, 2135, 2446, 1748, 2136, 2447, 1749, 2137, 2448, 1750, 2138, 
       2449, 1751, 2139, 2450, 1752, 2576, 1947, 1753, 2577, 1948, 1754}], 
      Line3DBox[{1756, 2140, 2451, 1755, 2141, 2452, 1757, 2142, 2453, 1758, 
       2143, 2454, 1759, 2144, 2455, 1760, 2578, 1949, 1761, 2579, 1950, 1762,
        2580, 2145, 2456, 1763, 2146, 2457, 1764, 2147, 2458, 1765, 2148, 
       2459, 1766, 2149, 2460, 1767, 2150, 2461, 1768, 2581, 1951, 1769}], 
      Line3DBox[{1771, 2151, 2462, 1770, 2152, 2463, 1772, 2153, 2464, 1773, 
       2154, 2465, 1774, 2155, 2466, 1775, 2156, 2467, 1776, 2582, 1952, 1777,
        2583, 2157, 2468, 1778, 2158, 2469, 1779, 2159, 2470, 1780, 2160, 
       2471, 1781, 2161, 2472, 1782, 2162, 2473, 1783, 2584, 1953, 1784}], 
      Line3DBox[{1788, 2585, 1954, 1786, 2586, 1955, 1790, 2587, 1956, 1792, 
       2588, 1957, 1794, 2589, 1958, 1796, 2590, 1959, 1798, 2591, 1960, 1800,
        2593, 2594, 1961, 1802, 2595, 1962, 1804, 2596, 1963, 1806, 2597, 
       1964, 1808, 2598, 1965, 1810, 2599, 1966, 1812, 2600, 1967, 1814}], 
      Line3DBox[{1813, 2487, 2176, 1811, 2486, 2175, 1809, 2485, 2174, 1807, 
       2484, 2173, 1805, 2483, 2172, 1803, 2482, 2171, 1801, 2481, 2170, 2592,
        1799, 2480, 2169, 1797, 2479, 2168, 1795, 2478, 2167, 1793, 2477, 
       2166, 1791, 2476, 2165, 1789, 2475, 2164, 1785, 2474, 2163, 1787}], 
      Line3DBox[{1816, 2177, 2488, 1815, 2601, 1968, 1817, 2602, 1969, 1818, 
       2603, 1970, 1819, 2604, 1971, 1820, 2605, 1972, 1821, 2606, 1973, 1822,
        2607, 2178, 2489, 1823, 2608, 1974, 1824, 2609, 1975, 1825, 2610, 
       1976, 1826, 2611, 1977, 1827, 2612, 1978, 1828, 2613, 1979, 1829}], 
      Line3DBox[{1831, 2179, 2490, 1830, 2180, 2491, 1832, 2614, 1980, 1833, 
       2615, 1981, 1834, 2616, 1982, 1835, 2617, 1983, 1836, 2618, 1984, 1837,
        2619, 2181, 2492, 1838, 2182, 2493, 1839, 1305, 1840, 2620, 1985, 
       1841, 2621, 1986, 1842, 2622, 1987, 1843, 2623, 1988, 1844}], 
      Line3DBox[{1846, 2183, 2494, 1845, 2184, 2495, 1847, 2185, 2496, 1848, 
       2624, 1989, 1849, 2625, 1990, 1850, 2626, 1991, 1851, 2627, 1992, 1852,
        2628, 2186, 2497, 1853, 2187, 2498, 1854, 2188, 2499, 1855, 1321, 
       1856, 2629, 1993, 1857, 2630, 1994, 1858, 2631, 1995, 1859}], 
      Line3DBox[{1861, 2189, 2500, 1860, 2190, 2501, 1862, 2191, 2502, 1863, 
       2192, 2503, 1864, 2632, 1996, 1865, 2633, 1997, 1866, 2634, 1998, 1867,
        2635, 2193, 2504, 1868, 2194, 2505, 1869, 2195, 2506, 1870, 2196, 
       2507, 1871, 1337, 1872, 2636, 1999, 1873, 2637, 2000, 1874}], 
      Line3DBox[{1876, 2197, 2508, 1875, 2198, 2509, 1877, 2199, 2510, 1878, 
       2200, 2511, 1879, 2201, 2512, 1880, 2638, 2001, 1881, 2639, 2002, 1882,
        2640, 2202, 2513, 1883, 2203, 2514, 1884, 2204, 2515, 1885, 2205, 
       2516, 1886, 2206, 2517, 1887, 1353, 1888, 2641, 2003, 1889}], 
      Line3DBox[{1903, 2011, 2010, 2644, 1902, 2529, 2217, 1901, 2528, 2216, 
       1900, 2527, 2215, 1899, 2526, 2214, 1898, 2525, 2213, 1897, 2524, 2212,
        2643, 1896, 2004, 2642, 1895, 2523, 2211, 1894, 2522, 2210, 1893, 
       2521, 2209, 1892, 2520, 2208, 1891, 2519, 2207, 1890, 2518, 2008, 2007,
        2009}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{500, 723, 2219, 501, 737, 2230, 529, 2328, 752, 544, 2334, 
       767, 559, 2342, 782, 574, 2352, 797, 589, 2364, 812, 604, 827, 2267, 
       619, 842, 2280, 634, 2382, 857, 649, 2387, 872, 664, 2394, 887, 679, 
       2403, 902, 694, 2413, 917, 709}], 
      Line3DBox[{502, 724, 2220, 503, 738, 2231, 530, 753, 2241, 545, 2335, 
       768, 560, 2343, 783, 575, 2353, 798, 590, 2365, 813, 605, 828, 2268, 
       620, 843, 2281, 635, 858, 2292, 650, 2388, 873, 665, 2395, 888, 680, 
       2404, 903, 695, 2414, 918, 710}], 
      Line3DBox[{504, 725, 2221, 505, 739, 2232, 531, 754, 2242, 546, 769, 
       2250, 561, 2344, 784, 576, 2354, 799, 591, 2366, 814, 606, 829, 2269, 
       621, 844, 2282, 636, 859, 2293, 651, 874, 2302, 666, 2396, 889, 681, 
       2405, 904, 696, 2415, 919, 711}], 
      Line3DBox[{506, 726, 2222, 507, 740, 2233, 532, 755, 2243, 547, 770, 
       2251, 562, 785, 2257, 577, 2355, 800, 592, 2367, 815, 607, 830, 2270, 
       622, 845, 2283, 637, 860, 2294, 652, 875, 2303, 667, 890, 2310, 682, 
       2406, 905, 697, 2416, 920, 712}], 
      Line3DBox[{508, 727, 2223, 509, 741, 2234, 533, 756, 2244, 548, 771, 
       2252, 563, 786, 2258, 578, 801, 2262, 593, 2368, 816, 608, 831, 2271, 
       623, 846, 2284, 638, 861, 2295, 653, 876, 2304, 668, 891, 2311, 683, 
       906, 2316, 698, 2417, 921, 713}], 
      Line3DBox[{510, 728, 2224, 512, 742, 2235, 534, 757, 2245, 549, 772, 
       2253, 564, 787, 2259, 579, 802, 2263, 594, 817, 2265, 609, 832, 2272, 
       624, 847, 2285, 639, 862, 2296, 654, 877, 2305, 669, 892, 2312, 684, 
       907, 2317, 699, 922, 2320, 714}], 
      Line3DBox[{514, 2322, 730, 515, 2325, 744, 536, 2330, 759, 551, 2337, 
       774, 566, 2346, 789, 581, 2357, 804, 596, 2370, 819, 611, 834, 2273, 
       626, 2380, 849, 641, 2384, 864, 656, 2390, 879, 671, 2398, 894, 686, 
       2408, 909, 701, 2419, 924, 716}], 
      Line3DBox[{516, 731, 2225, 517, 2326, 745, 537, 2331, 760, 552, 2338, 
       775, 567, 2347, 790, 582, 2358, 805, 597, 2371, 820, 612, 835, 2274, 
       627, 850, 2286, 642, 2385, 865, 657, 2391, 880, 672, 2399, 895, 687, 
       2409, 910, 702, 2420, 925, 717}], 
      Line3DBox[{518, 732, 2226, 519, 746, 2236, 538, 2332, 761, 553, 2339, 
       776, 568, 2348, 791, 583, 2359, 806, 598, 2372, 821, 613, 836, 2275, 
       628, 851, 2287, 643, 866, 2297, 658, 2392, 881, 673, 2400, 896, 688, 
       2410, 911, 703, 2421, 926, 718}], 
      Line3DBox[{520, 733, 2227, 521, 747, 2237, 539, 762, 2246, 554, 2340, 
       777, 569, 2349, 792, 584, 2360, 807, 599, 2373, 822, 614, 837, 2276, 
       629, 852, 2288, 644, 867, 2298, 659, 882, 2306, 674, 2401, 897, 689, 
       2411, 912, 704, 2422, 927, 719}], 
      Line3DBox[{522, 734, 2228, 523, 748, 2238, 540, 763, 2247, 555, 778, 
       2254, 570, 2350, 793, 585, 2361, 808, 600, 2374, 823, 615, 838, 2277, 
       630, 853, 2289, 645, 868, 2299, 660, 883, 2307, 675, 898, 2313, 690, 
       2412, 913, 705, 2423, 928, 720}], 
      Line3DBox[{524, 735, 2229, 525, 749, 2239, 541, 764, 2248, 556, 779, 
       2255, 571, 794, 2260, 586, 2362, 809, 601, 2375, 824, 616, 839, 2278, 
       631, 854, 2290, 646, 869, 2300, 661, 884, 2308, 676, 899, 2314, 691, 
       914, 2318, 706, 2424, 929, 721}], 
      Line3DBox[{526, 931, 2425, 932, 527, 750, 2240, 542, 765, 2249, 557, 
       780, 2256, 572, 795, 2261, 587, 810, 2264, 602, 2376, 825, 617, 840, 
       2279, 632, 855, 2291, 647, 870, 2301, 662, 885, 2309, 677, 900, 2315, 
       692, 915, 2319, 707, 934, 2426, 935, 936}], 
      Line3DBox[{708, 916, 933, 693, 901, 2402, 678, 886, 2393, 663, 871, 
       2386, 648, 856, 2381, 633, 841, 2378, 618, 2266, 826, 603, 811, 2363, 
       588, 796, 2351, 573, 781, 2341, 558, 766, 2333, 543, 751, 2327, 528, 
       736, 2323, 499, 722, 930, 937}], 
      Line3DBox[{715, 923, 2418, 700, 908, 2407, 685, 893, 2397, 670, 878, 
       2389, 655, 863, 2383, 640, 848, 2379, 625, 833, 2377, 610, 818, 2369, 
       595, 803, 2356, 580, 788, 2345, 565, 773, 2336, 550, 758, 2329, 535, 
       743, 2324, 513, 729, 2321, 511}], 
      Line3DBox[{939, 1162, 2530, 940, 1176, 2542, 968, 2432, 1191, 983, 2436,
        1206, 998, 2443, 1221, 1013, 2452, 1236, 1028, 2463, 1251, 1043, 2475,
        1266, 2586, 1058, 1281, 2601, 1073, 2491, 1296, 1088, 2495, 1311, 
       1103, 2501, 1326, 1118, 2509, 1341, 1133, 2519, 1356, 1148}], 
      Line3DBox[{941, 1163, 2531, 942, 1177, 2543, 969, 1192, 2554, 984, 2437,
        1207, 999, 2444, 1222, 1014, 2453, 1237, 1029, 2464, 1252, 1044, 2476,
        1267, 2587, 1059, 1282, 2602, 1074, 1297, 2614, 1089, 2496, 1312, 
       1104, 2502, 1327, 1119, 2510, 1342, 1134, 2520, 1357, 1149}], 
      Line3DBox[{943, 1164, 2532, 944, 1178, 2544, 970, 1193, 2555, 985, 1208,
        2564, 1000, 2445, 1223, 1015, 2454, 1238, 1030, 2465, 1253, 1045, 
       2477, 1268, 2588, 1060, 1283, 2603, 1075, 1298, 2615, 1090, 1313, 2624,
        1105, 2503, 1328, 1120, 2511, 1343, 1135, 2521, 1358, 1150}], 
      Line3DBox[{945, 1165, 2533, 946, 1179, 2545, 971, 1194, 2556, 986, 1209,
        2565, 1001, 1224, 2572, 1016, 2455, 1239, 1031, 2466, 1254, 1046, 
       2478, 1269, 2589, 1061, 1284, 2604, 1076, 1299, 2616, 1091, 1314, 2625,
        1106, 1329, 2632, 1121, 2512, 1344, 1136, 2522, 1359, 1151}], 
      Line3DBox[{947, 1166, 2534, 948, 1180, 2546, 972, 1195, 2557, 987, 1210,
        2566, 1002, 1225, 2573, 1017, 1240, 2578, 1032, 2467, 1255, 1047, 
       2479, 1270, 2590, 1062, 1285, 2605, 1077, 1300, 2617, 1092, 1315, 2626,
        1107, 1330, 2633, 1122, 1345, 2638, 1137, 2523, 1360, 1152}], 
      Line3DBox[{949, 1167, 2535, 950, 1181, 2547, 973, 1196, 2558, 988, 1211,
        2567, 1003, 1226, 2574, 1018, 1241, 2579, 1033, 1256, 2582, 1048, 
       2480, 1271, 2591, 1063, 1286, 2606, 1078, 1301, 2618, 1093, 1316, 2627,
        1108, 1331, 2634, 1123, 1346, 2639, 1138, 1361, 2642, 1153}], 
      Line3DBox[{951, 1168, 2536, 953, 1182, 2548, 974, 1197, 2559, 989, 1212,
        2568, 1004, 1227, 2575, 1019, 1242, 2580, 1034, 1257, 2583, 1049, 
       1272, 2592, 2593, 1064, 1287, 2607, 1079, 1302, 2619, 1094, 1317, 2628,
        1109, 1332, 2635, 1124, 1347, 2640, 1139, 1362, 2643, 1154}], 
      Line3DBox[{955, 1170, 2537, 956, 2430, 1184, 976, 2434, 1199, 991, 2439,
        1214, 1006, 2447, 1229, 1021, 2457, 1244, 1036, 2469, 1259, 1051, 
       2482, 1274, 2595, 1066, 1289, 2608, 1081, 2493, 1304, 1096, 2498, 1319,
        1111, 2505, 1334, 1126, 2514, 1349, 1141, 2525, 1364, 1156}], 
      Line3DBox[{957, 1171, 2538, 958, 1185, 2549, 977, 1200, 992, 2440, 1215,
        1007, 2448, 1230, 1022, 2458, 1245, 1037, 2470, 1260, 1052, 2483, 
       1275, 2596, 1067, 1290, 2609, 1082, 1305, 1097, 2499, 1320, 1112, 2506,
        1335, 1127, 2515, 1350, 1142, 2526, 1365, 1157}], 
      Line3DBox[{959, 1172, 2539, 960, 1186, 2550, 978, 1201, 2560, 993, 2441,
        1216, 1008, 2449, 1231, 1023, 2459, 1246, 1038, 2471, 1261, 1053, 
       2484, 1276, 2597, 1068, 1291, 2610, 1083, 1306, 2620, 1098, 1321, 1113,
        2507, 1336, 1128, 2516, 1351, 1143, 2527, 1366, 1158}], 
      Line3DBox[{961, 1173, 2540, 962, 1187, 2551, 979, 1202, 2561, 994, 1217,
        2569, 1009, 2450, 1232, 1024, 2460, 1247, 1039, 2472, 1262, 1054, 
       2485, 1277, 2598, 1069, 1292, 2611, 1084, 1307, 2621, 1099, 1322, 2629,
        1114, 1337, 1129, 2517, 1352, 1144, 2528, 1367, 1159}], 
      Line3DBox[{963, 1174, 2541, 964, 1188, 2552, 980, 1203, 2562, 995, 1218,
        2570, 1010, 1233, 2576, 1025, 2461, 1248, 1040, 2473, 1263, 1055, 
       2486, 1278, 2599, 1070, 1293, 2612, 1085, 1308, 2622, 1100, 1323, 2630,
        1115, 1338, 2636, 1130, 1353, 1145, 2529, 1368, 1160}], 
      Line3DBox[{965, 1370, 1371, 2646, 966, 1189, 2553, 981, 1204, 2563, 996,
        1219, 2571, 1011, 1234, 2577, 1026, 1249, 2581, 1041, 1264, 2584, 
       1056, 2487, 1279, 2600, 1071, 1294, 2613, 1086, 1309, 2623, 1101, 1324,
        2631, 1116, 1339, 2637, 1131, 1354, 2641, 1146, 1373, 2644, 1374, 
       1375}], Line3DBox[{1147, 1355, 2518, 1372, 1132, 1340, 2508, 1117, 
       1325, 2500, 1102, 1310, 2494, 1087, 1295, 2490, 1072, 1280, 2488, 1057,
        2585, 1265, 2474, 1042, 1250, 2462, 1027, 1235, 2451, 1012, 1220, 
       2442, 997, 1205, 2435, 982, 1190, 2431, 967, 1175, 2428, 938, 2645, 
       1161, 1369, 1376}], 
      Line3DBox[{1155, 1363, 2524, 1140, 1348, 2513, 1125, 1333, 2504, 1110, 
       1318, 2497, 1095, 1303, 2492, 1080, 1288, 2489, 1065, 2594, 1273, 2481,
        1050, 1258, 2468, 1035, 1243, 2456, 1020, 1228, 2446, 1005, 1213, 
       2438, 990, 1198, 2433, 975, 1183, 2429, 954, 1169, 2427, 
       952}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
l/+/5nN9JN/dYhP/fzTYLrIgqx0q92bNSLTOP7crnUhK55nmQkyY0xcDVRas
/9J3Mtgc+3/uvfxf+1/7X/tf+1/7X/tf+1/7X/v/3v6/dIzZf3SMK/7oGI/H
Kubl3W2E+xdNK23Xk4FquXqwXHwU6dEzBqVCGuH5ncVJJ9vokGmwJvsAa36d
3pMLBU8YhjbD5SMimfJ8ZMAik6eKeEZRAnOw6XNgM0xcnXv47DEZtj1qaF33
A0elxqFbFG2a4eb971Enc+lgeTwtpfsFjmzM8IefzZuB9K6o7jPB13cP+5Z+
fYKjlRHLDXsPt4JloW5jcR8JLgecCvyFE/8vyI0QsWqFA1WxLTPxZFi3IFQt
6SOOpB+Nhi43awVXXrXBZk0K0PsXcr/0EutnvS7VVyXsJYn10xfpkCPm1Uct
xVGE8mR0qGIrnF+56prWWgasEtfNmcnHEZ4V0nVjZSskd8jEsNsYsDPqnP7c
rfn1Wu+P1pWt39QOGZm2fqJ1JNB1e1JY3oOjIE+q1eD6dlCrfPlDyI0MY/dS
vRy5OHq8o5wdtKYdqqqdl4SKUGC2X8SdTcHR6Yz9WUOy7bBfMqnsWDUFerUt
V0s14choMkFQdbYNIn/+NFh3iA6XE9wclAleINc3KTHwvQ08Mm5ylv2kw/Ud
fEv803A0or9m7MxoG2w3r1184jYDfkHIYNJlHHHMrMT7htog7Ok7U+k9TDgt
s/vsxXAcHfijgxrzRwd10x8d1HOc4PMDcyRQ2bNln2UqCR7fazvTQcT991zV
OrWfJCCn2Swe0ybDswlpy4wGHJmbJHywmiBBNM3mrcAHMmyQbqtTJOK4duHS
FftHSCB6JoKclEiBuM8DWyMe40hQoGf3yvck0Eye6ozbRgXRdAWTB/cJHiro
s+ounQQKLf5ZU8p0mJ0rDvkVj6NmS9YpTisJRtPwtelMOkhF1Z04Rqzf1l7p
c+9zEsQwxz9e92eAi59QbTqx/qUeguLN1cR1OrwOfpVhgmHezgXZJ3EkU2hm
G/WYBLuYNl1lz5jgV6/fe85lfj3SlSGfuqgMCtjUqm4N9yaB17Cu9akyHDWw
NLxK2ilQE1YgXLeUDFWeTof2FeFI/doFXfcXFHggl3nN+xkZnNJstMbu4Khz
RzgHq6XAFz/epmR3Ciipvo3wuEHk27jbdbNyCtiNk8uVRKggt3KwrigJRzmT
XjxhDyiQyfsyUr2SCnGByV71MUSeqx7TdsukwIz1p/thczTo+l1rZXYOR9Mz
RbzLUyjwjW8suPE+HcQLFAqoXjj6ujPJJTeeuN/ACz1PEwb0s+8XyR8j4p4/
0rkgggIKz30Pn8EYEI78vugeJuKy792wdiAFmHvFtbqSmVB9MUBgy34cfTHL
W37AlwJt77ZvpsuyQIRrfuWn/vznZ+Y7hzPf+Zn5zsnMdx5mvnMv851vme8c
y3znVeY7lzLf+ZP5zpnMd55kvnMjGk2W4d4iLFj4uszj8nUSLBFKySgm1jkL
D3Ht10xQmC0rjpCnA3VpaMClNThyr4+VufWZBay2rBxVTxIUBG98XqGHo3vh
zZFqH1nwOo59Zm4JGVyeOwB5B3EdbnD+KTILXr3XXFb7hQZDR5syjwngaELZ
ydC4hQUP1xz4WnGNDqMi94xUf2PI6vGihQ5tbKBzZYrwXST4wO7u8VbAUQar
VKixkQ337d+N7HhLAlWBc8l35HA0pzRqJfycDcvzpm/wxJFhtEOh/d5SHOXp
G0323GODY/f+iv6nNMiKO7Bw4hOG7h41oUbcZgNFYtDXyYmoYx7S3r39GFpC
WjAllMmGufiNL4x5iL5gMsi61YmhLcfe6KXc4YAX3+oP/SIkiN9yemE/P44s
JPMkGFkcwDQ+PM6sIOrwEoaY5gxGxBfjwdI58GhUkMWxJUOE80spm28Yqpjz
scGTOTBaEXIu/jcZSrueJ+7DMHTkR8EvTjAHTjYJb19I5Gl4k5vlXiqGGgy5
4YYBHGgiXd25YCMddrw6tdmqCUOW5QF7s89wQGPBxrfedDpc4mcEb67DkNiN
Oxld3hxQOvuuSseXATe/GlR/KMXQcFDpno0BXCjN//VQpK8ddi0KTJf7QPiB
uklW348LApW79qtHE3GvSYtO7MWQmYjWFy0fLnhYx2lxN5Ch1zcEY77EUOBK
KdElJ7iQNyyX+41Khh7+hcaDdAwVrP/S3ubChTuT65hppynwiTK9kNSKoVdr
TSx0rbhQHL3QbZctDUg/ra3cHmHIObRuJsKMCxRI2vP4Bw2GN/O5pt7DUIC3
2usCQy5MaDDfJ2XSIfq01770LAwFrdqiXYa4YCiwgvVmJwNsFgzE+KRgiKug
EpCzk1i/1N3c668Z4HrL9rZMPBEvsYo1goYdUPWiFgkeIkFf5VufhmcY2nvv
qXwn6oC7Cz7Eik2R4HDYr4Y11RhadnzroZhdHdBges36ZhYZbDw3Rlk/xpDE
7zmpZds6wMpH5+NtHQoYDWSoOORjSEXWviJGvQMqDqAbawYoIDHTukkzB0OR
/rRfQoodwL49MHZFgQb6pOXyjgkYcpVZYbFmVQckT/wI9m0h9nfMnd+PojH0
0GiCulymAwbrhj80udPhc+EiBe5FDD0fWUQZl+gA4+W3KDH8DFi0MEyU4Yeh
jaPfb5cId4CSsd7TqnsMeKFC1rntiaFZFVKRuUAH7Ht088wBAyYUCBlt3euM
obF5dPb+X8ONf+1/7X/tf+1/7X/tf+1/7X/tf+1/7X/tf+1/7X/tf+1/7X/t
/z/Z53tPur3CjrHsbiMopClfIWmT4YSt2KO7YqPI9AJ35ExwIyCbK/vseujg
+4jkJ8ac/z3pbYMig0UhzbB8+X3lT5vIgBp7pK/O4ujH3oqb+wKbAZ/CFCSa
yaCjZFcmPoUj28rZ1opDzVAfF/JAg0qH5Zfumrg14CjIgZmvZt4MgxIVEXVH
GAAf9rhWVuMohD12m27dCh54zMMnq8jwMql7cecIjpSXWj+/b9EKb8w0hJMq
yXAxxpjf6z2OJK/LFjqbtsKubVqh08YUUMhr1ux4g6M9ScUt3UqtcKLbmT+i
jg6ieZtV1z7CUfN4mOabf1phXWJT0HNTBjyUuJEUcQ9HEu+mrzTLt0Lmpmf8
kT0MKA7/rfI0a/73pDG1B9oUVNrhlHrfZu0lZJiILLS80oWjGxppE2mK7RA6
fdCgPo8MaYm/n6iycGT3Qrvvw6p2yDh9TJmpRYEt765k5JNwFErL5MjKtsPl
Ox28QRQKyD5ftu/HCxxdZm3fUjTdBhe718WZF9BhBa/9FaubOHr4aoq8+Wsb
0K89ctq1nQFq2xO9/+dcfAqcuIO1weKXfCqP2xmQvdIfROJwRLbaYDf+sQ0S
NOoN8m2ZwONRP7IlbP73pE8zT0tQf5Eg6Mtax9DfJFBlvLcsbyT8UNxX1fmN
BMNnBi7nJP87XzOm4FqPIzPOxhVNoyTgi7zvaq1IgdEKWt1IBY5Ws9dcSRwm
wQOxNp67NRRovOzvbf4QR/U51VY7B0mQKfU+PsyUCtWlQ0lXCP+/aXKte0Mi
wcaNVqP3U+hAjWk+PROFI9GQeL3xRhJ8kn8ltvMfBsRbC0+GXSTi5aU8OVRP
ggEBXNSmggHyHdMqb/xwdOGlh0JjJQlqPyoYTekzwYXWH7TMC0enWeJrQx+R
QGfgrtwqNhPe6O5Gqsfmf08qTq/3jSVTwGSV6a4Y4jnit6fPWRfjyJiHtUyj
mQIXbozK6IWSIeek0zZpYv1O28wSa55RwHBiPCpVnALZD2aCy27hSGA0es3K
JxR4YdyTfvEeBfLK7VUUr+Oox/qUvEspBR4csg34vo0KVVbZN/0ScLTq50V2
dBEFqI6lB/lJVDBTGlmdeQlHfLtngnenUWA5835EQjAdlCIovmo+OAq3NBns
u0qBpoPZY03CDKAvUCptcsPRxeW377tcooB8GGVb1C0GOE+t+aTpiCPK2Xrp
1hAKHKarlZBUmHDvW/OF8IM40i6Qv7b4PAXG7cpeXK9jQkHa6tYiExyNe8W5
qp+iwOPkh6cmFFigucd8Y6kejtZydEPk0miwoEXvgONLErQ5WnSGE/tibdy9
Vx4JNBjeYpdR7EmGvtHN9gev4KjxqbJcQgwNEq702qT+IsOhgyVoloivFqkx
PSmMBisPS5WKJ1EAwtf0RwcTcee1zzoVSINN7uMkhTVUCFPzSho8h6OjdQUX
lc/QgNnfwSaXU8HJoCZ/JeEHNPPicpMnDUqQOx/vHhpwqZvCNN3//S5ey84k
exosrAqfWeJOhw4BbhZ+CEejz2OuN1rRwLO2++3bSTq8CWblZ5jh6Gqb2iWu
CQ30k87m6kYzoPH4kvEVe3BkIlXu0qJPg8D0mFsKkkzg3PbrCd6FI2fLs7HX
d9LgyKqKXdfuMsEjI7ulbjOODp4q2b93Mw1Y09U/0HIW5P2WFn2phCN+7Xyx
DiUa9LrpyE0fZUFpeJg0YzWOMi3rvw0L/3uu3j0/6QEJTgg/ZxcT8TK/Dkbi
r5gQHqP3ZvFmIu4aCQcciP/PlLH7rw6zoFr0Fv+SVBKMZy5ZVa+LI1OqBf3e
BxZ01QiEDCiQIfL9rsft23EU1Qy2m0ksqHBQss1fRgcJpbPiUnw42rQgWL+g
mQXZuisll9+nQ8BZgZK5aQwl+WcNlrSwQU/dJS/qAglqxqMKI9bgyODsnpac
F2y47GgpyBYig8q4UWWeLI6UnIT8A56xIejrE8dnt4h62OledUcSR/4M7eTh
XDZ8V/mesegnDRZtH7K4+gFDzG8z4Wo5bLAMmGDOxdJB/O4O96ReDD3IG3/p
dJMNKaGKfTFSDMhzjl5++iWGKhTDRnRyOLCoU/Dad2cSTC+qYgvx4kj1cI+F
QCYHTOQ48U/HSKBisY/PgFj/yYKPtdXXOcC+eurGqkgyCFwfvWY9iSGe7k22
FskcWNirOrFSggJCGYWtBl8wdKo7+rfcBQ68s8rahHpoEBxgM0tt+/d7ZNWg
6c+B8/KdfU886WAqV7l/qAFDA0ueqWw9zYEFeqOFDd/o0K7CnzbwhPCb1Ce/
Nd4caOLGTltHMWD01Qal2hIMsWTEvNad44Jp9yF+f0MS4Bmvd3oMYOh4WP7n
Nl8uzBWPniom9tGZGbSp4jWGljV8e2jpzYVXs/tkIjzIsFu06303B0P1cb/6
mzy4oNe7WmfyKxlGnece9VMx5Bmzv26lCxfKBr+uXkDs+weX93JftGCodeeU
UfUBLgQn8g1aP6PBTIOA8bsCDK1ziai6s48LteFy6vtM6LCnWueS9B0MCWXM
iPnv4YKohOdb2ks69NiaLlO+gSE2RStZU5cLNgHN3m9dGGAyE2qx4hqGdqxY
7tuzgws1cwvMLmEMeCFnGv859j/n+f/7e1vkXYHpLP0OqNuxak9RHQnkKzJG
52owVPIw3GabTgc8oU5lj+wj4mWh7o7KMfTs0A5q5I4O+HzyYD69iwxtmkus
HYsJP1xaofpkSwcYrIy8t/84BfBbMsLW9zCkEPjuAUetA4L2Xx86/pUCEUi/
UzmbyDer8ox7qztgwbLAQptsGvzzxS66OwZDji1YgtsKwm7w8g0o0YFckWaj
FIah0Weaz0SWdQC59BX9WRUdBocudFsHYChEw8/pjlgH8Lkqj5nqETjhvonH
MV8MvQl0eiwn1AHJTJtGTyoDDqttMzU7jqH2Mdf3kfwdUBTmTZc6zISyDdd7
lzlh6GhefCf9IoDv4RdrlvaR4VtYSFbw8lHEMoL7M2cBoosCfpw4R4HKejuB
FwROG1M+ukHgJABuqdZ0YBEVbBlSem8ER1GDeePz964AhkI/U5qyqdAj7v2A
NYej6WB6e7YDQE0BObpFgwacLR65OQQe0+o9XbDpIIB2j/9TqxYatIc4XN4z
Or/+nt/h6FradgCJE2LpAiEMiH6e1GT18t/vwrOzm9UA7PufXr0jyoTzd+T2
HaPhKLC5wDV9HYD36kPRT28zwVbtbatJM4EfbvMSjRZg6tfnzw+JeqjsKXx/
CYEfDHictlAlAdBh7tk6Zxak0p6ZlZbNP5cqb61w3fNGI9SmzQZYEHEXpnaU
ePGMovWNa91+pjYCW2RC/es0BeaG0ImUHzjqtnov65/UCL/2TMUrXaOCb2ly
RMoY8Vyp2JdXlxthfSR+5/M/NDBWX+Dg/QlHzzSyJJRiGkFutj1rxxMaUNaJ
WcsPEH3zj57e8f/S07s5al/k6tcI7gfiH0fPMqDEt6LL5zmOHLIwGWOfRuDT
zHvpdo0Jz9RX2LpV4chKfkZr+YlG+L4lL+KdGAsEhxe5biNwUVK13m6uSyN8
FN1A4diyYKL92bHBXKK/z9S7BR9phCP+jTORd1gwu3//s1M3559XzVnaVZp0
qhl4diftU/1CAfOYhDt5QzjyVg50yvBsBt6L4q4yEVQYa8jMLO3H0ZSoo1Ss
WzOYek2/T1tKg0HvbVfSiedK+WeDsJNTM6zYH//zVgEN8q3HWdbM+fXueB1L
ir4aNMPR6c7HHmFM8Hr1wXLw3+/Ij06U6Ok0w/mJ33UGgizI33BroJnA1RUd
6eUB25sh2uVGiaQFC9QSElMjCPzwMkpgPGNzM6CH7JHcDBb4i71myMbPP8d6
bylPeDpqhXxTEcPM01QIundqXJOOoyuSOQ6Su1rBRTI2o30BDeq0TdZtaCX6
fmTF6fNbW4G5qEQrOp0G9pyY4a/P/qMv9+q/9OUGkzITHcVbgXFnsU7uLybg
kQ2tjcR6tIVl5JYItYL4BestoYbEOjdfCkkKx5G8sKDgA75WuBHkHzicwIIP
YWh0e8D8862BcYbRu0XbIWtuxdXEMSoMCgrBhnICP2hUqm0SbIefZQpG36No
sFpVecO/eoDz6bPdDq5vtn/dBk++Xnwurc0C70o762UELhoZWapwltMGpzJs
JY9GsSCLUmDMcp1/7rUvfV22UScJHkqSCmd8afD2xPYHSWn/0Ss79F96Zauc
GULVOSRQX80M5g1kAZ9dSerIgfnnYQPm0eP6v52TnVqbd/SxJQPehLx2f3WQ
DGesltuonsGR+u91xudNGBD7AcVZfCDDPee3L4Y9cVRbuSVjuQHBM3sHdJwC
CTz7oXJXlAuxnpWOOdd3MWCjl0vVgsVUEM7ZJfPNnqgbmHjlF00GyOWw5bWz
qKCzdkeZAYGTtRxDN69RZcBCY5VKAVUaeF094HDS9P9cV0rij67UfHO1AqwS
CZYkAxLvbsm53k0HmV8uamKaOFpMu3TZX4gBTcsdLC57MaD0Q/O1ImUi7ry9
u77zMmDg9pFDgj8YQK36+HrVWhxtzJuNsvlJh5f2K6VEY5nQlqd08qwMcf1b
ypA6RodPns5RtMUsMEvg5t0Tw5FnrYd5yRAdrOyymdaWLHh3dcnbioXzf7/7
S4Bukys/Cz6FhlgP0MlQQ/U5FkDE/fHV+/YxPCw4IySbdcGZAtKRwkn/GBE8
q9X3ldJPJuROLi9+MEaBvQ0vAx4QePWoTY/JmnEmJGz+VecbSQXzi75nhIm4
t+sw3Mc/MYF/x6ZF7RI0KFr1D3ufOo5a5tFlmm/e1l+uXOBmG9GfpCplg8wZ
EDl+rbxvCY4WBWfxlTxnQineXX/5DQPOUY4cOkk8bwrDZPJOFROEFNV1Fb2Z
sFnhQ9zLGQzpSb/T8n3IhJ3dRbJGU0wQ5nv3aOU3DD3q3qwhm8eEm+Z577/r
s2DJjuVr936Zf962ffbz1K1eFvRLN037GFEgMORayBkijtLfIjeHvmZB2K7t
ixS6KHB5fFpP5B8c2ebu3mH6kgULo+hqp09Qoe3b+9PRKwj837VvFx+bBbfT
NMsspqhQevScU6fkf/SUTv3RUwr/o6d0yDNin1M9C07yGJ14Agxgc9MDfD5j
yP1JqlteNQscVoT6DexnQtU7ZW38LYZcusN7uWUsoHobC6a9ZsKrjkQdcwKX
whOD4YmHLOD98Nr6oyYLxPJJ3Qms+edw/TeGKuOVbOh95xNwgeDH+mHHjyjz
42jHg1cbkkrZkFX07IDxfipMI4m4J78xlCXYaCH7kA1DKokFxT1U2C2rQF9N
+Lnnj37Rvv/SLzr2U/z91SQ25LP0qg+oEbxV1WeyncC9gjtmMi5fZoPAW8Vf
V+uZAIV7q/SeYUhraHa5/yU2FCfUGCsTfDbt5Qunm5Xzz+cejgNB4zgOrHx7
WXmBBhW2aK/nlBE8ZUv0YbGCKA44a9orDzZQwfDWE9XNnfPr/1wPqChsduaA
x5md3jpZTBD4nFrJcxtDjbSZpGAHDrRc1xVuk2SBIU1F72z6/HO7cw5blmXY
cuEcyi/mz6VCgW1go/ST+fVwbqQ+U/m+iQsX1C8JN/Oy4DJ+yHR9wPzzvPPp
wMw3bzuf7sp85wP/B46IT0w=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{377.5063313737492, 178.84667011981102`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.271844480925933, -0.726777783197213, 0.4656476634596543},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.618837166584727*^9, 3.618837209274727*^9, 3.6188391514737344`*^9, 
   3.6188584040083323`*^9, 3.6188584485878863`*^9, 3.6188586386599884`*^9, 
   3.6188589502408113`*^9, {3.6188589873709188`*^9, 3.618859025995698*^9}, 
   3.6188591964781556`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXUuMZNdZvr6Pquru6ume98Mzjp2EmX7YcUzHjoyxIfFMz8NDUEA2STyL
WBaDjSAEE6QIw7x6pqdmOkJE4iWExAKJhREem2QBjBBSNiwGDBlAwrD2jk12
sGru+c9//v8/5/7n1L1VPVkgFnX71Lmv83/f9z/OqVvVP/XaN974+V9+7Rtv
vv7ao6ffeu3rb7z5+q89uv4rb9VdxUNZ9tBvZFn2nUcz096um7jZ3v7www/f
NhvzZnz7KfOn2L548WIBHdA0LfHONF+wh38a/lTyIHjV77MysQ+u8by9xrK9
9Ef37t374O7du+aV5bAtfnD//n06RxtQT+mDaz83/bXzluMfi0HZBbUqZtEL
IUE9/9o4mr8ZT+B37ZF/PSF33/n/058wf+CIkU+HxPdxFf96u890/c94np6M
X6dU+hbNdq/p+mhC6z5lb7hq/uSmRxPjwzE3BLO+n7j8QDnz8UlveYRu+bc7
Ze1PKrfZTaC+M+42peBsJbiUOeiCcvkBWfH7ictrmHS80WGlD+674QsYjEBk
llFqckh1+5vqpRxMf54893eVc+cIgz9Ingso7DFp7beUqxyKeQlbmWVLLUA2
WfP9CzPmlS2Y7X7T9UbLWx4iIL4+/palcstF2Bbba2tr/jCCvn3mrNuxMABG
X5hsBNrd2o4qJ8B+RxnaDIFz1g7thHJQLO2acmbO3Kzfcixt7ahozG8rwzkY
GyJA/PRkdhTb7786sysYS/03G5ptMQUBWh9sQS9XlXEeMNu+cPvjykFFwpgF
Y0zeRSC7TNfuKSwaEmWbSvwrWhnjx5f6Urm1o27Nm5a75asz8G5gtm2l1yMr
51ue8XHi6C0znjxWGDw+gVnvGbNWX7oNbm51BgJ09hlxNewFNNqOfobsnVH2
QqsemOgj/l6l9KOVNGjtj8Riu+jLnKkYzWp7zat+V2+B1coC0TS1st5Yd+2S
eztqcp4wODiFsjkYnVKM1gqBsRj1JEYGA/hb37QHAJX19tY2ThjNq0QUzbDM
0eZd32z7CnawXTBdgGLZ0sww9sWPQ7VemHH9rUOhdo9ZcrMnyc20sjQnWUar
80fG4V55uJtRWI1aVZr3nkbN5laO6eE99M73wDubfIDShwofu0jL1RSwR5XZ
KabB3XLTxXXUIYJ9NlGWdJ2OH7NcfDLqMjYqWv0PbDCAsFCPDQgxb29B4Oib
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
KU6m\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polys1$1$1", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"0.07079004920350838`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.05994021039639186`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.018883121965387592`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.009892927250453792`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.07182797641719836`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"0.08476825847407414`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"0.02670476718339642`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"0.013990711889162146`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"3.8503345822662296`", " ", 
      RowBox[{"(", 
       RowBox[{"0.2597176891083112`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6187610228802204`*^9, 3.6187616295962205`*^9, 
  3.6187720428663034`*^9, 3.618772139456303*^9, 3.6187723265133033`*^9, 
  3.6188246408056507`*^9, 3.618824775369651*^9, 3.6188282549286823`*^9, 
  3.618836137827727*^9, 3.6188371047597265`*^9, 3.6188391515937347`*^9, 
  3.6188584041383305`*^9, 3.618858638689988*^9, 3.618858950400811*^9, 
  3.618859196518156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2.4885905298113085`", " ", 
   RowBox[{"(", 
    RowBox[{"0.06832314942609151`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.21871274710415115`", " ", "qq"}], "-", 
     RowBox[{"0.310675530429635`", " ", "ru"}], "+", 
     RowBox[{"0.1846689805255276`", " ", "qq", " ", "ru"}], "-", 
     RowBox[{"0.576167016458676`", " ", "uu$Shock"}], "+", 
     RowBox[{"0.4945834422572904`", " ", "qq", " ", "uu$Shock"}], "+", 
     RowBox[{"0.5544207499878663`", " ", "ru", " ", "uu$Shock"}], "+", 
     RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ")"}]}], "//", 
  "ExpandAll"}]], "Input",
 CellChangeTimes->{{3.618824053889651*^9, 3.6188240601496506`*^9}}],

Cell[BoxData[
 RowBox[{"0.17002834262865427`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.5442864711924063`", " ", "qq"}], "-", 
  RowBox[{"0.7731441828712947`", " ", "ru"}], "+", 
  RowBox[{"0.45956547608573695`", " ", "qq", " ", "ru"}], "-", 
  RowBox[{"1.4338437807486972`", " ", "uu$Shock"}], "+", 
  RowBox[{"1.230815670602971`", " ", "qq", " ", "uu$Shock"}], "+", 
  RowBox[{"1.3797262279506872`", " ", "ru", " ", "uu$Shock"}], "+", 
  RowBox[{
  "2.4885905298113085`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]], "Output",
 CellChangeTimes->{3.618824060889651*^9, 3.6188246408356504`*^9, 
  3.618824775389651*^9, 3.618828254958682*^9, 3.618836137887727*^9, 
  3.6188371047897267`*^9, 3.6188391516637344`*^9, 3.6188584041783304`*^9, 
  3.6188586387099876`*^9, 3.6188589504208117`*^9, 3.6188591965281563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "[", 
   RowBox[{"[", "4", "]"}], "]"}], "//", "ExpandAll"}]], "Input",
 CellChangeTimes->{{3.618824028419651*^9, 3.618824031429651*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"1.3567610417387757`", " ", 
         RowBox[{"(", 
          RowBox[{"0.1461072162790301`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.3777282536432541`", " ", "qq"}], "-", 
           RowBox[{"0.5437993199961726`", " ", "ru"}], "+", 
           RowBox[{"0.2107631596093442`", " ", "qq", " ", "ru"}], "-", 
           RowBox[{"1.0776518376492996`", " ", "uu$Shock"}], "+", 
           RowBox[{"0.7392746595598313`", " ", "qq", " ", "uu$Shock"}], "+", 
           RowBox[{"0.9035342804939647`", " ", "ru", " ", "uu$Shock"}], "+", 
           RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"0.5124869789071899`", " ", "qq"}], "+", 
          RowBox[{"0.737805731894845`", " ", "ru"}], "-", 
          RowBox[{"0.28595524399172967`", " ", "qq", " ", "ru"}], "+", 
          RowBox[{"1.4621160298807696`", " ", "uu$Shock"}], "-", 
          RowBox[{"1.0030190572354754`", " ", "qq", " ", "uu$Shock"}], "-", 
          RowBox[{"1.2258801116496867`", " ", "ru", " ", "uu$Shock"}], "-", 
          RowBox[{
          "1.3567610417387757`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
         "<", "0.19823257896428945`"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6188240121756506`*^9, 3.6188240321496506`*^9}, 
   3.618824641155651*^9, 3.618824775429651*^9, 3.6188282549886827`*^9, 
   3.618836137937727*^9, 3.6188371048397264`*^9, 3.6188391520437346`*^9, 
   3.6188584042283297`*^9, 3.6188586387299876`*^9, 3.618858950440811*^9, 
   3.6188591965481567`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6188239720456505`*^9, 3.618823972605651*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
h93hHDu/MzEelVPwN18yz31UbD5GAE9c59+Rjs0E42Uyt5WnHSDvcVSLTOtl
Q/PA9eSji/yrfLgWszf2cUcIKFwpU1PYUQKZJq4jnXP5YPlHe/uO0feYGt1j
LS/3cnnC8zXz7w986s90qM4RtzWohWE+F5c9O8GHg7n8s8tXR4LSj/G1yg85
f2g+fSnuYKI7ExmlKWUVz/nDIr8PvSpzPGHtqV9BpuWc/9fGrZmZXhPfZf7O
O3q7YHDvRHize/KpCEvuOdV2qdB0aHoYjKfq6nyvVZomB8KYHSF833n36mDo
jST9cc78v/mDlE1BeTLsHG4qW3OTq/8sm5DDz78XA+Wj5CMGynPzHU9Jo3N9
TKxgjmuMk9gHLq8wKPFxvmrykNSBj9cpHTzb7++4O9vr7aVBtoyh3q+keDtO
t486xobzwiOYYYz5XLmCru8vzkwW33S0lBsXEuZr9lnO9IDRDWYtpsO4/KrR
bcDMdXJRUHlMPifKrwhmdQ76Mv2QHoiKO8cpxUWBzQDlHf3Hc/rbO4pMf/fY
A9ryj965pFsGpryDpa5aeiBbZ2M5MN8b9BbZbEw/x+nfw/j20zJfL4h+anpV
vX8Z3Nz83lowgQ+vK32mOPdyYT4f/bpy8CruPm62rdYsVjNmZjs+T/h4losb
/mHHAo8cvcKI3a56/j6W45j3Kq23HXHZk9PhIfv+a7ip2MrRp+rhoPWvcy73
/8bn3r7bRVcmwsWmy8rVffPg+blb3le/6UESTyXMsZaB0V8dNxmqcXmOodXO
qanLGPC2e3nn0cpcaFPVn9J0mA9tyisq9JOT4EPAoQWaI3O75M/lZuOSIrU4
nc16Ken+qPgbr14N3CvhnEG4nKuCyojqFDh9SKXcY0E62IqkKUoc5JF5UHG/
wQe+BHNxFcedo9xnI9kRnD/L5DcOlQ5NBIW0jNt9BbmQLNt/kNZCPfAPymiy
VA9lZO9/7nhUz+WT5sZ69V7jjZk/KhIvpCsr4WTctA2WPjwyz1q9Ozxiujin
M86zwkzfZFV+4Pwc6zye7Xmi/Jucn+P3PDaJ48Vdijm/xflLypnQkSE1XHxO
qXMP8myNYfLm1NpXhDbABNhiGfyMm6+B1oxTFse55+NItg7ZotR4LFqjFB7o
NZ0oUuCTedZjXb/pffW5621y7zlvR0IAMyOsVuHIVI4bty59ndsnCY7N7G09
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
K5FS2F+y1O7tZD5kTzVZbyWTBL3n/x5y2zoHxC965crc4MPlDQ9sD271ZFwK
zwTuPP/X/7M2vR/4kwfaW/tYGU2PgQ3BuxV2OxRCyvqUI7G7+eT7mVdySRY7
5nH64Pu+QOXBJyJucnrKq6Z9ufqW2wdmfMrGiDfznoGB8LsL8n3mDMvkgNfv
OI7tldt2B7UFNoKZ8P0yaZ/mP+yzw+5nhGN7DTkDn98TGtn3vOR7dWZXDn/u
ulyOY/vwwDdLh0xugIPC99Gk/ee3Ty7+WtBIOLavHNR7jpx4PZvPe3L7BY0e
brlnewPh2P7PcSnFeZ9r2e/3bEl7de0YySQ11G9fl/1/sD32M7lEZcL6yhrS
nt7HxlnYnnxPa1/bQ+laew3h2P7kA14/Y88qcGK/p8L2gnFeCS9LqwnH9g7f
z3daWFaCIfu+Htt/0Fm9ek1kFeHYPnmX3Uen4xVsP5GkvZTb+7LA+5WEY/tX
T4Oeh24rB3P2+wFsv+rZPd3BJysIx/aDJqZXpKqXsb+bSNqfklH7aLS5nHBs
r2pWn1MpUwqsH5L2bnrVpqWzygjH9ruavzLv+pcgJ/vbrJ3H6zX/fQPxT+SH
Elr3/KmqJ36I3AouxKam1xF/Qx4kEB1hGVFL/Ap5/gr74xvcaoj/IG/NlMkd
blVN/AH5kHUhU6rJfHpfl/128L4j37w5s563pYLcX+Qny7TmT11cTu4jctsd
z+w+Tisj9wt5VM2RT5GjS8l9QV6u82PdOZESoj/yjmfXfeFLEdEZ+Sj+sD59
GwuJzrg/zPZ3k11cDtQRnZGftJ6yf4R2LdEZ+V1Vednb62uIzsj9K+Vf9lpS
TXRGnnpewf+sahXRGXnDxKlHWqdUEp2Rd6ZOVdKXqiA60/vtoM7IZw2cFq3V
q4zojHxd2LSzOe0lRGfk+lunqy99XUx0Rm72ffqfmNoiojNyZ+cZgpmFhURn
5EbmOmLrbxQQnZH75Oy1nn80j+iM+8MccH09r3djNdEZuSlPh6dYXUV0Rm6t
UHJnS2kl0Rm514eVsab5FURn5PERCc89MsuJzsgLz8walCsoIzojf7HQe25b
QinRmd5vB3VGPiTzrtXysGKiM/LJVn1iDgcUEZ2RL9h8tsnWq5DojNx9Ru3o
c1BAdEaeG5N2NFslj+iMvGNpSMoY+RyiM3KZvIejDo3NovxZwJzaHFimv7OS
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
6Ix8i3GfmDq9LKIz8h8vDNL6b8sgOiP32FFQrLIqjeiMfF22aqPO/BSiM/K2
BQ7vb05LJjojn7/rT7vBwkSiM/Jbi7IlkqTjiM7Iq6XtFCVFoonOyKf13adx
+E0Y0Rn5t8KtgqvOAURn5I8evO1QOuBBdEZultBrV9wee6JzBft+59GWgH6e
I7KIzsh/uu5RlJTMITojV+v3/fmsERlEZ+QlcRpJzPA0ojPyo0dtndYPTyE6
Ix8g03SmZlgyt88VyzcG7PUvnpxIdEZuObRT94NcHNEZecpZeykxuWiiM/Jf
jbNK5WTDic7ID1s7jDbXCCQ6I2/SKbKMW+5J9JnA1ntnjhh3IikgleiD3GXC
y/QCl3SiD/IksS3jwmIERB/km3vczHRPSyL6IE99e+GlrNdTog/yF+WvF4ow
sUQf5KKCrbYvK6OIPsgVg5LfZH4OI/ogd1DaZaY1OpDog7xBRGXmyPWeRB/k
q9nzalEf5N7subTob8ixIoH+RnPUE79zSCu/U1u7JInoiRxcj+venMKdR4/c
bqx20L6YBKIncrdb9u793scQPZH7/Si2C5aOInoijzIYbLl1WxjRE/nlsAc/
v40IIHoit78r0aJxyYPoiXx3zVBHhaIHRE/kQ2eKVlquvEJ0o7/rIPu7Uhz1
pDnqSXPUE7/PiVbqeedzyBOiJ/LUhW2d1/bFEz2R+08aNHHvnwiiJ3JXSanw
HM1QoidymWEbLY6r+xE9kff/bhC4usad6In82dN+7ivabImeyBPZ9zWoG/3d
F/ohzVFPmqOeNEc9aY560hz1xO8lsvSz0rbFBBHdkJtvvSoXf9ub6Ib83PWL
YiBwIbohf7m/LavfIWuiz//+LuWqOs3R32iOutEcdaM56kZz1I3mqBvNUTea
T2G/D8E6GK6/qxSep0Z4z8fVnxSTG0GXPXcMuYihn97DCY3wjl0ngHw4r9Vf
9Gc94LlayMe2Wd1piqmDPsL9ygiXu6p4It64FnywXsry2ex6usR/+7Z5EQ6q
fcZpBFZCGXtuFPKVqe49JhhUwJrSuHTnwGjCN2pBc4dcOSQlJX+yvZ5A+I7m
2ozCplJw3MYbpKHE1QP3nToX4Of6d37Bnu9G2ttqTOu/G/e1SCR1ORd2Pd0n
9rxg5I/7+238sqgeTNn9eJF7xsY5XuhVR85lQ+5rmPuiX3oNfd4Q4y9VP8vm
ZjW4s/V55GHsOjg8F4zUCRtkdeIflAF1rhATY63mt2JXKTmHFHn8klVtBeNL
yLlmpE74eSdoNxXBQPZcJ1In9Dhk2exVCFfY9w5Yd/rErmsTE+7/Sfh7TejZ
v18NTBWen0X464lpEcuKqthz09wIf/V5zYFLjpVwhK23I69m150pCs9xI7xS
/FWT351icGf3zUNeVn/ErmVHEeA5bsiLQ7+slJ5UCCs+Xk/spZtCuHPfL22x
1bi+IJLUqT6y68VWs/voIn8peabdrroC9rDnRiGvEz0x2DwA19lFknoRrtsa
yu7zhnzjacdtk2QKyH6MyGHPXctfKblkX3rkM5aZJ1bws4HPvpfBOokDu67K
lN1PFfntfVumO8eWwne1FTesTzKkrrKmMuBoy8L/935JeF4b8hk9LIxk3qez
75s8SX0D1w3hexbkuB4Hz4ND7qTec5DD8ZQudYNDbN1gLTXfX8vO98uoeb0i
O6/f2838vaSbeXphN/PxsGEL/v4722XeXdvN/Lqqm3m0bjfz5Ypu5sXr/3/m
v8g92HmuAvv+Due5v1uF624cqHmuHDvPxe/9cF6G63Gq2XiOfPYsv/0eooXA
Y+M58nE2BT0Hf8sj+9cgL0xet7iiNgda2XiO/OqnrIuuyVkgxsZz5POkVz7V
985g45UtmSe6s+trEth4jnxraOKZJK1kNv6EEi6RdProkJOJsIqN58jPTjjx
1l09DhLZeI782cXDB5X/zr8c2HiOfFX9gRZBQRiJ58h5poJUb+UAEs9xnhXI
rqPB89+Ra8XeXzHrTRY5Vwj5z6nfN++uzYBBbDxH7uWks+9GfhosZ+M5cs1B
qUfCk1LAlY3nyK3Y9S8r2HiOvM4vQuPp0CcQx8Zz5DOtLu4f1hFO4jny3402
34qjg0g8R+7mIz/j0iUvcp418s3VmkfErjiQeI7zqT97hetcBrDxHLnDsDEb
BlWmkHhO5pUZ+opOFckkniP3bTccrBXMkHiOfAy7DgXjOZnHGa0YsnyVD4nn
yP0vf+vTcduFxGcyL2PXm6xi4zPyk03ZTHxsPJvXuRNun6cm6VzyhMRPzM93
sesyPrJxjM4zMZ5jP9bs9+GuFL/Ncozn9HyqO75SqBuZL6QJFgU0ytnANfbc
WzJ/2Z/ZLPC6DdNZ3ej5BevnJL9q7pg6c2vNMxJPkOP39pgfIl+n7HxxpUox
dLLPC9RfOSqip6eZDYlXyAd/7Iz06nOFPKfo6+qOb2D3sUfe+7PLtW8H3GAT
xXuyHPfFpa/3GHueKfL15pOPPPZzA96/fqwIb/vywvLEeWf2PE3/LvdXlB2/
yH//rliXFOJB9s/H/Hmxq86WyotmsIA9n5fOq8tY/ZGPVT/tHtwjnMzvkIst
7Kfy3SgcngrjGOG+W3i9Jvt7AdtPl7wd94mldcBzFujrwvMCaI77SNP9D2Dz
JRIH5kW5yw2wInky8qX9ylqie17rtp7wmV1v+b/v170u9vC74UXsOb9o57L4
TdXDl1t1O75Ws88L+nf/TBE+p+jrdZUdMu/UXLcuHMcFXi9yPFeU7v+H8PlI
+KAFpw49bT3H+rNzl+va1Q1/zD4XaO7SDXfrhuM8gr4uzNMw/kdZpH2w0HIn
4xd5Y/thuUF2LnCd/f4EdWhgvydHPyTxPP3wsvJlbqTOidxLW+Lb82sPyf1C
PlphpYHUVWvY1o0OC4Xjl8TnOV5BV7UW+4KGcLwT3uL4Y/dbLW+yLzr2c2/l
MsuFk2+Bg/CcNcKNpu8JlkwzZ9tz/CLLz7HPd+QjRyfKv5QIYPPhSKKn0ql5
hh72D+Atmy8hn/mCmdxX1YZ9zkYQ/u7jkYHeeXYkD6f9B+cpNEfdaM5nxzv6
/1OpjMrZKr6gT/F4lmN8wH6MYm+Zn55vTfIxUjdbvONHtOQ1eC2Mb13iD55H
QHOcR9B2arDzLJpjnkbzjWzcpvtH/6Tb43Otu3j4v+OnQxe+jn3+/s86j2Qj
qYOlSgvrYJhP0vEBxyPa822j9Uf1egtoYecXtJ/j+el0HDNm53H/W4euvIqq
93qy9V48/wJ5PnvO+Mn5eX1MZ3c9d3sXe2442lnJnie+ieJFLH8kvI/Eng98
v8fJZYHQXT25u3wA4yrq6d0xu9hlhS853xnb32Hzqwrqev3Z68X2tM44L8br
lclQdRKpCIGFbL6KPP/plVPOb4PIedDYz4+K9+cPb3WChWxcRf6aPQ96JcVb
Wa7M5ue0PQlsPk/zuG44xluat7P3l+Yd3fCb3fhPYzf+GddQ3PtzsHuX9hvY
OE/fx/7+kQeNwnxJ+4eNd8r7zTtC5gvIg8b7ajpUXAA8twj1Xzimz5Ww/SfJ
/Jr2z6Xd5AnHFqw+X1KU0mU8ru/Gzppurlezm/Znu9HNsBt76thz1uh+otjz
euh+BpXnvm11EhD7N4TsfaccyQe7SQ4We/p0HaeVnq1VaYm3uvzuacc1lf0e
dNVh0NyD7kvum5D2l2082usl+XA46ajqvNZYYqfj7sbdtqv4MKYj4npEog+x
U6bl/6vr3ONqzNY4fjpixiUTs6khjJmmGUlMMiG1UkpuJ5JLSC5F4zLNcZox
OiWKbBqGUaEtuaQLaSgqtdOVXSJddG9qGs7USPY0Rjii43xav2d9vHb/fj/v
Z71rPe96n7XWs9Z6fu9fiPljLWt7tclgtXYC1ce9vLG9wd6TefH5MNYRprLC
RaFmdVhPUTzTqdzWTb38FxbDx1/whFtqP4N5NaRTCf6Tv1ZBjG414lQUJ+yo
vvC7S1wDe9o9nhL/69zE4we3/Myc+DwB/H5+iX6GZxVz5eMLeFP44qKO8ZUs
kK+zwBu86v3N/nsX8yKK7/Wfc3B/U3g9s+sel4lrWe+LLV5fx3S7/1Pizybs
ysmYXMtu8vkJeEXnxjFf+1WwJj6egt9Se9q5zbvL9VZOEc/71d1t9shyhnUT
eHqF61YLdSnimRT3q+w0idkVVMv6dc8riBfoKj79eHkNi+peTxFPM+wbn2NW
zcZ0ryuJx0/earyqXxWz4fMxcH+fnETLQ+VsE19/gXvLx0+o9SrjcemTxFcd
j7z0nU0p1wk9T3zBxf4T9fRL2ECuGwW+W/7Ya2PjbcSfKQ657FHQROuvqllZ
d3yDuP3H6wwOzK1ipt3+lvjnSx17NxhXsjSu/wJusN/40bi+FcyW64GCv5s7
oMq/uZxhHARvHFsaNyK6lLVy3V7wm6uSD20OLKF5PviGsWOf+OYUMxn3b+C2
Yeobw7bfYgFcJxdcvyv5aPrUm+wv7rfB1V7fbVj2VIX5Bp07Ch8VNmngkkoa
f8H9vmnd/d60Cqbk60rw1UXTK3VH32UO3esj4g6jjxoN7lPOSvg6C9xk66Nv
328t5TrCZ4kPvj1DJSspYWH8/D+4muc10k7qnjeCZ7T/esfU/Db38xHE90T+
8PXnr27y+UkccedZ0waZFxSwdr5+BB/xpOXSFz/eYOu645bEm0+GOU9Zkc/q
u+OcxC/PtX1saZTL4rhfQtzv0fz8F+NDrpNfwnqnd2WBcV3vYqbkfgm8I2DM
v39OyuHz6kO0PrK6N2LQoNlZ5Jfgb/OfTUj3qCkkvwS+OmF7+J/VKubC/RJ4
04o+Bd4XMthS7pfAh+ef2hGSkMp2cr8E7jLWakrs+WTyS/DbTyN0Jg6Pv05+
CXzPQbuG/il55JfA9YK37e3MzWEF3C+Bp6Wd3rS9LZn8EnjdmYF57u9cJD8D
/39UuTLslU8O+Rlwy5bnI6NHZrET3M+AOyz54v05CzPYZ9zPgDvd2PLOn3tS
6X/HOLU0wzF3hG86/e/gsxMXuewrTKH/Hdz61JrfOvST2RPerzSvf5Pe4p68
X721b8v7lZRD/046Ls/k/xeezwm0zpe9PM5m8rjuW+t07n/ATXR+bX7+//N8
PJ6Pcs7yfAWredweXN/ePe7y63X3Kh7PBL/B78uj/ug/3xefcV++J5z8Id47
49OCvA8LE1kuXw9K25vA4/k97TtL5zlPJeuOG3zdUcn3I1CO+5Jox/nesaQb
iHpu9Dc6/Nw2nvTEpXY7XnKtTPu+iEcN6OotM73oS/sg0n1t3OMD74pw0HOq
EHllab97xc7Ehpkiryy49tTvQup9hM4R3XNRtl194Sr0jMD7Wa9tGcaEDhG4
Tnb10KmG9eJ+EOKxkvyxdG/FqH7993eFfhC4VdyC8PNXhU4QuI2xKv/mCaEH
RPdcEqY9/j1I6P6A25smje775V2yj3RfG/YB3zasoWLGOpEnFtz5Z8OYDxeI
PLHgJic3fttpWU/2Ae+zNsmh2qiO7APe+MnzoZcHCR0luhcjyfsK/n27670B
WUJnB9zz8snklnihswPOtjYH5YeKPDPg+lNNXU4GUH5X4n92+hj6bSglO0j3
u2EH8FM7SrM9xok8rnSPY9fvZi9HiDyu4H+Ta50NGyjyuIJfCvlAz/R1f98g
2QeX5l8FD7H2Pd3nisi/Cm5p+6Ms6mwptRe81f5csEU45VklPunwrvYoHZGX
T7oPjnaBf+u1Xv3ydT3RLvAXCfN7LeyoFPeIOQ9qn6IX91B8L+n+OOoP7j3M
d/bjTSKvKbjfmblbIl1Jl4f4XpNRETMdiqie0v1x1BP8WWnUat2Gu1RP8EVL
lul9VCv6CfjojBlVRcGkU0O8/vpVW/V2FZUv3TdH+eCfZvrqHVeV9rifjvLB
TdxdWsNT8yR6InKlZj0RuVKznohcqVlPRK7UrCciV1pp1BORK+0leiLSeeCb
OiNy5TyNOiNi//1NnRG50k2jzohc6aFRZ0Su3KRRZ0Su9NGoMyJXdmjUGZEr
tSU6I9L99zf1R+RKmUR/RLr/ju9C++9/17GfPFbkwwQfVbnyhzXbi+m7gJfF
ngl1iRH6I+B7trUccygW+iN0znzOuKjJHUJ/hM6ZG2yJNh6pIjtL9+Up7wfn
i52D2YMjQmcEXOYYvjctIEvkbeDcr3VU6PE7GWRn8N8OxJ/YMSqN7AzuZDYx
3sObzi0QT6tQJjtmCV0A6b485bvjfKBiyM5/jhX5LcG9H3UW1q8sILuBl0y/
P9jx9ToCdgM3Cytannw9n+wGHtqSFD3yudBhAT8gyVcJPn9zaqZVWCrZB1wm
C3aSdSaTfcAr012aHqy5SPah+uQ5/BZ4OJ7aK92XR3tp/jNpcZeHnsg/Sfsy
/X4JmbU4V+RN5XxM45f6pmHZ1F467+3VPOuTuExqF7gB369Hu8DjeZz2zXwa
d9hCSR5I8ILo1L7h5kqqDzhz1j23oDCN6gOe0uU1W2elyKNI++B8v57yv0nm
h/Az0nvH+E9p3lJbaXHr9XwPz0vv1UryumRdCRnjv6qlisrBuDnril3jpdfz
QPRb8JHHXg1lc4SOgPQ+KcoHN//Xw+yFTSIfO/i7S2Kf/VJGefNoPG2/UvOP
oo/r6b3gilrPz4YMr6P+A27f1a7lPriW6iO9d4n6gCcv+0l7Zm051QfcLcCy
4WCpyFsO/m60KrW2gPK603h6LMX72v22GokegSprmMHtKa0Pqqme9PxO4yvt
zSKvOD3fvGfCs/si77r0PiPqD25mu8Vxankp1R88OfZOng3pACYSXzds2fYD
EXdE3gnO1/9H9o0iVOgAYlyentrb9FVqFbWL7g+6mc/JSa+kdoE/6rXWa1dm
hSQvfVaW/blDu2dmizze4JHzs0/3yyun9krvFaK9dH9w4Qb95UfvUHvB3zup
cm6KvE3tBc98aLh//Zkiai/4ximBqra4QvJXFKcKbtTySVSRHTA+tqQqIvUC
hX4cuCxKseLIPqEfB24brBiud1jox4F7b1bUhiuEfhx4pIvi2NBokWcbvMhS
sTQ8QejEgffi9+xgH3D3j/6Imr6viOwDfvUP9YjpikKyD9U/S62wSVCRfcC/
2q/+wCbzOtkHvGC5+ggrziN/Dm5orB7CGkVeX4x3MfyeF+wJ/69truVxKfc2
PQ/+hN9XQrvAp0UdCMrMu0blwD87Txpnd39xIX0XOpd1s3NZ0hEVlU/xAX5P
B+WDW1hF/LgvNoXsBn5v/ZRcozHkh8lvn/7C9SO91nx6L+1LzivyX2mRR/2B
7qd4WNWcDRL2ATfh92JQH3CPlDl2Pw2lvHk0LqgtdmvNDsim99L9lFMTpw9J
zKT3gp8oWxEQ7pZO/RC8s1dwpp6OyL+N8cVvy5qc50ZpVD74pNiS4M1tl6l8
cHWd9dym5EtUPvj4D+06erUlUD8HP7N31M7WbSKPsXRcQ//sIe+uOEfE40Wo
J3hJjVNg2qI4kfee845ZKcN3656m9761z8XfK+X4L6Qc/4Xmcq71WA6+72FJ
/lVpfOmzHs6zgUufR/3pXhXP+4p+he8eei8x7OHlY/RdUM8aHk9D/+wpPyed
b/l3WZFrf1/yG9I4IZ7H/2t8cOnjFW6nyZ/Q/8XP28AOdE4y5/zFrl2hVB+U
H8HvPWEeBb7hwqwAPcNz1A9Rf3N+jgXlS+tJeYm53eYPehlkZCP6J57vs6D7
nAPs2ZN9pOWj/ujPZfyeEeyA964x0Yk5umOT0GHhz6+yGPjgxfDD9N634oQ9
nAfAOEJ+wDNngI/HRXqv9Pn/ASV/IwA=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
3GfkfsebkB1y/+2n0j7VCuQ3mo/cOn1iiqfGKC7J7YtK/w5D7pL7+e8sfUaX
IS+kr2du/f1D6Rz6H6V121XpvMtWS1dKZ2ofaD8ohldeRLZKe+/h5APLF34D
OYc2WzqCsSrQaX6GIz9N+u2rtIe1l5/PXeeSblStZ6jeT/FY8NyoNqG6ieov
ren7Hjwk8xmUzbwy2U2dub1yn7tlaa9rn0/KvY/17Fchz80dq+g9Lknvsjyd
N521au550ZzMSXOiuXmMvma5bdt+2te5azAr0losl7+c/qb+//h8dW79sCby
nNxzqn26ae69qrmXrte9FC/cgWzGO26umDr3PPyEbJzWsUHud9DzS3/slmKe
N9ALpzP2PO71M31N03MqXt+SZ9tMuVPppdx6dzud2dw+9/bIvrnn933t99y2
akXuvaV9Na+0vy7deBB9P+bWfcuQ3+auJUpHfp/0ZHfpz3SdfZUrzB0PLNU9
cu8b3ad7GqNn+TXz8+jvddKYHnqudP2lyC1y29sc2Tt3XPVX0hHSD38h38yT
PUauzPxeK7X3c/sSXZB757ZvuueSNA/rIhfmjkk7Icfm9jneS+++Evm49GvS
sdLN49OeWaTnSs8j/fpA2ntTkKPSnGyW2weS7uqMvD+3X6P1fzm3vf8D+XZu
f1Hz+mp691zxQ1qLdZAf5Y7TGiI/zl0v+x25ILd/tj375/Pc5+U/6S7tdeQm
yKPSPASdR9pl9JfIxQl/T/sst53UHC9K77VG7r+pvwl4Vm7/T7r5tTT/itGG
sQ83rDnevB7cEjy7dIygfOmS0jnh34LzWw+DRyvPLVvJmDWR8/m8If3rV63P
VGtTvK+6tXyTMYXzroopVzL+E8Z1ALdCHhAdoylHqBq9fAnlaW4s7Q+opqo8
rfzNv8BPl47RFKu9k1lvq/b6dOF4Y3jhs/UyH6dw/blJv0nPKZ88Q3NZOl8q
PJkxjxaOx+4rbK82S+suv1qx2tqMv5X2nvwTZC/+PjftvXnI93L7n/vk/iy8
K7KW23eJuf+mfq1bSGundXsrrd3uyEPTedd5mp/O1HLkHNqtmWMfxQCLCp/R
2emcbo1U0UKxwoul4zflcJT/VoyhGOdSPtdH7sS89SscoyseXJ15z2m/6Tz1
Su+lPftO2rcdkf9mKYZhTt7l88/aG0lf6BkWgm/JbY8/Bg/NnTuQvZVdkU2Z
GM0VUF7u4uC6WGPwQ8E5k81T3u4y8EU820XBNbVG9F8I3lFnCHxGdP1JOcZ9
gt+riK6RqFZytfZpcB2wS8pHtpefgHwkuJ7YNeUmb5H/Tv8VwfVK5WmvA+9T
cR742uDan3LIo6K5F8o3PkD/gIpzwuOD427lct8Kfn7lq5+Orskp/zmT/gsr
zmlPCa4/Kq97fXA9UXnpA8FN5HpHn/uV6eyfFVw3XIf+M4NrhQ3AV0XXhpXv
PSPYdtRXTjr4PNakh8AtwVFzHl1HVE54QPAZXBN8QXAtcl3wyeBNwWspnx1d
G6umvPLu2j/KXwXXN+vRf3juPar9eURunSh9KP23IunAw3LrO+k62a4/k/1S
/ljvuwayPn2rcvv3WyL/zh2P9sttJ2QjTgrOddTlvv2D13QN8JXBdWrVjW8M
rikr/y87LL9KtngP5Eu54609kTNy+zbLkn/1aGqKieTf1svti8gP2UD3zx1X
y2ZOSTaiEXJy7nyYbPWizOdXsYh8aPnP8i0fy+yfN025OOXkfk3+vOanK5/v
zO1LyG+V/yffT36xfCb5n7KHd6T9sDizPyp/68/kM8u/VhwduUaXmt9veHrH
nXP7bfLZLg+uxas2cXDueGZ0spd3Jt/hruB6uvLz9wTXzZWfvy+4nq46yx3B
9Xfl6m8IroOrnjIkeJ+sB74suNa/fqo/HATeV7nuaP6B6hFjgvNUquPID5Lf
Jl9oFP1HVpzPHx7MDVAtQP7FsmRn++SOBxQLKJb6n73PrEd/S7r01mDOgGoH
w4Jr66qV3BLNkVIdYWjws6mecktw3b9NqjPojB+l2mi0nZOemc+Y6yquQ50U
Xfdtybx9FMzHOA38cTBP43TwWjXnIvdk7NzgusBJ9NetOS+8F/0fBvM9TtXe
qzlH2YP+tcFzCucnbw7mfe3CmDnB+cYT5a/WnGvegzGzg2sKA+n/Mth2qz51
PrgXeIfSecMx4A/4zjnp7Gyr2D3Yvp+l3FIwD2Q78DvBdfnjwe+mfMIJ4POC
+STbgz8I5recAr4qmL+h83h1MJesu2KiaH6J8K3RPLPdlN+ouZ6xG31r1Fx7
2F17puZ6xi7ab9E1vh7KS9Rc29iVvmbg5eC59F8TzUHRMzeomRM2ATw81YZ2
V8ya8hJng29L9aY9wCNSHWov+UHR3IsdwTdEc0R2kv3kmncUzg9fF82b0Xxe
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
Q5wM/Z5F3Fvp9P8Dzfvb0Q==
          "]], Polygon3DBox[CompressedData["
1:eJxFmwn0VtP3xu/7nnvP/TZqMDRKFCKNplSGNJAhlQwZGiQyhRIyJSoKUSma
kQohUUrIVElmMmeeIzM/Zfg/H89d679WZ33Pc/e5973DOXs/+9mnxgOH9jqv
nCTJrSFJUv39NybJ7jpwcSlJXlT/Jh3couOvCdfNkuQgHTtRuLfG35AnyRWy
fym8TvZask8TTtXP1G5Tfzdda7baTOFc7RCdP0Dj++r8m3R+d7WXhJcJ16lI
kld1zqka10/tNfU765o7yP6i7Os0tq9wS+FPhV8SPlztReGlwjtU+C+4rPPP
0fk3afxA4e3V/0pj3xQeL3yk8OPC2wq/oLHr1bZTv4fub4Ts5+s6c2SvI7wt
1xMeINxCz3KX2q0av5va2zrnRtl76HqrZD9UWH+S9Ro/SJ07NLa52i86dofG
H6PrXaz+BbLPlX174VrC/2hMP+FLhT8Tvk1jX1V/T7Xmwrtq/EWyN9S4vdTu
lL2hWm/93m6yv89zyx41/mnh83Q/zwv3kn1X4fdkXy+8g+y1hRPh/sJ1hbcT
TIUH8i513km67slqL6n/ls6/Qfaj1X9S9g3CE4SPEn5CuL7OryNcVeefLnyy
7K2EPxN+WXhv4Tm63210vd90zo/C98o+SP21sm/D3FCbLvsC/f1M9pnMD9lX
y36wrt9X+Fhd70bhT2SfLnyC7M8KV5P9Xd6n8M76/kcJD+f5NX6W7EcIXyh8
jvAM4aOFLxIeKjxb+Ei1V4SXC9fT+Y11D3Npup8pakfI/rLsj8peV/ZOOv9M
4YHCN8t2o+6nl/B2+v2Jwt3UlgkvkL2axjfTtY5Vm6NrzVZrq/6pag+qf7fa
+7reGv3dRtd5Ruf+or+P6/zTdb3ddf4o4WOFK4Q/lH208HHClYU/Fu6stlB4
ln6vssYfIPuJuv4tuuYPGtNJ9vmyz5C9QvZd9Hs7C9cXPke2Co3tqzZJ469W
G6bzu8m+VfZ3ZD9EbTbzUTjX+eNkP1l4G137U9ne1fWe0Xm/6ti16s9WCyX7
hCvUb6TWQP1tdf4Qje+g8z8t+9n/0DVuEO4ve238iOw7a3xj4Xoafzb+Qfbq
XFv2hvr9m4UHCdcR/kb2icKnCe8g/LXwVl37e7UJuv4YtVtkP132urJ/K/v7
wrcwn4SfFt6isZvVbtbY0Wrd1f9GbZb6d6mN1/hTNb6mxn+u8V3U7hGerfur
ovu5UPauwluE35btGuHjhato/Cf4A7UFwjNlr6TxE2TvJ1xL9i9k+0u/cYJ+
70b9HaF2veynyF5D9s9kv1q4j3Al4Y+EvxJ+UPhU4ea6Xk/h7YXf1fXPl/0D
XeN5Xe9x/V1a9NeqrSz5WDf1D1N7TP2maqv1vs/V3wFqK9W/LvW3vFD4I/Wb
6lgT4Ya6/nm6fle1pcLzhavq93eSvSH+Vfgs/JNwPe5f+AzhY4UvEx4uPI/1
qPvdSfgN4ReEm8u+l/BuwiOE98DnCTcVHi58mNqjwguFq+v3ntW9P6O2ouRn
aKDxdWWvLvtgjf1U158hfKLu/Tm+h/5+z/zT2HvUv0D2LsJ/avxbsl8l3Fs4
l22j8I66Xn2+j+xnCl9GTMD/y/6+8CXCR+E/hd8V3qjx/yMeqV2i/vmyd1b/
fzp/g+xNdGwX4QbC5wrfJrw1sY8fqf5uxFv1d5b9AtlH6vyjhUu6/nvMHf2t
pXuvrbYQn6DxzWTfReMvlH1X4abCOwoPFb5c5x+De9fYD4Sbyb6HcBPZhwnX
i54vUfg04TXEKPUX6djnOneI2oHq/6Rjr8t2VO44t1TXa6L3P5t1J3szHVus
/r9q8/C3+ibNdO4o4T1kq6Z2p/r3qj3E/Qo/qP445prGVlX7XMe/LY7R/5I5
r3aJcKXi+s8Tg/iewuvUX6P7P0P9h3V/LXQ/01lnwj10vV0y+zx83ylqn6pf
iuYy9FtVeE4zt4epfcw3TB0vWQPvqb9V4wfqWjvqWrto/CYduw5foDHP8k7V
BgtfoPYhPkFtpPqb1JbwblL7nR2K511CXFF/J7UhXJ97UbtGrT/rj2fEH6m/
hjkLTxHuU+BfdT9/Cp+le/pT/bH6u63aJ3AYjXlaY3rqb6+S729k6rm4v/Aj
6s/X2Pd4dzrWjfvI3J8Ij1B/hf5eoNZItljcD799nNpa9ZfKVuZ9lDzPH9Pz
1Fe/stpQ2YfL1lvtMuFr1Wapf67apSX70JvUH1r292ceXB19v8/ADSt8v/sK
/y7bBHy42ijhjTpnD2Kh8BElP+8l6n+nNr7kc3i+R/ATJRaM4oXwIjipjo3W
oSfgjmovlxzjieEPsOb191rhVbLdLXxRsI9aJjxfeITw5YwXXiB8sfAVcATh
+1hjwlcLP545/j1LLBfeJLxE9muDOeZq4YfwQcLXM3+EK6s9qfFfENPVr6T2
hPB8tVT9qmpPqf8mHFTP87DOHxPMudbIdr/wlcLXCD+Z2X+fx3rA5wgvJmbI
Plb4aWKF8CjhMcJPZR7DWOZ+S73/hfg02a/UsRWZ18M5fB/hB3T8UV3/W/Wv
Yl1r/Dv6ezYxq1iPD0XzRXhjM9nf1t8hJfsIfMV9wVySMXCax6JjzRvq76nx
V+vvpsTX5Nqsa9Y31zgLrFaj5DXGWntK559ecgz8jW8rfFXJvmOvCq/P81nL
xDD8Dz5c1xwlvDKzz8R34nOPzexz8b1waLj02mj/8Ijwc+rPC/4tfvOt1HiQ
+qeVHIPxR/gCfMIz6j+oedu+7PUzUW2C+rna14l90mrWsf72VbuBdyJcXW1s
yX5id/gQx9R/AI6gdgVcSec3yry2tha+gzXGGtlJx/Ysee18T86jfl0da5XZ
f+EbOLZZ/QY6NlX9XWRvo/5c3XNr4Q5q30WvL3wHY35SP2jMIyXzh6j+V9G5
4FPEi5j8l+y0KZvLtdb7/1LHXpX9efyj+g/LVqVs3/BAEUeIJ+RPP8L/Uuc6
09R+SZ3zgDneQNf7ITqXxEdujvav+JK9dc19dD9/Ci8oeQ2xnk7R/fysseNS
+29iUgeNvb/kWEWjv0jtb2KLrrlQ/a3qt9H4eRr7TuGrDi35+qzVjfgcXWtR
6jz2PrW/1L9d7R7G44My5zhw/T3Kzn3eLztnI1e7HH+tfhe1R9Vfrjai7G/B
++a9f6x+LbXFutx+wverf0DZffzedN3v1/rbTtduq/v9Xb93dMnfiG81RGOD
2pW8E3iLjv2dmC9lrH+Nr6v+ssLf3JU6L+GeufefU3+Lgfig1P6JsfgsfNfO
mef2H2rt4cZwWP1eDf3GleSCOvaKbK+rbZ85xyTXJMc9iLmnsaPLnpPkxOR+
9cpeK9OLOcPcqaGxe+v57i77HfFuiEEfRefr5O37yP5u2TGRWAiH/s/fJ74H
7mWNbDXV6hRrrrmOfViyz2ms/iQ9YxfhzryT1LnqMLWdS85ZW+Czy+Y0cBv4
BXzi75JzrZbku+T4Jcd/xvznL8s+F84L9x2pY49wbzo+smyf9W9iTQFtgZz8
4MycE+4Jh+4mfCdru2ztgJwfzgZ3I2fvlPldstZZ37xTcnBycTQTtBNyenJ7
NIxDMnNyuDmcuWtmzgx3JofvklmDQIuoKdwxc85G7gYnPiyzj8BX3K72WjTn
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
1o7IUclVO8h+ROIaMvW8hcJdS9YcyKf/D94+W9Y=
          "]], Polygon3DBox[CompressedData["
1:eJwt13f8zlUfx/Efrt91Sdkpe4TsTbL33nuTTWYyo1R3Imkno0QT0bxbKikV
GuJuaKE07qZVGrdS9/Pz+P7+eF/nfF7nfc73XN8zvxXGzOg7PXdWVtYxyqaS
6ayst/LIU0bcDuyH1UplZY3DpmBPY8WxPeJceZJ6bfzkopYa20bpXEmDZfn2
8xSmc6DO2FistfbmYVdhe7BBWD1sEjYD24aVwfaJC9LZWCdsHNaGbz62GHsT
662jd2GraDf2NzaGr5V4Lt+V2G5sNNYSm4MtwnZhA7G62ERsOvY8ltLe++IS
VA7rjpXne09cjApgXbGj6t3gv15Ny/zfY+JL+FpIZ/Mt5HuDrzT2rjg/5cM6
YpWivjp1qQmVEefx3LfjvVNeelNcSt298f/pLHU78A3HLvaMGdgcbAf2svx2
Wofn1d5l0iF8jaRT8Vl8L/E1xc6IG1JTbA7WDivD1x8biq3EmmB/iRtQE2x2
9Beb4r9WolP8pfNmZTXD/uZpRM345vK1xUor74cNwe7EBmP1scnYTOwFrCdW
Dfvd/9wqfpSaY//wXETN+eZhXbHKfL/wPSh+iOpg/+UpQ5X4RmG1sW/Epaki
NhIrgb0pzkOyWW2xXjLVtfeH9h4TP57z7t+J8Yn3TOPErfkK8HUQd1P3er5h
WGNsOjYbexmbgnXHrsNuxD7E6mLfistSZewSbIA29/Htp13YGexb+ZT3OZ+W
GrcfxOeru1u9fzBhVmu+8VgHwSL8WuwdrAZN5tkec0rdbTGP+TpJr+K7Dn83
fNgX4vPifWGDsS5YRb6f9el+8QN0AfYBz9/aLMLXI9rHuvBdjV+P7ccmYZ2x
xdgSbB/WB6uJjcUmY09hPbCq2G+e8Yh4C43CmmGz+Obz7cSqYYfFRagUNhBr
j5XlOxprW7yKqmAHY/3F2uTrH2sfq8H3P74nxE9SG+xcrBtfX76bYg3SGv+r
GC33rk4qH8HXRDqTby7fKzwjsabYZdg87FWsJnZEXDzGExuCneBZqZ3V2puY
O1m/1fk+5zk35iDfIKwqdkhciEpiA7DO2AXqn9TnDeL7Yj/ADvDkjvp8vbBu
yufyvYYdwgrHPMPmYa9jh7EiWDe6EDul7GH1NsaakZ+D7eQ7yFco1hB9JE7F
Pob15rsQ+zjWRswPrE/MDXVnq/sq9hlWMJ5LVbBflW3i2UznYbt4zvj/kqxW
WDnsP4Kisd9hXbAOWDl1j6m7Vnw31cK+jvGmC/hGYB2x8nzH+e4Rr6MJWEfs
Sr5/8e3F+mO1sfHYVOxZrBNWATuh7r3i9VQR+zA6Fv2R9MSGYhfxTcMux7bH
usTqYBOwadhzWDZtM747/bdPpKXEjbTdnO9avmV8r8e5QLN4xlNJvi3Ki8bB
Ke3I1112AU8h7H/iVtQem4mtTCd1nsLu4b9JXITvT3Eb6sg3i+84PiHO1Dhr
+FeIl9Gjyh/guzXOIfFcmi7/GLZTWUb8He2QL6GdkvS9eDutx9bwfcj/cpy9
9vKM8he1vzsuBPqRl77iqUZ1oKHKi/G+EWOhXthaxD7Ot1h8P+VXPx/PEtqg
fC3vDfj14gzfl+KqVFvZMHULYn+IW1KL2LPE59BJ+cbB+C7ly4/9LL44vNhk
rAJWTNvdsR70rfhyzxmC3RnvlO8rvovwttgC7Ar6S5wnzlXlU8NLvbAZWH/5
FTy3Kzuo7mxsaKz1OFuxr2O8scHYHdjd2JfY8+Li/vscL+WXnL041nWs75qZ
ZK9dJf0l3g3PcZ6GtDfOmOBxzsb80N6UmH/YJzlnUZxJb4s70yTtPCl+g++v
2GOxRdEXyqW9Nelk7scaqJFJ9pm7pCfwOzz3C55/Yt6kk3f/e4xFjG/MBfHZ
9KN8vTiD+cZo5yzeV9Q7R/7sWEM851Mmlbz3eP83iovHnMF6ivupuzjOX+ys
eL9Yf+zqnHE7DxuODaNbop/RZuzJ4jF8N/P9GOvXc8/X7xXSfelk74g9pFom
2SvulJakfPK91R2g7jWxLrGicQfCRmE3xn0SK4QNxIZjS+NcwApiA6Iv2LLY
S7CJ2BPY69hprCxWGBuEjcBuiL0OK4INxkZiy7FS8Q6xPthA7NrsZL3Guv0u
xi7uRZlkb4s9rnom2bdWxnui79QrR+VpX6wDdZ/z/6dSlZzxLYbnVqczT0/P
uEI752K5sE6xFrD58Z7TyXkV59aSOK/TyTO+zxnvGPeFMRaxHpR3EffiXxjn
Qtw9sdHYBOx2rHK867jjYuOx2+Lcwkpgo+LOhN2K/Rz3On39XrxVv8+I59EC
voLKdyk7KM6n7g/q1aVGvKNzzvk476tmkjPjjlg7MbfkR/KN5btF+cX0gXb+
Hftnzv68hlbHPSGT3B1ul7b0nGz55uq2U/cq5U3x3tiy2JvifIh7LNYXWy2+
F/okO1n/sQ/klxaIux9PQ2rAdynfFDotTtNn8hXoQv6+vAs8d63//pO+1aJ1
6WRNf5oztjHGM+O/efZS7R2JuxX/n3EHowfVSWcne/KQnOc2TCX7V+xjmzPJ
Phv77X34BuqbSc7+uAPUySTn9T3SAnwz+Q6LD8Ucxl6I7xn5D2iMspdiv6Zj
8qeoE20Wb4z5l0r2t7hjbhIPj3XkGYWzkz009tIf5B+MOy3f37EmeKbjveSX
6u/Nyj7mmYr1wJZgK7AD2FZxeW0v8v+PSNeKr4m1K78c+0NaIe6ndERclPbE
Nx3PQ9p5Iu7D2Dgqx9PCM1LKmilrq+xKrD52VFyJqmPjsXrYT+KKccZh47AG
8Q7ElakGNgFriB2PsaWa2MQ4U7BT4aH62DSsMfZreKgBNh17DZuq/5/GGNMe
casYN/n2fF35lvDlxd6Xn4Gvj/3D+2uEneCpQrWUTYp5j/0WMTUMf3byPRTf
RbUzyT3wbukaWk21Msm309pMcmeLu1vdTHIvXydtQyNSyT0i7hPfKG+HjcY2
Ys9iP2HtsTHYJuw57Fjc67Cx2Gbseew4tkP/xvm/B/CF8b0Sd2IqGmch31a+
L+JOp+4E5Y9jr2F/Km+O9Usl95K4n3yKtcaGxRmGraK09dIE64bdJl7N9168
F6wrdmv4sPexLXE3jrmNv0iPiPenk2/XBtnJ+ox12ljd9tjyOIvUfUvZnPgf
MRbYFuxkzr7RJ5X0I/rzStwr6BLsYfEzfEdz+jw87kPYfbQrk3zbxjdu/Uzy
7ble+kyspbgz8ryLPZ1OvkXjm7RBJvmu2SDtTzvjPh7j5BmPpZNvqfimqpdJ
vqHvlR7AT8vvTSXtfpROzul0KrlbxR3rUM6cqJRKzt44g+O7uiUNjP1CvNEz
Dmv7UfV7amdH3BFpq7gF34CYY3wP832ec79ql0r20thTn42zkk7Lt6YOfJfx
TYv24i6I3YR9lJ18W8Q3xuX4Z3E2q9eKBsX85NsU84Xv/0J3H1c=
          "]], 
         Polygon3DBox[{{1885, 1310, 1318, 511, 380, 1666}, {1713, 1226, 929, 
          930, 1227, 1714}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{321, 1, 309, 238, 1342, 16, 1356, 31, 1371, 46, 1386, 61, 
       1401, 76, 1416, 91, 1432, 1433, 106, 1461, 121, 1476, 136, 1491, 151, 
       1503, 166, 1517, 181, 1531, 195, 1679, 267, 328, 210, 319, 283, 954, 
       211, 955, 212, 270, 608}], Line3DBox[{765, 2, 1193, 276, 321}], 
      Line3DBox[{767, 3, 765}], Line3DBox[{769, 4, 767}], 
      Line3DBox[{771, 5, 769}], Line3DBox[{773, 6, 771}], 
      Line3DBox[{775, 7, 773}], Line3DBox[{779, 8, 776, 775}], 
      Line3DBox[{781, 9, 779}], Line3DBox[{783, 10, 781}], 
      Line3DBox[{785, 11, 783}], Line3DBox[{787, 12, 785}], 
      Line3DBox[{789, 13, 787}], Line3DBox[{791, 14, 789}], 
      Line3DBox[{322, 15, 317, 277, 791}], 
      Line3DBox[{1369, 30, 1664, 240, 322}], Line3DBox[{1384, 45, 1369}], 
      Line3DBox[{1399, 60, 1384}], Line3DBox[{1414, 75, 1399}], 
      Line3DBox[{1429, 90, 1414}], Line3DBox[{1458, 105, 1429}], 
      Line3DBox[{1474, 120, 1459, 1458}], Line3DBox[{1489, 135, 1474}], 
      Line3DBox[{374, 150, 1489}], Line3DBox[{1515, 165, 1697, 308, 647}], 
      Line3DBox[{1529, 180, 450, 1515}], Line3DBox[{1543, 194, 1529}], 
      Line3DBox[{470, 213, 414, 1187, 271, 214, 1224, 344, 215, 956, 216, 957,
        958, 217, 959, 218, 960, 219, 961, 220, 962, 221, 963, 222, 964, 223, 
       1192, 275, 329, 224, 320, 284, 1556, 209, 1543}], 
      Line3DBox[{374, 508}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1342, 1662, 1886, 1557, 1341, 1887, 1558, 1343, 1888, 1559, 
       1344, 1889, 1560, 1345, 1890, 1561, 1346, 1891, 1562, 1347, 1892, 1795,
        1993, 1348, 1893, 1563, 1349, 1894, 1564, 1350, 1895, 1565, 1351, 
       1896, 1566, 1352, 1897, 1567, 1353, 1898, 1568, 1354, 2077, 1663, 1569,
        1664}], 
      Line3DBox[{1356, 1796, 1994, 1355, 1899, 1570, 1357, 1900, 1571, 1358, 
       1901, 1572, 1359, 1902, 1573, 1360, 1903, 1574, 1361, 1904, 1797, 1995,
        1362, 1798, 1996, 1363, 1905, 1575, 1364, 1906, 1576, 1365, 1907, 
       1577, 1366, 1908, 1578, 1367, 1909, 1579, 1368, 1910, 1580, 1369}], 
      Line3DBox[{1371, 1799, 1997, 1370, 1800, 1998, 1372, 1911, 1581, 1373, 
       1912, 1582, 1374, 1913, 1583, 1375, 1914, 1584, 1376, 1915, 1801, 1999,
        1377, 1802, 2000, 1378, 1803, 2001, 1379, 1916, 1585, 1380, 1917, 
       1586, 1381, 1918, 1587, 1382, 1919, 1588, 1383, 1920, 1589, 1384}], 
      Line3DBox[{1386, 1804, 2002, 1385, 1805, 2003, 1387, 1806, 2004, 1388, 
       1921, 1590, 1389, 1922, 1591, 1390, 1923, 1592, 1391, 1924, 1807, 2005,
        1392, 1808, 2006, 1393, 1809, 2007, 1394, 1810, 2008, 1395, 1925, 
       1593, 1396, 1926, 1594, 1397, 1927, 1595, 1398, 1928, 1596, 1399}], 
      Line3DBox[{1401, 1811, 2009, 1400, 1812, 2010, 1402, 1813, 2011, 1403, 
       1814, 2012, 1404, 1929, 1597, 1405, 1930, 1598, 1406, 1931, 1815, 2013,
        1407, 1816, 2014, 1408, 1817, 2015, 1409, 1818, 2016, 1410, 1819, 
       2017, 1411, 1036, 1412, 1932, 1599, 1413, 1933, 1600, 1414}], 
      Line3DBox[{1416, 1820, 2018, 1415, 1821, 2019, 1417, 1822, 2020, 1418, 
       1823, 2021, 1419, 1824, 2022, 1420, 1934, 1601, 1421, 1935, 1825, 2023,
        1422, 1826, 2024, 1423, 1827, 2025, 1424, 1828, 2026, 1425, 1829, 
       2027, 1426, 1830, 2028, 1427, 1936, 1602, 1428, 1937, 1603, 1429}], 
      Line3DBox[{1433, 1938, 1604, 1431, 1939, 1605, 1435, 1940, 1606, 1437, 
       1941, 1607, 1439, 1942, 1608, 1441, 1943, 1609, 1443, 1945, 1946, 1610,
        1445, 1947, 1611, 1447, 1948, 1612, 1449, 1949, 1613, 1451, 1950, 
       1614, 1453, 1951, 1615, 1455, 1952, 1616, 1457, 1954, 1618, 1459}], 
      Line3DBox[{1458, 1617, 1953, 1456, 2041, 1843, 1454, 2040, 1842, 1452, 
       2039, 1841, 1450, 2038, 1840, 1448, 2037, 1839, 1446, 2036, 1838, 1444,
        2035, 1837, 1944, 1442, 2034, 1836, 1440, 2033, 1835, 1438, 2032, 
       1834, 1436, 2031, 1833, 1434, 2030, 1832, 1430, 2029, 1831, 1432}], 
      Line3DBox[{1461, 1955, 1619, 1460, 1956, 1620, 1462, 1957, 1621, 1463, 
       1958, 1622, 1464, 1959, 1623, 1465, 1960, 1624, 1466, 1961, 1844, 2042,
        1467, 1962, 1625, 1468, 1963, 1626, 1469, 1964, 1627, 1470, 1965, 
       1628, 1471, 1966, 1629, 1472, 1967, 1630, 1473, 1968, 1631, 1474}], 
      Line3DBox[{1476, 1845, 2043, 1475, 1969, 1632, 1477, 1970, 1633, 1478, 
       1971, 1634, 1479, 1972, 1635, 1480, 1973, 1636, 1481, 1974, 1846, 2044,
        1482, 1847, 2045, 1483, 1975, 1637, 1484, 1976, 1638, 1485, 1977, 
       1639, 1486, 1978, 1640, 1487, 1979, 1641, 1488, 2085, 1706, 1707, 1642,
        1489}], 
      Line3DBox[{1491, 1848, 2046, 1490, 1849, 2047, 1492, 1980, 1643, 1493, 
       1981, 1644, 1494, 1982, 1645, 1495, 1983, 1646, 1496, 1984, 1850, 2048,
        1497, 1851, 2049, 1498, 1852, 2050, 1499, 1985, 1647, 1500, 1883, 
       1986, 1755, 1648, 1501, 2086, 1708, 1709, 1649, 1710, 1876, 2087, 1665,
        1711, 1686, 1687, 1666, 1885, 2083, 1787}], 
      Line3DBox[{1503, 1853, 2051, 1502, 1854, 2052, 1504, 1855, 2053, 1505, 
       1987, 1650, 1506, 1988, 1651, 1507, 1989, 1652, 1508, 1990, 1856, 2054,
        1509, 1857, 2055, 1510, 1725, 1726, 2092, 1511, 1669, 1670, 2079, 
       1512, 2075, 1655, 1756, 1656, 1757, 1513, 1747, 1748, 1881, 2097, 
       1792}], 
      Line3DBox[{1515, 1753, 1668, 1754, 1667, 2078, 1880, 1514, 1688, 1658, 
       1693, 1657, 1744, 2076, 1773, 1782, 1780, 1785}], 
      Line3DBox[{1517, 1858, 2056, 1516, 1859, 2057, 1518, 1860, 2058, 1519, 
       1861, 2059, 1520, 1991, 1653, 1521, 2101, 1759, 1760, 1522, 2089, 1713,
        1714, 2088, 1523, 1672, 1673, 2080, 1524, 1659, 1727, 1660, 2093, 
       1742, 1728, 1525, 1699, 1776, 403, 1794}], 
      Line3DBox[{1529, 1732, 1735, 1731, 1736, 2095, 1528, 1733, 1723, 1724, 
       1722, 2091, 1527, 1671, 1682, 1165, 1526, 1694, 1661, 1698, 2084, 1869,
        1689, 1777, 432, 1749, 1788}], 
      Line3DBox[{1531, 1862, 2060, 1530, 1863, 2061, 1532, 1864, 2062, 1533, 
       1877, 2063, 1718, 1534, 1872, 2064, 1675, 1535, 1150, 1761, 1763, 1762,
        1536, 2098, 1750, 1751, 1715, 1717, 1716, 2096, 1537, 1740, 1791}], 
      Line3DBox[{1543, 1654, 1992, 1542, 1133, 1541, 1764, 1767, 2102, 1769, 
       1768, 1540, 1765, 1766, 1758, 2100, 1884, 1539, 1871, 2066, 1684, 1674,
        1538, 1702, 1704, 1703, 2065, 1683, 1701, 1712, 1700, 1743, 1771, 
       1781, 2099, 1690, 1784, 1691, 1778, 1789}], 
      Line3DBox[{1556, 1681, 1190, 1555, 2074, 1868, 1554, 2073, 1867, 1553, 
       2072, 1866, 1552, 2071, 1865, 1551, 1878, 2070, 1737, 1739, 1738, 1550,
        1879, 2094, 1734, 1730, 1729, 1549, 2082, 1677, 1685, 1179, 1548, 
       1695, 1705, 1696, 1772, 1745, 1783, 1746, 1770, 1786}], 
      Line3DBox[{1679, 1678, 2067, 1873, 1544, 1752, 2068, 1882, 1545, 1680, 
       2069, 1874, 1546, 1870, 2090, 1719, 1721, 1720, 1547, 1692, 2081, 1875,
        1676, 1775, 1774, 1793}], Line3DBox[{1697, 1741, 1779, 1790}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{765, 966, 1887, 766, 980, 1899, 794, 1998, 995, 809, 2003, 
       1010, 824, 2010, 1025, 839, 2019, 1040, 854, 2030, 1055, 1939, 869, 
       1070, 1956, 884, 1085, 1969, 899, 2047, 1099, 913, 2052, 1110, 924, 
       2057, 1121, 935, 2061, 1127, 944, 2068, 1291, 1292, 1136, 955}], 
      Line3DBox[{767, 967, 1888, 768, 981, 1900, 795, 996, 1911, 810, 2004, 
       1011, 825, 2011, 1026, 840, 2020, 1041, 855, 2031, 1056, 1940, 870, 
       1071, 1957, 885, 1086, 1970, 900, 1100, 1980, 914, 2053, 1111, 925, 
       2058, 1122, 936, 2062, 1128, 945, 2069, 1184, 1185, 1197, 1198, 1320}],
       Line3DBox[{769, 968, 1889, 770, 982, 1901, 796, 997, 1912, 811, 1012, 
       1921, 826, 2012, 1027, 841, 2021, 1042, 856, 2032, 1057, 1941, 871, 
       1072, 1958, 886, 1087, 1971, 901, 1101, 1981, 915, 1112, 1987, 926, 
       2059, 1123, 937, 2063, 1231, 1232, 1233, 2090, 1151, 1186, 1152, 
       1326}], Line3DBox[{771, 969, 1890, 772, 983, 1902, 797, 998, 1913, 812,
        1013, 1922, 827, 1028, 1929, 842, 2022, 1043, 857, 2033, 1058, 1942, 
       872, 1073, 1959, 887, 1088, 1972, 902, 1102, 1982, 916, 1113, 1988, 
       927, 1124, 1991, 938, 2064, 1174, 1175, 1176, 2081, 1201, 1256, 1322}],
       Line3DBox[{773, 970, 1891, 774, 984, 1903, 798, 999, 1914, 813, 1014, 
       1923, 828, 1029, 1930, 843, 1044, 1934, 858, 2034, 1059, 1943, 873, 
       1074, 1960, 888, 1089, 1973, 903, 1103, 1983, 917, 1114, 1989, 928, 
       1299, 2101, 1300, 1301, 1150, 1220, 1222, 1221, 1223, 1314, 1339}], 
      Line3DBox[{775, 971, 1892, 777, 985, 1904, 799, 1000, 1915, 814, 1015, 
       1924, 829, 1030, 1931, 844, 1045, 1935, 859, 1060, 1944, 1945, 874, 
       1075, 1961, 889, 1090, 1974, 904, 1104, 1984, 918, 1115, 1990, 929, 
       1226, 2089, 1228, 1229, 1274, 2098, 1275, 1177, 1280, 1281, 1319}], 
      Line3DBox[{779, 973, 1893, 780, 1996, 987, 801, 2000, 1002, 816, 2006, 
       1017, 831, 2014, 1032, 846, 2024, 1047, 861, 2036, 1062, 1947, 876, 
       1077, 1962, 891, 2045, 1092, 906, 2049, 1106, 920, 2055, 1117, 931, 
       1168, 2080, 1169, 1282, 1285, 1307, 1336}], 
      Line3DBox[{781, 974, 1894, 782, 988, 1905, 802, 2001, 1003, 817, 2007, 
       1018, 832, 2015, 1033, 847, 2025, 1048, 862, 2037, 1063, 1948, 877, 
       1078, 1963, 892, 1093, 1975, 907, 2050, 1107, 921, 1237, 2092, 1118, 
       932, 1238, 1147, 2093, 1254, 1258, 1255, 1317}], 
      Line3DBox[{783, 975, 1895, 784, 989, 1906, 803, 1004, 1916, 818, 2008, 
       1019, 833, 2016, 1034, 848, 2026, 1049, 863, 2038, 1064, 1949, 878, 
       1079, 1964, 893, 1094, 1976, 908, 1108, 1985, 922, 1161, 2079, 1162, 
       1119, 933, 1311, 1253, 1335}], 
      Line3DBox[{785, 976, 1896, 786, 990, 1907, 804, 1005, 1917, 819, 1020, 
       1925, 834, 2017, 1035, 849, 2027, 1050, 864, 2039, 1065, 1950, 879, 
       1080, 1965, 894, 1095, 1977, 909, 1293, 1294, 1986, 1295, 1145, 2075, 
       1163, 1146, 1204, 1260, 1265, 1308, 1330}], 
      Line3DBox[{787, 977, 1897, 788, 991, 1908, 805, 1006, 1918, 820, 1021, 
       1926, 835, 1036, 850, 2028, 1051, 865, 2040, 1066, 1951, 880, 1081, 
       1966, 895, 1096, 1978, 910, 1213, 2086, 1214, 1215, 1270, 1283, 1286, 
       1287, 2097, 1271, 1340}], 
      Line3DBox[{789, 978, 1898, 790, 992, 1909, 806, 1007, 1919, 821, 1022, 
       1927, 836, 1037, 1932, 851, 1052, 1936, 866, 2041, 1067, 1952, 881, 
       1082, 1967, 896, 1097, 1979, 911, 1158, 1216, 2087, 1218, 1217, 1219, 
       1259, 1262, 1261, 1328}], 
      Line3DBox[{791, 1156, 2077, 1157, 792, 993, 1910, 807, 1008, 1920, 822, 
       1023, 1928, 837, 1038, 1933, 852, 1053, 1937, 867, 1068, 1953, 1954, 
       882, 1083, 1968, 897, 1210, 2085, 1211, 1212, 1144, 1159, 2083, 1310, 
       1318}], Line3DBox[{954, 1135, 1183, 2067, 943, 1126, 2060, 934, 1120, 
       2056, 923, 1109, 2051, 912, 1098, 2046, 898, 1084, 2043, 883, 1955, 
       1069, 868, 1938, 1054, 2029, 853, 1039, 2018, 838, 1024, 2009, 823, 
       1009, 2002, 808, 994, 1997, 793, 979, 1994, 764, 1886, 965, 1155, 
       1193}], Line3DBox[{956, 1154, 1188, 1203, 1252, 1202, 1327}], 
      Line3DBox[{958, 1137, 2082, 1180, 946, 1129, 1276, 1196, 1178, 1315, 
       1329}], Line3DBox[{959, 1138, 1244, 1246, 1245, 2094, 947, 1130, 1239, 
       1182, 1200, 1251, 2099, 1337}], 
      Line3DBox[{960, 1139, 1243, 2070, 948, 1131, 1206, 1170, 2065, 1207, 
       1208, 1209, 1323}], 
      Line3DBox[{961, 1140, 2071, 949, 1132, 1172, 2066, 940, 1272, 1284, 
       1289, 1290, 1288, 1273, 1334}], 
      Line3DBox[{962, 1141, 2072, 950, 1297, 1296, 2100, 1298, 1149, 1171, 
       1148, 2084, 1205, 1264, 1309, 1316}], 
      Line3DBox[{963, 1142, 2073, 951, 1303, 1304, 1302, 2102, 1306, 1305, 
       1166, 1173, 1165, 1194, 1199, 1257, 1333}], 
      Line3DBox[{964, 1143, 2074, 952, 1133, 941, 1235, 2091, 1234, 1236, 
       1266, 1267, 1164, 2076, 1268, 1331}], Line3DBox[{1187, 1269, 1332}], 
      Line3DBox[{1192, 1191, 1190, 953, 1992, 1134, 942, 1241, 1242, 1249, 
       2095, 1248, 1247, 1160, 1167, 2078, 1278, 1277, 1279, 1321}], 
      Line3DBox[{1224, 1225, 1240, 1153, 1313, 1324}], 
      Line3DBox[{1325, 1312, 1195, 1179, 1189, 1181, 957}], 
      Line3DBox[{1338, 1263, 1250, 2096, 1230, 939, 1125, 2088, 1227, 930, 
       1116, 2054, 919, 1105, 2048, 905, 1091, 2044, 890, 1076, 2042, 875, 
       1946, 1061, 2035, 860, 1046, 2023, 845, 1031, 2013, 830, 1016, 2005, 
       815, 1001, 1999, 800, 986, 1995, 778, 972, 1993, 776}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Fo3+Dyy8tgs8ovCF1ilP70e6FTYhY/sd2UNCFnTX3I6aR+OthXP92RPzKJi2
BGWucCNxo8z6s1ahCBLhi5huZ2md/mO2hMtKFuw9stMO0DxN/p3sKasBDrT9
6hNMi0nkSVfJU2UiRHEDdRcv4eCqFJQu+TNx1lHv6RG6vyz75PrqE0lBpbb1
Tp0mgah1j+O9YkSYwLb83CrDwbnxSdmnk5iYsTU9vojWcdVyNSe6xnOQudB5
8poEJia0ZQ8l0valhag8Ks2G7qmE/eXxLJpftKkn0f1dXeFor/YUNg6u7Iov
iWDhoeSQJ0XjpNuxW3mJyRSGntscW3eRQG+4gYwbjfP5CxcrDvzkYMTTUpZl
IQnR7X0D+bT/+pO+KVYsoiDknIypciIxb28Fb3KBCIVDhhMWXmZj/tTrkqkL
WGB8ac1kfRZhft8k/8ivdPwXT9uwQozGz2Oq4x7SusBk3yHvPIpCnUA8ecZ0
AoVi+z/4RtHxCR1ZcPw9hWXJCz+etqF14phzlbfiRLigoLJRwpLC3Ok/I51n
0/t0RbJHyhsRYmwcQ1UtaRwoP+3vZMuCclHcCdA6Ll7Mqc5/FxuNOpNmnbNk
Icjy4Q1V2n7oZWzbVTrvOTUjfLbQebf6mfNMlc77dZmeAjNdCnpFrNI720kE
O6Qf/kjr8a2Wj8123GWjv2ivc9IkFrqujRiKpvV49j6VZZ+OU/giuWHz+04C
93RO/Kp4Rdf/8++Vk1dTeHIoduW9rSR0FMXG76THWfM+bF5xIAfUkAL7tjYT
kdFstSW07i5Piu6ffomDlbfz9hqsYmIR0RUaTdslGl+cS/Cm0PbhprRCDQHb
5SkaR9NF+NHyWun1eAoXqz0bo+JI+N2piyqi9VHg9z61A0kcdGc/OUgqMjGb
v1k9kt53V8hpXbf02DCtXjvK/BStI9q00/f8g/z8v9v+ZHCiycJkDmYanci1
V2Ci3eZtziF6XW+E+dIyPhTqpVODT1cRkD/ZkTCdjs/PqTkmht00b/TfZNs5
xMDB/Q1BI+h6a9hVLPtRh4MD+6pOb/JlorNsyZpp9L57+yrDb25xE66W2D3o
bmahup8/fwS93+PeflFdJk/zKL0P63Y9INEoM+BtT8f5hblpnlcKBTIuilFN
61D/0/z5q+n9UnZf+tdwDBu3Vsu+X6fEgpxiWtFeuk4gOd93viMFi7i6Cv4w
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
tLuZh0hYJOdFzHRm4wp/0a8Hj1nof5B5eF8gibTLzVG/T7Ix+YFha2cYC0X8
+fqtISTWcxs21+WxsctMNeANWFh5Oeu1SjiJEqWYmeHNbGTIGjYdHaT+V/fF
J7No4fstbKMDjlMPtqNGJ2V2iWErmpJ4kqszSJxp2lDoldqOyek+oV9/siAS
1tmtkUuiLr0tIr+6HY7z6m26SliY9kT+xoc7/337BtN0+0STb7TBIT9u2rl9
rVhf+D193msSWldv7dv7qg2vV9/cn6nZiqxMH8FWxn+f/sLk218krf86lgsJ
z6XjPdXoGA6IPiceRoIcqRNrMlInduxInVhh8n9QD+qf1ifhZb/Y3iVs9IrK
dq+i4q++58W3WtWk0Lqv/6Ae7D/93WUHUw/HhfJh7b4+f1QMA/l6edwWPQGW
ylXWGAn4iHxf/3ns7hbk/ny+4lqOAFi34czCfD5cooo/ycS1IDIqa3nDKwGK
D+YsP9HLQZG0nHIThRtV9i07fu4Y5Vcv3X3nzOUgc/HRKLYhHWdLd2qdTRSu
J1/aeG3AIQ68vh6en+vMQPz6e9qHUkmwzunW3fDigB1c2kN6UPJ241nP04WP
y1+1w1+V24Z8z65W4kB21C0L+yEGilj3N7NzSLwJVrg98SsbKpqyZuukmYhc
krnyYuW/X5+3NfU93hPZOLqc66GgzULhpMuuTGoecnYYu3HfteOI2eOu7yYs
WDl72Xx6QuEol+DeifHtoN+Nvylvw4JowhsxUWr9zhL1JGymsDHHRvXO8iom
DONlIu/R/nPr2tNTa4ox2pG1y3v8E/NWtHdzzYYoP+my6vYEtno7pt/dPDr3
HQvrjrHmR1B+qUohkZ89uR1h189eEOOzEMCIKvZh/H3r5d8tzxpOWVwYzccB
9497tE4yoFh8IDd/oeBvez/xru+i+c823DHq9PTtZGFv4C+BczuJeffMt7rV
tuGESSjN5AcLBbf2yyz48NftU3dz0fVPAe0wicn4EryVhf0PYyQl2//6e3xG
6nPGj9TnnPH/rM/5T7/n75KL6p/jlLhwMWA/2XXUDxoM/cclP15HouDhW4m2
6RSuXuPlr6RIxzKXvLW/KByyvSL602GKZ4Vf/rzURJkO0nWF2rEgan25u+mN
Y3OwSKPWUaSAjthBsd/dFD6ZtM7TiVVH4UD++KrT9+lYPXninpeRJG5sLyRY
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
x8+fUfWoYWLH6553dn9ST/j/AhdM2ko=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{388.5621138041203, 150.260326317197},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {0., 0.5954013450339348}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.9695112400615904, 3.241617340340234, -0.04432802950453525},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.618823974895651*^9, 3.618824641315651*^9, 
  3.618824775829651*^9, 3.618828255548682*^9, 3.618836138187727*^9, 
  3.6188371052997265`*^9, 3.618839152523734*^9, 3.6188584045083275`*^9, 
  3.6188586392399826`*^9, 3.618858950940811*^9, 
  3.618859197068167*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNXU2sJcdVbndV/91nx4kTJ3HwX0hILMtOnNzYIVgOthz/gbEC2J7x2OOZ
scWQKEJEIWwQChuI2GQTBGzYEMfj8fx4xn+Mk2HFCmmQF4NYjNiERSRWSBGs
wuLR59Q5p05Vnbrv3veeIxbd07f7Tt/u+uqc832nTtX7rWPf/trv/cGxb3/9
xWO3PvKtY9/82tdf/KNbH/7Db82n3FVNc9VfNE3zN7c2cLw9H9Jue/vKlSvf
hR18sI//F/5x28ePH3d4Ag/hCD+1xrk/Df/x5/hPpy/hNn9uhvp/O7Hy9/DT
A+Hwp5cuXXr34sWLsDUt7t3PLl++LL9i3aCr//IzG7/pl1e8ol9x7f735gUO
btjiu338R1Zcyx8Pzn3n/8/j9XDUwuEv+KEelc417g5Aq2Hv3+XDXN7552JD
PSBP3svRv+YWY70UepFbwjfX8TR4fDPsboT7PB7O/gT+ua9mle8zzuXfg9fB
N3ks3PEH8M+X4cQ1a95xL+eqvgRPPRwe6WY5UXV690o7bBlfudo4t+7bYc8a
MSKECxwftrbx1Hp3+ZXanfHUg+E9b9plh8Ub3Q2HizVfft0GwV+djJe/2jh3
jXHuw7C/lu71D0cX2xfi1m9fOLag789H28vlssHfutN4klEa6/69NZY3+v8E
e8ufrdt2VnOse+5DsJ+2//rxfn42uDAf8eagUfDoY3DUBbczH7Xbbx1ZdNtv
H4EGnD/DEX6azx1dDNDUdAEaPXya9w7afaB2h6vQ7vCp337n2AIb/5PG621J
49+3D43v46H+EtoTNQG1DTzi1prN2MGXr4am+rQc+dBU0LROmha6WR+eg5t0
vvrG89O8LWCbnwH2bvvN57FTwr/NAvbY6tRy8xF+6mA/wCkHAGD790b7Y/f3
0P7eaP8W9lsAAl1454UFvtYA+xtrXgZb60v7axDwaQo3n3/6BngaL42p2hFa
dYD9bdJJY/9EY+q3zz830fucPzzBNtvx64enPtz0jcNTCw3P7Q3fAwygvbdw
nzY17lto5SHc4G1ozLKpe+nqzmhqbP5RN/V84R3EYG70bvtHLwRD+KDRLteJ
Idyz/43OP0gdn5p73i+gbe8Ir8wN3IcGfu3ZqUFg4Ii3Lnz1nDT+fESf5v2g
UZkvwKcWsEFo6MJ8hJ9a2OP95hdRNoIbnAUAFxosMBoAa0vZinJOeG7GTd6w
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
  3.6184273766373463`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
VS2k6w2i4jPLsuppIV0/k8IZhxbImOfQ9TNxXcazkpkmpOtnsmzbh0CZb0K6
fib9D0y6KlOcS9fP5L7b3nYZTxFdP5PgkLixXdbl0fUzMct8tqbLyHy6fkb/
nKqfSXPN1vQu6QV0/UwyPwQ97nJUTNfP5EjXh727kkK6fiYLFOXndpUtoutn
0mXKGouud4vo+plc1b7o3zWEoetnUj7JfKfL9GJ6PUg8ytYmjtXLpdeD5KRL
caZwuIheD5JDizVERh9F9HqQWP0KL26U5NHrQWIq6ld5MDCfXg+SDUdO3O1p
U0CvB4nRjObaEG0xvR5E/5xaD5JZaRXNkreF9HqQTLLS+rypqIheDxJl9fhf
zb4MvR4k59t6uzIzi+n1IOmxRse9d0QxvR4kzhnHzq+XLaHXg+RXP96l8IMl
tF9ENmzSlNcbl0f7QuR4wZ0vNj3yaf+HRKocqPF/mU/7PKTMbVCBuLyA9nNI
c3NWeFO8mPZtyMA165z7uRfSPgyZnfNp1yyLItqHQf+c8ltIMTN8yBL5YtpX
Ies/WfXYdKaY9k/IS7X8r1afi2mfhBzb3OfNyd0ltB9C+p7fUutzv4T2PUi4
OKUqXldC+xtEs+VnQZ4AOfqEym8GnN7bo4D25cjhL08XqLYV0P4bqewq+N5Y
L6Z9NqIs55YTcq2Q9tPIYaXNBzdlF9G+GamcNFFjcBRD+2NkYNifL6/0iml/
DP1zyu8i5sm3+THTS2hfiwzkzfVxTiyh/SuSL4zeb6okoX0qYl7YZ9VCPwnt
RxG5skNTRvQupX0nkl9V3+f7qVLU89SYJnFHx2Nm9KTRn+WXnEE9r9xSfGrg
W89ccB5cfLzbWdQz48Tybr5qDYzMSInF9dizqGc565O/fGfrkTDRDfWsr+Yb
qhk2Mlqfh47rG+CGerazPu13zfyFP166oZ59NUdcFto+YdTjt9y2H+WOelqy
ftcKyj88zcZvYvTDerGSP+oJ8Uds7Tds/Qp/1BPiH+4R7jrFzh/1hPhv3k5L
qXL1Rz0h/twZ8y9PPe+Pen5m43/E05u58aw/6ikR6ccKbR8xB6uTjz9X80E9
68wdr3Z0PGJmTzD6HsDzQT0/Dc54a+Bbw2hcsZw1QMMX9exT/Kyfr1ots0O5
x7TlUb7c/LQdqvlYWMtcK1V+uaK7H+o5d4ThejXDOsbyjMhEfqsf6rmmwumo
7eM6hpje9oqI80M902C/KOW/lbLxuwcm7dCVC0c9H7Pxnzd0PZpoG456Qvzl
CnWGdwrDUc/ebPxzOjLrCmUiUE8VNv6nXbtPtNeKQD0h/uIxD2e9No3APADx
P9iq/nesI3Km55pkT9vH95i4UWoTbeKDUOfRf+rThLb3GXU5L7n9ZsGos1aK
3J2OjvvMk9H2OVr9QlDnVZuXfjbwfcDcMbivWJoawtVp3Y8p+KpVM98vZs8Z
sjgUdXbKSp33WFjNbP4oP3RSaSjq7G/6ZJua4UPmg1VbZvcFYahzK+tr+VH+
Wy82/i2fJk+O68L5b8ps/AUjnZpPLotFnSH+vHVesvnusajzSjb+dYEmbsZM
LOq8h43f/e2rHSZtsagzxL/RcGaoeFQc6gzxFwsXz3LVQc7mgRtM8/TV738O
5vw36ftyk+n723yI2rko1Fn6Xt9irt1fEJrZHoU6q3Xmn9uMSt4d5/Ct0ahz
cmjdbwPfO8yQNLXyDwXRqHOJwQAVX7W7TGzaHMuooTGoc80XHd3HwrvMzfze
1jmWMVR+uM5UUf5bIBt/W1C3BPUTiajzVTZ+/uDc4RNqElHnL2z8A0Mmvvea
loQ6q7Lxy2psVVp3Kgl1hvjD7i5Pd6xIQp2L2fivu/wK7dEnGXWG+AOI9dtP
esgZ6XMvZVw29isj92NRZ+n8LGO62btHXTaNQ51PdT7HckY5iHms+yIOdU7v
fK+vMo9u5h4x2RnP5eHO97eCmTxov93dmnjUWZpnKpkRu16WpxomoM7zOt/H
KiaueITTGwHnc7axvlYXyn9TYeN3J49VkttTUefVbPxJvT8Z3LNMQ50h/j3P
Km5vf5iGOqex8Rdd3ZazfFE66lzHxs/P4/0IDU9HnSF+nfzSsFXf0M8k89n4
910LiNhtlIE6r+mMJ5sZdrwy9KxfIuqc0fm7Qubni4Qpf2Ynoc79O6+fxxzd
pjuq5m4S6mzTOd8KmEvPI6yH7k1GnSs751Uho3M0TzHnSzLqrN45fxjmsqKf
au7JFNRZ0jlPSpgTVydfGtnB+ZztrK+lRflv69j4+x+qvTl0Due/8dj4Vzkr
LCxy4qHOA9j4tw8R1CoyPNTZmo1/nkZmwti/PNS5go3/xZ0+sY3zslDncWz8
W3+U31p+EP1MUsrGH5n0dKJ1Iudz9ov9v/G7Mllh7ocq1/8//lsn92U+ba4Q
WfXn/DenznhCmZsqFdtsitNQ51+dOsQwS7+5md21SUedhZ33m8AYP+5WEjQ4
A3W277xOKtPzpraLJCsDdZ7aGX8ms+bGwqhVRpmU/xYiFlL+mwobv4m+Xt9H
hzj/rQ8bf+UvwXr5cj43n9n4e811vS4jz/lv39j4h/zKPBi5XYA689n4Pyxd
ZNgSJ0Cd7dj4/YdOWt36hvM5p7Hx97E9ejZmYjbqPFzKiUGx7vIBQzj/bZv0
OuTt9ddLHzZlos4R0t8lvgfjVzlv5qHOz6Rxkr9uWin6eTzUebn0vsgclfGz
ixSzUOdHneN9CdFxaHn1z3wAnQs7uSsZ8la9triK8znfsL7WXcp/G8LGHzc8
yyCIx/lvm9n4lzqs3WfZn/Pfwtn4+VvXFr61yEGdX7Lxf7zKWzyqMAd13sjG
/120v6VjoBB1fszGf3v6pdv+ZuhnEiEb/+Hp/Z7UpXI+Z6F0npO2A84+E605
/22U9L0grcpnLcc0ZqHOhdL3iBRteG1XtYqPOptK3zuyRS4lTk3MR527SN9T
UrruRm9NdQHqHCd9r8nPkasi3l/gfE59aR4gHfs0dm1p5XzOd6yv9YHy38Rs
/K3vR7mbfBCiziPY+Is/fXQt3Mj5b2I2/u2nVTLv5eeizjvY+Ct9s/oEjxKh
zt3Y+LtNjQmQOyFCnePZ+Pus+rR63kPO59Rj42/8Ej1Pfloe6jxLmreJuJvZ
n+VGnP/WQ5rnyXsT/4xHlQLU+aH0u0Deak30HqLP+W8J0u8IyQlRiuzKZKPO
DtLvDlntdqAxelYO6mwo/U4R4Ve1lZ8SOJ9zhPS7Rt59nPPu81Ah6ryL9bV6
Uf7bTDb++cUepSMmcf5bdzb++XYXQgZH5KHO1Wz8srEtUQUDOP8tkY0/zpT/
cKhTPup8nI1/QPSDBWNe5aPOEL+e9aY7DSvQzyTD2fgN8+f4L+dxPudDaR1C
PAMWWdlN4vy3ImndQt74xbVfzMlBnROkdQ5RGL4v03QR578pSesiIjfOJ/hp
iZDz36R1FKnLVRDI6+aizsXSuoscuPvr17dizuf0kdZppPqA9uGLC0So83vW
11Kl/LdqNn43v3aZegvOfytk4895O5G/91UB6gzxC64W+cbtEqPOo9n4T08S
xPg+FqPOrWz8w4b2ej59bSFX17Hxn3LPX+Nayvmcl9n4+adufjwzowh19pXW
1WTD+FHVl/tw/pujtA4nTTez5y+NzkWdd0nrdqLzK+120izOfzOS1vnEJrO7
f1GZCHWeKV0XEIvmgnNua/NQ51HSdQSZmnYv5U8d53N2l647SEm7wR/1nZzP
mcT6Wosp/82Hjf+OxY7F4bGc/3acjV/TvKJSPI3z3yB+0+aLZy8Ki1Dn5Wz8
Jl8FdgMXMKjzLDZ+Vc95HkvEDOoM8W9f620pr4R+JoH4vaOz1Ey3cD7nKuk6
kajk/dQWNItQZy3pupI86VXu/PNCHuo8WroOJbYNH1s+Teb8t57SdSu5Nu/Y
pbCKfNS5RbrOJW2jdm77ZlaAOtdI18XkjXuySbcvnM9ZLF1HkzSHte7F7pzP
uYf1tUwo/20lG/+o+TdOmD5lUOfZbPyb7PmtHgs4/w3i735u2oIFbpz/1ouN
f8TOLUr6Nzmfs5WN/8rf2YHJ8pz/BvE7mpUkmRtzPifEX3bm91rHUM7n7C31
Z0jklKzvXaryUec2dn9dnU71Vd4xzn+rk/onJIjRlFukyvlvEnZfomrZOw/H
KjHnJ0v9GeK0uud0K7tC1NlP6ueQ2J3Osr0HFqHOTlL/hwT+NBm4JY3zOZVZ
vyuP8t9k2fgFPcPqvQdw/lsrG7/8NBcngRnnv9Wy8dcOU8jWyCxBnSH+XhVb
znT/w/mcqWz8YXNXN0//5zsMOvuz8Qfafn6T6yeh9WTUVw99s7thP+oPPtiv
O9NKP9miv0TY+2UOWXYEx7eE0j4eqR50KThlRx49ntzfNDN+Sr2Evj6RWPWX
2X0D/UDOV7yr97a6nfMJYR+a8pPtowT2lrhv+SQbz0kFucr6sDO43xL4uh6/
1jZFOON+ZuAp48dpV4e4435m4A/nzs+9GeSJ+5mBdzVaPe3qlQu4nxn41K17
4ov8vXE/M3LhwktbDX1wPzNwyeKKys3XfHE/M3DjirU9Nizzx/3MwD+urtde
czUA9zMDP1Nj4bRCLxD3MwMfsbMt16AsCPczA898e+LzUt0Q3M8MfOnBnho6
klDUs5b12aIaJl/n7bmMegK/YpmzssruIuoJ/GvPk/t/D/JFPYGv0Lwlb8D4
oZ7AY0yURX42AagnXsfVftuT4YGoJ14nrURmckUQ6onXqR4cf/RwCOqJ1/m7
21AyJgz1xOtMyPnQ/3Y46gk8em1PXxOnSNQT+InCyaH3/KNQT+Dq6zbYHtsX
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
ceep6b///h+TwkPu
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
v//9H9aoyHU=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{312.8140913576083, 191.46013603609953`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {0., 0.1595062947287151}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.6944221011201425, -3.1553229184269473`, 1.0058405569102569`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6187610230602207`*^9, 3.6187616299262204`*^9, 
  3.618772043016303*^9, 3.618772139606303*^9, 3.618772326653303*^9, 
  3.618824641495651*^9, 3.618824776079651*^9, 3.6188282557486825`*^9, 
  3.618836138407727*^9, 3.618837105619727*^9, 3.6188391529337344`*^9, 
  3.618858404648326*^9, 3.6188586394699802`*^9, 3.6188589511808114`*^9, 
  3.618859197338173*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427441564007*^9, 
  3.618427442114012*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nAvQHmV1x79CgBpCBgGlgHLRlIBtGaiItWRYQS4JkatWGotIQ0K4pdqp
lwIBJKK+7YxT+IhCEhMugXBJgOQFPgK8yYYNl6pUyRtCLl+CZtRaBwoJFxlr
ndTuc37Puv/zHcaZzPNzv+c9+9uzZ58977572NQvnDt9l4GBgQm7DQzs+vt/
5x9/63u3XfV0edjWMx7eufMnZRo/Ul74zH7X/+LbT2WexsvL0xd+YMO6E1dm
nsYPlC8uP2jplhmPZb6+Ht9TXmB/B0/jO8q19v/Df1yPbymft3/h/16Pv1UO
1P/dMAF+9X4Pnrbtqi9N+GnavoBvS9sXw2n+zLfYdheleDL/+xRPsTHFn/lm
+/sz0/5mfnba32Jq8iPzLC/MZyE+4eXFX1o2d2jmsPMMV89w9QxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPXcnqfxLD6z5/v33PdrM4dfcp7h6hmunuHqGa6e
4eoZrp7h6hmunuHqGa6e4eoZrp7b8zSexWf2/NqdX7543KS+8wxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPUMV89w9dyep/EsPrPn6XWe/9B5hqtnuHqGq2e4
eoarZ7h6hqtnuHqGq2e4eoarZ7h6bs/TeBafks9VkM9VkM9VkM9VkM9VkM9V
kM9VkM9VkM9VkM9VkM9VkM9VkM9VkM9VkM9V4LkbeO4GnruB527guRt47gae
u4HnbuC5G3juBp67gedu4LkbeO4GnrvO84D9p57h6hmunuHqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp7b8zSexafmcxHkcxHkcxHkcxHkcxHkcxHkcxHkcxHk
cxHkcxHkcxHkcxHkcxHkcxHkcxHU58BzFXiuAs9V4LkKPFeB5yrwXAWeq8Bz
FXiuAs9V4LkKPFeB58p5tuuj8wwP1hvOMzxYbzjP8GC94TzDg/WG8wwP1hvO
MzxYbzjP7XnceiPI536Qz/0gn/tBPveDfO4H+dwP8rkf5HM/yOd+kM/9IJ/7
QT73g3zuB/ncD/K57zzb/YvzDA/uB51neHA/6DzDg/tB5xke3A86z/DgftB5
hgf3g85zex53P+g82/248wwP+hvOMzzobzjP8KC/4TzDg/6G8wwP+hvOMzzo
bzjP7Xlcf8N5tv6S8wwP+nXOMzzo1znP8KBf5zzDg36d8wwP+nXOMzzo1znP
7Xlcvy57vvZrL02+aNSa8ukjrjt8eGhrmcYPl/iH49+2L2T7PL9sr/MXwfxF
MD/bM0+OX3juozK/bF8G22s8hcRTjLngo8fcWa4p35j9n1fMHH65TOOH7d81
BXyvxHX7Iti+YHs8MA8e2J74dX7iZ37iZ36Nn3mC7d39lMyj8eT4jzj2mTdv
eKXp66bx8vLSKT+/45wVq/LnpvGDmbM9fPbpJ5w/d+7jefuv1+P7Mmd7OHGx
/ffq8V2Zsz38Evsctp9RjxdmzvbwefZ3bH9rPZ6TOdvD59q/bP/denyD1YcL
cz/f7sImsD3z6PZwtl+Qts/5sDBtX8DZHm77XbT9zMm87WdOcVnykLdPXhZm
zvbw71m+iP/MxX+RjtvjeftvpOOYOdvD0+euyttfbnHA2R5ueZi3H5/yMHO2
F5771Zq3cM1PuOYhXPMNrnkF1/yBaz7ANR/getzb8TTHF67HUeLPxwWuxwWu
/uHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6bsfTeIarZ4k/e4arZ7h6hqtn
+r3qGa6e4eoZrp7h6hmunuHqGa6e4eq5HU/jGa6eJf7sGa6e4eoZPnI+V0E+
V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V4HnbuC5
G3juBp67gedu4LkbeO4GnruB527guRt47gaeu4HnbuC5G3juOs/0e9UzXD3D
1TNcPcPVM1w9w9XzQOu/xjNEPbfjaTzD1bPEnz3D1TNcPcODfC6CfC6CfC6C
fC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6C+hx4rgLPVeC5
CjxXgecq8FwFnqvAcxV4rgLPVeC5CjxXgecq8Fw5z/R7g/WG8wwP1hvOMzxY
bzjP8GC94TzDg/WG8wwP1hvOMzxYbzjP8GD9HORzP8jnfpDP/SCf+0E+94N8
7gf53A/yuR/kcz/I536Qz/0gn/tBPveDfO47z/R7g/tB5xke3A86z/DgftB5
hgf3g84zPLgfdJ7hwf2g8wwP7gedZ7h6pt+rnuHqGa6e4eoZrp7h6hke9GGc
Z7h6bsczR/snzrPEr/0Q5xmunuHqmX5d0JdznuFBn815hgd9M+cZHvTHnGd4
0NdynuFBn8p5hgd9J/VcXnvYz3s7d/o+53d/tP9PJw5ucfcjD149edfBcVvd
/cgz1idXn1vWdyeNm/Syux95y/q06nPPow+8cWim7zdeEvQPr7P41Sfxq0/i
V58Sf/ZJ/OrzTYtffVYrTl00NHOD87l5+lXP7ty5wfl8Y58HfzVxcKPzOXr1
tjGD4zb5fu/M9xw9PLTJ+fyrAyd9atykzc7n2c/N+srM4c3O59Kg/7bG4lef
wxa/+iR+9fmudvzZ56EWv/okfq0DxK91YPez7/uXmcO+/3bw77YsHZq5znk+
7v69X9i5c53zfOZ5J785cfBF3xca9c/vHRy33nmetXzJx4aH1jvPcy74yfnj
Jvk+5/ag/7aHxa+eD7H41TPxq+cz2vFnz9MsfvVM/OqZ+NVzOo+ed57T+fIf
znM6r3/kPI+r68+Pnef75m/+34mDLzjPT00ce+jguLXO88a3T/zE8NDaoD74
/tstFr96ftbiV89vW/zq+YPt+LNn4lfPqy1+9Uz86jkd9zXOc8rPp53na+vj
+Izz/EB9Xj/r63B9/j7nPKc6833n+WP1+fgD53lH0H871OJXz2dZ/OqZ+NXz
0nb82fNmi189E796/muLXz2fXcfziPP8YP25Q87zXvX8jzvPV9T59qTz/P06
r1Y6z4fX+VM6z1WdJ085z28F/bdzLX71vMziV89jLX71fFk7/uz5OYtfPf+p
xa+e11j86nnMov+Pf7bzPFDzQed5Vh3PfOf5t7WHO53noXp/FzvPX6znWeI8
/0Ud/0POc/p3Xs/ls8Wvnkdb/C6fLX71/E47/uy5a/Gr53+w+NXzURa/ej4g
cbcePj/N49bDC9PnuvXwthSnWw9PTvvl1sMb6u0H3Xp4Zc1nu/XwfwX9t/0s
fvV8nsWvnhdY/Or5F+34s+e/sfjV87DFr56HLH71vDLlufP8vnReOM8r03nk
PF+Qzjvn+Y/Seeo835XOa+f51FQHnOdXgv5bz+JXzwda/Oq5Z/Gr5wvb8WfP
u1r86vlui189n2Lxq+djU912nndLdd55fildF5znxek64jx/NV13nOdJ6Trl
PB+YrmvO89Sg//Zhi189j7L41fN6i18939OOP3u+0uJXz8Svng+w+NXzS2kd
4jyvSusW53lxWuc4z+9P6yLff0vrKOd5dVp3Oc83pXWa8/xq0H9bb/Gr55UW
v3omfvV8cDv+7Hm7xe/WdRa/er7R4lfPg2ld7TxfldbhzvPUtG53nk9P63zn
+cPpvsB5fl+6j3CeR6X7Duf53qD/dpPFr56vtPjVM/Gr58nt+LPnYy1+9Uz8
6pn41fOZ6T7ReT4u3Vc6zwen+1Dnefd03+o8v57uc53njem+2Hlene6jnedp
Qf/tDItfPX/E4lfPxK+e92jH3+Szxa+eiV89E796flfqzzjPO+z5OvW8OfVP
nOfKnkt0/eTUn3Geb079HOd5Vur/OM+HBP23P7b41fN2i189b7L41bPEnz0v
sfjV8xyLX/tF5jOvk/FPH0yf+7L9detA6+MVOg9+dB6b33H6hEHfNcfJc8vX
WDw8t8zzlvBcv+x5Zrg+zwzX55nh+jwzXJ9nhuvzzHB9nhmuzzPD9XlmuD7P
DNfnmeH6PHN7nuUFPjdZn019wtUnXH3C1SdcfcLVJ1x9wtUnXH3C1SdcfcLV
J1x9tudpng8Xb9nzR6yfpp7h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp7b8zSexVv2/AHrm6lnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoarZ7h6hqvn
9jyNZ/GWPdMfU89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPUMV8/teRrP
4i17Hmd9MPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPXcnqfxLN6y
5/HW78Jz+/fvnZ76Z3v8t39H3+npcWF7jkv7d/Sdnh4vtud4tX9f3+npcWR7
jmP7d/ednh5ftuf4tn+P3+npcWd7jnv7d/qdnuYD25MPcLbXPGF78qT9u/5O
T/OH7cmf9u/9Oz3NK7Ynr9rvAej0NN/Ynnxrvx+g09M8ZHvysP3egE5P87Md
z3J5nwDxNHkr+SbvGcj5lvP5IOtzat7CNT/hmodwzTe45hVc8weueQLXfIDr
cYfr8YXrcYTr8YLrcWnP0/gXb9nzwdbPVM9w9QxXz3D1DFfPcPUMV89w9QxX
z3D1DFfPcPUMV8/teRrP4i173mB9S/UMV89w9QxXz3D1DFfPcPUMV89w9QxX
z3D1DFfPcPXcnqfxLN6y50OsP6me4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmu
nuHqGa6e2/M0nsVb9kwfUj3D1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9w9Uz
XD2352k8i7fsmX6jeoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2e4em7P
03gWb9kzfT99nwBcfcLVJ1x9wtUnXH3C1SdcfcLVJ1x9wtUnXH2252l8wvE5
3vqf17T7ruXGq7/e2+d3TT8zjR8op/7brJsO+uCKzC+qx/eWr9rzHPBX7bmA
167Y+pXPvnxvw+vxreWoI247ceOn52U+UI//tbzH+tPwe62PverXU7ZdsOPu
zMt6/J1i/S8fnr+4vyzzdfX49uL0F594dsHSocw/WY8XF6tXP7Vjzjd7mVf1
eGkx/zPTxp56dNO3nFePlxcvPv/LRSe+/+nM0/gR65evyv1D+vs76v1bkfkb
tv9X23sL4LPq8aJyTL3f92c+2rycVB/PBZmfUI+/Xd5h/Xj4Hebr1NGfGpqx
/7LMT67HtxdP1p4ezbxnHo/+2YVjPvPDJzP/y3q8pEj+Vme+zvzuZe8TgNt7
CYrr7XsQ+mOz7XuQ0fbeAvie9XhR+aH0OZkfWY/nlx9P8WZ+Qj2+sZxp3yfA
L7fvKf7sgN/89pDjHs38z+vx3cUduw2M33/vJzNfVI+XFGOu3PXIPb68OvM9
6/Gy4pTXv7lql6lrMk/jh4t5Vqfb/ai7yklWV+AT7Th9zuoH/O/q8U3lAjvP
4Avs+O1TH+cnMt8v5UGRjtvqzE+248r7MeDX2Psxplve0c+ZZt8rXW35Bb+y
Ht9c/ua4U7514z+Vuf/zP/X4oeKxdx++ac3iKvOhetwt5tp+08e4xb6X4nsf
ON/7bLfnM+Cv23MxUX9jsvQlJpvf9dJ/eMnq8uelz/B5875O+glrrV6/IH2D
561uL9/3+N//78rcH/jcLlPWXFJeOoF6DN9qdXuT3O9vtu2myn39hVa3N8j9
O39/htynnzXi+/2yn+JI+96K+3H7fsrys7kft3zN32dx/8j3WZutnuf7U6vn
06yew6dbPed3p/DXrJ5vt3qWudVz6hZ8d6vn1Cf4nVbPqUPwntVz6g28b/V8
otXz3Dewer7K6jl8tdXzeVbP4VrP4euknnM/SD1/w+o5/E3b/1lWz+HX2Pk2
1uo5fIx5OdnqBPzjVs9vs3oAv818nWLnPZx6/oTVc/iTUs/hWs/hffPL+2Fy
nFLPuV+jnu9p9Rw+Ruo5XOs5XOs5XOs5XOs5XOs5XOs5XOt5+/7oLqvfD2R+
mh0n1oPw86Wew7Wew7Wew7Wew6+Ves79hdZzuNZzuNZzOPX8davPrKupz3Ze
lLLOKak/cOoP60n5HrxYb/Pk9bbNw32QrD9L276Q7YtL6no5o/n+vR6fZ9eT
Kq+LLP5ycf3/fzXzu+zvL0vHLa9bLq/H1+MnrzfSuFu+k3xmnsYPlWelv8v8
k/X4H8sp6TzO64fP1uNritnpeGWexjfn91lxHed9Vp9IeZJ5Gi8r9055lfm7
rb78wK5j8Ods/7nPgP8s8WKaXZfg08wL1x94uq9YwHmU1w92HpWj03mXeRov
K29L52nmabykPDKd15l/KJ3XJfUPPiF5K6+w4wOfmTzb+vb2zNP4xuIYq3Pw
VAfnF2OtnsHT+nUR69i8nrH3YpWpLq7O3OpkeVSqq5kfZfVuRarDmafx3eVJ
dtzgJ1kdZD0In2L59IodH/h/p7wtzrHjAD/X8oy6Ak/jecV1Vj/g11r+vZWu
X5n/Ol2/8vnOuoLzfW66bmaexsvLXrrOZp7GS8tT03U589PSdbl8wfzB0/j2
csg8wR9J1/3yO7auhA/a806juskHfI96fF6xv+03/E/SeqNg/+DvpPVJsYP3
Dhh/3Z6nvjitfzK/JK1/ii1pvZT51rReKu61usL64XapS1xPqUs9Oy/hK+zv
Z9j5l9cbUpe4fmldglOXPm15BD/H6tLfWr7Ap1hdut7yAn691CW5HuW6BNe6
BN/b6hJ9EfgzUpfgWpfg06UuwbUucV3TugSnLi20ugSnLh1hdQl+pNWl460u
wT9qdekLdnzgX7S6dJrVJfhEq0usv+DHSF2Cj5W6xHVZ6xJc6xJc6xJc6xJc
6xKcuvQrOz7wV6QuwalL+1pdgu8rdQmudQnOeWvr9rxOsHV7udLqD3yl1Z/T
rP7AJ1r9WWue4Gut/jxmPuCPWv15zfYPviOd1wX1Ff4eqzNvW7zwt63ObLc6
A7f7JruvWpH5DKszw1Zncj/Q6gx9OXm+keceS1mP5edU4fqcKlyfU4Xrc6pw
fU4Vrs+pwnlOdYH08fR51PbnNs+jwvV5VIkzP48K1+dR4fQlLpV+nfqBqx+4
+oGrH7j6geOH/WjP/wfP5bb6io0HiSd7gKuHvO6V55/hPAc7W/p46gGuHuDq
Aa4e4Hi4TPp7ur/yuXl/4bq/7T5hs7/w8a37l6a/p/sF1/2C637B28e36ftp
/HCNH67xw4mfOFnfapxwjRPe9r8qr5P1c+HjW32nph+o88N1fu0TMj985Peb
dXojv9+s0xv5/Wad3sjvN+v0Rn6/Wac38vvNOj3dL9aB7Ff7vWed3si/u+y4
313CR37vGXHqe886vZHfe5b3S9571umN/N6zTk/9s1/6nDzb63HRviLHBa7H
Ba7HBa7HBa7HBa7HBa7XHbh6bn9u4xmuniXO7BmunuHqGY7P/D4HW/+73+8Y
V29w9QZXb3D1BtfrUXv+P/g9Tqsvqr8vK50fuPqBqx+4Xo+4T1EPcPUAd7/n
Na4e4Ho9guv+yufm/YXr/rb7nM3+wvV6xP2O7hdc9wuu+wXX65HMn+OHa/xw
jR+u1yPuazROuMYJ1+sFXD8Xzufm92bYfQTz5PdRGGd76nP+3tnqM/WNdRH1
je3hWs/h1BnmYb2hdRLO+c78cJ0f7n4311oXzcmfyzpBPxeudQbO+UU8cI0H
rvG01zlN3YBzHhEn64qR3yP0nIsTrnUAzvlC/HCNH67xt+dp4odrHZDPzfvF
ekb3C677BR/5fTKlW5fCOb/YX7juL1z3tz1/s79w3V+JJ9cNOHUDD/J9ZfYA
Vw9w9QBXD3CtM3DqDH7g6geuftqf2/jJfULxI3FmP3Ctq3DqG3GyTtC6xPVR
6xJc9wuudYnrjh4XuNYluM4PV2/t62NTl7he6OfCNR/gWpfgGg/cvW+qdb1r
jiNc6xLXF40TrnHCNW/hWpfgGj9c42/P08QP1zyUz837xXVQ9wuu+wXX/YLr
+QjXugTX/YXr/rbnb/YXrvsr8eTzDq51iX6aeoC79/YYVw9w9ZD7e1KX4FqX
4OoHrn7an9v4gasfiTP7gbv3pxnXdZc8H1j8HyFFM0c=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztyLENQFAYhdE/xCAKW0jsYASJ2go2MYrKEF6MwA4krxK96tzmyz31MPVj
ERFtFVE+3a91a5Zjjbw5/7PjnHPOOeecc84555xzzvnX09sjcc4555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc845/9Vv6weBRQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.07999998857142858, 
   0.07999998857142858}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6187610232602205`*^9, 3.6187616300962205`*^9, 
  3.618772043186303*^9, 3.618772139716303*^9, 3.6187723268733034`*^9, 
  3.618824641685651*^9, 3.618824776209651*^9, 3.618828255878682*^9, 
  3.618836138687727*^9, 3.6188371058897266`*^9, 3.618858404748325*^9, 
  3.6188586396499786`*^9, 3.6188589513908114`*^9, 
  3.618859197498176*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
  3.6184273766373463`*^9}, {3.6184274456340475`*^9, 3.618427446374055*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
G2Sb3OPEPycesfUGWfi1Nc7xQiRbb5C18XvN1g4LYesNomz3YtepKT5svUHq
EoQxy2/cYesNEnem2d2q3oqtN0jLj3uFinPOE6beIJu3bLJ8/OUuYeoNUrf1
oVBg5EuY+pmofiQi9fOpbP1MPPOGbDw1kbL1M/kTF9U1aFMCWz8Tff9VMRVn
Y9n6mcQ7vtojHRTF1s9ksqTUJCPfh2z9TN7WTb9NWwPY+pkExZp9UlzmydbP
JEdtrt+76fZs/Uz6+q6ymh6vz9bPxKbxZciKjmuEqZ9JYfx1+Y819wlTP5NQ
SYcxw4b6E6Z+Ju9GG2SlZIcRpn4mLuoDojQTBIRZDxJ79fhjikVx7HqQ7Bkc
UdM48BG7HiRzZP1JgEEkux4kam0zltWuDGHXg6SwdqS8aZ0Pux4kn62HxzdX
3mXXg+SW3Yd73T5cYNeDxCon7YRdwBHCrAeJzPgt13JyHQmzHvzrcf7Pyo1e
hFkPknGFG6asyAwkzHqQzD8WPXXH0AjCrAfJvgvJhXdLowizHiRO9tl7Rddj
CbMeJEkeIumeOgmE6W+Q+CevbxRODWP7G2RDrl2KnYQ/298gdRY7Xzq7PWD7
G2TCzXUuaqY32f4GkeihplwRuYztbxCZXjdLm6dcJ0x/g+hNPHvxRMc9Ap6B
ywXf6/NH048w/Q1yMOl7HdkTSpj+Btn3emx5Sn4kYfobZNjnyoSdex4Rpr9B
in9e8paUeEyY/gY531Xrqo9rImH6G8St+6cZ3kNSCNPfIId76oYcfplKmH4d
SayLNyx2sGf7dcRm3p2E09Ms2H4dmekWvPvptYuE6dcR6V1KP+2n3CVMv45Y
JWjuqu7tQ5h+HWnJqMhslg4mTL+OTDVNGnDmTAR6Br7foo/upbYowvTr/tZF
O61uHIklTL+OPDseFer8IZ4w/TqidKZrw4O9yYTp15EJqSEy6z+nEKZfR3LT
ykZUPhQSpl9HTDJ/a2+zSCdMv45I56hvaBiXSaxtKlbslk6j6WPOqtfGPKG5
cZ6Xa482YR0C/OnpL03bM5soN54Av33/kM3Bbdj3Q26okJ9jEVdCmeeTMXOX
+N147c4+n8ioj9xx7483+3xSb+pSJ6+eBnFi/I+WOixVWpmB8UMfUlXrzZdZ
g55SZjz9I/dx2rH9pZQZT+76Tmw7O+sSGz9JNIvtCJRJJz0NZkzxpmn08/mX
5ha19fT67X/uy3xsohwnwIep9FT67iCizHgic3PQ5I2L77LjycAfXQz2B+Hn
gs/3DN57qtvgpzge4k81+aHQMbQUnw/xSzws2X57kh3GD89vHPJxbPqQDMKM
p/O7GUsfm/+UHU8/v31l8HM+37+F5xg62dySyr7HxkO229atsk7IIGO0Mr5c
fMv3dU+tkw+Sv9NI92557rU2Lhn/3WtDLnr1X9aEHMbfvDDcR6lHIz2/fN52
V9fHOH6EdsWrtDiew3idvf9o67XVc3FG4/jYrWM0jo1pRA7jzfIOaOyuf0JN
O//dcBzv1vr19crJDchhvP1EW9Xj6XXUrfM5vjg+c4brsYd96pHD+NhbngOv
B9dS107uxP9d4MRcyf4f67jfO8P/6ufDeHhO/ac4WY/bNTie7Us/EI/H+bDq
56WhlWE1yGH8hJjmz5nbq+h9cZw4/uSccYGzblQjh/HrBku+qllYSc3EHnC8
/5lCrfvmVchhvJWVYu2HMRXcc6JxvCj5cOqfFZXIYbxnnWaRZJ9yekH8OeL4
jo6Bq3eOr0AO47PmrUgb+K2U+3eTcfz4BQk1abLlyGH8e8/dseNqRZSbhzh+
8/kdJupvSpHDeAWp0yHzUkuAY79aanPz++t+9Tg/gavVHlu21uEJzkPgiw0k
/QaercP5BnxP002Jun21OK+AXzEaut1rcw3OH+CBrwJi9yyuxvkAPMdMS36C
ZhXOB7Z/Dp879ucPrcqNkavAzxf7/1+rR51uK8PPEfiq43vOLXhRip8XcIv2
z3XdRCL8XIDfPHN2Zn5yCfoH/lCip5N9SDF6Bu7dfUpD2OQi9Az93r5yoVdb
lOvQM/DxD0NXmvSvRc/Al6wP61PftQY9A9/5PUy04UcVegZ++l64c967SvQM
3IU83LywsQI9Axc8ezj0cWk5emb75+AZePP4SC//+FL0DFy6ONJIKVyEnoEP
PyoY7eRVgp6Baw+OeiPrXIyegYecMNkm1a8IPQNvSjFtavmej56BD+5hZlJf
n4ueod+rnLx/1Ma71egZ+NQLz/TOOFShZ+C6uput/Owq0TNw/V4FvgWXK9Az
8COiBUXfbMrRM3Bbl5gfSqfK0DPwB9vHqy05Voqe2f45eAae/VLh5J29JegZ
+JOQqz7Ju4vRM/CXTb/uFSQUomfgfc1ftihF5KNn4NqtRYv3++aiZ+DGNo/d
ku9mo2fg9rI+H3vfyGTms5BOODQl9XG/SmY+C+nsfxTXO/avYOazkK6YK/XC
XL6cmc9CunXkO8slCmXMfBZSsx7lMioDSpn5LKQnPia5/RggYuazkNqW+08o
HVjCzGe+f/6f81lI9RZ98uw5pZCZz0K6v09aOtXMZ+azkN6odXp9WCuXmc9C
Ghqwp6f69GxmPgtp7pGZk6tnZDLzWUibiewGu1npzHwWUtmedcfJbCHjWUC1
1b5uV75exngWUJ3xazcFOZQyngV0tWa4npabiPEsoP/MkltG/34f/9OzgBrO
N124PKiY8SygZTevHQ/eWcR4FtBX93XMUg4WMJ4F9CfXP/9PzwLa+3Gc3rub
OYxnAVXNOrxQ0j2L8Syg08onTBsclsF4FlDdZy9HaySmMZ4FdNsnT0WdvFTG
s4DW/XmkGB1NGc8C2m3oOIlGUQJ6hn7v0sqYtvPSIvQMfEXHlS20fwl6Bq43
ekv8T5Vi9Azcz33D9IMGhegZeNiH1u+vrfLRM/Doea6Pd7rkomfgiTdnn6qJ
ykbPwNO5/jl4Bp6vYfMn7106egZeaq2aotMjDT0Dry1MP5c0KhU9A8+cW3jZ
/GIyegZe9qS/rEFSPHoG/uzMPzf0WmPQM/BvSvf7LpgUxc5nEqTwZUzRz0J2
PhNf/zOPg0cVsPOZeM6UWX5ZL4+dz+RBrkPNzpM57HwmrtuV9s31yWLnM3H6
EPBzcEEGO5/JbRtNu6+taex8Jje4/jkzn8lV36VhIctT2PlMZC18T/VuTmTn
M5G0f3w/Y85jdj6T9ujCpNO3H7HzmXyuelY/9XkkO59J2Y9PHeUHQtn5TLIW
DFuoM8iPzc8kzeqE4d0POWx+JtGr39KKUdlsfia+qgbDB+hnsvmZOLcWW693
SmfzM7mUu6jePk/I5mdyzD1mbrFkKpufSd7zddpKR5PZ/ExCuf45k5/JTS3l
uIFrY9n8TPbXSR13pFFsfiZrLjZP66sRweZnsnOze/OQWUFsfiYqgXtN5Ad6
s/mZZHzcmzvkpTObn8myuZKDp9pYs/UGaWz87bKzKZ2tN0hm6+ZMSfU0tt4g
wT2jv/qYpbL1BlFerLzkmgFl6w3y6mCZd/6rBLbeIBH3r3X0PhTH1hvkZPb8
7Wvbo9l6gyzi+udMvUEU528dHzoklK03SLhL5vPJE/zYeoNcrjees+/Mfbbe
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
G0aRFi7PYD/w+ZUl41pjiDGXZ4Avtgge2HY9ntRyeQa4SWv+y4wRydiXA276
n/se/6tfB/tUgW8b16PXiSn8uWbg8RVXdPvo8ueagSdu/m2pMbEe9wPjPsOa
w36r+j/B/cDAhdtfl5p/58/hAs+o15e0q+PvOQT+kTm/jPsGdXaur7fjzy8D
b82sOPf7EH9vIfA23ZURw/7h7yfEfYa5qfWz55RhXwL4n5Uzem0bUYp+2H4d
+AE+Zdbu1DvK/Dll4HK/guwP9+DPKQN/ntyyc/VX/p5A4MnnZmiOa+DvCQTu
omMt2S2X94D7Eplzx8B1+jYUGhznzx0DVy4d5aG9iz93DPy7s/mBgatE6AF4
8eYo8nkGni9GHjK0vU+hajF6YPt44AH4Fo9NoTEvqtED8B4++5X1KqrQA/A4
/8u3X2VWogfgpsHukjaxFfi+wNnzv8AX6Xfc2GzBn/8F/sVwkMQnff78L/Al
OQbP+z/Ac77IA4pvZi+yzsf3Yvt78F7ANa68q9GLq8D3Ah6dV/7BN7wc3wu4
dl8q2e7Lf164T485Vwu8/p+LI1ye5GP8wN82blq2IBfPzyL/sXfsobcx2Rgn
2/eDOIE/bFFbtesOf+4VeE/LBsmjDvw8AX67bXX4ge94nhT5Sqn0IY4f0/H5
bD8Qng+8vrZD8sPZ4v/ZJ4TnA3e/byDUHsOfr4S+1r/fb2ab+O/3m9km/vv9
ZraJ/v96v5ltYvi/3m9mm/iIud+MrUv/894z28Skf733zDYx41/vPbNNLPjX
e89sE8v+9d4z28S6f733zDYx+1/vPbNNrPjXe89sE58z956xfcX/vA/NNrGV
uQ+N7SvC5wK8eoHaToUs/j404Dfk9+7p9pG/Dw34ohdh+9oG5uLngvttYj4f
fDMvGz8X4MG2Myzr9mSif9zns/X0qcKb6eiZ7TeCZ+DXho+YOKxfMnoG/kUY
PENiZzx6xjp/j9bC5xEx6Bl4Ro/kldkSUegZx2+9Fb7ZC/uxyKd4eaepLAjg
73Ng+o14fofjZ6qGbx5wPwu9AW8Y393LpigDvQGff/ZD81tJ/nsK3EtUrvnP
dCF6Ay6lnnRKuJf3A9yCOS8JfPLrvH2XLAXM+TJKXipN+xkbH4Z+gJvtEykb
2/qjH+BNhxouqoW6ox/g33oq5lsvvY0e2D4keAB+5rBhhYxtKnoAPvBWWUbN
Dcqf5+X41Fmv633kEtEDcL1nP7+bX43D98X9Ocy5RdyHUy/5fPXo+/i+wBf2
8rn9co4dvi9wG/lJnqEuA/B98flrVOuvvLyO54ZgvTONOW8IPHh4fuyTAbH4
XsBVCtQ2uwZH4XsBd7E607aB8PfLAbdhzgMCd83pEvas9Dae6wFO5T3Gf7Nx
x3M0wD9oKG+UGuSP55tgXXOaOa8HXEko9FZy9Mc4gR9d+uvZlzIP9AZ8xfiP
XVKv431fyMueb9mi6SbAc1KwjrgbU+6ROn0jjgeuIVCTeTYmHs9PsedlIL9B
XbStVHPbm6UNmM/Z8yCQZ4DvDw43FXhW4HOg3pAsy86V+ls/w/cdeEXsBUl7
Kf7+H/YcBDwf+Hv7Q6F+rvw9KsBTjk14rnkdz09hHRJUZqCt9LcOh38X+Pof
b+RNSvn7TID/Vjr+PiKXv7+aPS8A8QDfd1Kr5a6DCOMBruCekvP0agl+j/A5
wpU+E87hfSxYh6wt/xo03b+KuUcoi5Zorxs116eSP2cHdY7nQ89Fnvx9IMBF
XXsNW/6Avy+F3YcP8QN/Y/h9qt31YowfeJldkMEovM85HHnFP0YbNeUK8HuE
XHX4StIV7z/B+udH+bUhaw5W4HsBX3P68XT5I+X4XsADVF+vrzhWhu+Ffcjs
gYdcT5RiHgC+8cDim9tPifB9gatx++HhfXHf++2jH//IFOD7Ard5UjL2Uu88
fF/gGuMmGckp5OD7Yh/S0s7dfkgW5j3gtmnNVYOGZ6AH3M9coXJ1rzZ/Dwnw
wiQV3eaF/D3AwH/5qnTfu4K/Bxj4WDuVzNfr+XuAgW86onLJdDt/DzDwbo/m
2xbnFKIf4Me4/eHgB3jRjnbLF+3Z6Af4eI32r8/l+Pt+gV/+9ePw82H8fb/A
G3N/tDybyN/3C1zb9cf+Z/P4+36Bjyv6XJ3hwd8vyu5PBp/w+3jkkNzsjVPz
cDzu++X22cJ7YV2h6DOlq99jfA72CQ/PULTNysTPBfgQme6am2Qy8Pm435Xb
XwrPBz44Lny+yDYSveHf+zLuNdYp4L2vfJ/w6O4f8duE+O8CH3C9fINkYArO
B/x7mc4tQ8fX/L0EwIdy+zAhHuCjQ496zKv25u+b4viuvlaKcQp38XME3n57
wLsX7y/y9zNwvy+pb5QjaxsSME7gKsN0P26/FYdxArdZdWhi/bxHOG+B11u7
7dvxIRLjBx7H7W+E+IFXzd/xLqPbMYwf+IOyy4MdJWzw3C7wfF93R52Fznhu
F3jQx9MFwxd64flW+B00fG95YIFMFL4X8Mk6uXvNHjzE9wLuG+b/de24IHwv
4AqDLpydFeuN30fgvbtQhYW2d/F9gdtw+wzhfYHXxT7WVZx0D88pAz992MbV
T9YX3xd4jx6+vZPPBOP7As8rerZg34kIrGeA97937PT3yCj0AP20fVw/DTwA
J54yb6bNvM/f28PxYV1CZrlvu4UecN9dN/kzC4fuRQ/AU8+M+Pmr4Dye7wbu
Up+23PiTM9YhwJW4fYPgB3ibx+JuX4rC0A/wNy4HpjvKCtAP8Iodic0TJj5C
P8DTR/d4kKkXh36ACz5uXGN4OAHrPdxnGOst1e6UjHUU+/ff/wOadNbH
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.5754013450339348, 
   0.17318336113891786`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6187610233802204`*^9, 3.6187616302962203`*^9, 
  3.6187720433263035`*^9, 3.618772139956303*^9, 3.6187723269933033`*^9, 
  3.618824641865651*^9, 3.618824776339651*^9, 3.6188282560686827`*^9, 
  3.618836138887727*^9, 3.6188371061397266`*^9, 3.6188584048883233`*^9, 
  3.618858639779977*^9, 3.618858951610811*^9, 3.61885919770818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427441564007*^9, 
  3.618427442114012*^9}, {3.6187731873490715`*^9, 3.618773187729068*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
h93hHDu/MzEelVPwN18yz31UbD5GAE9c59+Rjs0E42Uyt5WnHSDvcVSLTOtl
Q/PA9eSji/yrfLgWszf2cUcIKFwpU1PYUQKZJq4jnXP5YPlHe/uO0feYGt1j
LS/3cnnC8zXz7w986s90qM4RtzWohWE+F5c9O8GHg7n8s8tXR4LSj/G1yg85
f2g+fSnuYKI7ExmlKWUVz/nDIr8PvSpzPGHtqV9BpuWc/9fGrZmZXhPfZf7O
O3q7YHDvRHize/KpCEvuOdV2qdB0aHoYjKfq6nyvVZomB8KYHSF833n36mDo
jST9cc78v/mDlE1BeTLsHG4qW3OTq/8sm5DDz78XA+Wj5CMGynPzHU9Jo3N9
TKxgjmuMk9gHLq8wKPFxvmrykNSBj9cpHTzb7++4O9vr7aVBtoyh3q+keDtO
t486xobzwiOYYYz5XLmCru8vzkwW33S0lBsXEuZr9lnO9IDRDWYtpsO4/KrR
bcDMdXJRUHlMPifKrwhmdQ76Mv2QHoiKO8cpxUWBzQDlHf3Hc/rbO4pMf/fY
A9ryj965pFsGpryDpa5aeiBbZ2M5MN8b9BbZbEw/x+nfw/j20zJfL4h+anpV
vX8Z3Nz83lowgQ+vK32mOPdyYT4f/bpy8CruPm62rdYsVjNmZjs+T/h4losb
/mHHAo8cvcKI3a56/j6W45j3Kq23HXHZk9PhIfv+a7ip2MrRp+rhoPWvcy73
/8bn3r7bRVcmwsWmy8rVffPg+blb3le/6UESTyXMsZaB0V8dNxmqcXmOodXO
qanLGPC2e3nn0cpcaFPVn9J0mA9tyisq9JOT4EPAoQWaI3O75M/lZuOSIrU4
nc16Ken+qPgbr14N3CvhnEG4nKuCyojqFDh9SKXcY0E62IqkKUoc5JF5UHG/
wQe+BHNxFcedo9xnI9kRnD/L5DcOlQ5NBIW0jNt9BbmQLNt/kNZCPfAPymiy
VA9lZO9/7nhUz+WT5sZ69V7jjZk/KhIvpCsr4WTctA2WPjwyz1q9Ozxiujin
M86zwkzfZFV+4Pwc6zye7Xmi/Jucn+P3PDaJ48Vdijm/xflLypnQkSE1XHxO
qXMP8myNYfLm1NpXhDbABNhiGfyMm6+B1oxTFse55+NItg7ZotR4LFqjFB7o
NZ0oUuCTedZjXb/pffW5621y7zlvR0IAMyOsVuHIVI4bty59ndsnCY7N7G09
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
K5FS2F+y1O7tZD5kTzVZbyWTBL3n/x5y2zoHxC965crc4MPlDQ9sD271ZFwK
zwTuPP/X/7M2vR/4kwfaW/tYGU2PgQ3BuxV2OxRCyvqUI7G7+eT7mVdySRY7
5nH64Pu+QOXBJyJucnrKq6Z9ufqW2wdmfMrGiDfznoGB8LsL8n3mDMvkgNfv
OI7tldt2B7UFNoKZ8P0yaZ/mP+yzw+5nhGN7DTkDn98TGtn3vOR7dWZXDn/u
ulyOY/vwwDdLh0xugIPC99Gk/ee3Ty7+WtBIOLavHNR7jpx4PZvPe3L7BY0e
brlnewPh2P7PcSnFeZ9r2e/3bEl7de0YySQ11G9fl/1/sD32M7lEZcL6yhrS
nt7HxlnYnnxPa1/bQ+laew3h2P7kA14/Y88qcGK/p8L2gnFeCS9LqwnH9g7f
z3daWFaCIfu+Htt/0Fm9ek1kFeHYPnmX3Uen4xVsP5GkvZTb+7LA+5WEY/tX
T4Oeh24rB3P2+wFsv+rZPd3BJysIx/aDJqZXpKqXsb+bSNqfklH7aLS5nHBs
r2pWn1MpUwqsH5L2bnrVpqWzygjH9ruavzLv+pcgJ/vbrJ3H6zX/fQPxT+SH
Elr3/KmqJ36I3AouxKam1xF/Qx4kEB1hGVFL/Ap5/gr74xvcaoj/IG/NlMkd
blVN/AH5kHUhU6rJfHpfl/128L4j37w5s563pYLcX+Qny7TmT11cTu4jctsd
z+w+Tisj9wt5VM2RT5GjS8l9QV6u82PdOZESoj/yjmfXfeFLEdEZ+Sj+sD59
GwuJzrg/zPZ3k11cDtQRnZGftJ6yf4R2LdEZ+V1Vednb62uIzsj9K+Vf9lpS
TXRGnnpewf+sahXRGXnDxKlHWqdUEp2Rd6ZOVdKXqiA60/vtoM7IZw2cFq3V
q4zojHxd2LSzOe0lRGfk+lunqy99XUx0Rm72ffqfmNoiojNyZ+cZgpmFhURn
5EbmOmLrbxQQnZH75Oy1nn80j+iM+8MccH09r3djNdEZuSlPh6dYXUV0Rm6t
UHJnS2kl0Rm514eVsab5FURn5PERCc89MsuJzsgLz8walCsoIzojf7HQe25b
QinRmd5vB3VGPiTzrtXysGKiM/LJVn1iDgcUEZ2RL9h8tsnWq5DojNx9Ru3o
c1BAdEaeG5N2NFslj+iMvGNpSMoY+RyiM3KZvIejDo3NovxZwJzaHFimv7OS
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
6Ix8i3GfmDq9LKIz8h8vDNL6b8sgOiP32FFQrLIqjeiMfF22aqPO/BSiM/K2
BQ7vb05LJjojn7/rT7vBwkSiM/Jbi7IlkqTjiM7Iq6XtFCVFoonOyKf13adx
+E0Y0Rn5t8KtgqvOAURn5I8evO1QOuBBdEZultBrV9wee6JzBft+59GWgH6e
I7KIzsh/uu5RlJTMITojV+v3/fmsERlEZ+QlcRpJzPA0ojPyo0dtndYPTyE6
Ix8g03SmZlgyt88VyzcG7PUvnpxIdEZuObRT94NcHNEZecpZeykxuWiiM/Jf
jbNK5WTDic7ID1s7jDbXCCQ6I2/SKbKMW+5J9JnA1ntnjhh3IikgleiD3GXC
y/QCl3SiD/IksS3jwmIERB/km3vczHRPSyL6IE99e+GlrNdTog/yF+WvF4ow
sUQf5KKCrbYvK6OIPsgVg5LfZH4OI/ogd1DaZaY1OpDog7xBRGXmyPWeRB/k
q9nzalEf5N7subTob8ixIoH+RnPUE79zSCu/U1u7JInoiRxcj+venMKdR4/c
bqx20L6YBKIncrdb9u793scQPZH7/Si2C5aOInoijzIYbLl1WxjRE/nlsAc/
v40IIHoit78r0aJxyYPoiXx3zVBHhaIHRE/kQ2eKVlquvEJ0o7/rIPu7Uhz1
pDnqSXPUE7/PiVbqeedzyBOiJ/LUhW2d1/bFEz2R+08aNHHvnwiiJ3JXSanw
HM1QoidymWEbLY6r+xE9kff/bhC4usad6In82dN+7ivabImeyBPZ9zWoG/3d
F/ohzVFPmqOeNEc9aY560hz1xO8lsvSz0rbFBBHdkJtvvSoXf9ub6Ib83PWL
YiBwIbohf7m/LavfIWuiz//+LuWqOs3R32iOutEcdaM56kZz1I3mqBvNUTea
T2G/D8E6GK6/qxSep0Z4z8fVnxSTG0GXPXcMuYihn97DCY3wjl0ngHw4r9Vf
9Gc94LlayMe2Wd1piqmDPsL9ygiXu6p4It64FnywXsry2ex6usR/+7Z5EQ6q
fcZpBFZCGXtuFPKVqe49JhhUwJrSuHTnwGjCN2pBc4dcOSQlJX+yvZ5A+I7m
2ozCplJw3MYbpKHE1QP3nToX4Of6d37Bnu9G2ttqTOu/G/e1SCR1ORd2Pd0n
9rxg5I/7+238sqgeTNn9eJF7xsY5XuhVR85lQ+5rmPuiX3oNfd4Q4y9VP8vm
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
nAfAOEJ+wDNngI/HRXqv9Pn/ASV/IwA=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
3GfkfsebkB1y/+2n0j7VCuQ3mo/cOn1iiqfGKC7J7YtK/w5D7pL7+e8sfUaX
IS+kr2du/f1D6Rz6H6V121XpvMtWS1dKZ2ofaD8ohldeRLZKe+/h5APLF34D
OYc2WzqCsSrQaX6GIz9N+u2rtIe1l5/PXeeSblStZ6jeT/FY8NyoNqG6ieov
ren7Hjwk8xmUzbwy2U2dub1yn7tlaa9rn0/KvY/17Fchz80dq+g9Lknvsjyd
N521au550ZzMSXOiuXmMvma5bdt+2te5azAr0losl7+c/qb+//h8dW79sCby
nNxzqn26ae69qrmXrte9FC/cgWzGO26umDr3PPyEbJzWsUHud9DzS3/slmKe
N9ALpzP2PO71M31N03MqXt+SZ9tMuVPppdx6dzud2dw+9/bIvrnn933t99y2
akXuvaV9Na+0vy7deBB9P+bWfcuQ3+auJUpHfp/0ZHfpz3SdfZUrzB0PLNU9
cu8b3ad7GqNn+TXz8+jvddKYHnqudP2lyC1y29sc2Tt3XPVX0hHSD38h38yT
PUauzPxeK7X3c/sSXZB757ZvuueSNA/rIhfmjkk7Icfm9jneS+++Evm49GvS
sdLN49OeWaTnSs8j/fpA2ntTkKPSnGyW2weS7uqMvD+3X6P1fzm3vf8D+XZu
f1Hz+mp691zxQ1qLdZAf5Y7TGiI/zl0v+x25ILd/tj375/Pc5+U/6S7tdeQm
yKPSPASdR9pl9JfIxQl/T/sst53UHC9K77VG7r+pvwl4Vm7/T7r5tTT/itGG
sQ83rDnevB7cEjy7dIygfOmS0jnh34LzWw+DRyvPLVvJmDWR8/m8If3rV63P
VGtTvK+6tXyTMYXzroopVzL+E8Z1ALdCHhAdoylHqBq9fAnlaW4s7Q+opqo8
rfzNv8BPl47RFKu9k1lvq/b6dOF4Y3jhs/UyH6dw/blJv0nPKZ88Q3NZOl8q
PJkxjxaOx+4rbK82S+suv1qx2tqMv5X2nvwTZC/+PjftvXnI93L7n/vk/iy8
K7KW23eJuf+mfq1bSGundXsrrd3uyEPTedd5mp/O1HLkHNqtmWMfxQCLCp/R
2emcbo1U0UKxwoul4zflcJT/VoyhGOdSPtdH7sS89SscoyseXJ15z2m/6Tz1
Su+lPftO2rcdkf9mKYZhTt7l88/aG0lf6BkWgm/JbY8/Bg/NnTuQvZVdkU2Z
GM0VUF7u4uC6WGPwQ8E5k81T3u4y8EU820XBNbVG9F8I3lFnCHxGdP1JOcZ9
gt+riK6RqFZytfZpcB2wS8pHtpefgHwkuJ7YNeUmb5H/Tv8VwfVK5WmvA+9T
cR742uDan3LIo6K5F8o3PkD/gIpzwuOD427lct8Kfn7lq5+Orskp/zmT/gsr
zmlPCa4/Kq97fXA9UXnpA8FN5HpHn/uV6eyfFVw3XIf+M4NrhQ3AV0XXhpXv
PSPYdtRXTjr4PNakh8AtwVFzHl1HVE54QPAZXBN8QXAtcl3wyeBNwWspnx1d
G6umvPLu2j/KXwXXN+vRf3juPar9eURunSh9KP23IunAw3LrO+k62a4/k/1S
/ljvuwayPn2rcvv3WyL/zh2P9sttJ2QjTgrOddTlvv2D13QN8JXBdWrVjW8M
rikr/y87LL9KtngP5Eu54609kTNy+zbLkn/1aGqKieTf1svti8gP2UD3zx1X
y2ZOSTaiEXJy7nyYbPWizOdXsYh8aPnP8i0fy+yfN025OOXkfk3+vOanK5/v
zO1LyG+V/yffT36xfCb5n7KHd6T9sDizPyp/68/kM8u/VhwduUaXmt9veHrH
nXP7bfLZLg+uxas2cXDueGZ0spd3Jt/hruB6uvLz9wTXzZWfvy+4nq46yx3B
9Xfl6m8IroOrnjIkeJ+sB74suNa/fqo/HATeV7nuaP6B6hFjgvNUquPID5Lf
Jl9oFP1HVpzPHx7MDVAtQP7FsmRn++SOBxQLKJb6n73PrEd/S7r01mDOgGoH
w4Jr66qV3BLNkVIdYWjws6mecktw3b9NqjPojB+l2mi0nZOemc+Y6yquQ50U
Xfdtybx9FMzHOA38cTBP43TwWjXnIvdk7NzgusBJ9NetOS+8F/0fBvM9TtXe
qzlH2YP+tcFzCucnbw7mfe3CmDnB+cYT5a/WnGvegzGzg2sKA+n/Mth2qz51
PrgXeIfSecMx4A/4zjnp7Gyr2D3Yvp+l3FIwD2Q78DvBdfnjwe+mfMIJ4POC
+STbgz8I5recAr4qmL+h83h1MJesu2KiaH6J8K3RPLPdlN+ouZ6xG31r1Fx7
2F17puZ6xi7ab9E1vh7KS9Rc29iVvmbg5eC59F8TzUHRMzeomRM2ATw81YZ2
V8ya8hJng29L9aY9wCNSHWov+UHR3IsdwTdEc0R2kv3kmncUzg9fF82b0Xxe
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
Q5wM/Z5F3Fvp9P8Dzfvb0Q==
          "]], Polygon3DBox[CompressedData["
1:eJxFmwn0VtP3xu/7nnvP/TZqMDRKFCKNplSGNJAhlQwZGiQyhRIyJSoKUSma
kQohUUrIVElmMmeeIzM/Zfg/H89d679WZ33Pc/e5973DOXs/+9mnxgOH9jqv
nCTJrSFJUv39NybJ7jpwcSlJXlT/Jh3couOvCdfNkuQgHTtRuLfG35AnyRWy
fym8TvZask8TTtXP1G5Tfzdda7baTOFc7RCdP0Dj++r8m3R+d7WXhJcJ16lI
kld1zqka10/tNfU765o7yP6i7Os0tq9wS+FPhV8SPlztReGlwjtU+C+4rPPP
0fk3afxA4e3V/0pj3xQeL3yk8OPC2wq/oLHr1bZTv4fub4Ts5+s6c2SvI7wt
1xMeINxCz3KX2q0av5va2zrnRtl76HqrZD9UWH+S9Ro/SJ07NLa52i86dofG
H6PrXaz+BbLPlX174VrC/2hMP+FLhT8Tvk1jX1V/T7Xmwrtq/EWyN9S4vdTu
lL2hWm/93m6yv89zyx41/mnh83Q/zwv3kn1X4fdkXy+8g+y1hRPh/sJ1hbcT
TIUH8i513km67slqL6n/ls6/Qfaj1X9S9g3CE4SPEn5CuL7OryNcVeefLnyy
7K2EPxN+WXhv4Tm63210vd90zo/C98o+SP21sm/D3FCbLvsC/f1M9pnMD9lX
y36wrt9X+Fhd70bhT2SfLnyC7M8KV5P9Xd6n8M76/kcJD+f5NX6W7EcIXyh8
jvAM4aOFLxIeKjxb+Ei1V4SXC9fT+Y11D3Npup8pakfI/rLsj8peV/ZOOv9M
4YHCN8t2o+6nl/B2+v2Jwt3UlgkvkL2axjfTtY5Vm6NrzVZrq/6pag+qf7fa
+7reGv3dRtd5Ruf+or+P6/zTdb3ddf4o4WOFK4Q/lH208HHClYU/Fu6stlB4
ln6vssYfIPuJuv4tuuYPGtNJ9vmyz5C9QvZd9Hs7C9cXPke2Co3tqzZJ469W
G6bzu8m+VfZ3ZD9EbTbzUTjX+eNkP1l4G137U9ne1fWe0Xm/6ti16s9WCyX7
hCvUb6TWQP1tdf4Qje+g8z8t+9n/0DVuEO4ve238iOw7a3xj4Xoafzb+Qfbq
XFv2hvr9m4UHCdcR/kb2icKnCe8g/LXwVl37e7UJuv4YtVtkP132urJ/K/v7
wrcwn4SfFt6isZvVbtbY0Wrd1f9GbZb6d6mN1/hTNb6mxn+u8V3U7hGerfur
ovu5UPauwluE35btGuHjhato/Cf4A7UFwjNlr6TxE2TvJ1xL9i9k+0u/cYJ+
70b9HaF2veynyF5D9s9kv1q4j3Al4Y+EvxJ+UPhU4ea6Xk/h7YXf1fXPl/0D
XeN5Xe9x/V1a9NeqrSz5WDf1D1N7TP2maqv1vs/V3wFqK9W/LvW3vFD4I/Wb
6lgT4Ya6/nm6fle1pcLzhavq93eSvSH+Vfgs/JNwPe5f+AzhY4UvEx4uPI/1
qPvdSfgN4ReEm8u+l/BuwiOE98DnCTcVHi58mNqjwguFq+v3ntW9P6O2ouRn
aKDxdWWvLvtgjf1U158hfKLu/Tm+h/5+z/zT2HvUv0D2LsJ/avxbsl8l3Fs4
l22j8I66Xn2+j+xnCl9GTMD/y/6+8CXCR+E/hd8V3qjx/yMeqV2i/vmyd1b/
fzp/g+xNdGwX4QbC5wrfJrw1sY8fqf5uxFv1d5b9AtlH6vyjhUu6/nvMHf2t
pXuvrbYQn6DxzWTfReMvlH1X4abCOwoPFb5c5x+De9fYD4Sbyb6HcBPZhwnX
i54vUfg04TXEKPUX6djnOneI2oHq/6Rjr8t2VO44t1TXa6L3P5t1J3szHVus
/r9q8/C3+ibNdO4o4T1kq6Z2p/r3qj3E/Qo/qP445prGVlX7XMe/LY7R/5I5
r3aJcKXi+s8Tg/iewuvUX6P7P0P9h3V/LXQ/01lnwj10vV0y+zx83ylqn6pf
iuYy9FtVeE4zt4epfcw3TB0vWQPvqb9V4wfqWjvqWrto/CYduw5foDHP8k7V
BgtfoPYhPkFtpPqb1JbwblL7nR2K511CXFF/J7UhXJ97UbtGrT/rj2fEH6m/
hjkLTxHuU+BfdT9/Cp+le/pT/bH6u63aJ3AYjXlaY3rqb6+S729k6rm4v/Aj
6s/X2Pd4dzrWjfvI3J8Ij1B/hf5eoNZItljcD799nNpa9ZfKVuZ9lDzPH9Pz
1Fe/stpQ2YfL1lvtMuFr1Wapf67apSX70JvUH1r292ceXB19v8/ADSt8v/sK
/y7bBHy42ijhjTpnD2Kh8BElP+8l6n+nNr7kc3i+R/ATJRaM4oXwIjipjo3W
oSfgjmovlxzjieEPsOb191rhVbLdLXxRsI9aJjxfeITw5YwXXiB8sfAVcATh
+1hjwlcLP545/j1LLBfeJLxE9muDOeZq4YfwQcLXM3+EK6s9qfFfENPVr6T2
hPB8tVT9qmpPqf8mHFTP87DOHxPMudbIdr/wlcLXCD+Z2X+fx3rA5wgvJmbI
Plb4aWKF8CjhMcJPZR7DWOZ+S73/hfg02a/UsRWZ18M5fB/hB3T8UV3/W/Wv
Yl1r/Dv6ezYxq1iPD0XzRXhjM9nf1t8hJfsIfMV9wVySMXCax6JjzRvq76nx
V+vvpsTX5Nqsa9Y31zgLrFaj5DXGWntK559ecgz8jW8rfFXJvmOvCq/P81nL
xDD8Dz5c1xwlvDKzz8R34nOPzexz8b1waLj02mj/8Ijwc+rPC/4tfvOt1HiQ
+qeVHIPxR/gCfMIz6j+oedu+7PUzUW2C+rna14l90mrWsf72VbuBdyJcXW1s
yX5id/gQx9R/AI6gdgVcSec3yry2tha+gzXGGtlJx/Ysee18T86jfl0da5XZ
f+EbOLZZ/QY6NlX9XWRvo/5c3XNr4Q5q30WvL3wHY35SP2jMIyXzh6j+V9G5
4FPEi5j8l+y0KZvLtdb7/1LHXpX9efyj+g/LVqVs3/BAEUeIJ+RPP8L/Uuc6
09R+SZ3zgDneQNf7ITqXxEdujvav+JK9dc19dD9/Ci8oeQ2xnk7R/fysseNS
+29iUgeNvb/kWEWjv0jtb2KLrrlQ/a3qt9H4eRr7TuGrDi35+qzVjfgcXWtR
6jz2PrW/1L9d7R7G44My5zhw/T3Kzn3eLztnI1e7HH+tfhe1R9Vfrjai7G/B
++a9f6x+LbXFutx+wverf0DZffzedN3v1/rbTtduq/v9Xb93dMnfiG81RGOD
2pW8E3iLjv2dmC9lrH+Nr6v+ssLf3JU6L+GeufefU3+Lgfig1P6JsfgsfNfO
mef2H2rt4cZwWP1eDf3GleSCOvaKbK+rbZ85xyTXJMc9iLmnsaPLnpPkxOR+
9cpeK9OLOcPcqaGxe+v57i77HfFuiEEfRefr5O37yP5u2TGRWAiH/s/fJ74H
7mWNbDXV6hRrrrmOfViyz2ms/iQ9YxfhzryT1LnqMLWdS85ZW+Czy+Y0cBv4
BXzi75JzrZbku+T4Jcd/xvznL8s+F84L9x2pY49wbzo+smyf9W9iTQFtgZz8
4MycE+4Jh+4mfCdru2ztgJwfzgZ3I2fvlPldstZZ37xTcnBycTQTtBNyenJ7
NIxDMnNyuDmcuWtmzgx3JofvklmDQIuoKdwxc85G7gYnPiyzj8BX3K72WjTn
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
1o7IUclVO8h+ROIaMvW8hcJdS9YcyKf/D94+W9Y=
          "]], Polygon3DBox[CompressedData["
1:eJwt13f8zlUfx/Efrt91Sdkpe4TsTbL33nuTTWYyo1R3Imkno0QT0bxbKikV
GuJuaKE07qZVGrdS9/Pz+P7+eF/nfF7nfc73XN8zvxXGzOg7PXdWVtYxyqaS
6ayst/LIU0bcDuyH1UplZY3DpmBPY8WxPeJceZJ6bfzkopYa20bpXEmDZfn2
8xSmc6DO2FistfbmYVdhe7BBWD1sEjYD24aVwfaJC9LZWCdsHNaGbz62GHsT
662jd2GraDf2NzaGr5V4Lt+V2G5sNNYSm4MtwnZhA7G62ERsOvY8ltLe++IS
VA7rjpXne09cjApgXbGj6t3gv15Ny/zfY+JL+FpIZ/Mt5HuDrzT2rjg/5cM6
YpWivjp1qQmVEefx3LfjvVNeelNcSt298f/pLHU78A3HLvaMGdgcbAf2svx2
Wofn1d5l0iF8jaRT8Vl8L/E1xc6IG1JTbA7WDivD1x8biq3EmmB/iRtQE2x2
9Beb4r9WolP8pfNmZTXD/uZpRM345vK1xUor74cNwe7EBmP1scnYTOwFrCdW
Dfvd/9wqfpSaY//wXETN+eZhXbHKfL/wPSh+iOpg/+UpQ5X4RmG1sW/Epaki
NhIrgb0pzkOyWW2xXjLVtfeH9h4TP57z7t+J8Yn3TOPErfkK8HUQd1P3er5h
WGNsOjYbexmbgnXHrsNuxD7E6mLfistSZewSbIA29/Htp13YGexb+ZT3OZ+W
GrcfxOeru1u9fzBhVmu+8VgHwSL8WuwdrAZN5tkec0rdbTGP+TpJr+K7Dn83
fNgX4vPifWGDsS5YRb6f9el+8QN0AfYBz9/aLMLXI9rHuvBdjV+P7ccmYZ2x
xdgSbB/WB6uJjcUmY09hPbCq2G+e8Yh4C43CmmGz+Obz7cSqYYfFRagUNhBr
j5XlOxprW7yKqmAHY/3F2uTrH2sfq8H3P74nxE9SG+xcrBtfX76bYg3SGv+r
GC33rk4qH8HXRDqTby7fKzwjsabYZdg87FWsJnZEXDzGExuCneBZqZ3V2puY
O1m/1fk+5zk35iDfIKwqdkhciEpiA7DO2AXqn9TnDeL7Yj/ADvDkjvp8vbBu
yufyvYYdwgrHPMPmYa9jh7EiWDe6EDul7GH1NsaakZ+D7eQ7yFco1hB9JE7F
Pob15rsQ+zjWRswPrE/MDXVnq/sq9hlWMJ5LVbBflW3i2UznYbt4zvj/kqxW
WDnsP4Kisd9hXbAOWDl1j6m7Vnw31cK+jvGmC/hGYB2x8nzH+e4Rr6MJWEfs
Sr5/8e3F+mO1sfHYVOxZrBNWATuh7r3i9VQR+zA6Fv2R9MSGYhfxTcMux7bH
usTqYBOwadhzWDZtM747/bdPpKXEjbTdnO9avmV8r8e5QLN4xlNJvi3Ki8bB
Ke3I1112AU8h7H/iVtQem4mtTCd1nsLu4b9JXITvT3Eb6sg3i+84PiHO1Dhr
+FeIl9Gjyh/guzXOIfFcmi7/GLZTWUb8He2QL6GdkvS9eDutx9bwfcj/cpy9
9vKM8he1vzsuBPqRl77iqUZ1oKHKi/G+EWOhXthaxD7Ot1h8P+VXPx/PEtqg
fC3vDfj14gzfl+KqVFvZMHULYn+IW1KL2LPE59BJ+cbB+C7ly4/9LL44vNhk
rAJWTNvdsR70rfhyzxmC3RnvlO8rvovwttgC7Ar6S5wnzlXlU8NLvbAZWH/5
FTy3Kzuo7mxsaKz1OFuxr2O8scHYHdjd2JfY8+Li/vscL+WXnL041nWs75qZ
ZK9dJf0l3g3PcZ6GtDfOmOBxzsb80N6UmH/YJzlnUZxJb4s70yTtPCl+g++v
2GOxRdEXyqW9Nelk7scaqJFJ9pm7pCfwOzz3C55/Yt6kk3f/e4xFjG/MBfHZ
9KN8vTiD+cZo5yzeV9Q7R/7sWEM851Mmlbz3eP83iovHnMF6ivupuzjOX+ys
eL9Yf+zqnHE7DxuODaNbop/RZuzJ4jF8N/P9GOvXc8/X7xXSfelk74g9pFom
2SvulJakfPK91R2g7jWxLrGicQfCRmE3xn0SK4QNxIZjS+NcwApiA6Iv2LLY
S7CJ2BPY69hprCxWGBuEjcBuiL0OK4INxkZiy7FS8Q6xPthA7NrsZL3Guv0u
xi7uRZlkb4s9rnom2bdWxnui79QrR+VpX6wDdZ/z/6dSlZzxLYbnVqczT0/P
uEI752K5sE6xFrD58Z7TyXkV59aSOK/TyTO+zxnvGPeFMRaxHpR3EffiXxjn
Qtw9sdHYBOx2rHK867jjYuOx2+Lcwkpgo+LOhN2K/Rz3On39XrxVv8+I59EC
voLKdyk7KM6n7g/q1aVGvKNzzvk476tmkjPjjlg7MbfkR/KN5btF+cX0gXb+
Hftnzv68hlbHPSGT3B1ul7b0nGz55uq2U/cq5U3x3tiy2JvifIh7LNYXWy2+
F/okO1n/sQ/klxaIux9PQ2rAdynfFDotTtNn8hXoQv6+vAs8d63//pO+1aJ1
6WRNf5oztjHGM+O/efZS7R2JuxX/n3EHowfVSWcne/KQnOc2TCX7V+xjmzPJ
Phv77X34BuqbSc7+uAPUySTn9T3SAnwz+Q6LD8Ucxl6I7xn5D2iMspdiv6Zj
8qeoE20Wb4z5l0r2t7hjbhIPj3XkGYWzkz009tIf5B+MOy3f37EmeKbjveSX
6u/Nyj7mmYr1wJZgK7AD2FZxeW0v8v+PSNeKr4m1K78c+0NaIe6ndERclPbE
Nx3PQ9p5Iu7D2Dgqx9PCM1LKmilrq+xKrD52VFyJqmPjsXrYT+KKccZh47AG
8Q7ElakGNgFriB2PsaWa2MQ4U7BT4aH62DSsMfZreKgBNh17DZuq/5/GGNMe
casYN/n2fF35lvDlxd6Xn4Gvj/3D+2uEneCpQrWUTYp5j/0WMTUMf3byPRTf
RbUzyT3wbukaWk21Msm309pMcmeLu1vdTHIvXydtQyNSyT0i7hPfKG+HjcY2
Ys9iP2HtsTHYJuw57Fjc67Cx2Gbseew4tkP/xvm/B/CF8b0Sd2IqGmch31a+
L+JOp+4E5Y9jr2F/Km+O9Usl95K4n3yKtcaGxRmGraK09dIE64bdJl7N9168
F6wrdmv4sPexLXE3jrmNv0iPiPenk2/XBtnJ+ox12ljd9tjyOIvUfUvZnPgf
MRbYFuxkzr7RJ5X0I/rzStwr6BLsYfEzfEdz+jw87kPYfbQrk3zbxjdu/Uzy
7ble+kyspbgz8ryLPZ1OvkXjm7RBJvmu2SDtTzvjPh7j5BmPpZNvqfimqpdJ
vqHvlR7AT8vvTSXtfpROzul0KrlbxR3rUM6cqJRKzt44g+O7uiUNjP1CvNEz
Dmv7UfV7amdH3BFpq7gF34CYY3wP832ec79ql0r20thTn42zkk7Lt6YOfJfx
TYv24i6I3YR9lJ18W8Q3xuX4Z3E2q9eKBsX85NsU84Xv/0J3H1c=
          "]], 
         Polygon3DBox[{{1885, 1310, 1318, 511, 380, 1666}, {1713, 1226, 929, 
          930, 1227, 1714}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{321, 1, 309, 238, 1342, 16, 1356, 31, 1371, 46, 1386, 61, 
       1401, 76, 1416, 91, 1432, 1433, 106, 1461, 121, 1476, 136, 1491, 151, 
       1503, 166, 1517, 181, 1531, 195, 1679, 267, 328, 210, 319, 283, 954, 
       211, 955, 212, 270, 608}], Line3DBox[{765, 2, 1193, 276, 321}], 
      Line3DBox[{767, 3, 765}], Line3DBox[{769, 4, 767}], 
      Line3DBox[{771, 5, 769}], Line3DBox[{773, 6, 771}], 
      Line3DBox[{775, 7, 773}], Line3DBox[{779, 8, 776, 775}], 
      Line3DBox[{781, 9, 779}], Line3DBox[{783, 10, 781}], 
      Line3DBox[{785, 11, 783}], Line3DBox[{787, 12, 785}], 
      Line3DBox[{789, 13, 787}], Line3DBox[{791, 14, 789}], 
      Line3DBox[{322, 15, 317, 277, 791}], 
      Line3DBox[{1369, 30, 1664, 240, 322}], Line3DBox[{1384, 45, 1369}], 
      Line3DBox[{1399, 60, 1384}], Line3DBox[{1414, 75, 1399}], 
      Line3DBox[{1429, 90, 1414}], Line3DBox[{1458, 105, 1429}], 
      Line3DBox[{1474, 120, 1459, 1458}], Line3DBox[{1489, 135, 1474}], 
      Line3DBox[{374, 150, 1489}], Line3DBox[{1515, 165, 1697, 308, 647}], 
      Line3DBox[{1529, 180, 450, 1515}], Line3DBox[{1543, 194, 1529}], 
      Line3DBox[{470, 213, 414, 1187, 271, 214, 1224, 344, 215, 956, 216, 957,
        958, 217, 959, 218, 960, 219, 961, 220, 962, 221, 963, 222, 964, 223, 
       1192, 275, 329, 224, 320, 284, 1556, 209, 1543}], 
      Line3DBox[{374, 508}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1342, 1662, 1886, 1557, 1341, 1887, 1558, 1343, 1888, 1559, 
       1344, 1889, 1560, 1345, 1890, 1561, 1346, 1891, 1562, 1347, 1892, 1795,
        1993, 1348, 1893, 1563, 1349, 1894, 1564, 1350, 1895, 1565, 1351, 
       1896, 1566, 1352, 1897, 1567, 1353, 1898, 1568, 1354, 2077, 1663, 1569,
        1664}], 
      Line3DBox[{1356, 1796, 1994, 1355, 1899, 1570, 1357, 1900, 1571, 1358, 
       1901, 1572, 1359, 1902, 1573, 1360, 1903, 1574, 1361, 1904, 1797, 1995,
        1362, 1798, 1996, 1363, 1905, 1575, 1364, 1906, 1576, 1365, 1907, 
       1577, 1366, 1908, 1578, 1367, 1909, 1579, 1368, 1910, 1580, 1369}], 
      Line3DBox[{1371, 1799, 1997, 1370, 1800, 1998, 1372, 1911, 1581, 1373, 
       1912, 1582, 1374, 1913, 1583, 1375, 1914, 1584, 1376, 1915, 1801, 1999,
        1377, 1802, 2000, 1378, 1803, 2001, 1379, 1916, 1585, 1380, 1917, 
       1586, 1381, 1918, 1587, 1382, 1919, 1588, 1383, 1920, 1589, 1384}], 
      Line3DBox[{1386, 1804, 2002, 1385, 1805, 2003, 1387, 1806, 2004, 1388, 
       1921, 1590, 1389, 1922, 1591, 1390, 1923, 1592, 1391, 1924, 1807, 2005,
        1392, 1808, 2006, 1393, 1809, 2007, 1394, 1810, 2008, 1395, 1925, 
       1593, 1396, 1926, 1594, 1397, 1927, 1595, 1398, 1928, 1596, 1399}], 
      Line3DBox[{1401, 1811, 2009, 1400, 1812, 2010, 1402, 1813, 2011, 1403, 
       1814, 2012, 1404, 1929, 1597, 1405, 1930, 1598, 1406, 1931, 1815, 2013,
        1407, 1816, 2014, 1408, 1817, 2015, 1409, 1818, 2016, 1410, 1819, 
       2017, 1411, 1036, 1412, 1932, 1599, 1413, 1933, 1600, 1414}], 
      Line3DBox[{1416, 1820, 2018, 1415, 1821, 2019, 1417, 1822, 2020, 1418, 
       1823, 2021, 1419, 1824, 2022, 1420, 1934, 1601, 1421, 1935, 1825, 2023,
        1422, 1826, 2024, 1423, 1827, 2025, 1424, 1828, 2026, 1425, 1829, 
       2027, 1426, 1830, 2028, 1427, 1936, 1602, 1428, 1937, 1603, 1429}], 
      Line3DBox[{1433, 1938, 1604, 1431, 1939, 1605, 1435, 1940, 1606, 1437, 
       1941, 1607, 1439, 1942, 1608, 1441, 1943, 1609, 1443, 1945, 1946, 1610,
        1445, 1947, 1611, 1447, 1948, 1612, 1449, 1949, 1613, 1451, 1950, 
       1614, 1453, 1951, 1615, 1455, 1952, 1616, 1457, 1954, 1618, 1459}], 
      Line3DBox[{1458, 1617, 1953, 1456, 2041, 1843, 1454, 2040, 1842, 1452, 
       2039, 1841, 1450, 2038, 1840, 1448, 2037, 1839, 1446, 2036, 1838, 1444,
        2035, 1837, 1944, 1442, 2034, 1836, 1440, 2033, 1835, 1438, 2032, 
       1834, 1436, 2031, 1833, 1434, 2030, 1832, 1430, 2029, 1831, 1432}], 
      Line3DBox[{1461, 1955, 1619, 1460, 1956, 1620, 1462, 1957, 1621, 1463, 
       1958, 1622, 1464, 1959, 1623, 1465, 1960, 1624, 1466, 1961, 1844, 2042,
        1467, 1962, 1625, 1468, 1963, 1626, 1469, 1964, 1627, 1470, 1965, 
       1628, 1471, 1966, 1629, 1472, 1967, 1630, 1473, 1968, 1631, 1474}], 
      Line3DBox[{1476, 1845, 2043, 1475, 1969, 1632, 1477, 1970, 1633, 1478, 
       1971, 1634, 1479, 1972, 1635, 1480, 1973, 1636, 1481, 1974, 1846, 2044,
        1482, 1847, 2045, 1483, 1975, 1637, 1484, 1976, 1638, 1485, 1977, 
       1639, 1486, 1978, 1640, 1487, 1979, 1641, 1488, 2085, 1706, 1707, 1642,
        1489}], 
      Line3DBox[{1491, 1848, 2046, 1490, 1849, 2047, 1492, 1980, 1643, 1493, 
       1981, 1644, 1494, 1982, 1645, 1495, 1983, 1646, 1496, 1984, 1850, 2048,
        1497, 1851, 2049, 1498, 1852, 2050, 1499, 1985, 1647, 1500, 1883, 
       1986, 1755, 1648, 1501, 2086, 1708, 1709, 1649, 1710, 1876, 2087, 1665,
        1711, 1686, 1687, 1666, 1885, 2083, 1787}], 
      Line3DBox[{1503, 1853, 2051, 1502, 1854, 2052, 1504, 1855, 2053, 1505, 
       1987, 1650, 1506, 1988, 1651, 1507, 1989, 1652, 1508, 1990, 1856, 2054,
        1509, 1857, 2055, 1510, 1725, 1726, 2092, 1511, 1669, 1670, 2079, 
       1512, 2075, 1655, 1756, 1656, 1757, 1513, 1747, 1748, 1881, 2097, 
       1792}], 
      Line3DBox[{1515, 1753, 1668, 1754, 1667, 2078, 1880, 1514, 1688, 1658, 
       1693, 1657, 1744, 2076, 1773, 1782, 1780, 1785}], 
      Line3DBox[{1517, 1858, 2056, 1516, 1859, 2057, 1518, 1860, 2058, 1519, 
       1861, 2059, 1520, 1991, 1653, 1521, 2101, 1759, 1760, 1522, 2089, 1713,
        1714, 2088, 1523, 1672, 1673, 2080, 1524, 1659, 1727, 1660, 2093, 
       1742, 1728, 1525, 1699, 1776, 403, 1794}], 
      Line3DBox[{1529, 1732, 1735, 1731, 1736, 2095, 1528, 1733, 1723, 1724, 
       1722, 2091, 1527, 1671, 1682, 1165, 1526, 1694, 1661, 1698, 2084, 1869,
        1689, 1777, 432, 1749, 1788}], 
      Line3DBox[{1531, 1862, 2060, 1530, 1863, 2061, 1532, 1864, 2062, 1533, 
       1877, 2063, 1718, 1534, 1872, 2064, 1675, 1535, 1150, 1761, 1763, 1762,
        1536, 2098, 1750, 1751, 1715, 1717, 1716, 2096, 1537, 1740, 1791}], 
      Line3DBox[{1543, 1654, 1992, 1542, 1133, 1541, 1764, 1767, 2102, 1769, 
       1768, 1540, 1765, 1766, 1758, 2100, 1884, 1539, 1871, 2066, 1684, 1674,
        1538, 1702, 1704, 1703, 2065, 1683, 1701, 1712, 1700, 1743, 1771, 
       1781, 2099, 1690, 1784, 1691, 1778, 1789}], 
      Line3DBox[{1556, 1681, 1190, 1555, 2074, 1868, 1554, 2073, 1867, 1553, 
       2072, 1866, 1552, 2071, 1865, 1551, 1878, 2070, 1737, 1739, 1738, 1550,
        1879, 2094, 1734, 1730, 1729, 1549, 2082, 1677, 1685, 1179, 1548, 
       1695, 1705, 1696, 1772, 1745, 1783, 1746, 1770, 1786}], 
      Line3DBox[{1679, 1678, 2067, 1873, 1544, 1752, 2068, 1882, 1545, 1680, 
       2069, 1874, 1546, 1870, 2090, 1719, 1721, 1720, 1547, 1692, 2081, 1875,
        1676, 1775, 1774, 1793}], Line3DBox[{1697, 1741, 1779, 1790}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{765, 966, 1887, 766, 980, 1899, 794, 1998, 995, 809, 2003, 
       1010, 824, 2010, 1025, 839, 2019, 1040, 854, 2030, 1055, 1939, 869, 
       1070, 1956, 884, 1085, 1969, 899, 2047, 1099, 913, 2052, 1110, 924, 
       2057, 1121, 935, 2061, 1127, 944, 2068, 1291, 1292, 1136, 955}], 
      Line3DBox[{767, 967, 1888, 768, 981, 1900, 795, 996, 1911, 810, 2004, 
       1011, 825, 2011, 1026, 840, 2020, 1041, 855, 2031, 1056, 1940, 870, 
       1071, 1957, 885, 1086, 1970, 900, 1100, 1980, 914, 2053, 1111, 925, 
       2058, 1122, 936, 2062, 1128, 945, 2069, 1184, 1185, 1197, 1198, 1320}],
       Line3DBox[{769, 968, 1889, 770, 982, 1901, 796, 997, 1912, 811, 1012, 
       1921, 826, 2012, 1027, 841, 2021, 1042, 856, 2032, 1057, 1941, 871, 
       1072, 1958, 886, 1087, 1971, 901, 1101, 1981, 915, 1112, 1987, 926, 
       2059, 1123, 937, 2063, 1231, 1232, 1233, 2090, 1151, 1186, 1152, 
       1326}], Line3DBox[{771, 969, 1890, 772, 983, 1902, 797, 998, 1913, 812,
        1013, 1922, 827, 1028, 1929, 842, 2022, 1043, 857, 2033, 1058, 1942, 
       872, 1073, 1959, 887, 1088, 1972, 902, 1102, 1982, 916, 1113, 1988, 
       927, 1124, 1991, 938, 2064, 1174, 1175, 1176, 2081, 1201, 1256, 1322}],
       Line3DBox[{773, 970, 1891, 774, 984, 1903, 798, 999, 1914, 813, 1014, 
       1923, 828, 1029, 1930, 843, 1044, 1934, 858, 2034, 1059, 1943, 873, 
       1074, 1960, 888, 1089, 1973, 903, 1103, 1983, 917, 1114, 1989, 928, 
       1299, 2101, 1300, 1301, 1150, 1220, 1222, 1221, 1223, 1314, 1339}], 
      Line3DBox[{775, 971, 1892, 777, 985, 1904, 799, 1000, 1915, 814, 1015, 
       1924, 829, 1030, 1931, 844, 1045, 1935, 859, 1060, 1944, 1945, 874, 
       1075, 1961, 889, 1090, 1974, 904, 1104, 1984, 918, 1115, 1990, 929, 
       1226, 2089, 1228, 1229, 1274, 2098, 1275, 1177, 1280, 1281, 1319}], 
      Line3DBox[{779, 973, 1893, 780, 1996, 987, 801, 2000, 1002, 816, 2006, 
       1017, 831, 2014, 1032, 846, 2024, 1047, 861, 2036, 1062, 1947, 876, 
       1077, 1962, 891, 2045, 1092, 906, 2049, 1106, 920, 2055, 1117, 931, 
       1168, 2080, 1169, 1282, 1285, 1307, 1336}], 
      Line3DBox[{781, 974, 1894, 782, 988, 1905, 802, 2001, 1003, 817, 2007, 
       1018, 832, 2015, 1033, 847, 2025, 1048, 862, 2037, 1063, 1948, 877, 
       1078, 1963, 892, 1093, 1975, 907, 2050, 1107, 921, 1237, 2092, 1118, 
       932, 1238, 1147, 2093, 1254, 1258, 1255, 1317}], 
      Line3DBox[{783, 975, 1895, 784, 989, 1906, 803, 1004, 1916, 818, 2008, 
       1019, 833, 2016, 1034, 848, 2026, 1049, 863, 2038, 1064, 1949, 878, 
       1079, 1964, 893, 1094, 1976, 908, 1108, 1985, 922, 1161, 2079, 1162, 
       1119, 933, 1311, 1253, 1335}], 
      Line3DBox[{785, 976, 1896, 786, 990, 1907, 804, 1005, 1917, 819, 1020, 
       1925, 834, 2017, 1035, 849, 2027, 1050, 864, 2039, 1065, 1950, 879, 
       1080, 1965, 894, 1095, 1977, 909, 1293, 1294, 1986, 1295, 1145, 2075, 
       1163, 1146, 1204, 1260, 1265, 1308, 1330}], 
      Line3DBox[{787, 977, 1897, 788, 991, 1908, 805, 1006, 1918, 820, 1021, 
       1926, 835, 1036, 850, 2028, 1051, 865, 2040, 1066, 1951, 880, 1081, 
       1966, 895, 1096, 1978, 910, 1213, 2086, 1214, 1215, 1270, 1283, 1286, 
       1287, 2097, 1271, 1340}], 
      Line3DBox[{789, 978, 1898, 790, 992, 1909, 806, 1007, 1919, 821, 1022, 
       1927, 836, 1037, 1932, 851, 1052, 1936, 866, 2041, 1067, 1952, 881, 
       1082, 1967, 896, 1097, 1979, 911, 1158, 1216, 2087, 1218, 1217, 1219, 
       1259, 1262, 1261, 1328}], 
      Line3DBox[{791, 1156, 2077, 1157, 792, 993, 1910, 807, 1008, 1920, 822, 
       1023, 1928, 837, 1038, 1933, 852, 1053, 1937, 867, 1068, 1953, 1954, 
       882, 1083, 1968, 897, 1210, 2085, 1211, 1212, 1144, 1159, 2083, 1310, 
       1318}], Line3DBox[{954, 1135, 1183, 2067, 943, 1126, 2060, 934, 1120, 
       2056, 923, 1109, 2051, 912, 1098, 2046, 898, 1084, 2043, 883, 1955, 
       1069, 868, 1938, 1054, 2029, 853, 1039, 2018, 838, 1024, 2009, 823, 
       1009, 2002, 808, 994, 1997, 793, 979, 1994, 764, 1886, 965, 1155, 
       1193}], Line3DBox[{956, 1154, 1188, 1203, 1252, 1202, 1327}], 
      Line3DBox[{958, 1137, 2082, 1180, 946, 1129, 1276, 1196, 1178, 1315, 
       1329}], Line3DBox[{959, 1138, 1244, 1246, 1245, 2094, 947, 1130, 1239, 
       1182, 1200, 1251, 2099, 1337}], 
      Line3DBox[{960, 1139, 1243, 2070, 948, 1131, 1206, 1170, 2065, 1207, 
       1208, 1209, 1323}], 
      Line3DBox[{961, 1140, 2071, 949, 1132, 1172, 2066, 940, 1272, 1284, 
       1289, 1290, 1288, 1273, 1334}], 
      Line3DBox[{962, 1141, 2072, 950, 1297, 1296, 2100, 1298, 1149, 1171, 
       1148, 2084, 1205, 1264, 1309, 1316}], 
      Line3DBox[{963, 1142, 2073, 951, 1303, 1304, 1302, 2102, 1306, 1305, 
       1166, 1173, 1165, 1194, 1199, 1257, 1333}], 
      Line3DBox[{964, 1143, 2074, 952, 1133, 941, 1235, 2091, 1234, 1236, 
       1266, 1267, 1164, 2076, 1268, 1331}], Line3DBox[{1187, 1269, 1332}], 
      Line3DBox[{1192, 1191, 1190, 953, 1992, 1134, 942, 1241, 1242, 1249, 
       2095, 1248, 1247, 1160, 1167, 2078, 1278, 1277, 1279, 1321}], 
      Line3DBox[{1224, 1225, 1240, 1153, 1313, 1324}], 
      Line3DBox[{1325, 1312, 1195, 1179, 1189, 1181, 957}], 
      Line3DBox[{1338, 1263, 1250, 2096, 1230, 939, 1125, 2088, 1227, 930, 
       1116, 2054, 919, 1105, 2048, 905, 1091, 2044, 890, 1076, 2042, 875, 
       1946, 1061, 2035, 860, 1046, 2023, 845, 1031, 2013, 830, 1016, 2005, 
       815, 1001, 1999, 800, 986, 1995, 778, 972, 1993, 776}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Fo3+Dyy8tgs8ovCF1ilP70e6FTYhY/sd2UNCFnTX3I6aR+OthXP92RPzKJi2
BGWucCNxo8z6s1ahCBLhi5huZ2md/mO2hMtKFuw9stMO0DxN/p3sKasBDrT9
6hNMi0nkSVfJU2UiRHEDdRcv4eCqFJQu+TNx1lHv6RG6vyz75PrqE0lBpbb1
Tp0mgah1j+O9YkSYwLb83CrDwbnxSdmnk5iYsTU9vojWcdVyNSe6xnOQudB5
8poEJia0ZQ8l0valhag8Ks2G7qmE/eXxLJpftKkn0f1dXeFor/YUNg6u7Iov
iWDhoeSQJ0XjpNuxW3mJyRSGntscW3eRQG+4gYwbjfP5CxcrDvzkYMTTUpZl
IQnR7X0D+bT/+pO+KVYsoiDknIypciIxb28Fb3KBCIVDhhMWXmZj/tTrkqkL
WGB8ac1kfRZhft8k/8ivdPwXT9uwQozGz2Oq4x7SusBk3yHvPIpCnUA8ecZ0
AoVi+z/4RtHxCR1ZcPw9hWXJCz+etqF14phzlbfiRLigoLJRwpLC3Ok/I51n
0/t0RbJHyhsRYmwcQ1UtaRwoP+3vZMuCclHcCdA6Ll7Mqc5/FxuNOpNmnbNk
Icjy4Q1V2n7oZWzbVTrvOTUjfLbQebf6mfNMlc77dZmeAjNdCnpFrNI720kE
O6Qf/kjr8a2Wj8123GWjv2ivc9IkFrqujRiKpvV49j6VZZ+OU/giuWHz+04C
93RO/Kp4Rdf/8++Vk1dTeHIoduW9rSR0FMXG76THWfM+bF5xIAfUkAL7tjYT
kdFstSW07i5Piu6ffomDlbfz9hqsYmIR0RUaTdslGl+cS/Cm0PbhprRCDQHb
5SkaR9NF+NHyWun1eAoXqz0bo+JI+N2piyqi9VHg9z61A0kcdGc/OUgqMjGb
v1k9kt53V8hpXbf02DCtXjvK/BStI9q00/f8g/z8v9v+ZHCiycJkDmYanci1
V2Ci3eZtziF6XW+E+dIyPhTqpVODT1cRkD/ZkTCdjs/PqTkmht00b/TfZNs5
xMDB/Q1BI+h6a9hVLPtRh4MD+6pOb/JlorNsyZpp9L57+yrDb25xE66W2D3o
bmahup8/fwS93+PeflFdJk/zKL0P63Y9INEoM+BtT8f5hblpnlcKBTIuilFN
61D/0/z5q+n9UnZf+tdwDBu3Vsu+X6fEgpxiWtFeuk4gOd93viMFi7i6Cv4w
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
tLuZh0hYJOdFzHRm4wp/0a8Hj1nof5B5eF8gibTLzVG/T7Ix+YFha2cYC0X8
+fqtISTWcxs21+WxsctMNeANWFh5Oeu1SjiJEqWYmeHNbGTIGjYdHaT+V/fF
J7No4fstbKMDjlMPtqNGJ2V2iWErmpJ4kqszSJxp2lDoldqOyek+oV9/siAS
1tmtkUuiLr0tIr+6HY7z6m26SliY9kT+xoc7/337BtN0+0STb7TBIT9u2rl9
rVhf+D193msSWldv7dv7qg2vV9/cn6nZiqxMH8FWxn+f/sLk218krf86lgsJ
z6XjPdXoGA6IPiceRoIcqRNrMlInduxInVhh8n9QD+qf1ifhZb/Y3iVs9IrK
dq+i4q++58W3WtWk0Lqv/6Ae7D/93WUHUw/HhfJh7b4+f1QMA/l6edwWPQGW
ylXWGAn4iHxf/3ns7hbk/ny+4lqOAFi34czCfD5cooo/ycS1IDIqa3nDKwGK
D+YsP9HLQZG0nHIThRtV9i07fu4Y5Vcv3X3nzOUgc/HRKLYhHWdLd2qdTRSu
J1/aeG3AIQ68vh6en+vMQPz6e9qHUkmwzunW3fDigB1c2kN6UPJ241nP04WP
y1+1w1+V24Z8z65W4kB21C0L+yEGilj3N7NzSLwJVrg98SsbKpqyZuukmYhc
krnyYuW/X5+3NfU93hPZOLqc66GgzULhpMuuTGoecnYYu3HfteOI2eOu7yYs
WDl72Xx6QuEol+DeifHtoN+Nvylvw4JowhsxUWr9zhL1JGymsDHHRvXO8iom
DONlIu/R/nPr2tNTa4ox2pG1y3v8E/NWtHdzzYYoP+my6vYEtno7pt/dPDr3
HQvrjrHmR1B+qUohkZ89uR1h189eEOOzEMCIKvZh/H3r5d8tzxpOWVwYzccB
9497tE4yoFh8IDd/oeBvez/xru+i+c823DHq9PTtZGFv4C+BczuJeffMt7rV
tuGESSjN5AcLBbf2yyz48NftU3dz0fVPAe0wicn4EryVhf0PYyQl2//6e3xG
6nPGj9TnnPH/rM/5T7/n75KL6p/jlLhwMWA/2XXUDxoM/cclP15HouDhW4m2
6RSuXuPlr6RIxzKXvLW/KByyvSL602GKZ4Vf/rzURJkO0nWF2rEgan25u+mN
Y3OwSKPWUaSAjthBsd/dFD6ZtM7TiVVH4UD++KrT9+lYPXninpeRJG5sLyRY
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
x8+fUfWoYWLH6553dn9ST/j/AhdM2ko=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{378.13749908978843`, 144.81751375709015`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {0., 0.5954013450339348}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.0038225805893863`, 
   1.5369072285014655`, -0.25488443522757165`},
  ViewVertical->{0., 0., -1.}]], "Output",
 CellChangeTimes->{3.6187610232602205`*^9, 3.6187616300962205`*^9, 
  3.618772043186303*^9, 3.618772139716303*^9, 3.6187723268733034`*^9, 
  3.618773197762968*^9, 3.6188246420556507`*^9, 3.618824776699651*^9, 
  3.618828256588682*^9, 3.618836139227727*^9, 3.6188371065797267`*^9, 
  3.618858405158321*^9, 3.618858640189973*^9, 3.6188589521408114`*^9, 
  3.6188591981781893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nonStateVar"], "Input",
 CellChangeTimes->{{3.6187732644163027`*^9, 3.618773269256254*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"rr\"\>", ",", "\<\"z2\"\>", ",", "\<\"z2exp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6187732713562326`*^9, 3.6188246420856504`*^9, 
  3.6188247767296505`*^9, 3.618828256628682*^9, 3.618836139277727*^9, 
  3.618837106669727*^9, 3.6188584052383204`*^9, 3.618858640209973*^9, 
  3.6188589521708117`*^9, 3.618859198288192*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theZFunc", "=", 
  RowBox[{"Expectation", "[", 
   RowBox[{
    RowBox[{"polys1$1$1", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"lookey", " ", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618858796457426*^9, 3.6188588068973217`*^9}, {
  3.6188596141988726`*^9, 3.6188596225588727`*^9}, {3.618859657838873*^9, 
  3.618859705912873*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6188587336140537`*^9, 3.6188588072973175`*^9, 
  3.618858952190811*^9, 3.6188591983081923`*^9, 3.6188596987228727`*^9, 
  3.618912158394564*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot3D", "  ", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"theFunc", "/.", 
       RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "]"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.618859743286873*^9, 3.618859821121873*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["barrier", "Section",
 CellChangeTimes->{{3.6187722734373035`*^9, 3.6187722747673035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"huh", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", 
       RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "//.", 
    "lucaSubs"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6187726809983034`*^9, 3.618772681188303*^9}, {
  3.6188286895496826`*^9, 3.618828819378682*^9}, {3.6188290979326825`*^9, 
  3.6188290990526824`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEnXk0V8//+FVKSZv2oiSV0qKSaBupVBLZWoUkZIns2XeSfd+9FqFNZM8y
tihJdkqk0oakRFr9nNzn3PN5fc/7/Pqncx5nzjWvx52ZO/O8d+a5QsdU5cJE
Li6uFzxcXJPG/l/RcTRzdPQljt0ZteCVXQVmCG4MiZ9tifQs06NzTNoJl9Gt
uOUeoItuTp/rYtLeQjgXI/iC15XlqJ9lpSdyuIEuL290oDdCB1/4d53HhHcF
TdCqn2eBx8uXEe7icHTphk4Hit8jfHZWjVGFqjvmov4Bb7vx9bC5lA+UR8BT
ExeJCgn6w/UJz5NfPuk9VzDUh3DGgS1fd1uEUuUbCPeROfAq7G04pn4v4eY7
T9b1nojClB/CxX/HmJ+p8seUT/rvDuWm8tdaI/Cs/WCe61v/Uix05JTNripr
4hk4l3Mx99rj+sQz4Q7Jt4M7VhDPwF3urn1qveQC8Qyc8SZA4/wNK+IZeLpN
ReoDHRfimZR33Mt+NuBJPAO3dS+O/+R0jXgm16kQrHHxCiKegScd1HjkezSU
eAYeVh1TGTYvgngG7nH0WXlCexTxDNyibmFpKiuWeAY+cupNX4/BVeKZ1NNi
u6KTtAPxLJ8g3Nq4twh32XpotDteIZ6By8Tkna0VNCSegXOJeqzW/ruSeAZe
Mv/DyYkJ+sQzcIakwOmh3bbEM7n+5tfllsfdiGfg4gdznvf7+xDPwEXP+n4x
eBBAPAP3k97kcdkphHgG7rE/OnBjTDjxDNxNaVJsb3YU8Qzc4bRJcmp9LPEM
fK7l4u4si3jiGXhZrpi+Ha8n8Qw8yrb9h2WDC/HclLH09gv9XOySfHevnYQD
8QxcJvtejsVbY+IZOFfdOcbG5auJZ1LePvm1/wpD4hk44+qNE94NdsQz8Lqe
0c6V8h7EM/C22WL83GLXiGfgxktvCX+dHEw8AzdLk9mlYx1GPAM339ui3vAu
kngmvMnIVPZELPEM3Ep/wtV7VQnEM/DDGaUHl5vFEM/AfeZbvpp224V4Bm67
PbZmnY878az5r51nYJmm56sX9zoRz4TX3Z61+I4p8QycywUt+YNEiWfgLl26
xouvGxPPhL+QVF+s70g8Az+WJPizYbcX8Qzc9nni4cUP/YlnUp+pwTWbboQQ
z8AVVqp8U7kUQTwDP7lnroD11hjiGbjeqaZ90SPxxDPw7fert3V2MohnUv/+
i7euGkcSz8CT39nmbom1JZ6BqwyfTuza7UU81//zn4IHuCZNeVHnQjwDd7FS
ldDacZl4Bs4lKhj2WHsd8QxcRm7lcJKoKfFMrrOpQuXWL2fiGfiHszvnu20m
zzX6+iq+MpFbgohn4POGrK1NFMKIZ+Dros7f3qcXRTwD37Xz2OvFLnHEMylv
uoxvRIH2CTxPjH/WN4Mw4hO42f65J9mFpsQncPHsJeYRgz7EZ80/HolLIqNs
xda7EZ/Au9zqujYnmBOfwLnqfs6IcV1PfJLyzQNoUYsZ8QlcvFQ0ddkhV+IT
uMHCU+KbV/kSn8Cbcva/WOEaTHwC73ulIXTrczjxCZxvhpWuhGYM8Ql8tZR/
alFNAvEJnJWhYs2OZ5J2C3y7YIqmuCvtGfhng/vmmheCiWfgojYX3co8NYhn
Uh/L5/sVblwjnsd/hccus40be+283Yln4C5BR/25J1oSz8C5XNq8DVgbiWfg
JVPruDsXmhPPwNMNPyfrh7gRz8BH6qyPdC3yI56BM5aO2tx+GkI8k+vXylZ/
CIkknoG/c/USWHU8jngG7rXkQm66H4N4Br74m1eXYj+LeCb18bSrMlkXTzwD
P6rw4HZwuR/xDHyXoeKdKbnS4JPwj1tiFk7UCiCeu8b9j807ys9Wv/YgnoFz
JVRLt16wIp4JX9DuEntOnHgm19l59xH7lAXxDFx0Xs719BfuxDNwW98wvUA+
Mk8g3Mwlf+72ZWHEM/CoAlHL1ZLRxDPw6uHIpvmKCcQz8J9R7jETM5mUn8co
b8ULyc6sSBSU3bcrI5ZNPEN59/rkejuVaOIZeGHlfEu9Qi/iGbjwcZ8+Vrou
8Qz8zcj6oTO+QcRz+/h4goQ0TtUt3uNFPAPXvnXw3Y1H1sQzcK6+R0UTzTcT
z8CPXQoIuBhrSTwDjypySPqx2pN4Bs4t/ExmOVcQ8Qxc6q3F3VLjcOIZuHHq
zGW6z2KIZ+AN2Wpyk1YyiGfglxayHNWesUh7Bl7q94NP+ig9bgCfIdjY7m1H
r0eAi+3V27kz24V4Bu5imum6Zb4F8Qxcuc2vU/JtMPF8fvw5iAa+9stejPYm
noF35VWEOGywJZ6Bc5Xk/bzotoV4Bi7ENFHd1GFFPAOfrb+PLXvZi3gG/vCv
fu3wD9ozcF75jUcUCiKIZ+By4d+qmA5xxDNwWbOzrF/LmMQz8FfhJdrJo2zi
GbiWBbt6RT89rwAeYTD6NowVTDwDl7AxmSykYUU8A+/PFPaf22BPPAMvye2r
miMTSjy3jc/rUMlVj+y8bz7EM3Dtyr1IKfgK8QycKyxle33IVuIZeFejwqKh
ZTbEM3Cf2bysawXexDNwv/bhM7WDZN5LeFPah3ct06KIZ+CL3Z5ffrk8gXgG
nrFO7+/gEhbxDFxscLe7iwbdnoHvfqJqX783mngGvt/gRNe+8GvEM3DRNgHR
0Fgd4hn4+t+HFOwOuhHPwDdEKmT0xYQRz4rj6xTEEFoiOvWYL/EMnKupuHfF
kB3xTLhxhKUUW4J4JteZsr7jvrYt8Qx8JL+O0TT5KvEMXDHP8+P1T2TeS3jC
XLbbuZPRxDPwz5dKlgqWJxLPwFe8vXS6bwGbeAbupZh+VlUqkXgGvmQN93rX
8DDiGfjJ0bvfzr51J56Bu4x49Ohxy4EfwnUTuBp6rpP5MOFx1rdjqobCiWed
8XU30s69G3Pi1jXiGbjMq51R3046EM/AuZBnRmLmNuIZeJD0dJYL6wrxDNz2
fGSi4DFf4hn4gvB5No7vQ4ln4Jdszy7rS44hnoG/2dCosyGTQTwD32HtKzej
nB43gGfldGddz40mnoH3TLiYf64hkHgGXrd+Dv+AoS3xDNxMTSu+Mt6EeAae
IJN34gw3mb8Rznecz4N1LBJxxOWQjOKBGSlT/DnjcqirP29/VaEjZ1wOcS20
7J9SIckZl0Myxj16ct12nHE51MWnmaAXc414Bt50mc2t/oqsLwjf3rHwvvVQ
LGdcDimIVG6v8WASz8B/6zzxnbU5nngG/mHZYr4RyTDOuBy6nf1oSekVL+IZ
+NQcD6tDC3Q443LoWPbMEukOO8QRl0N1r007HusEIo64HLLbZmzieCsKKZzY
P3gopAnNEk3c26Z2H1se+t6V9zkBA5f71/7vYIHepMleJxOw0L/rPEUa/+4X
E69bdyX91BQWVZ9KpDfO0cRF3x4URbAJPzZ+HSQk4tQRqsTGFaLOq9tzOrCT
S8uR89zluETSfJHfFjNy34Ezssq5PxlZIao8Am7GnNLteNuErAvo8jb2D92v
kN8ly6uao7+wBNvZHLVRfxqLp5a84gsReUb4oF+S+/rD4YSDhwnlvGEP7oaQ
3wse0iffd3NlMMh9AW5VZJqmHcck5WE9+CkyOtpElUl8gjfHTYGFpT0xpDxZ
rxWerDqQzyK85x/3RvFPNXNbJZnEJ3C/XPnl6AztH+aTlfqJ5n9HaJ7w775n
IZaajZZaBawjCgiXrz8Z/GYhm3B4vrglCq+wZtB8/7g3NFTTtWpNNXhgEe5h
pyfD/swkHPp1vt51vmnnWZz3HWm3x67aburJed9RidtP1dGTfpz3HSmumfSm
70go4dCezefyp13eGAacjqsrzTZ4eeISZ3l8aAJapqJtTvoRtIfhGBtpnkP0
ugnaQ1rIp/k9X+h4F9xHdV4BgQ029H2HddPAjklC2gdp/zAvOldot+zbNBbx
Cc+XZZv37ezcT/uh+2/dCc+vxA/xUHKgcGTW30jSziFuZrfonfwQYpD2BnEe
6+6F87N4GBgfmikUIlKPIv5dPwnfVZbirtjCwl/d3hmbtHdiPs3tm1m4HMvw
tUeVSpojiiPC05+vCZNURBzlUdfKW7knxa9ylkdOJk///JwaQeoJcdRhLeH1
3lrxpJ7QX47OWPKKzYwj7Qc8uJfNvT6jlQH9na7nR9sjB4otyd8l973+zdqJ
uXtJPeE6QYuubYlwuEp8Qj3jds/LrFSL4iyPu4SXsuUSLnOWx+LNC0M+idoi
jvqgoA+J4o13/TjrgyxFsP934wgE40z0eL/DM3+YJWkuCCLtDXj30/Arav1R
2D7jlnR7TjNy+HffM7HHNbs1In5xpL3BeNv/RazGX4yOwwCXt34idNSWRY1v
jxBj/L4jhrbF4fP+bHL99W+0+Y4/LsCWs+Ttng/S4zy0f9srNoqsG3T7Bz6s
nRt5RyEeC/55cTvHpBF9Ne6wPt2Zh21mv3zL9Yq+Dvwu47KhGypWCeQ6wH/k
rCo6s4JBrpMzfOqV5pds/HOfjYDiVgapJ3DB3maGnWgCKQ9+8kf/Plg6zCDj
OYzP2zXTLn7+4Us8k+fajD0dxT3h5Poy/8aBdPxBbHnak88x5Pp8/37vTTwz
4s/JU410/yobH4dxp8UViz8OkeR3Ad+qrSurvyCR9Lvj/+5LMD6y10Jz0yA9
nkP5+SeYtiXLmeQ+kus3GIv9OMDCZf/Ghyco7R+3wcw/dd/fbmKT+3v83++K
R1cnPWK4fqLHbXj+PpN4cLl4Cr1+AZ56fLOpozGb9Lu54/cXLWB9SGmdSs9n
gH/0Nlw/EMXCK52dPNP6c9CNwWp15/oCtOCg7BXeFPrvwnglN01q+DJpP/cI
7wwd8azeAM+jW2iAqtf22/YRkWJQTxZ5Lrj/veg+vzyBzLuAL7qh8OT3UiZu
n7flk+zEEIQag7RqCsuR2YQlS3jXs0h7gHGSp3O3AP/5YPzsgl3l6GgraVdz
IlyFfmwLJ+0WnqfyuvcVlVYziH/w3FYTKPxFnUmuD+OtmOihU8dD/cn1oV1l
PvV5bqcfQtoPPPfTlLmjXm6NJu0N2gnfohrZi1viiE94nobV/xbqSoD3LDnE
W0XBTGMXX7q9wfX1I3+k1FnS61OYPxyfzwxPiqDXWTAfWP7M7NOtQjb5XTC/
ent8j0Xo60jSX/RPdTOV84rxUPbd8/yn4kk7NByvP6qNCRawkWeT+9v4PjM2
uaEEPUr/o5Pwl27P8Hu7VzbNOeDGovxUoAXj/Q7dM0p7IdzIJr93eHycQcOf
t+OTy6H+IcSDqK6hp2gZk/iE/j5rQ19N1kGaw3NwQZ3M6/3NieS+Q328PB82
FPCzSX1cxscZpHizdODrRxapj9G4B2SY9Gv6jmbSbkl9ml5UfC2IY5H7AvOH
mTaLU18G0L8X5gn3d88quBDKJvWEdhXdURbjdoKuPzw3Z4zOfPtHkx4/YVxt
X7HzS1YY3W5hPCkLavCY/4z+uzAOBOm//6SxPIn8LujvjXa3Lv3Wpj1Dv5vk
tKhx2w+6/cP76L7Ll3+9DI8g7QSe+1mvf1+yXp1AOPTHnhj3juvD9HMB7ssb
lxY7sa9M0q6gP4op3dH8HcvGEjdn142ONiLRxT9+LZfMxvLBVfe54+nxGZ4L
PbE7EoytGKQ/1o+3Q/xY2OL2UAP93g369Uyj3HWtM9hYcslhVZHD1ejQv/7L
QN0HV5pqxNP3RXa8POa39OJvnUTXH3hl6Lmijb8ZuGVo7772nHrE889nDLb3
1zYRvc8k9ef9N3/IxPKCFWeKR+l5Gozz/OF6j/s+M0j7BB5jpq6W9JSFv/yb
b9QihX/+XfHWP0LK2Yp0v4P5STGvCtesq/S8HXit+bfn39Lo+wj362dK6/Qr
v0OJN+jvCdj6ao5RNOEwf9725duS48tjyO/dM+4N1w267LWVYpHyMN8w1bDT
s+Gmv38AruU+yfHpvTjiAZ6/X6ZYF/rZ0fFh4PNQWc+KX0w85diNqybtDaj/
3/iQill7fqr2MOF5Gouaat6z9wpWoNrjLPMjTfS8Hdo/a3/MWuOPdNwDuBR7
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
kH3+PgOrnN2core5AQ03JFwokUrCO3wURozmsLBB2vUMv2dNyNtqY1oSXy72
mv/0qbwFA29TvPPKUb8ZLVzcXXVKIBezbh5ESpMYWOOj5J7Cc01I1N7kAnf1
PXy1Y4L9SAkDb8pd1ZI4oxrdzH9w3l2Tge733/slPtaPbOclKljEXEc5bTOO
t9aXIseAQwa3K1n4itvCLB+berS6U7blhlY8blibcPTSRRbmmX7G4DFvE9Iq
v1xdl5GJPygefJvBw8Rdg3rhEhn0/Hlk4uXNu2ez8UzHTdOy39Wid99lB0TU
XLFl9LPJB1TZOEw1oJ7vVj3at0RFjLmNgX36RjaJqLCw1Mlo+7KaFhSeN8Fo
xqYiPNtFVhQnx+Nvl2ZWexnS89I9q3f9fjKNhQvuKJ/uLR3z1s7ScwxOxSMq
0qionIkPhbda2T1tQD1xrZlffqfiPolX+WaFTLxvtIZxOLUBRf2QPb5X8TZe
FmpywmRsfE54N7Uo7Vgj8n9esPba19v4aGBXU9tY+8yLmj5cFPMUvaoNeTIo
ZIlTrvA6GM5iY+1Lqw06paNRXT4qNl9RgRqUqmM1x9ZThc4Bjuu1qtCK7TIx
90dS0ebzyz8qdI09H+q2rty5shAllYa0ZK+7j6wPrVDoG1vvFO1fnJOYUYx6
TpfZnLbIQw4vDpRrpLOx/6HE5kmJ5Wh3/s71rTvS0WWDt1d3jrXDz5s+Zg2Z
VaI52qHby5tSkFZeWt5RoSQyPzRoqvI6sT0LTdJSu2Tygo3NpZff+3S2iMzT
FuaNCPEOsrFudOnFz7W3ECMgIsfkeQnS9Pq8/c80Ni7+unNbrfIDJBJflfXn
8C2koTDHn291Ena2u7f7yAF6fc0270wXSWDhdFFHrQC7OhIP8bHe1HznGwsH
TL6ReLEU3ntmIM+AlF6XVUm4kqH1y30S/d5KuHnzcPJbNnZZfSLgWnArmY8J
Vd+VVZoTh7M+yn5w/UTH4eN4axsP6DDwgKGUy/FLY+sdJ5Pil5tK8aXb1UHT
9eNwRZfqS5uQKnTTpIB9TzcV1crGbg5qZ+MXqlYK1TdKkb6V8ap1YpmId07R
hneCSdhs4HimjXAbQjv9t7p0leG9nheLbr2KwSGBx9c+iWhBgiUzlvZfL8Zc
ZjZOod/jcYhhr6X162oU/m50l970ULSrKUL707Ox8dl28qkF5RVo4vVS9u7p
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
jgLxarSzh1GoPJCINojsPTOczcYtQTpL0syb0N+Q62Gt6zOxv5XWtqoiBr49
tLr57K+nSINpqONh5owljke275jIxqMzC/YoFz1FuD5BOI3fDm9Tsgnqmz82
n+m7YZG8mYH2C/w99jhsbJxcm3ltYCULr6xZL3oxtgXNm/OheptqIX7uMWHC
LK4EvGG/+ZpPtfQ+xzue3Tp2KfHYTuIs8+baGDS15IHekdkVyFFaoT/++9i6
Unq+1FaBAtTyrPKJ6Yf7SPqUvpq+PxuPrA3K+SJahkrTiyoO6GWhH+zMFoWx
dcqWjLt7O088RMPTegzxx+tIvdl+OlczGzv4ZV0J3FaK1jmXVLpWZ6Km9WHx
7guT8CN7J6vfra3ogaPbHZ9NZfizTstbebdYPAX77Nw9Nt9+25vVsL+5CK/7
5i3zVSEBj2p/Cn/tV40eyirLHRUNRwLvv4jqj61PpXcaLdDLp99Xpl2LalcW
S8ILZJqM+uXo36v3cauMiU8CdrOJe823rZq8NzSNPJH4+j0bH+qb8LR1qAUN
9PZGKImW4MCoP6+/Hxhbv2zrm5r9iv6exNBoLfuNCBOv3luJzZ1qSdxgS9Zm
3l86bBz3xafl8c0qZPZcJVlsbirybEvbcWPMz8zJwo/nVZeQuN/vI1WPqxYk
4YGLD5OvB7chYyFDjTPJZVi9Y+6bFfNicFPmkdTE3Hzyfkdgh4/NMo+x9VqX
qVqYTgJ5T2cyf/rk82PrmsBVXxX6b7eiv9YqWQ7xJfj7fSQsMTEO89dwTX6l
3op+7vKN5g/BOOydh3oXIw6/WlKVsNCJfr92SULXbcnmBHzw7M+O7KBqMt+o
2Bhl+Dtz7O++0FtyXewJiWcKrTGcOt2Mje+xKjrOepQjlljvK/aJe6hhsuHh
b71j8zQ1c0X/hRX0OnqVwvfesX4tdWhCxZQlbWS9LKgT/pF/QSwedtw4bY8t
/d7w9sCcH+1n47BLzdm9Ca30+v36kYi1m/ew8G/3ivTBH3RcJWBNmey6ZCZ+
gNjT0+aXkLiBWojZ6doiNnZc0V04OkrvK3834c+ErYKGiHrfRO/Tny5/4IPr
QcKhvEyOoHrWXXm0bfz9LCk/PVN3oMb5OAYO5X2PvkjL8D2FhcffT5Hyv7fl
TjiobUw4lE/rmKOjtNQMP//3d6tI+R3TEh6ollgTDuWnpBqf/Np4BYuMvz8i
5fVstHk9jjkTDuXF8s+nyFe64jX/+F1S/qF58JrTA3CegE8h8FbqPAEoD9c5
vSxYOI7lRcoDt6H2xS8dL0++u/vUpWrs6+JHOJRX/mbll7ghCC+j3n9B+dFr
pw8q69Icyr9P5pN/GBuCW8c9kPJX11w7edaH5lDe7hSb58u0cLycej8I5eeV
F1y8eDuMcCjPx7fjwWLbSPL+HconavbZWdVFEA7l44vr3GTfReM26n0ltT7F
Yj8F/Fy/RWGH8fZGrnNasPBZANOHtEMYlzZeF754TdqEtDeyv/7cF12XjqOk
vQGX/6hqEhGuQdoP8GKhQ/vsp5iTdgKc/+DO3qD3DqQ9AC+QjDys2u1O7i/w
/kdBgp1qV8n9Bb6G2o8P9xH4+pHS1z+WhJD7BbyytFgBNYaR+wJc51pBjse1
SOIf+F+1PKHqfTHEG9l3X89r/0LRhXiD5/sSEZEPX9aZEW/Ahbx0diR7HiPe
gMt7PBazZ2gRb8ATzjuJpHyxIN6AL3s3zWnTL7ofAVfOqu49M9GLeAMeaRW0
SIjHj3gDbkTtrwdvwGf9niGtNjWMeAOe8cJMKYc3kngDrlLUeGHRjBjiDfhg
vKSD3ax44g34uxO6kVOO2BJvsB5nDeUsXZZ/mXgDLqShIOsnoEK8kf3pgSuG
7qqfI96AayZnTW58YUW8AfeUNZ6q7+1KvAFv2/zXX1eIHk+AS60ImquTH0C8
AUfUfnnwBrxn9FRg2lA48QY87LuwygbZaOKN7Lv/3DvvdkAc8Qb847us1nXt
icQb8KRFepdTB0yJN/ieirfqsJL8QQvijexn3ywpb56pSrwB/6ZxVk24XYd4
I98zf+x597fKhngDPjOkUVlyjjvxBtz47mZxkz2+xBtwnXcHeRqyg4g34HOp
/e/gDXjVpOS3U99EEm/Abfib1ZKuxBJvZP/7Cu4KNDuRjG/Av+yYuTpOIYh4
A949kcfAO0KTeIO4unnUCzfrZkviDbj2FCGVk/LqxBtwy3XRmWHausQbcMH1
Kx6uy7xCvAH3eLUjdnKsB/EGfHj9hQYrDT/iDbhkYRX34MwQ4g14L7XPHbwB
T+H5uvN8XTTxBlxrg/eJpRnxxBtwv7UB+R8fMog3si/+47qSnb99iTfgA2e+
hM9mrULgDd5L8hqa5rDOWxNvwF1eTDu959Vx4g147/cmfp53F4g34HymJ24c
T7An3oBP28zqbhLxIt6A+9yMsnSyCyDegE8KOThxnkEo8QYcU/vWwRup5/Q9
IUVFscQbcNlD0qdDPiQSb8DdZJcEZ05jkecs8Okhcz5tSowkPoEba0hLIC1P
4pPss7hdWuk5eo74hHl+xM6JPbVfbIhP4EL3Bs+J2J4kPsn3hA9mm18x0ic+
gTdl+Pu6XXUkPoF7uEzbmJTmTXwCnzpP79q+sf4CPsl19KtGJUrDiE/gkdT+
dPAJ/Pws3w8Lb8UTn8DDMqzSuGfT3w0C336yZuTlgjDiDbhOYuAxTw9n4g34
bGF+WSuVy8QbxJd+8oUL/nK+QrwBZ3h3XOSddZp4A/40RKG+d8CAeANe+K3c
KM3SmXgj+9PrzGwspK4Sb8DrGpxfHDwTTLwBT9h98I/6kgjiDbgRtd8cvAHf
Nbdlj3lUIvEGnAfXbioRY5F2CHyhX+KIRDn9HSlwnWXe3EEBQcQn8D7P21J+
8pbEJ/AbJuWMNdevEJ/wfZdT5xrlNTPtiU+yr1yj6vLA9TPEJ3AdbR9xTWtD
4hN47VLH1Z/uuhCf5PrL20pky3yJT+CRwdEbFAxDiE/gZnOrflpbRBKfwA9Q
+8rBJ/CA6cHy78oYxBvwHHvxYzsPMMlzFvhvE+WTZx7S82rgix65C7nw+RKf
wD+1hexdvUKH+ATO1Lg/2vfLhfiE9d3E9PseqnEOxCdwoS0ZV1p2nSU+gb/e
UBFY98uI+AS+Y/eihe7XXYlP4L8vIV5+BT/iE/jZY5lOx66EEp/Ad32UG4ms
iSI+gS+i9o+DT+AOM3KtQvOZxCfw1BY3JfeAeOIT+L0SnC3tFUp8Ar+s/mN7
1y834hP4B/0neZuO7EXgE7jRxLmb5FZ5Ep/w3Uuy69E853VOxCdwmamxroWN
msQn8C2/RvtlXU2IT+AszUyexbFuxCdwi+Jk1VfN/sQn2d8968lTNZ8w4pN8
h4Mrh/JWxRCfwPupfeLgE7jRrA6GTDqL9Hfgm2/PGHIfoNst8O7spL+BIVHE
M/Dq1RqrxX0CiGfgfuUdCS4tNsQz8I9+PwSLKw2JZ+BSqUaaiYpXiWf4ruaT
SlfvrTxn4hm4z6Wy/crbtIln4D8f7lTMnmJKPANf5qI4khbkTjwD/zFjZny6
ViDxDLz3yTuhU5HhxDPwtjC5wWdOscQz8NfUPnHwDDzyyoywb1q0Z+CrKgZ6
ZMXiiGdSz/DKO3ERocQz8PU1Uq/6JnkRz8DP5wXHuhqeJ56BD7x8ufpkvC3x
DJxHscJ/xMafeIZ9dnIh+bOM2S6ccR4UdSr3UAXXOc54DlryuKBlrpwZZ9wG
OTE/ftjv5cEZn0FZaTsGsWUQZxwG3fLjMj+bHMEZb0Esw8qBn61xnPEWdITa
J84RP0EuvWw7lWMJnHES1L+pstfRKoIzHoIKP9Tlq2zz54x7IIk366RUR+04
4xtIc734jN93lRF4Bp7mcC4xtdeV+Fwj8WDQo7cUJ/ysetodfZH4/Eztj3eJ
Xfl75oeDxGfOnNXPypPLcExGiMbOJDoOBvuGCn32j7Z9u0R8HvjsVTxRpxwr
qn1bvHC7LfE5g9pfufDSDFVvJRd63T3+3T7+/Yk3ZO0pj/9vPEqUqv8lE/M0
06+BxCfU/+7hqQI1gnQcKZeqP9NOIX7rBjpeBPUPfjT5zKU1dFwI6u8iKaHu
wBdF1kFt9u6F/H+KcPGz1rtvrhkTbwbUd+Auct+nt88/Qrx9lzzgHWSB8emj
vEuF7tJxnn1UXHSjd5t21IXLxBvvlUlreaxK8JbBstvZ8vbEWwP1HXhAr8xQ
oIkb8RZ9XHemnHgpDozm9Tea7k28HaHiLas54jzPqfoH7/DcEPIumHiD+gfo
3l+2T52O80D9A27rKlSlRRBvUH9vfo+cZYO0H51Ah+ClK/NwrcOfBbtSTYkf
2Dcq86V6aco+ReLHVX6PRnR0Pl73wfUZ9306ngPff+6pnilbcYyO5yRO5lqz
cHYB3h0SjNQ0nYifjVTcW+SiZWTUNQ/ip5DaX7DyAK/PnSI6Dtb8H/EcXar+
lnvq3fsaQ4kfqL+ts/GK+350P4X623Y6/DotHk3mOUXU363NvOB6ZMCZ+Omj
zpnoDZyD5HXouA28j2AoPg3Pz6PjXdOpfUPGpb8fW+rQcZsYav/XjBkHVg7s
pOM2a6l9UgmLxC/+yHMhfvKo93p571KkmTfoeJdc0/3K+Ns5+PHANPfPpnS8
S+s/4jZwToaSrOBzuVI6bgP1PxuzTGRzRRTxA/U3nB1+sz8jlvg5SP3dzQZZ
wtHxNsQP7Os5fi7J3HrAnPiB9wJdK/PjE5XouNa6f/f9Fu4OkBJ7/56Ozxyi
3sN2KNlzC6yh4zN6/9p5GhY0iLz3UNaN+JGl9m/u0G1vv1FFx7Xq/vW7dGwc
N81ps3Ag8dP4H/GZAar+6+UuijPT6PjMDKr+KLtudeqvGOJHjKq/muydU25b
E+g4DPV3t0tP8XkSfon4mUztLyvesj2Z5UTHYWA/GtcP1nXPd3T8Soba16Or
Yel7ykSXI+7HxIUhGW8P8tNxGPt/95GN43P//oqsoeNXUdT3My2vZjrde0vH
r8bfF1/Hv9kehdI9dPyq7j/iMLxU/fnks71+xdJxmP1U/VfXua1dvpWOw0D9
he7rcF87Tcdhoqn6qPunrYtzDSTecqn6zNx/MLy+6wzxZvuvPvpYk7v6WS0f
HYdJp973ddX63TFypONXKtQ+u+nr0j8+/krHYaqp/ZVxze8rLf7YEW8y/+rv
jxfz6B3QP+5JvJ2h3vtraMkKFUzyJ97Gv0cKw3VXuO+f3hfCEYex/T9xGAZV
/3dHJ3SoX6XjMHlU/af3SqyPMKTjMMep+qsXx/DrhjKJNw2qPjFcRQmJ3VeJ
tyiqPsdufA9/mbKNzBNSxjl63qwx41cMHW+B/b+MJOts5XkniLfT4x7Q1u+9
h/bY0vGW19R7Ro9Fy1ITPzgQb8bj9UTRx58ESHbR8au+8d+FBl5YlZWvCCTe
uO/984ASlDxy7ePo+NWL/4i3sKj6P1Q+ujXdmo63GFD1H3GziJxSzyDPfVOq
Plw3zBpaHSOItx6qPi8tHvOzD3oQb/3j9wWd9luRrn36PPFWPN4OkXzKZ5k1
a+l4C+yPk7HTLtp+i45TuY33O9RasSY1/Q8db9Gl9h3sP6N29XGjE/EmR+1X
XZIs0TbZ0Id4U6be8+64o7blXSIdpxrfNxeDLq3izo4bouNUz/4j3lJI1Z+l
Hn2VV5eOtyRS9e9p/fje+j0dpzpI1We9qVin91AI8XaMqs+h2swZR9Udibd5
VH0ezCnLeT1Kx6max8c9VG3rZqmaa0e8wX5GbSX5B4KydJzKeHw8Ryoh53lW
uhtyrFvvoCVKB7Lttei4yubx8RaFDsWuaB6k41TzqH2F3MaX3HvS6DjV+P7B
VCT1y/1ekWIEx3rq/8ZVmqj6l9z+anovlV6fGlH19JpmsdxCmo6LbqHqk2ZY
02j6PIB4m0vVpyGrbkh1qTnxNkTVR/OsxfxwFTviTX78eYoU5eenOh+g4ycF
4899xBCReDLpGR2PEhufJ6AGrUS98Kn0++s46nsGX7Ou63PU6fjJzPHnOJpz
YJJRkuM14s2Z2kdZvc6nqb+Ijkd9ob6fml4/Kb0zhY5Htf5H/OQQVf+7aYti
tRLp+AnU88BXnv6v1olk/gn1rAjV7zj3Ipz4hHpO/L639+kjb+IT6mltkmNj
5HmG+Byg6mmvxn+frUKvj0rG52+of2lq+61GR+ITvt9g/BRs/mhKx6OY4/NS
pLKh/QFPAB0/4af2BX8Nto9IkafjJ+7j80bkH2aYZcFDx0++UftVAz8yVw3W
0PEovfF5KWpJdr8zyhVNfB79j/hJMVV/TbUnG/RD6bgo1NOtfm38qB39/hHq
afOueYdMTDDx6UHV87R77kTxfBfiE+qpMdL83lZHmazfL1D1lPtp+PG3PR2P
ih1fp6A9n3bMajtHx0ngvIi6pzwdT6doEZ984+sg1PlzwSq7uXScBM6h0slc
4L1bho6T/Bhfp6Bp3fV/ZIMDiE9D6twGtdQC6+/tdDzqxfg6CLEcJt0SOh3z
/42TUOsspCxo7jWpio6TQP2VRVW5fl6n5y3TqfrP7Od/0pFMf7cA9Vc19xHf
ne5LPP+k6q+1/LSEkLIF8Qz1F9qUwd64ypR4bqfqP5dRvuj4dToeBfvfDY+t
d49yo+Mk1LobPWyw/fpckY5HUetctE53ray1ghnnuh41NGXYNG6j4yTUOhpV
RMetvDqDjpPAd4yC+s1Vv3rCic+Y/4iHNFL13FOY9yBiBf18ge+gFoeJTtg2
QL83h3oqPJFw6LkZxLl+R/cXXuj9IeZGfEI9Rbvmjc2C1IhPqOfUjIKLQTV2
CMonUOvKoRq1BgnRBHIdF2p9Z7Xe6I3GB5prUusIw58rrN0s6PmDKDWfj59e
dyZulB6vznKcpwf8DAeH33uEep4+8NfMXF7GJlySel7M6i9LUGxgYY77jgP0
+J6IeuiTdtJMcfkUCUsFcR8y7kH8J/5Tzyzbjx70ORVU/OG3sVm1Pn8s4UNU
HGCn2fx9PU9jaZ/Uulh0xzuTr4F0fOAgx3l6wA/8B+c8Tw/+rh21HqkZ1Vea
pB1P+G5qXfCo3ldfwYb+HoDznD3gb6n5ZwJ1zh7wzxwcPDtR88C7ldGzJrnQ
92U29Xx59+mTyyRlBmm3rhznCQA3pvqvgJ2GoehWejzpoPrvleq+uUue0Pdx
7fh9QfEtP7lVfzqT+0jFu9CCiiODOz76c95f9LK4+hZPVBDi+E4JfbgS0Jla
F8QZR8UztVpjnnPpkzgh7Gd/se53U+sx+nseeA/7hTrvDvyT73CwwuH+qXT7
h+98Ipdl+876HUc43N/syXHNT+8mkPZjR8UNqi0+rbEsDeVY32VhR91Jgafc
6HjdBWo+PECdhwZcn+KfObjef5SH+JINde4Z8Jkc56FB/cFPmGLKzGEvehyA
eFE2o7nIKp3u7xCfMaLOQwMexXFOGlxnPxUP2ZGWlsmUpte506i4gcmdb6+G
vtLvK+E7c6EE3sPtmfTzGuIPuXG+h8VEEgnfRa1Pvz8QPpPZGk3P26l1ol7e
FZ9TH6IIh3OEhjZKvD9xnv4OZyN1nbw7M6SkEd1foDyPpNp1xYs0h3VHyras
aTIWdL9YSM1vVyZn2kwzo5+n8N1vyQH7gfix/gv9xYCaV/g+rPxg3EI/R+Dc
FcuZ8tN7JOjrwDj/Vyug+Vo6va75+DV/cv9oGcq+K5O89hHdH6HfSc9xv6Ty
nb4+PEf4hHbMzFjPJPMH6I9foxk2w3f+73sWOI+XI76Nrl4wNu5Mpd8XwPNr
IXW+Gdxf6F+3q0Yzoj6GE55LxfEWUOeYAc+m+DyKQ3uD7wGOUOebAX9NcTj3
DK4D300pTuAxXrKU7o97qfhYHnW+GXBE8RyKQ/sh+SweH3/lvIbuRwFUnKFT
wsBEJJOOg8F3yH8VuxwW3aTHW3UqnrB+bb9gewPNb1LrennXqKr7K9jkd1Vz
jP/wd6G/KCm/fP9Lmh6v7lHxosxLd85Z7qT7aV/FeJzEjzofDDjnuWFwHWd9
iTvTerOxxmp57lMm9PUdVj75/t0tC9uqTwvZVUOvB0m+gzPJBo7ybOIT4vx1
1LlVwOso/pTi5HlNxdNe6xxQb4+lxzHDzPG40HXq/Cjg8H17LMWhncP8SlFp
VbnxGbo96FHvBVjUeVDA4X0Bm4NvgHMmqXOfgMP+LHMODt+rW1Ac6qlEjQNJ
1HlNwJUpzqY4+IRx4/0kAxEpD/r3HuO4DpRveN2bu83yBgpq+mm1SI2eX3lS
651pBX/S5ybTcba1pj8TJ+y5j3qunDC+fJEeZ4aodVAVdb4T8E3UOvE+db4T
8M0c5z4BF/+P8gc4zncCfpCDQ3uA7+qrDa60p/TGkfKnqDhMRtTp4aNq9PXh
+agoJWz6Op4ef+A5Pp06rwn4YYrzUhw8w3cy8tR5TcBfUPwwxeHvOnPMl2De
0kq9n2o4GNK1rMSFcNhHkCKSy3/1vBu5Duc5S1Ae3hv625y/uc2WjtfB+7Jz
svtN7/xwJ3waNe+tO9VydM5rN9IeknQy/K8fSkV5Nadcv4fQ/XRX8KBMXWEZ
fsNOfjxxOIbUxyNTa/JN2SzkqvK872o1+//031qOfq3P0b/AWz/HvBTKu8Uu
sNq4qRQrLP61b68YPQ8HP9LU+WxQH6UHyec2vM1FA6/3l37xp9sP57lkMA4I
JZ8NLuzHaHdF2+vvQnS7ClX/sEepPh0fNP00Lec143/nhzI+ZH4I3qBdfdM3
Vnvdw+aYTzqR8sCTOcal//pdUL6Hww/8LtiPs1W16fKpZtr/bOq98/kjwrnK
tbTnPI6/C/X/E3LK0Co8Fa1NPnEq0J325jjap77CKxu9cLgn/JgniXj74732
gurGEnSZJ3DN8y30730hv6Dz28UgvGRlvv86EXqceb0ywaKzi4X0jeamr52V
RDw3+scv/uCdiS3jF2UazqTXKbsWhCQ49jnjmcrn4rZNoO+LfIX2F8m9GXiG
/cLZxdz0vEW87O/AMuFS9PZogKpaC/27bkw7aKTDnYLeSn7o722l/fy5VHMz
JqAMs0xntHCtp9tVx+oLT5apl2LeqRYKLUr0eLizdeWfW565aDfj6K+qQjac
kwbzIpyyM/GUxB89cn4ycJe3mTEGZnReG8IrDTtsoun8j8DbXn85O7lal5zn
D/ygdIdA/XE6/yNwtxLtB0oidP5H4CbdKr8l4+n8j8D3TT2wddkCOv8j8HkR
S7PdDtL5H4FPSQ07NjyJzv8IfCh/Rt/FknCyPxF492Mv7w4H+vxD4A0do8LK
0nT+R+AyijF/8r5dJT4vUuOD6Vw7nrdGF4lPwu9Is7fW0flrgI8W8vmst6bz
PALf5GBrvfyPHvEJ/OWrvOd1UTbEJ/AXZUv++DxzJT6BP573zO/GO2/iE3iB
XqRA9aA/8Qlc7cW641ZcdJ5H4Ecm8yZM5qHzPAKX2/jxbfgMOs8j8N0nHm5Y
PS+W5AUA3uUj5smzis5n50bFbZb3qmWHPzci3oCft8K3/m6yJ96Aj6anbXml
sop4A75p/miAtPhF4g24s29YVN3zK8QbcOkHTRJlAe7EG3CpA1qCAuK+xBvw
mNffJhYYkDxBiHDhHd/180OJN+BROs6983jpvI3AI1kVL0tP03kYgWt9jZpr
qeRGvAF/oxQaP8XDjSPvRhbGZZvOyx2+xJGnIwtr7T6Q9SiQMx9HFh5NOdYR
vmkNRz6OLPzyjmeK6nkjjnwcWXjWVrPjdQIOxBvwwKoA41/7PIk34ClWb+8E
XPEj3oA3z0n4HtRK57sE3mFwOOq0eTjxBrwbf5MSmRHNkY8jC/cuYDz7lBJH
2hvwEerc8v/Nx5GF31Lnt/9vPo4s3Okjvpv9w4EjT+7Y313wK3vyGzqfmgEV
PxQ56unz6wydFwP4mcmPC8M+OxPPwEcTvnrL860lnoGnyPGVmESYEM/AE9uP
zKvTdCKegX94dChJ4ged7xI4b7LRngnlAcQz8Fl7D/bpyZF8NAj48rsnpY+K
RRLPwDcIGnptnR1LPAPfc82+cfEQfY4u8OsOcrO5TJjEM3DryY+CNh+JIJ6B
c23YpKqpZkU8A+/u0KnllvUmnmOo7wTa8sxfqoaSc/4JT9JLfX13jSvxDHw0
OGzL6Ac63yXwxJchbd6P6HyXwAXK5n7UP+ZCPAM/WDPxhUkane8S+LZe2/fS
XnS+S+CHzQa6dmXT+S6B6wzpP0fddL5L4NZ2Lxtl58YTz8AfOt96J8yk2y1w
np2/U2amhhKfwPewzjRs0TQiPoG/S6p+N4l5lfiMptbvYSLakrerzTnyMGqT
PIzgGcpHyPfqhZ8g+a1IecjnCP6h/KinZEfmg/Uc+Ry1d406/28+Ryi/q9Bv
5NhfM2hXpDxnnkcorx0x4aH+ZVeO/I/a/yf/I5SPri2cm3KeztME5b9z5IWE
8iaTCjcN3qTzkUF5znyRUN4rMbqZX4TOBwflMUceSSifstPGfks8nY8Pyr/l
yC8J5cta1VaoLEgkHMpz5p2E8l+ko9/kVdHnMAMfeHV4U8Y+Bkc+izAcabYJ
93LTeeXg+koc+Sih/O+mjN/Ka05y5KnU3sXHkacSyr832jI6kcuPI3+l9q4P
VP5KaIfxVFzo2O8d3RrSVqS9AXfjv2yqnetB2hVwmZ27owMQnb8SOJ/63DlG
m+n8lcB/7Onw1M+k81cCP9go7r64lsx/CG/ZKlty4Vsoub/Af//pLS6eQOev
BL7hYXjRwll0/krgYo+Wa0oF0PcF+NxD58SvPKHzVAI3yxVrP+LoTTwD5/K8
fcPQVYf4BD70myuKSyuI+IyjvveYaiC6M9uMzvMO3Gw4c/DAe0/iE7iLZED/
hw10nkrgYczjgiPydJ5K4LvmPtbVb/IgPoGzm3vuq7gHEp/Apyh4Tl2+mM5T
CVxyQ3hmmBndL4CbzLyuyfuQPj8E+HreQ9EeZhHEG/AQ4ZBpU7a7EW/AzyW0
7vn5ljyvCbfqkhBxCQgm3gyp7z3qGueHzEi1Id6A6zwfthFb6E28AXcRf7lv
nwCddxI4f3/0Wk9dOu8kcPf3efv0h+j8nsD/Gqn8OBBH550EvlP34bG23fQ4
A9xSY0+q4Us6fwfwk+ueOzuV0PmwgO+v2TgxaG4o8Qb8wtIvpi6vrhBvwGV/
tomiaySfDuHD5Qbpo0UhHO0tCzHQpI8XXtpytLcsdLJY+vfsgz4c7S0Lca0T
j47n3crR3rKQy46ObfxO1hztLQvVFCQL6y/w5mhvWWidyabw19bBHO0tC5k6
TI8O1onkaG9Z6O6193EyivEc7S0LXXlyru57HJ3nBbgS4xfrR2QsRzvMQvcF
xFokTQI52mEWUnxjH/3xxiWOdpiFZouZTJNd5MLRDrOQdUrcLudPocQnfGfi
cGsAFS+wIz6Bq7EcXIatrxKfwLlWufZ/H6F9Av/gJSSbGEnn5QTOHxQ2QX+7
D/EJXP0S32ZnZTpfJPDEMMVX8t50Xk7gH+8HBS8oovNyAo81+yh0+Qqd1wZ4
dmXkoJYa7Rn4l/7ws1td6Xw9wD8xRlKOZvoQz8CvLxdLTlqhSjwTD89MnLp7
SJ56wod96x7+FQjn6O/F6NjCzogFivYc/X2Me2HuF8m+HP29GJUINexTeS/B
0d+LkUbjecX1GbYc/b0YndR169I7eZWjvxcjF9OPNUvXh3L092LUcDt4Lfft
aI7+Xoz4hwT2Dc9ncPT3YlQ49/LlHnX6PEPgoQaOg2va6Hkm8JDd4otMDEM5
xoditGxV5RXdH64c48PY7/Jmvrs6+wT63/GhGH3xujToVeTNMT4UI9tL3OpO
ChGII76EBt0ef7rk6cAZR0JcS1ZG326m828Cf7c85XR+9RXOOBK6LmWG9a7Q
8zrgd8wqDfKm0HkhgfM8aLpcVBfDGUdC6X6Xd597QvsEnvTnQkThWTr/JvCi
fY9HA3miOeNISG9R+PWjKQHEJ/A4lTWRw2PjGEccCUVcaxdIO2aGOOJI6I2E
qcHaIDr/JvAfylKv/thHIir/AomPxe44qm+htQvxjOeDILznfeeltBM6OOJf
PoIawp8UqF6/LmiJl//LK1FOuP8kqbmWs5zxsX/5F7IIv7cqQIbJ5YmL/uX7
KCXxrhuH7pnfyg7B26g8LMCjTovNXD62foc8I8C9jJNuhGyMwiGaLzVEDtPx
NEsnwQNTemOwYpWDtUn7c8K/pR3u/TEagKeJLwnKMSEesGaZ6N8Aq8to2Xhe
DBLXOm39y3666Tn8YPy8PsLfatp1VNZbYqXxvBKE67ja/51k7YLTxvPpEK74
/+o687ie8u+Ph5pSyF4z2SKVZcYydk3XYIQIJYwlnyhaqBAiSqV93/ft80mi
xfaR0aQ3SoSIEAkjI0uWmMrOz2M657x/n/s1/z4f93Hv+76X8z7n3Pt+neqJ
YXo+fkwF6okgDwxNXFO9LJ6VQN0T5LsK3QpWr0qCOi93ic9vN2zplXp7obmt
/gvlkXpu36w6dtRmtvNfPcMzxD8b/baueaIX6/Tvc48T/1h8eaHZbX+WnVz7
cWZUFeV/Wpq/X6G/IYX1W99r5O3CW8TfxoxztPw+gtVePzxLb9Zd4nVbTtsc
mW4t5LXp4FF+JnTMO/Pgai/m0FY3hHhm/byYfh0DQf/wDuVDir2T3yw1WSSc
+5efoPzDiOlFc2I7BbH97qYdovTuUFzf88Q0rcD82UI01MXA+HSmsqR32F1j
wU4Uh/pBHJonih9P7mqLH5tEcWIRxIl2ongwD+LBV6K4rxnivmZRfJcG8d1j
UVz2N8RljaL4yxfir1VgB5BrN/v9ZfZCCueFrhL/7Lv97PqhqSxHFGcthTjL
RhRPZdi1xVP9RXFTHcRNpWAH0P9f6JAf+8dwU7IDyNe7v3p08bILiwc7QPGI
+ZwNCd7ebADYAeTuDelOs1NDmDnYAeTOJ96N/bwsmhWDHUD+NvRDgvLUTHYd
1jvyN7ufvTVJTGaRsN7pPgc2aG0eEczmwnpHPsBwT9mP5b8IarDekT9rV/xP
jUao0B/WO/rtxy5e2tZtjRMrh/WOPGlztNx5pjetd+SdJhxRX/YmhB2E9Y58
/E77kYOqo8G+XaG4YLf/l2r16kS2DXRHkRd8L7k+ZFQg2L1a4vO97kyMDTUR
0A4gv1qRvKNuYAjZAfSfe10vc3n+wIt5gB1AHn7mYP/uBqGsC9gB5CrLzNbq
jI0hO4A8K/TIksKaeLZK2a13lN514r2CIxoOnPMj+4Bc+bPsJ8/1FsItsA/I
w4ImHtbMCib7gH5pt/CEfOfhocwe7APyykU5tQ1eMcwU6nkhz+zQwVS11Yep
Qr0q5F3az9LfZ2sloD1Brjs9NmZDeLBQDvYE/bQol61BvsdjWFP3giczo26S
/2bX8OLXrMVrhFywM8iDWwsGtX8YLMSAnUE/5Hym38pTWSHCOPjuhvYQ/wu1
hX5De7VDo/7WkKwUnD80jlgXybNtvKjf7o2cKLc5K8N9ivbN7/zSV3YduFnw
UPwPkEXCf5ui/Z2d8vG/1TXEXbgN3+9wH0mA78uvoR+w/WEeb5Xq0mPYPpgP
2P6roz0OaB/k9cjQ3mpYd9zzIC+T7YD5jDw+v+ph7b54UT3QGPYmo2ulUoMU
7QOtx3TJ0T+73eH1MZEfm3w+NeyKlO0FjuO7B+oa54t4JnArqFeFfBbUO3YU
cVPg90EXHcf305JBjxIeZ8D+lUu8+oBDpYkPr/eHflS57lHPek8p01AcL8Hm
pMPOeX2CxN89hQkO7QNP3QgWNBT9EGGl+nmdzfPi0I+lcVmUtGrV1shkUd1h
CX03x37D+TNq9onnwz5zju8rE9WDxvdS/xJ50Nuf163G50Z7Dzc7Y5FOHOdD
pPRsmHF5GjsF9g3HHesLnxDxAuB4H5yHxxqPLXCKTyGO169Ju3ZpdHky+w7W
O/oJvaB+rrqIdwS+QvRdRvNK23cZxbg7S/DzetC7tD6T/DHKL0GdXA0RTwOO
fjj2T2x9x2tOualMGeqmIT864YJxTe80NgjGC9uD/3k2ib4rYT3cHFH7G+G7
0ktYp9j/9z6vDN/4dzjTBTuMfOODUQ23zPxpf0QelFLw24z1CSwGOOWNhz0d
PaMxit4L59U78Ctuwv6L1wsjQu+OmJTJfoD1i3xPbNF2p33p6Bf9Zz4Z+ffg
z9j9B+/ctk/RfJZPazxReTFTFIcWCFv0Y3NNImXMEur9od2urhiSlxqUwQ7/
25/ZxH9RDjhhNTeTXfr3Pt60Ho2kwUVlVryOMI5jaaBWYcLyKOI0r2C+4Xok
f8Pzgd0GB34f7P/CqpjBszKCaZ5jv01Out/FoDyB5g/y6UM6K9kmpdE6xXb6
pJvG7b6fyma0+VHEuz2dWaL/dV3D/k48t9x3xsGevD4s3n/punEdlMZIyQ/B
9fgP1HXdKeJY77UO/hvB9zWF/y0j2vxA/n3Bocf0Zk0pA/+EuL5L3LozqVK2
ANqP49I0+cpmvTopK24bF2q/ckW/5v1f55sHjC/yDQ9VKxK6S5kO1DFEu9EP
6rr2F/HuwHF+oj3sB3Vv90L9U7SHjlDXNV/Esd5rT4U6UxKqM9VX9FwteO6v
wHH+PIE6rX1FvBY41mPF/rE5+ipu6BRenxf392G5Nrc6PYmjOpX0HcE1/cTE
TTLqB7w/1ocdJNpHXsA+gvfHcd/6Q8nZq9IYqtuIPB38B8X8T4GQv8D6MStI
h3l1htpfdv9DjtHONIr3kXst+XuLl5pUtB8VCGtzjvV6YMg5jtds2K9Pw33w
+gfO7Qb4jpOhH052u5/BtDlmIbxOJfIrW2uVT4ZL2SyRP/YG/DFc18hT/fxX
q+ik0n6K7R9eskr6rmcq5j2IPx5j6mKckQF5kjrqN+8Dr474NbpRXpHi+ozE
gN4D/cj/R54PdSQningUcKwXifMhWztf13qFHdMqLbKuHVtD/KZB48Y565NZ
mKg/50N/ov3Hefs31OFVBXuC7/VT3N6MIpmMXenkOMFA7QRxvWsVb5UyZSJ/
42v/u6Q5pz6UsbGHbnzS1S+l8aoMKTQ8fl1G8QXa24Kgobm2JelMd52ZfLge
939kvqmvLTamsZlLDc9vq+P/CThm6l6Lyc2k9SJev2qifTwT9vG+ovn/D8z/
FyL7MADsw2jIR+H6unP1qN+4MhmDeJn6+fWL4s1PwpMprsf7DIT7bBv4eceS
In69kpbTVbeSZHZFya+/bcU1WqcHuyx64+uWwSJcsk8/b+Xv2/N01/NvCjOZ
JGXTQYnnWXqvecd1Agf0ymLLp/nbmajkkp30r6nMU5dKWYB2qEtj0g2aPw4/
L6xqeZnKLBzVK/KHFNE43rteOKLisozpGtyalhhQTc8Nl/dxrJ6XyaL+nn7Y
P4Xnh8+PdryUaiNjxRXzpZ038nG0unrzUH1LOksw3eV/OI/byU/On4rVdstY
y8f+CZPvVtG+UGO7L1EvV8r+6n5K6ep0zutvbS5JVJWxA41jD3UdXUbzp7Tp
mvZhgyyq54LzFuu5aHYL2KP2Oov64X16jcaXEin71LHyeqdJvJ8nvwlRn/ow
g8VPuWe3YOpNGpduhmYVh1gSi+rbnDjqbTH1T5G55HLDHhnTtmk51/SOv2/a
xkzVNX2/2vmSjQ73Tp+jcbmrp3HI7ZqMaYVpdU3x4/Gd5r3ne58/lrH3yt5F
ZY8u0LzqfOTxYxYuY9Kyvy5c2n6U+vlRYsDNwIkyZq1QV1RCdUWx3h/2A9b7
C4Z6lDgPS6EeZWC72nTzHD6fq6bt2GNxV8Y0Qccer0cde7se00LNDbj97z3Y
98Kp1hTmCefIsN+yQD9KT6bgX7GAWbu2BmwLQntIedEZ379p9+6dk1AL51KR
R4BuUvt/7xNFfNrgt31/iwiB+C6X2hM/+faNw2ao28OIh4J+UUFbXM/zn74V
jg1xGwWIf4l/0LrqcH6+Jcb1xAeAHtGONj+EeKvR0l9ydoSxDPAzke+wet29
XXgUK27LPxDfnjZeteBeLLsBfhTyraAX1JZnvkP50oWqpTY+KluEjm37MvH5
+YsCNtlbCWZt/iRxx1Irb/1py+Ac7mXi6qAL9LEtbuX3n1n9dEn/CPYA4lnk
S9M9ggcWRVMcjXxV65DhzxbGs2yw88gd5l6/ePRlEqtry/9Q/ra462PH6nPb
BIhTiA88NN3Z1cFGgDwJ8XiP0Nfu2ywx/0D8ldaTkW9fuaL/SVwHdHv+aOt/
4sMinP4Z2RjBTMFvRD7us+cUraoYpgT7GvLp6yJDP8kTmBv4LcgX1kprHySm
gB97l/7XGiyd4HXjr53ChLZ9mXiQztFxsbMcBMiHEO85ps9C9aI57GSbH078
aZL1yLkWrhDPVhDfW9M/OM8fdb0Y8Wugt+PSNv+Jv2vxmFCXGclqII+BvKt7
66h7VbEsC/ZH5AZKTsPqvySS/4PcyPeh3sOf+HlM5EtAVwfzG2ifq1csNS/X
9xLmt+VdiaubGnfuYu8iQLxJvM8ib5nasfEYVxKviC3QfblyE/g554kP9omq
Gyf1Rn+P+Mo/5xpuiQlmw+E8HfLLCvo5CcVkJ+G/qRKIL/D6J73qV24vjqN4
itp/mKkkjU1mJ2F/p7jsifbUgsVh/PwI8AGgk4P2EO1qPejkGII9RB7nLxuz
2D6B9YD/85GXgy4N2kncR4xl8clZAZTHI74cdGPUwE4id7DadjthaCJbDHYS
eboQ6NfFO419D3YS+RPQb0E7iftU7ttP49td8CQ7iTxxxBy5c+AqspPIZ4Pu
CtpJ5MYWZSX5NxJZMthJ5G6mk3pPcUsne4jcH3RR0B7iftSj0WSD2ihvsofI
fxwtZO9bYy/MBXuI/IZJptulVlv2Duwe/S+xZvfd2PVJ7BHYPeT7Jo3cIB2e
QXYM9/3a1OzKJ9m7hQFgx5AHSKfXZm1xEWzAjiFf8dy/sscpCdkxinNNGizq
kndhXoJ4XdzxSQu+2s8miJeRD5W0BOntjmY/Q54Z+UrQ30C7hH6CrKfOIT0T
f7JLyNuPiX25N8yV7BLyn1RGdGootSS7hDy/MK8lycWTdQS7RPe5oT+m3x8h
bAPYH+TZD1dX31uWzGaDPUE+eNmGE0E2X9cR1DtDrjdSr/5yawTrA/Epcr+e
y3UW6m1naE/Qf1swt1sPqw9uZE+QrxgwJfCg7a9kT5AHW1qPPb9wJ5sE9gS5
m0XlcGfjEFYK9gS51mfXdKMnMZTXQm78Z7Pm3MfxlN9Avlb18ZmzdiGUt0Ge
MbKy5mm7jYwpxgVCRP7YuuOVrsJIGEfcXzaBXgT2D9rbfRdN7+YMyWTwPZr8
mQ92d7p4ViWzFzBP8D4umn6zXcdnsAPdvySY5Fzk38VOPRzR2ipFXQ7qZx3Q
H3BX9N+EaNAZgO9fZB9qT/u/8xyVQfkc9FvGR8gXqcfiOSCe53QQ5TnpOynk
FcHOk/38srShcKhHJsX12J4lwRPPaI9JYoZgJyl/Duey80T50nuQL8W4DPtn
ldOD232GxDD8XoPPvalw7pj7t3shv4Hvi3ZpXkRdZOLTJNQ/ofWoCudDT4C/
h9e/tzLN3OMjxfwJ+cN3czJy7pvOIt0V5JPKSh+PieZ6qsjlLxrNf2xwJt0V
5PmfirQlXrxOEPJP7ZTKrvl7ic+nM0Nfqfs7Mz86t4Xc1E395/PLuT4q8rrj
t8OWn+R6C3R+6kPe0xeDuO43PdfIY4aXfyLVS8L+3H9j4P2UbK53irzVouvV
joVc7xT5gtc1juum8ro2yBedu+y9di2va0P/UcQfuZyQH0DtRz50zvAzy95y
HRLkp39Oc3RN5roHyJfsn32w9ecUaifO87iD+99/dOO6o8g/NTSXuHXgdWSQ
F4Wl//p+hi+1E/mbfWWDJnQKpvbQ/ac++l27Qwr5FchjuhV8qI10F+kSy9nF
52qBU+t3iXSJ5Uzb0lkpVN9fpEssZ2uLr2+tcQgV1S2Ss6ACh5KyRa50H1wv
63UE1v+7QLoP8kuXGi5sqeD6isjbxZu1XzHega5HOxbX9EFTo2ckXU/nLzLD
Na29FzPFuhgSo47frIshMfL4Zl0MyX/UxZD8R10MyX/UxZAY+X+zLoaE6mIo
1r+QGHl+s/6FxOjXb9a/kPxH/Yuv7fxm/QuJkdM3619IjJ5C/QvsH7TzVsOO
akwu57qLyH12KWv+6cx1F5HvuvDqyixrXucCuWXuyC7LfHmdC/pvfII8Ue1H
rh+IfJLO/LzV8bzOEfIZSc1S3yZ+Lhi5LnwfwX5AfvaS3+K7kbyeBXLbkys0
DX34uW/knhOzBtya5ELvi/uUZ8cxGs7v7ET6dVmCkmHIeyM9Xp8CedZgNv7+
Q66XSN/7dPq8u9KH6/4hd8xasuhIOdfToOshP4zvhdxL4+OpkN2R9F7Ij89U
vq5rtpXeC3lQyqMVLzdvFbD9uI+YTI3ulrCJ6xYif5U+13rtjCCRvlmBUPnZ
Z0lyJ66/hzzzR2ulDq3cHiL/0GVmi4E1t4f0H3hE/ZItL0JE+mMFgpluUu9H
wxyp/cjjvgxNVjnkISj2s1yY8kNd0PPsYFE/y4UP9xuP2XyMEvWzXKgptN9v
PjhB1J9yoaFj5Y/V1X6i/pQLB8sKOg19YSbqT7kwb9T4Z51bvQV8Lu7XBmcs
tH56xvX0kKtN2bhQupDrV5DfvtN3QJb9YtJTQn6t/qZ6YrSfoNjPJYJRxfbP
r3ySRP1TIiyN2T5Eb1QQrOeAYtw3p8K5Y7SHuB9Zxv2h/HI01xWn/wMhP4b3
QV4E523RXtH3Ow2f3jF7ub43ctT3xufivtO5teSkeasTPRe5kvLHvRmjuV43
8iGQH8P2iM+xYnuQT75/0bLJkutpI6+9l5UzeBrX00aOetqKulVyVrt/lfHt
OheR/r+cDbBWGnhk73yR/r+clTWXLe3Q3Vqk/891s7H94vOkirr9crajsHfs
HGWud4180LLw0WqjuN418gtfVKtKV3A9FrGfjO+F+2l2rW2fUOONIj35AqZ0
sn1Tr3Fc75riiJZzM5VNuN418p17KsoCr/H6kshR7xrfF3kXONdJOkvATwRL
ruUcjhPpwxcw+xvbip/247o9yLV1o7OGB/P6Jsh1ddvvLP8a7+D70nlGdfv3
xhm8/hryXf1UStzKuH41covWi+NUdqwW6Z9nMWVjszWD1rvR+yJfr5SsPTCM
61cjR/1q7AfxuUvsBzoHKtnfQ8U6gfoB+aEFNjMqO/G6GMhtp/bbFvtH+v/k
01CnGvuBvo9PWnezqd1m6gfKL+1UDbltzvWokQ97U6X33SGu4418x42rqidU
uB418qMJaR7ut3g9NeSG5RbbtA/yemrIxXrUyH0VzicGUJ5NrFON108d12xu
rcl1SJB/uGhWdeA918lEnmS5Ouz3JrG+dwy737zpwHqXoP/Jv80R6VSjn3AL
8m/YTvE5O2wnctSFxvvQ918VSWPeRzcaF+So24z3F587w/vTOTWD+I2dBqfT
/XHftB+7usLKiusbIz95c1Vw0kSub4wc9Y3xucg3wbktfC5yPY+mJXL7DNF7
yQVj2zV7u550F72XXJCMt/3909llIv9KLgyMXtsy6A9Hpvi+cqEAzj0pvq9c
OGMX61Y/JZOei/tmv1h739O6XEcXuSRurYFkEdfRRf462vGB3nOuS0z/FRRL
t1jpcjtG39/h3BDOK+QaEKejXUL+3YqIRONeXK8M+TLIsymOV4nQWrZutauP
h2i8SgSXFvuW039bicarRNgX43xl8EAnpujXlQjtO9qa5D73Fvl1JULNcKcf
Ks3DROPLz+ngOkLeF/I5+L50vuZi1VP3tfEif69EiJizMXdcSojI3ysRypX8
2jdedaX3pfMmkBcS5TGEx0MK70dNlIjzGMKe2E1Mf7GzOI8hmFoaaL897iPO
YwiGZzbs0k8LF+cxhN0/WLkO/X91JZD3jBIkj9Yni/MVwvKMOln3dtHifIXQ
/V7poKbOvuJ8hZDdMvFL4xoJ2Rnk287Nndks3yYo9ifX6xb1D0uF754ifU6W
Bv/lKupA8v9m8f64Xnz/eetu/B23e+j/+IzeoGvbxPXn0X/wAD3MMaL/kF3h
P2RFfbYC9qywoltu5yjR/CkQnNZmS3rd4fpvOP/135z74tCLc+yfSZB/E/mx
dO5pjCjP9hfk2RTtUonwm6DUO+cZ1yNCOzwL/isbI8qXrhPp62J//nos6Oaf
ldzfwOe2wv/GinWR5Mz6r4BMq0si3aqv+9dr+A8E+wf7YdQ9R91dxzlHe466
9zju6FfrGM169czUi/ofOerjKd6H61P9H3/Pw7o=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
akJPpH9D8B6FZYFkQl9o1YrP1z+M365iHbKZ5Fjhdz820ra0cfT7uWJddGBp
H/A0yUDJDMUl6NMfOpx2APxhhZvwAbJ9aG+Bh0i+gl/Q+oH3q9hH2VdnqGL9
cy9jbl+xfMxl5wfLP52v0YXXRv7v9cH7QjGZMZGv60fz+5coHxqlHkcyVr5b
R64vkI5KvaZJbMKKox0h+xG6T+H11FpqD2s8+dI6201Tfyc9T/tC+0PDfJoY
b0z8rTTmlol1uGw2ydMpjHse+FroftFPbA8+Xeud2sarFfeMzpC+3abQroX3
tb63ztkXmWMFvQrHJseCt5cdT7sUvEPu/bOT9kTF8UW5CQsz+2e53iWz36b3
vTezz8RwyYOZ/X3FHh/L7DMxRDI/sw+0KfjxzO+n/ah1k0+5k/RFZj+sCvjJ
zD5cVZ3ZzLbzZuBnwO/xoLqJv7X2vfZ/3Yp9Nbn38zL7fDUk/zP7ajuCV2SO
IegMbRXsvwp/mTkuIJkg20y2yevggbltk3WSQ7nt3Fo6U5lt/K3AD8v3Am8N
XpDZv9wG/FRm278m+CGNzxyvk65I7H83lFyC/4X0oNYn2J/5IrH/LL9wW+iS
zHpd+n2Him38RvBfyuz7Hgh+P7NP3Ba8IXMs9hDwenB77uklW63iGKPO04rS
8UOd6RejLdma/h9mth/bSGdljudpn3yeOQ7aUd8L/Etw7PdIxpyVO575Nvzr
dSbB72b2xQ8GfyC7OZivmKpioh203+G/UdonOSva6urzc2E7cS14gN6Pe0do
rYLjE3uD3+Depdw7KndsfLso63TeFXfSmgTpo+CzWwP6AH3bgT/R/Av3WRS8
x3dMbSPKZlO861DJe8b/nnvWVBw/bsH1NzPbV03jt1DspDn8dZllzi7RFvoJ
/jTJ0dwxDPlx8ufO5FpT6LCoayR3pe9kt74BPTu3Lf8meFBuG2cD7eLEc9F5
17m/gT6Xc/+cwv605Ibkh9ZDcft7MusW2YHSzQOiXpDcuZV7roHeAj2iYtmy
KfSgwjHAVpIttO3Az2YeW7pLckl5Fa3TUdCWtC3ASzPr9LE6M4orK64E/75g
O07xXsl6+ZMjaDVS5xs+i32OC7avpCt7wJ8EPjY4NyK8K3QjbTy4PvQN2lDp
q/z/dUwP6Nv8Hgm/JvSt3Humhs53sP55DXoB7b7EtvT7XDtPMjh3fF66voC+
x+9zwbVy52GuADeAvplbBlfPnee5Erwj9K/g79MZekhh27459ELmdQHtG+25
3HOoB/2Adr5kfG4/dYm+Ue780vjU8UHF15/WOuT2dRRL75/b13lZ65nbL5Sd
MzJ3vFR2yOmy74L1o/SkfL73wSNy+8dLwSfm9k3fAw+Ptpnssrf53Q/amnZw
aj/1XXjD6NOsYj2kNZR/vwzcE/5Efj+e2HbqUrFsOwlavWI5Jr2s2En/KPfW
c8+F0G1zr43i7V8nznl8Fc+j9Nuo1L8vLXymToLeHPyOsrk+1P3gbXLHWvW+
J+f2TZeDe+X2HVeAe+f2BZUHPBXcN7UPJV9KvubzmjP8LqVt/Y95Ts3SMv0h
xcFK+wMbwHcWjll2KDzH61Of7RuhN9Bm0XpXLOd7VRzzF0+yfXLU3dLhvTkz
96W2Cc6RHyu7Uz4l/CKzzj5aMj21TugBfjzaiLK1FH9QHKIN/IXgqtL10g3Q
oyQLJVu1brTHZTtBn4f+VbGdNYV36hC8hq/onAZ/l1eh7YP358vB9t301D5U
u+DzslpyteIz155x2gafl1XBfsnU1Of5oODz+FJwDkO5jOeD4+qzuPde6D7B
Z3k5tDVtFHhl8DNnxOfuFexTL4MOl02meHL03/XeytcoVjIktf8pf3Roat9Y
OZrB0S5SnE6+hHyGdhFfQv9rU+syfU/FB0dGGbVL4TMxlG9/Zup9qP2ofTkq
fnflYwfGvS1Zek5qn1e+4fDU/qGePyjOrRNzX5LaHx4Sr4k/t3Bs4xroMfRZ
C7+n5lj4fF5d2N9RHEbxmMPps0bfPLWvJ59UvrJiog/EPSO5JN/qb2hP+N+m
lkn/2Y/xfZvA/yvuw51kyNG+hzSTfoV/uL4Bz74WXpPccQO9S2vZLMHxhOeg
U6NPKt9U+1/nQnJA9r1kv/KVWyvunDhfsKGwDaPz9XFhW0jx0o8K24GKlx4f
7IO/q7h0sG/+NrQN7czEufXuwb7/m9Cjg335t6B1c8tk6bg/K/ZX9mK/tQrO
3ynX/Fn0g5QL6Bbsv78BbRGcO1PeeY/g3J9yys3BfRLnptcUti2Vs3i9sO2n
HME7UW8q77CusK2ofMHawraicgqvFbYJleN4t7Ctp5iw8ktDJPtzx6qkZ5UX
WF/YdlX+4tvC9obyDruXznErJ9U0OB+q/M4RwTb869DDg/XmWmgX2mXgdbJ5
aGckzh00Co7JKKfQLDgWtBTatbQd8wm4FfthNd/0OJ2r4FiN8ghNgmNBzwbn
BT4BV2EO9zDPK+l7U+EchnIZLaLsnC1+4pzGU/GMKLYvO0fnulrumJjiDCcH
58g+0JkKzoV9GKxP5sRz1znq3zXaX8F213vBdQk61zpTit3WjvmRj2kfpvaZ
TpSsof/7wfFKxWLlc86K8vw/O+Z/vga0T3CubX2wjNcc/ndNdF/oacE5UOmL
U4Nzo9Ipu+WO5yl29HZh2175JtVGKO4bUsdg9Vs+dZ/oh6bQ2dHek90nWaHz
e1vhczcNfEfhcyy9orOsnMCEuP4XF7YDFWf7G17bzLGNlXpO6ljjKJ5xJ7Qf
9MXU/dRH+Q7FvDepuM5gveYPvb2wnNdzxxfeF+MK67gpcW53F16j+wvneJTf
eRK6MXUORjap6mhOyxwHbFPYxlCdiOLfp8cYuPaI/Bftk7y0Ddy1Yvk8IsrG
zQrbTtIr66GfpbbnpAe+oK0oLP9OzCwDlW+6DPyC7DXpX9ncjP0C15aljh3K
VpftJt/hXn7/kPp3h4p97dYVy+DmmeXwM4yxuWRd1OEbUuvxHBwyn/Mx3LMX
+GrpROiemc/CufD3zry2aeZr4q/j/v0yx3s7Ztbr0untof9GHXEY93RN/z/3
OplrQyvOv+qZkjGHRr9G3/dC2fpa94ptA507xWZlE+l5epZi0Io/q49ytu+n
ztueknl+mtugqJuko6Qrnov6QjrkndR6ZDnX9si8N5rFfaj9qJhbJ+irrPk/
FceVV4O7Z7Y/ZYd2rFiXK8Z8t3ynzPaA9FEFvBL6IG0T8CrJitJ1XcpDyRaS
Pa26rQ3x3On8Sd9eHfWx3lv5QckOfVfZo7JFtX8lJ6SPh0WZoTNwSWo5Jl14
QsX7TbaW9t5T8HrkPqN6rmz43qnzrtrbE+NzZYdMi2NpnGPjtTzKxQlRNiqm
pZhgtShj+kc5o7ipbAvFnKvG7/9x4hii/L1LCtcZaf1kw/cqXROm2rDu8Rvq
u6r2S35Z6ygnrorP1fqcG+cjH1/yVXa94uzyRS8qbANLtkvGK+ai2Its166s
1Vep7R7le7tltqV05k6I5045w/6ZcwmyZ4/LbNNKxt4YZYXO411aa9kROqep
z+cjtB3o/3Lh/FLfzDL7GvrdlDlvO1/fML7DAulW6a3C+bdTM+fglJPvlzkv
r5ytbEDZgk+nts9kmymHf2jmPL7ilupzecV78jLGW1fazpKNLltLZ1F2m77H
4tT2ut7rg9R7Wt9DdRDHZv6usk11jhWb0HocFtekS2Z5JbklO7FznI9kSYfo
F1zJHEZkjpmoNmMs+CXoY7SXuP5i4b7tMtutbxWOR6n2QHnyJ+LzFX9THFMx
RtXSHEq/RbzX0GAZq5zJmeAZievEbgr2PZWLVO3eDeCW8oOD8wXK010an63n
yu6Sv6xcUP3gOivlcBXLPUh7oXB9juKj8ukUYDxX7wB9KXdMWLHhJbTrZY8W
jg+3gT8CWi+4Tkm54EX8bkyfZYVj+8p7KVY7Mjgnovq0EeD5iWsSjitdl6N6
SOUtFCNRDlqxdI39Atf/DY6tPl+6HlCxYMVLawXXmClP/U/hmJJqZv4uHH9T
Lc0BpeMUsklal44pyLZU/dTR9PmRuR5SOgYh21X5HsWGVVfUsXS8QzaM4tId
Uq9LGRxPU22h8sw694ozbAL/oMT1h61KxynWRh9NMkb5kdr8PiJxLdDO4BMT
599/zfzuqos7qHTcRHbjwaXjKbIVqwbHA1V7WSU4rqjaS+URFDdTfn3T4Pih
6if75I6rq+bv8NJ5NdV5Km+iWJf22UnB8RPVN04IznPJjx/N790z52cVC1Kc
SrUcyrEqBzoA2oP+FyWum90uuIZQOf12peMLqt29ODjfpxoA2QzKlR1RupZL
ORrVLqpuVPJe8S7pIOUIlCs4pGI5ujbmQDtJHxTOS4q+opqO4PyX8uCXBue5
VPPQpbCuUHz+MvgLEtckqM5WtuEy1YYE59SU41auWbEX5Vz3r1i+rildt9iH
Pgq0bxtc96iahCnBMRDFe5Rvlq6WHm0U86OqdVQMSrpX8TjF/SUzFD+pG7z3
VC8xNbgu7pvgs6czqHzZyML5mlHQXly7PHGt8jG58zuKN8q+l52vuGjP4PiY
alPrBNdMqqZCtcaKC3XP/V6yT2Sn/Bd/SJwD36l0TFb1hIdEm0q2lepFJR8U
v+pLv2sS17VuE1znqToN5ZjaxXkOjvJkqM5K6VibfMY2pWNt8gd/5VqrxLVk
qr2Tflb9wMDgfKjyloeVzgfLtj+0dE5Xfsfk4Ficagx6l65ZVF30KaVrRFRP
Pii4xk91UN8XjhWrvm5SsG2gOoRdYz2MfKWKfLPEdWuqX1yauC5i79K10IqB
tCidL1dc5XTabYl9sSOD88iqM1etutanMXTf0jl+xXPOCM6Dq6a3eemaYcVh
rgqOlemsnRWcq9W7n1S6/lI13n1K16eqBqln6fpL7ZP+petcVXd0brxXOerO
pXPw8suGB9dPqn5s/9L1EKonf7NwXZPyQqox1/ndDnp86RrKr4LlreJNyivu
U7omQLGmNPpBysudXrpeVvVI58QzLj31XeG8gOoSRwfnxFWr3Ld0Da5qq/qV
rs1VzdWw4LpN1bydUTpvoTqoa4PjsTpfZwfXWKrm7bTSeQ7VX+0Z9ZNqRRQn
V5xT+drzohzTmswKjj2qJmdmcIxRdSn7la63UJytU+l8m3zPhsE1yaqP2i24
/lm1T42D66JVQ9UpOD6g/yMYnDtHoD3fvXQNqOpdTyxdh6p66S2Ca9RV6z44
WF+rrlv11JLPktOj4N+euMZ7THANgOrGFedfLzsXWi047/NfTWlwjatq/NqW
jsMqJrNlcE5HtfQtS9eIKH44Izgeq9qeccF1vPrWXfWdEv+PQ7PSdf6KDW4e
XOOh2s4BwXULqo3frXQ9mGJN42nPJq5dbFq65l+xQdX8KrbfHtqkdL2r4hh7
lP6fAsUYpwfHrlV39H8jTVL5
          "]], Polygon3DBox[CompressedData["
1:eJwtm2WgHMUShXd3ZvbikBA0QIAAwZ3gIXjw4B4IFtzd3d1dgru7uwd3d4fg
PPR9X07/6Lt9pntmZ2e6q06dqjvdZjutsWOn1WptU7VaNZ/3dVutjfn8m4PH
9rRaR4I79D/j2E9Nq/UUkyYEz9JutXah3cj4Kox9x7EDmP8keGfwBFzvLPA+
HP+cedvSxqF9S5uIY/PxuTvtdtoy4A35HJf2DNe/pcy9m37D2AS0Nngqrvss
x7zhZ+lPQf8rjt9K25e2E+1wxianbU9/B9p63M9pfF7O3GW4n90Z+wQ8glbR
RjF+NNeanvu9gPFjGP+e47NxbH8+VwcPpe1Bf0/apjyD4/29zF+R+c9z/lHg
6cDng18AHwPuD74QvCXzTwP/DF4V/BLjJ4JnAV8M3sxny3W3os1Mu4+2HMc2
bucZj6C/Mm1n+it6D/Qnph1Nv0s7mOutBN6Afk1/bvo9tLPAF/E9j/P9O/E5
Lt83e0+e3Sy0P1p5hkPoP8jc+Wlb05agDeDYW4w9Qn9Vrrk3nyfx/N7h/EGM
zURbmGObOZ/xdcrz3Iz+Hcy7gXOPBJ9L/zG+f0fwOHz/bJy/Dec+zdjK7cx7
kHM25fM/jp/A+Lx8Xs3YWu38pj0ZH5tjq9JfiP5Tvhvw75zzm+uMYx/zORff
9QrnPwLeDNzh+04BP+paYv5qfK5E+5HWDzwHnwfRDmD+YuB16f/FvS5Af65O
5u7Gde7hujX9n+gvSX975pxL/39cfyjX/46xaTpZS67BhvFFGb+S8ekY346x
gbSGsY1ob9AWAQ9p5R1fRnvPdeVao91B+9X3SutNe5LvXJT5nzL/Xvr7c7/v
lrUwkP6/7hvGh/O5Bu0u2hdl7ffzk/s5j3P/5H5W5362Ze5g2iKtrLlT6I9H
27KdZ+yz/4C2eXkHB/EdS3ayNyek/zBtOOe2ud7JPl/wVuAafBp4Pb7vcPDn
4OXANzG+Kvh7rnEg+GbwauAfwAeBbwEPBY8GHwxen/OPAH/B+cs7n9+8Hd+9
D+0B+usyfhjjnzG+LONbgE/VNoFXAd/O9dYE/8L1DgMfDr6Rczuub/p30zbw
/TF+lN/H53raLsYP9Pkzvhbjv3LscMbvAW/o83PPgTfh+44Df8v3rQAeBj4W
/A14CPhO5q/t2mT+EeBbwauDfwQfAt6K+ad7f8xfDXwcx/t0Ylt854cyvzd4
Ffor0P+Tz+HgkznnZNe+65r+YfQf5Xn8z7XTyV4/jv5jnDOCfsO807n+6uAj
OH4Oc98EPw7ehvEu42doD7mfS90vjK8NHrub9X4f+A3wm/RHl70yjHYv4xsx
/y++8xjG7wcPA/8DPg78E3M27ORZfs/xBxjfhM9/OXY847vyfZe0WmOczZrg
uxhfF/g740f6fPj8mXPXbmeP7sb8ka435q/Vk72yWie+wz2zNr/jfsYPpz8e
c57SXoH7cPxs5r/Gsa62HDwOeHyutzT4BnB/8KeMTwo+FtzH38P4GuV9TQ/+
hPFJwMcwPjF4COO7gN8ALwJ+mXG6rX340wN+VZ8F3g88NvgBwPrgP7jeDOCV
wXuC32Z8EPhD5vfWXoInAg9mfFvwC+D5/b2uX/Dy4OvASzG+HfhF8ALguRhf
SjupnQC/D75Ju8749e4/5s8IfqaT+78B3B/8FLgX+CPOmxh8VBX8MbgP+Ghw
b/A74PFcb+AJwStx/h7gt8CLg0cxfjnX2oJ7uI3+9bQL6Z+tLaG/C/dTdeK7
d9I/1bHXvXx/9G/jevOCX9Nvu3/B84FfB08Bvg+8kvurE3v6Y53fcybf3xd8
B+Pz+z4YnxL8Sh0esy/jY4EXA3ynvaEtTn+q8n7vYXxGxh8qz9v9MAD8IHjr
sn9mAvcBrwi+tcr7WxG8O/hN8GLgh8v76AHPrD0E7wAeGzyr/gi8PXgs8Czy
A+7h6k58n77yRZr8a2/Gu4wvXea/BB4IfpvxccGHgicAf8AzvA28EvgG8GVN
3tdNnfzeK5qs59s6We/LlPt5mfkLgl/neny0DgCPS+cLrvcgeF3wneDLm6z3
WzpZv98w/iR4GOP3gT8HPwBeB3wH+EbmzwB+upP1ciV4CnmkfgV8FXhK7QB4
fPA1TdbCI52sp0ubrL8bOtk/I5vsh+s6eR6fdbO/3ee3ux+4/wnAA/l8HPw1
40/oSxm/F7xs4RuvgBcCXw3uC36ok+d3PXh68JOd7LfRnP8CeATzHwH/AB6l
bwQ/rP0DX+7aAV8BXoPv7Stnpe0tJ2L8KsYHM341429xbBzwIVV+75vgscEH
V3keMzJ/Hs59Fjy3+w18J+Orgm92P8qhwKuAb9I+gG8Hrwy+UXsEvgu8GvgW
8Hj8nqXA11exV28wfgF4QfDl3i/j+4M/AC/p/TF+BXgQ+Er5C/g58BbgB8Hf
g58Hbwl+CLwm5x8A/hC8lOuR8SvBS4CvAu/SxD79C34S/K0cDbyJdln/w/h+
4PfBg8FDwfuC3wMvob2Vm9Pmps1F21+728k71gfewvxZtXccm5T5+4GvcT/x
XNcBf8n3PQbekOvd7f26Dvz98iI5P+OvFS43gP7oOuv1jCr24os66/VE8CTg
5fVXzJ+JNhX9H+rYy9Or2KMv66znk6rcTy/mTMTcoRyfDHwo93cz4xOC1wOf
wfjkZT8M74kvf65wNX362YxPV9bjFj7/OuvztCr28HTGJ9NeMb6p+53xU0t8
cmkd7nJJO/ZNDnMD81eWn3B8f+b/U8eeXsL1+oHPYnxa8BOMb64/64bHL0Rb
rBu+L9f6Rg7T5PtOAe/n/cq/OO8V+h8xPh2fV9SJrw6hnUZ/Nc6/WP/J9z3K
9Z/2euBJwOeAT6lzrW99v75DrndPO9eSg35c+MHCzF+Z+aeCHwb3Y+6Ghc8c
WWKHgxg7n+NHtWMj1qrig/RFcsaj9cWcs4Dcj/5z8g/mvM3cRTg2M8cu5fv7
dsLN13Nfcv2DGJ+Keecxf51u3tOn4LfA63bDwzzm2BrGe+ALwTPTv4RrniiX
A0/NOWdyrB/9x/mOzTj/MO75FvBEzFsfvBvj1xautA39C2lzab+Yvy3jF2sv
in/cXvsIXkD+AN4RfJE+FfwqeDvwBeA5tffgbfSH4DPBc3Evl4DPBc8Efp7x
rcDTcz/raR+Lv3uV8bPAc4NHgv+u458vBk8jn2L8bPA84EvB/9bxvyPB04Lv
Lfzq007W22+Mzw4+j/Gpwedx/gDwKMZHgO8p9uuTTq5/N3gx7UUn811fp7fD
eY3hl6CNpr8cx4713mifuN60wfTP5/oz03+B87fuCR85h7lT61N834wPpP8O
4zsxPj+f/Ts53+scIk/zu9vRLIy91RjUFozBlwJ/xOefzB3aTiz9Ep/rtxNT
n6I94PMaY3iu/1idmNVY9SH6q3Zi87R1uxZeLj93DZ9H/2Z+/yzl/rVHp3K9
XsUfDtOfggeDPwbvAb4OvCz4S/A+4GvBy4C/AO+tvQAvCH4XvLP+GbwE+CM5
tM8HvBz4K/C++kvjvfI+9gRPC56tHc42mnu7AjxIf8D4bvIF8OL6F/Cu4K/A
j4M34n3f0xN+4/3vBX4M3Lsb7ifn/1PfUifWNj4/0HimyXuYh/4TPbGJ2kZt
orZxfc4/g7nLcb1rGTukCX8Zvw4/1v4+BJ6gDv89oIk/GAd8DfiYJnymTx1/
ey54kO8C/AJ4D64/ErwZ1x/Vk5h/a77/hXa0gMPqaAWjaE/Q3402mP6StN3r
aAiOH07/Nc4/sIlt3Rb8PHhEHdsxsNgkOYRcYlljXPpHN+EzE9fx/0c1eZ69
6/j/I5r4u151+J9rZhP1kLKWTuL+P2d8gTrP++VutLsz6tjjCzn/PfCsdfz7
fIwPMd7n9z6gfW7Ch6auwwcvAL8LnqUOP7gY/AF49jp86SLw++DZ6vCl48HP
gCcH3wo+tgkfmKQOX9m3CX/p1uFLezfhO3UdPrIT+Drw39zPZeCdwdeD/yl8
ZmP5lM/L+Jr+Pk34U1OHj+zZhC9VdfjayU343FR1+OrSdbiAa86197A2Re5M
u9HAocl+uqyKfZV3yD+md80y3m6yXy6vYj9+5dhC4HOr2Juf69iXs6vY1z/q
7Jfzq9jjX+rsx3Oq2L+/6uznC6vY7w7XXx58RZX9OmETPeKmKvu5p4neelWV
/Sb/U1+4rsp+7cv7nNEY3NgLPEETPeRGxveSr4DXAd9SZb9P1ESvuLmK/fij
Sby0qH4a/F8de3Ip4zsUf6B9uKiKP/qzjj25oIq/kgdNVPjBHHX0io3l8sY8
3lMVXUs9dYBr1OCH/petcPqxutFq5AZPcb21wMfqX4v/VqfuAf/F/Gk5NqyO
LdFGbVInvpyj6AeH0N+8jq1dnjbcvdyE//5a/OG2Tfjsb8XfbdeEz/9e/NuU
fH9/7TvnPtMT/r+C64lja9bZN0OK7Z9S/kNbmP4MHNtAflNHh1uatpb7swm/
7lsnnhmvGx13DHeRLzL+qtyqDp9dgc8V6+w5955z1iqax2/dcO5l6nAuubh7
bo3Cgd2L7mnvUY7/TzfP1Gcr//rdvSgHrPM8G8ZXUh/ifo7k2HLdxFgL1vGf
7xUboi05tB2up8//rBOfLxcwplbL3bSVWFsbpC3yNesL1Fx+6iQGV4sxBr2z
k5jV2FQN5tlOYny1mcnKmnIP/sz3vd6TvIMc3fvTxmpr1U4X7UYDNm9g/kBt
WJur7TUemK0bm65tV/v+t5t36rt1vf7A/bwI3r/OepmX8Z1cs7Q33bOMv8T4
XfopbUw3PkPfsTjzZwc/q42rY8+nAT+tT6njHyYGvww+CPyL78N3rc+q4xP1
jWpu92uj2tHi1OzurMN55b5q8LfX4ehy9bd7orOot2zYjSbyZiecTK1EzjrS
ddcOX23LF/QttOH0p2J8vTr27c4mmqP8WU1HLVKOLdc+0/UM3oj5d2gvOfYG
520Jfq4TTvmTvsjn00nM8hl4A/CmPO+nwcc14fSn14kX5PpraJP15YzvqNbj
egGfDx4Onsf3xfw5mf8MeA73TJWcxjzghd2j4APlhE3eke9qxjrx59ngN9yP
dfSLs8Cvg/vX0QvOBL+mfa/DV9TQ1NIO1Ubwe9cFry6XAe8vtwUPAJ8AXqtJ
TkleKj/9g/ljN9G7r67Cj3bm2Ak8j7+4/x2M5dwz9E/Uf/k+m+jXxlDmqoZ2
86zlOHKdWbrRdbWB2sKNaefS30sbWd7/VXU49kbgW5ushWnAX9c55pjnDOu2
xoihxirGLGvSX6dJrGLMsjb4uibnXuAeAy/VDbeV4x5d8It+v/EJ/R274W7m
WI7v5vea23mcdlw3OSFzQx/6G7pZ8679Q/TxcouerMVenH9CeT53M3df4xn6
4zbJD1xbhe+O0yR/cE0V/uqaMx46q8paNOf0B+dP24m+djztG/k1+JE6e2dq
+ld0kk/wmGNHql/XOebYJJ3kHtyLv7RzDa/1IG1kJ5xQbignlBve5H6so1nJ
1XsVe3crbYpOznmwvA/jEfes7+4aPs9rJ193ZR0NTC1MDUxt+do670JN1fjF
e/LeLqQdQ/8s2m9yv07yAT7DczuJNXy2znHuoZ3Ew9o++e3BneRPPebYVJ3E
zmryasdqyGr1au4rVNE01OLNIS1VRYMxt2TOYMUqMa25hD+qaGH6UH2pMdA1
5Xm87++ro13JAeWC5tCWVDtrJbf2XxWt+8biz9R4hqrttKL9PMq1Lm6Hs8nd
jFnVake0SiyrPasSAxgLGGOvX0VDMPaetI42JSeVm/rMfHZyFLmKGsPWfL7Y
ivYwTR1tUE4sNz61Tl5YDUY9RD1DvjLmGP0zi280ZlUPOaiKdjNZsZdqgGpB
akJqg2qEaqNqUGqHavRq9TO0kntQk3+qxD9q9WqWxkPTtUruoCfaqxqV2r2a
qtqqmqfavZqn2qealVqy9v69Tjjr/7qxIdoSc7zqPZMWzmsM+mXxvwvz+XUr
WpealFqEmoTxmJqYWr0agVqZMbuxuzlQY39jWGNZY3K1NjU3tXo1KbW4YWW/
9C6/R43dXImahNq7moCxqJxT7jl/ndyXz1gecoi/oRNOIDcwLtR2/tqKJrmf
Pkrf0o5eoH5g/3jaxfRPrPPb1bjU046qkwc3H75VHT1HW6X/1I8+142tHFl8
q/qT/M18/AV1NA+1DzUNtTdzFuYuzCGYG1aTV5tXYzc3pcau1q6Gb+5IDV8t
X03cXIaarrkoOb5c/6I6vkCboe3wN/hbzMEPcu0x/+dOOP/UTTTDe8p6+7yO
BqUWNS34mzp7xr3zYJX82xRN6j/uqJKvnRa8BfiBKvnMIcVfvF6lvmPDJnrR
l1XqHzZuog99VaWewvzoOfqiKvUQmzXRp38AXwTuB94cfH+VfGvfJvnCu6rk
g82HqR+OqpKvXL6JPvea2hp4mib5/vuq5Hvna1J/8hT4pJ5wULno3VXyr1M2
yVfeWSX/7DMaDr63yrPbvIl/HF2lPmO+Orl3fZbrYdUm9SLvVMkvutfMZ7g/
Fqqzht2bR1RZ2z5j9byTqzx7ufw/rk3aSnVsgrbhwCrcShvpuzm8iu2UOxvP
/0dbmf53dfS+U6rot+5B9+KpVbQS95h77YQqerN6u/Uo7xb9VX9/kral6Jtr
N6lH+Rh8LnjyJvnd26vU80zaJP99WxU9+YTC7016ntiTNTUAeHyVtSbnkwse
V4ULrl4nb2xMZr7P2GJpzn+7xBjmJGasklM3VzEXeMIqOdYFwHP2pJbId+q7
Nec5aZUcgrlQc2rm1szBzdIkh2cuzxz3gCY5OHNx5tRma5KjM1dnzm/GJjm2
yarkKMy9mSObvErOxNyZOaQpquRAzC0NL/Z7imLPtO93d5Lj0Z7Px/jEVXK8
izN/XnDvKjnTRZvkfCYydm8lF2RNjrU55qzmapLzVSt3zQ8u/LdXlZzjX928
8yeK/XctWFNjbY05vjma8Nel6tSrmBs2R9uvSk2GuVtzltNUqaEwl2kOetoq
NRfmps3JWLvkmnHtmPOZqUrN05qF767N9acpfNWczgxVaiDM9ViTMXsVTmut
hjUgc1SpgbI2xJqOOavUQFjrYQ3FfFVqaqytsKZq/io1K9ZaWVMxbxUboi2x
ZmKxKjUL1lJYU7VolRoBa63Myau7a6OGlHjDXMLFLtme1IgsUiXHYO2ImsZb
nXDI/wpnkjup1xofucZd69qIeQsfWK/wCfmBmpK5UDVItSY1s3UL/zilxOvL
1dEHjPWNtzeoouH93k2Mb+7q8VZifzUBc53mWE8q8ft2dfIVanVqOJ93osmo
7RgPmKs5p/B7NbkRhb+oF6gfyGdeAveoBXdjq6ynW6jE9+ou6i+/NOH/9r+i
/dokhtqkxG/GVmp8WxU+pPb3Eud+0YqN+rlJ/KsOox5jotmYa1jhW8Zixlhq
w2qcxl5Vk1ybmlXfEo/PWUc/UXtxXD1lQDv5OH2ovtQcbJ+if+jn9ff/+Xub
7K2fW4kvLqGN1Y7N9ffLKeQWs3KsXzcxr7GvGs8U4C27sffWXO3ejeZpblTN
Ri30ribaiTGV/KZ3k9yNmpnamZq1dQbm49SyJ+0mNjTmm7ybmNNc9ZOtxKLq
A+pI6kn/lXjQvXVY2T+vNNnLu5f9ajx1EPf2fDu1d64p15Yx2tL056etoBYi
R2iiT+xcR5NV61a/WB58nz6iiT6yTR2NVa16Js6ft536TPOls3ajnagnqaUv
3ERPM1/bn7Frm+RpzdeqD7mmXFvXt1O753qzrkxNUP6oviInM3/T7snv87da
w6K98vnKHdXU5+hGM1E7Ec/ZjSajNuM9eC+bF39mjs/8m3vEveIzWKA8jzF1
jgX/2yTPZz3euN1oiurwA0t8rT5jHsKYdmGv1Y225DNZqIleI8+Sbw3u5pn5
7NZsJ3+qHnVwnXySuQBrMq1jtJZuUDfP3Ge/kPkaY+NutCdzqvtqr7tlbjvv
yxo/n/XmndT+eU2v/U47tYs+f7U5NRu1G/PX7hX9rFqe32+u6st2akXlyPpd
/a/cWQ1GLebUYg995777jTrJnT/dJE/l856+G01KbcpjK9Ofrkn9nzk58zk+
X/eiGsCSRW/QlvqM1PLV4syH+AzMzz/VRI/XJ+obzY/4Ln2ns1bRd92r7llr
xMxHzd6OBjtxE01I36qP1FdO3U0drfWNdRO9QVvgO/XdPtGEW8gp5BafNPEd
+gR9w0dNtCd9kL7owya+SB+lr/qgia/SJ+mb1KjUgr6vol2ZX/D7di2/aYZu
+G2lT2T80ya+S5+l7/oMfFkrPk3f9nmT2NqY2Nj4hDp72Zy1evk83ewdn/l0
+oM6e0ebob58Z7GXxnjGemq6j7bic/Q9G9Wxtdafft2JjdXWeo72Ty1UW6je
qn7/ZzexotcznzBRN7WgnxT7Zj5mQDlf7XvubvJZ2mjtq+vXWtUtW7EXaqK+
T32EvsJ1bs2xtcbWHKulDir9mersefe+NqFP2f9eSxuiLdE+6Au0odpSn4da
u/qdOt4XTbRFNQu1i6/Bt7aiWahdfNVEu1DjUOtQg3Utu8fd6z91ky/Rpmvb
f+kmP+OzMz+yf7n+2HW0wjeacCE5lFzqtSbcSg4mF/umiZaopqG2cVzBk9XR
Sr8DP9KKZqF28W0TriHnUNvQPmjL3dODyv7UN9RlP6rvL1Jn/ZtL8f2r7f/t
VqTf6Ua79hrmB16nHdkKB5QLft+EK2xdtJBX28mR+76t0X+zCVeX88n93mrC
DeXwcvm3y36QM8odX2jCpeXYcu1RTbi2HF4u/3KT+FrOJnd7rwk3lDPKHd8H
n9EKZ5Q7vtiEi8vR5epfNtGm1KzUrnYs+/evKtqy600t3jXp2nypiVYsp5fb
P98klpBzy72t7zDWlwP82ETjdf5HVbTfV5twaTm0XPrdJtxWziv3fbYJ95fz
y/3VpNWqX62iVT8H3quVGMFY4cnCV4x5jH3Up1wbrgnXhjlaa7HMYZq7NQa3
ttg1aWzuGnQtDin8w5yeuXzXqLk+c3rWBizXSq7PnLG1g+ZIzSWbM/yk6BXq
C+YUzeWbszTXqOb6cdFf1GKN8f1fB2NgY381bmsBzAGqfZujtPZg2VZyl2q0
1hoMbkW71YZoS7QX8j1zpi8UvclcqjlXa1vMoZqLNcf4WtGX1H/Mib5b9Ctz
peZMXy16lLlUc5DWzhgjm5s0xp2qxAPGvuZcRxU9ylysOVprYQa0krs1R2vt
jDG7uVtzvNaKmLM192uNu7XuI7TZTTSN/iX+MT5R85i+xE9qIdYonF2nPlk9
35z3mFrBVvRPc9ZjaulayWWbsx5Ta9hKLtuaBvVQ9VhrHaxpcK275tU3rQmw
NtAcurUC1gxYO2hO3FoCc+pjav1aybWrv+pb9DHqqebk1WPVV9VD1Tz83xT9
r9zKGnL1VWtiBzXRZxcu8ZP6sBpInxKvqo2Yo7f2UA1Ff69m0y3xtvGsGoK1
aeaw1RbMwVqbpIZkblb9eN4SD6oHm4Odp8R/6slqGO5V96zxqRqUvlyfbrxn
DtfaJTUoc7tqGP5vkjkZtQ1zguYG5RCjy/tRM1RvrnuiKY1fRW9Qa7LG3Vp3
NbFZm/zPg//7oOY0f5MaEms31bOtLTF/47u2psd8mT5f36+G9nc3GpX/m2BO
X+1Kjc3/jTCnofamZmXMaayp3qFG5f9KmANRu1Kj6VtFA1O78fpb1KkplWv4
Py/+74ucY2ATzevHkm9VC/N/uvzfLjWw2ZtobKOLvqj2Zg2/tfxqcHM2+Z8H
//dBTWjmJv8z4f9OqAnN0KSm39r+TcFzN6nZGFhF47OWQ03x96LnqjWq+c1c
RXNSC1Tz838trEFQC7RGZ5kqNSDGG/8H6iab2g==
          "]], Polygon3DBox[CompressedData["
1:eJwt2Hfgj1Ubx/Gv3/gSeVCRqKTsWVkto1BJqbSpRNEyepI0tFBoGA1k5Cmh
KNkjKyNEGkZZkU2RkuzyvK7u7x+f332u9/mcc5/vPa5z3b/SbTo175iVSqVO
UC7tyUmlSjpe4ngp/ZlOpXJ0XIY9Ie5CJ7EV2LfZqVReelTfVeKV9KO4ED2O
NRGvoXXi0+hJ7HrxQeMvN88VdDtWBFtNa3mKUBesqfh0aqL9NN8zlMqbSk3G
qmp+b9EfYS3NlYWPEJ9DU7EN4q/5Vpjrbe162vVpKO+72Aa+2ub4k/e7WDeW
nzpijcXD+IaIN/LVwQ7yHcAucryYHsDO4+uHdeUby1c45sO+p1VYAeqEXR2/
yxreNe5wHmumB4z7AV/Pczp15btBfCPeXf9A3rcp27hnsVrm78yzRl8j8TSa
Y1wWtcHPNXYT9h9j7sDmYS9h27HiWGvsPmphvh1YyfgN4q/5+vJ9JW7mHI+b
vzO9Jt7Jd7ZjW74VfP34fsIKxj3D5mIvxv3G/hY3pk+wTlgP7Ih5hvBOz8n8
XjrB04gaUnNrGYj1117p3NWM3cs7CBuArcKqY79iu7BzHNvh32D9nWMbVhS7
F1uC9cG2Ymdg92CLsd7YYOxN8WrzXYjty0mel36Ok6gY3pfna+2+2udZ9wC+
8eIh+GBj1+O1sAPYdnP+iVWNZwtrJ57ON1ecTfdjpbBfKR//Vdg4rJu4Ujq5
RnGtHtZXWdw3jliHrGQtsabNeBHHFnwL9b1i7M/YafG8Y4uwl7Et2OnY3diX
WC/s7Xj+4vnEr41nLp55GsSzzvxrqaTf/208q9gp1IG/kXgM31jxbzzNsFOw
j2PN2O/YTViBeP+wBvGsmP+yOAf2P2wE31a+BnzH8Y34Duxc6ondKd6IF9Se
7/gZ3RfvFVUzX2txN8pjfcOxYcZtNl9d/qP4m9jLcW/jPmGbsBHYe9gWrD52
DBuA9YxrgpXCNmOtsOHOMU67Dh2Ma4W9Hs83Xzm+HfhEbDp2ArsHO4tvEjYD
+xu7FyuB5Vrje3F+6mPe5jzjaQrfUb4WfGfyjcMmYAexW7D/YJ9gE7G/sFux
QthY7DPsT+wAXRDzx5qxn8X1+I7ENcOmYsewllgxYwtip1hDC/3VaD82GZvJ
9w9fK76S2ITIHdhx7G6sODYFm4Wl6CRe1nn7Y8+LZ4inUwFsKjYby0Ot2c/J
TXJH5JASznk1HeJZh23mKU7P6btF/D4+UrzTXDvi3plvGL5BfwXjHqW/ef5y
rIjd4XgnHcU2x7tkbBl6TV8rcePIE35vP3MVoQnitZEDec6kbnzNIzdFzhIX
o2exm8WfmnOS+JBxt2GFsfZYF/FBc84x14/W9zO+l68svc53X+yB6ST3N+B5
kS6PvSeuX/xOvmsiZ4u/4f1OnI/a62soHq6vt/lfj/tBQ8Vb8H085egNvtbi
d4x/I/IcT3lsJ9/6eP+xs+h57Fbxh3yjxXv4rsbyYKOwj7C92PVYPuwD7ENs
F9YIO2m+0djH2D7shthW+ZbScqxt7HHWWY7nGLWM/ELX8GXxfISN49tv7I1Y
fuwt7LXYT7DldIbrNxIbhe0WN04lxcUm2oWdR69ALXKTPST2klOdYzDlGPsT
tpOnFL2s7664TlRY/3XYZKxn5KsYL57lHPmxdZl8EnllBfXHO8X7Eu8631fi
Mny/65sVzyX2I1YT+wcrGnue334OlYn9MJ3soWfquzn2rDi39T2KPaN/Bl8p
Kp7Z347rr0W16UO+zyMvav/AW8M5/o56g+83rDxVoBF8i/i+jOdbu5p2dVrG
twUrQSVpiL7T8GvNc5n5qtDDse/Eu67/V3FTfUXFNZ1nR+zF2CHrG5STvOef
Zye5JXJMd/MtxlZjp1JBGojNjDopO6mvos46bOwbUfeZ5yZsvmN78VfGbuQ7
n3rzNTNudtwT8Sa+K7B01GB8u7HqMT92N5YfyzVPbb7RjgciD8VzxLM0ch/f
fudYyrcBK029sBt57sduMeaw+BPHruJOOUl9E3XOY9pV4hrzltK+C1vA+1bm
mm7NXPe4/g393uXYNu2K1Jfvtshpcd/FlahfMHFbKmttx5yzP/3BNwObx5ND
7fhKY3Mix4i38zbECsa9tY5lcf3oKDZD/BhPJ/qvdt143xzrR12tvZbupcaR
S6yxQ9TK4uvM2QXLl07q8QbiJfhD4vOpuvb9vG3ouLiOc9emMrHH6ivruCw3
2WtLxxzal+cm9cHA7OTdjXe4bd4kZ3+QndQLUTd0wHrE/qL9ofE3U0/xPOO/
4DuC32VNF0RM8+OeGVNGuyzV4K1pTJOYz3FWPFf4ReIKWck1+Z7/D+etGnmE
Zya2CrskN8lJkZseoBPpZL8cn53sJ7GvdOWbz7cgnkftCtoVqR1fXf1Ho66l
iuIl8SzwDcibXJ+4Tl8EjzyM9Y36kL7EF0f+174w1hr1S+y1OUkNG7XsWH0L
8UXar2pXifoo85yOcb56zt3G8dp0kidfzU721NhbW2X22uewqeJpsS9jHaNm
1S5ID8V9Fy8w50K+PvoraVfOTd7DeB/H5kmej47ioXFPM+14bv4x9kGqYa5K
WUmdEPXC4qj7zdfffDW1a2WuVe2ow2gTPS/eixcyTxPeSe5vD/G02KfEy6Je
wP7I5LX9mdwXObCpefdjlSN3iH/ie8+437BK2BPYRmx41JjUXTzPfKdiG/Tv
iWc6agN8NfZO1EjUQzw/K6kho5bcx1fRsXN2Uk9EXbGH8sT+jI2M79aoIfjK
xDWJfIwNwn7HqmBPRs7CRsS+Ss+IP8tKvodX6x+l8Sw2EUvHd1jsoVi32A+y
/v0sTf2AjcSexj7FhKlV/nyAPYWNy/q3xEqtxPZGLnHsGPsPNjj2VXpJPCfq
LWx91KJRY2FzsRLYbuwRY7uKJ7o/aWqYTp7J/DnJ/hT71B0WtBbLxpqKpxjb
1VzrsBzs+njesCex9ZGLsRuwadhTUZdhaaxZPKvY09hurHScPzv5vojvjEnU
T/xFVvI/g/jfwS98Fzi2x9dgA3k+o97x/PAVxbbpX8n3B3ZJdrIXxJ4Qddjs
OC9NwPpE7Wxsn/gN8X1k7HZ927ADWBV6C2sbOZdeEY/nOx3bwjce64VNiJoE
2xo5xpy/Y3VoONaGZw12WFyfxmCPYKuiHhXXpVHYw5kcsTSzV8aeWTVv8h7G
+zg7neSAStgt6eSbYExOUqvmSSe5KHLSrHTyHlfkKy8uRzPTSb4snzfZ+6MG
mJtOck+VvEldMt18I6lC1CfpJMdErpmTTmqHynw1Ik9G7k0n73a1+M7T/kX7
Ihrsd9yj/xtsj/hCGoS1xIqlk1rmduu9jY6Il8deGNfYPFdo16VfKCv2o6hx
jO2SyYuRH+dlcmhcl9Xah7Tr0Wi+h/QXyOz7cc8bmeNkPFfxksV3JPaBZufM
eeJ8i9LJ/3BqRC6OvVD7DHqK70r9O+hg/E56B3sws5/FvrYwnaz9YmN7aZ/l
GZjsPFfRX+lkT4q96fN0smdUyJvk2ci3vXheoEvFO3mOxhpoaHyni3fRMXFN
GoZ1FC+JGlB8Nr2AXZOb1FdrspP6Leq4S2MvjzrROUpYz52OV6aTfT72+5ud
szs1EBeOfGqe9/EpVCid5OjI1QvSyf5V3Xz/B+v5lJA=
          "]], Polygon3DBox[{{1777, 1071, 1153, 341, 613, 1656}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{279, 1, 275, 231, 1233, 16, 1247, 31, 1260, 46, 1273, 61, 
       1288, 76, 1303, 90, 1318, 1319, 105, 1345, 120, 1359, 135, 1372, 150, 
       1385, 165, 1399, 180, 1414, 195, 1542, 252, 281, 210, 277, 263, 873, 
       211, 874, 212, 875, 213, 876, 214, 877, 215, 878, 216, 879, 880, 217, 
       551}], Line3DBox[{683, 2, 1100, 255, 279}], Line3DBox[{685, 3, 683}], 
      Line3DBox[{687, 4, 685}], Line3DBox[{689, 5, 687}], 
      Line3DBox[{691, 6, 689}], Line3DBox[{693, 7, 691}], 
      Line3DBox[{697, 8, 694, 693}], Line3DBox[{699, 9, 697}], 
      Line3DBox[{701, 10, 699}], Line3DBox[{703, 11, 701}], 
      Line3DBox[{705, 12, 703}], Line3DBox[{707, 13, 705}], 
      Line3DBox[{708, 14, 546}], Line3DBox[{280, 15, 276, 256, 708}], 
      Line3DBox[{1258, 30, 1525, 233, 280}], Line3DBox[{1271, 45, 1258}], 
      Line3DBox[{1286, 60, 1271}], Line3DBox[{1301, 75, 1286}], 
      Line3DBox[{1315, 89, 1301}], Line3DBox[{1342, 104, 1315}], 
      Line3DBox[{1357, 119, 1343, 1342}], Line3DBox[{1370, 134, 1357}], 
      Line3DBox[{1383, 149, 1370}], Line3DBox[{1397, 164, 1383}], 
      Line3DBox[{1412, 179, 1397}], Line3DBox[{1427, 194, 1412}], 
      Line3DBox[{881, 218, 882, 219, 883, 220, 884, 221, 885, 222, 886, 223, 
       1099, 254, 282, 224, 278, 264, 1441, 209, 1427}], 
      Line3DBox[{438, 274, 881}], Line3DBox[{707, 416}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1233, 1523, 1679, 1988, 1232, 1798, 1442, 1234, 1799, 1443, 
       1235, 1800, 1444, 1236, 1801, 1445, 1237, 1802, 1446, 1238, 1803, 1680,
        1884, 1239, 895, 1240, 1804, 1447, 1241, 1805, 1448, 1242, 1806, 1449,
        1243, 1807, 1450, 1244, 1632, 1647, 1649}], 
      Line3DBox[{1247, 1681, 1885, 1246, 1682, 1886, 1248, 1808, 1453, 1249, 
       1809, 1454, 1250, 1810, 1455, 1251, 1811, 1456, 1252, 1812, 1683, 1887,
        1253, 1684, 1888, 1254, 1685, 1889, 1255, 1813, 1457, 1256, 1814, 
       1458, 1257, 1779, 1815, 1553, 1591, 1592, 1654}], 
      Line3DBox[{1258, 1459, 1627, 2010, 1628, 1630, 1629, 1613, 1526, 1614, 
       2011, 1794, 1678}], 
      Line3DBox[{1260, 1686, 1890, 1259, 1687, 1891, 1261, 1688, 1892, 1262, 
       1816, 1460, 1263, 1817, 1461, 1264, 1818, 1462, 1265, 1819, 1689, 1893,
        1266, 1690, 1894, 1267, 1691, 1895, 1268, 1692, 1896, 1269, 1785, 
       1820, 1463, 1561, 1562, 1994, 1519, 1549, 1639, 1658}], 
      Line3DBox[{1271, 1465, 1821, 1270, 1464, 1581, 1527, 1992, 1544, 1640, 
       1668}], Line3DBox[{1273, 1693, 1897, 1272, 1694, 1898, 1274, 1695, 
       1899, 1275, 1696, 1900, 1276, 1822, 1466, 1277, 1823, 1467, 1278, 1824,
        1697, 1901, 1279, 1698, 1902, 1280, 1699, 1903, 1281, 1700, 1904, 
       1282, 1786, 1905, 1563, 1283, 1564, 1607, 1611, 1606, 2006, 1665}], 
      Line3DBox[{1286, 1468, 1825, 1285, 1556, 1582, 1555, 1993, 1791, 1284, 
       1565, 1557, 1650}], 
      Line3DBox[{1288, 1701, 1906, 1287, 1702, 1907, 1289, 1703, 1908, 1290, 
       1704, 1909, 1291, 1705, 1910, 1292, 1826, 1469, 1293, 1827, 1706, 1911,
        1294, 1707, 1912, 1295, 1708, 1913, 1296, 1709, 1914, 1297, 1780, 
       1915, 1528, 1298, 1641, 1651}], 
      Line3DBox[{1301, 1470, 1828, 1300, 1567, 1584, 1566, 1995, 1792, 1299, 
       1568, 1520, 1550, 2003, 1777, 1656}], 
      Line3DBox[{1303, 1710, 1916, 1302, 1711, 1917, 1304, 1712, 1918, 1305, 
       1713, 1919, 1306, 1714, 1920, 1307, 1715, 1921, 1308, 1829, 1716, 1922,
        1309, 1717, 1923, 1310, 1718, 1924, 1311, 1719, 1925, 1312, 1778, 
       1990, 1529, 1552, 1551, 1663}], 
      Line3DBox[{1315, 1471, 1830, 1314, 1926, 1720, 1313, 1530, 1554, 2004, 
       1600, 1605, 1599, 1634, 1674}], 
      Line3DBox[{1319, 1831, 1472, 1317, 1832, 1473, 1321, 1833, 1474, 1323, 
       1834, 1475, 1325, 1835, 1476, 1327, 1836, 1477, 1329, 1837, 1728, 1935,
        1331, 1838, 1478, 1333, 1839, 1479, 1335, 1573, 1840, 1480, 1574, 
       1575, 1604, 1659}], 
      Line3DBox[{1342, 1940, 1732, 1340, 1939, 1731, 1338, 1569, 1585, 1793, 
       2000, 1586, 1337, 1571, 1590, 1660}], 
      Line3DBox[{1345, 1733, 1941, 1344, 1844, 1485, 1346, 1845, 1486, 1347, 
       1846, 1487, 1348, 1847, 1488, 1349, 1848, 1489, 1350, 1849, 1734, 1942,
        1351, 1735, 1943, 1352, 1850, 1490, 1353, 1532, 1533, 2002, 1593, 
       1610, 1646, 1676}], 
      Line3DBox[{1357, 1494, 1854, 1356, 1493, 1853, 1355, 1492, 1852, 1354, 
       1491, 1583, 1851, 1781, 1671}], 
      Line3DBox[{1359, 1736, 1944, 1358, 1737, 1945, 1360, 1855, 1495, 1361, 
       1856, 1496, 1362, 1857, 1497, 1363, 1858, 1498, 1364, 1859, 1738, 1946,
        1365, 1739, 1947, 1366, 1621, 1740, 2009, 1622, 1623, 1521, 1637, 
       1652}], Line3DBox[{1370, 1502, 1863, 1369, 1501, 1862, 1368, 1500, 
       1861, 1367, 1499, 1624, 1860, 1784, 1558, 1560, 1643, 1559, 1669}], 
      Line3DBox[{1372, 1741, 1948, 1371, 1742, 1949, 1373, 1743, 1950, 1374, 
       1864, 1503, 1375, 1865, 1504, 1376, 1866, 1505, 1377, 1867, 1744, 1951,
        1378, 1745, 1952, 1379, 1576, 1618, 1797, 1996, 1620, 1577, 1638, 
       1662}], Line3DBox[{1383, 1509, 1871, 1382, 1508, 1870, 1381, 1507, 
       1869, 1380, 1506, 1868, 1795, 1615, 1987, 1746, 1546, 1522, 1670}], 
      Line3DBox[{1385, 1747, 1953, 1384, 1748, 1954, 1386, 1749, 1955, 1387, 
       1016, 1388, 1872, 1510, 1389, 1873, 1511, 1390, 1874, 1750, 1956, 1391,
        1751, 1957, 1392, 1536, 1619, 1537, 1633, 2012, 1677}], 
      Line3DBox[{1397, 1514, 1877, 1396, 1513, 1876, 1395, 1512, 1875, 1394, 
       1023, 1393, 1991, 1535, 1547, 1534, 1601, 1645, 1648, 1675}], 
      Line3DBox[{1399, 1752, 1958, 1398, 1753, 1959, 1400, 1754, 1960, 1401, 
       1755, 1961, 1402, 1031, 1403, 1878, 1515, 1404, 1879, 1756, 1962, 1405,
        1578, 1579, 1997, 1406, 1596, 1608, 1635, 1655}], 
      Line3DBox[{1412, 1517, 1881, 1411, 1516, 1880, 1410, 1965, 1758, 1409, 
       1964, 1757, 1408, 1796, 1963, 1625, 1616, 1626, 1407, 1617, 2008, 1636,
        1667}], 
      Line3DBox[{1414, 1759, 1966, 1413, 1760, 1967, 1415, 1761, 1968, 1416, 
       1762, 1969, 1417, 1763, 1970, 1418, 1046, 1419, 1882, 1764, 1971, 1420,
        1538, 1539, 2001, 1421, 1657}], 
      Line3DBox[{1427, 1518, 1883, 1426, 1054, 1425, 1975, 1767, 1424, 1974, 
       1766, 1423, 1973, 1765, 1422, 1782, 1972, 1548, 1603, 1642, 1602, 
       1672}], Line3DBox[{1441, 1543, 1097, 1440, 1986, 1776, 1439, 1985, 
       1775, 1438, 1984, 1774, 1437, 1983, 1773, 1436, 1789, 1982, 1587, 1589,
        1588, 1435, 1790, 1998, 1653}], 
      Line3DBox[{1525, 1452, 1631, 1524, 1989, 1245, 1451, 1609, 1666}], 
      Line3DBox[{1542, 1541, 1976, 1783, 1428, 1768, 1977, 1429, 1769, 1978, 
       1430, 1770, 1979, 1431, 1771, 1980, 1432, 1772, 1981, 1433, 1135, 1580,
        1999, 1434, 1597, 1598, 1540, 1664}], 
      Line3DBox[{1661, 1531, 2005, 1595, 1594, 1336, 1788, 1938, 1572, 1334, 
       1937, 1730, 1332, 1936, 1729, 1330, 1934, 1933, 1727, 1328, 1932, 1726,
        1326, 1931, 1725, 1324, 1930, 1724, 1322, 1929, 1723, 1320, 1928, 
       1722, 1316, 1927, 1721, 1318}], 
      Line3DBox[{1673, 1644, 2007, 1545, 1612, 1481, 1570, 1787, 1841, 1482, 
       1339, 1842, 1483, 1341, 1843, 1484, 1343}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{683, 888, 1798, 684, 1886, 901, 710, 1891, 913, 723, 1898, 
       925, 736, 1907, 937, 749, 1917, 949, 762, 1928, 962, 1832, 775, 975, 
       1844, 789, 1945, 988, 802, 1949, 1001, 816, 1954, 1014, 830, 1959, 
       1028, 844, 1967, 1042, 859, 1977, 1057, 874}], 
      Line3DBox[{685, 889, 1799, 686, 902, 1808, 711, 1892, 914, 724, 1899, 
       926, 737, 1908, 938, 750, 1918, 950, 763, 1929, 963, 1833, 776, 976, 
       1845, 790, 989, 1855, 803, 1950, 1002, 817, 1955, 1015, 831, 1960, 
       1029, 845, 1968, 1043, 860, 1978, 1058, 875}], 
      Line3DBox[{687, 890, 1800, 688, 903, 1809, 712, 915, 1816, 725, 1900, 
       927, 738, 1909, 939, 751, 1919, 951, 764, 1930, 964, 1834, 777, 977, 
       1846, 791, 990, 1856, 804, 1003, 1864, 818, 1016, 832, 1961, 1030, 846,
        1969, 1044, 861, 1979, 1059, 876}], 
      Line3DBox[{689, 891, 1801, 690, 904, 1810, 713, 916, 1817, 726, 928, 
       1822, 739, 1910, 940, 752, 1920, 952, 765, 1931, 965, 1835, 778, 978, 
       1847, 792, 991, 1857, 805, 1004, 1865, 819, 1017, 1872, 833, 1031, 847,
        1970, 1045, 862, 1980, 1060, 877}], 
      Line3DBox[{691, 892, 1802, 692, 905, 1811, 714, 917, 1818, 727, 929, 
       1823, 740, 941, 1826, 753, 1921, 953, 766, 1932, 966, 1836, 779, 979, 
       1848, 793, 992, 1858, 806, 1005, 1866, 820, 1018, 1873, 834, 1032, 
       1878, 848, 1046, 863, 1981, 1061, 878}], 
      Line3DBox[{693, 893, 1803, 695, 906, 1812, 715, 918, 1819, 728, 930, 
       1824, 741, 942, 1827, 754, 954, 1829, 767, 1933, 967, 1837, 780, 980, 
       1849, 794, 993, 1859, 807, 1006, 1867, 821, 1019, 1874, 835, 1033, 
       1879, 849, 1047, 1882, 864, 1135, 1137, 879}], 
      Line3DBox[{697, 895, 698, 1888, 908, 717, 1894, 920, 730, 1902, 932, 
       743, 1912, 944, 756, 1923, 956, 769, 1936, 969, 1838, 782, 1943, 982, 
       796, 1947, 995, 809, 1952, 1008, 823, 1957, 1021, 837, 1129, 1997, 
       1130, 1035, 851, 1095, 2001, 1208, 1221}], 
      Line3DBox[{699, 896, 1804, 700, 1889, 909, 718, 1895, 921, 731, 1903, 
       933, 744, 1913, 945, 757, 1924, 957, 770, 1937, 970, 1839, 783, 983, 
       1850, 797, 1185, 1186, 2009, 996, 810, 1127, 1128, 1996, 1182, 1183, 
       1194, 1191, 1093, 1200, 2012, 1216, 1220}], 
      Line3DBox[{701, 897, 1805, 702, 910, 1813, 719, 1896, 922, 732, 1904, 
       934, 745, 1914, 946, 758, 1925, 958, 771, 1938, 1124, 1125, 971, 1840, 
       784, 1091, 1149, 1150, 2002, 1151, 1159, 1126, 1075, 1211, 1223}], 
      Line3DBox[{703, 898, 1806, 704, 911, 1814, 720, 1111, 1112, 1820, 733, 
       1905, 1115, 1116, 746, 1915, 1083, 1084, 1085, 1990, 1073, 1074, 1088, 
       1152, 2005, 1156, 1155, 1222}], 
      Line3DBox[{705, 899, 1807, 706, 1080, 1081, 1815, 1104, 1069, 1113, 
       1994, 1070, 1114, 1103, 1117, 1157, 361, 1158, 2006, 369, 1224}], 
      Line3DBox[{707, 1217, 1199, 1229}], 
      Line3DBox[{708, 1078, 1989, 1079, 1195, 1196, 1197, 1193, 2010, 1192, 
       721, 923, 1821, 734, 935, 1825, 747, 947, 1828, 760, 960, 1830, 773, 
       1940, 973, 1843, 787, 986, 1854, 800, 999, 1863, 814, 1012, 1871, 828, 
       1026, 1877, 842, 1040, 1881, 857, 1055, 1883, 872, 1097, 1098, 1099}], 
      Line3DBox[{873, 1056, 1096, 1976, 858, 1041, 1966, 843, 1027, 1958, 829,
        1013, 1953, 815, 1000, 1948, 801, 987, 1944, 788, 974, 1941, 774, 
       1831, 961, 1927, 761, 948, 1916, 748, 936, 1906, 735, 924, 1897, 722, 
       912, 1890, 709, 900, 1885, 682, 887, 1988, 1077, 1100}], 
      Line3DBox[{880, 1062, 1138, 1999, 1136, 865, 1048, 1971, 850, 1034, 
       1962, 836, 1020, 1956, 822, 1007, 1951, 808, 994, 1946, 795, 981, 1942,
        781, 968, 1935, 1934, 768, 955, 1922, 755, 943, 1911, 742, 931, 1901, 
       729, 919, 1893, 716, 907, 1887, 696, 894, 1884, 694}], 
      Line3DBox[{881, 1063, 1165, 1132, 1134, 1133, 1998, 866, 1049, 1227}], 
      Line3DBox[{882, 1064, 1131, 1982, 867, 1050, 1094, 1972, 852, 1180, 
       1181, 1179, 1177, 2008, 1207, 1178, 1206, 1231}], 
      Line3DBox[{883, 1065, 1983, 868, 1051, 1973, 853, 1036, 1176, 1963, 838,
        1022, 1991, 1092, 824, 1009, 1987, 1173, 1076, 1175, 1219, 811, 1198, 
       1228}], Line3DBox[{884, 1066, 1984, 869, 1052, 1974, 854, 1037, 1964, 
       839, 1023, 825, 1868, 1172, 1174, 1171, 1190, 1189, 1860, 1109, 1110, 
       1108, 1143, 1142, 1851, 1090, 1203, 1215, 1089, 1210, 1102, 1212, 2007,
        1213, 1164, 1218, 1163, 1225}], 
      Line3DBox[{885, 1067, 1985, 870, 1053, 1975, 855, 1038, 1965, 840, 1875,
        1024, 826, 1869, 1010, 812, 1861, 997, 798, 1852, 984, 785, 1841, 
       1122, 1123, 1121, 1148, 2000, 1147, 1162, 1087, 1184, 1086, 2004, 1154,
        1105, 1120, 1072, 1153, 1071, 2003, 1209, 1226}], 
      Line3DBox[{886, 1068, 1986, 871, 1054, 856, 1880, 1039, 841, 1876, 1025,
        827, 1870, 1011, 813, 1862, 998, 799, 1853, 985, 786, 1842, 972, 1939,
        772, 959, 1926, 759, 1118, 1119, 1995, 1146, 1145, 1144, 1106, 1107, 
       1993, 1141, 1140, 1139, 1082, 1992, 1101, 1169, 1170, 1168, 1188, 1187,
        1166, 1202, 1167, 2011, 1205, 1214, 1201, 1161, 1160, 1204, 
       1230}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
blyYzgSmH3u2xX0gIHkh9mfxsySQ1mgM28udC120aYXvG3Dd+fuqs/RBEti8
pF1QkM0Hl67fOU1YX5trXpy6+KMWlRkXuaUWFqKbVpTcq6sJuDM0v2HXVC36
sZO3zpg3G9nNTUxEbSGgd/6KK/9EMjg+Wug/OeOLPFmeK34nCOCdfi+xYzIZ
Mq/Zlk+ctUFiXxVkqDhOamNYMsfw9S6Hj111CnYBhWN8uxfjh+WB0Bqf8WTo
5r6iNDnsD4UXB2W0sB2SbnzY2J9kyPYaPdRdFQ7e37k7gnFc7ZC2tBMmkuHg
FnVBEy4STOwLmEruJ+DL09a8HYPJ8Ob3XJOqKRnWnJrrfdz9X5/7oWV97h0q
pVf8u5JB+JHCvYnJTHBvXS/wFNedXVHRBfRtyWA24Mrtx5ULWdw/nmTjulO4
I2aNbk0yrN/x8raldD4kyIY/zKAQUO9plcrjUYMuCfU+cGssRIO1p9RpOHD+
fDWA/rytQfazjrU5otno3dqfp833EqCxd+OqvMX+9A6fSs5pX5Tt31Lhi+uy
3fyPvyqRqTAnLR6YaWCDTGynXUJxnIjZsY/sxrhpe8lRtTcuUEdT6nId45yT
N7otsJ0IZ8M6W8IfDl2t6ZrB/jHverdtbXgqJDy12JJUGQ5Ft0+wH8NxJeC2
cdtMaCqoJWQ9z+YgwRBrN7MxruN2xpufaAanwpuGCW3hS2Tgv5i3Vf77f33r
X5b1rRsby9Su8k+FJ1+aVt2eyIS/BwouHGzF9hVyNK/7pMIYex/dB45cuC6l
Em+F8z9ft80xGY9U8BesuuQomQ8/ep7VWuL6S9GvcVrgqEaqqaOSf/MoKPDN
5d79+DyelKp1vrevGvXYfGF+9q0QOaebuxcL47o/H7Pt7JFqtM75783b8tlI
xNgi6CQQQPaYv8JXlQZ7Ra19yid90W91RXlOXNfSkmynMzG+6/WOoXP6Nojm
Y3uGAPaPYf2Q0GuMK3T7Kc8FucBcsCoaxteXus2P1FamgbUD78eW3/7Qacdj
44L9VsxhnaxdkQZN48yjFyvCQfXUNfUWnMeaK5i7eMvSYCp3W9SvTSR4t8ty
Tx+Otw/BgyKKJWmgEmYn/u0iGdZXDV4v/vJff/rvZf3pJgczU+zz0iAqdRNb
+1gmfAq8P1SJ8xthzp3vm5kGTLWvHf9uygV/NxrF2Upcv1p65E3eVaKSuLwq
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
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360.36742693653315`, 146.0253982757135},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-0.03939300351728235, 
   0.02409168224681}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.20675582892178282`, -3.3774394680542072`, \
-0.012436512235217566`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.618772681858303*^9, 3.6188245808196507`*^9, 3.618824614485651*^9, 
   3.618824758235651*^9, 3.618825562157651*^9, 3.6188257330386505`*^9, 
   3.6188258739656506`*^9, 3.6188260374836507`*^9, 3.6188261382066507`*^9, {
   3.6188281490266824`*^9, 3.6188281697506824`*^9}, 3.6188282158046827`*^9, 
   3.6188285377916822`*^9, {3.6188287877886825`*^9, 3.6188288204926825`*^9}, 
   3.6188289299906826`*^9, 
   3.6188291009426823`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNXVusHdV5Hua29znHxhcwFxMaK/gEmiakYWNuBmOwsbkEglq1CSQoGPDl
cLGNcYwNhnBNSqAJubRJ1Ute+lBFailJmrRC7UOrtlGp0gr1BfWhVaNWadU+
VJHyVk3XWv9l/WvNv2bPvhzIw8yZMzN7Zs3/ff99zd637zt+aP8j+46v3L9v
y95j+44eWrn/sS17jhwzu4ozsuyMQ1mWfWVLZrcbs4mrpnn77bdX7Mr+o29f
Yf8UzYEDBwq3w23aLfGf3bwYTt/m/lTyJLeY/7Oy49gT42/zTbjDpbDn3998
880fvvHGG3bJcrcu/vett97iK2rXqZV9j0854tPjR3zO7CPOO0ZwasqRPznl
5zb1hLi0m0+swuCGioDOGj+oSvnYagyvh+y8NtUsqVWDsRQc/PPwxm7r9IQy
w0s5dd+rPMgmcXyMVblgvPJouuoucTVcYvOUYtOeTF4XCDWLttbafe3fmh/4
sN36wbxuOEjdsPtzDrRcOXr+DPs22PV3BB2mxQkGVgbHzHYZ7bZ/V+Ex+u47
bzXOq+cgvhh1f34Zn+9OevkdeLhNzLpSOYqW3JsGb6mczuapD2oEf0nZ9wxf
L61K6pAuUw6VPCRnPBb40TS7NeG1k6bPq+26ya444NH+H1/irMkusaDs+ylf
7NzJLrbI4/kJg3LBmEu4I2uUk/6bR/Fzk41iLY/ix3yJ9012iXV8id+FrdFo
VDW7LirMeWbTbrn/cru+mu/y/snuskHZ9yW4n7msv6nbcvsMP+n29q9Zaj5h
wFuZGxxf8hIW8wcmG99Gu77V7roBj4obw3/ufqUy3DrcKsS48Aky/7EtLMEP
TTZCjex77Ho7eA9z7SIWC90+OfTWeW0JlxEYuPizLrD3/8jsD/MUYJe+WzcK
Jcve4zHkrYXwvLOV+//i7I9wKuIOy3TsEwFD5El9MStDNIQChfrrz1vkLc0G
z0EMJ0LF7ieBsvOhC9UiBQ9dddxmqUPQa6cQQpFyP8fYhubaLXHJlecvOtGL
xFGFZC9Csi/yvlIlwu6LCs0XzgH5o26tcznXjGNoXfvaWV1Cba3XzvPXWxBH
jUjsAv+Zza2FFsLMQUIP4z5bvQrAjYQSqU+SLF5QSVseSTAiS9LXe8XJnGwE
XrvtUSOjqrlpa6GFonMQ1IOgSbbMp0hGU488LYq2yLQnjryHl5Y3Mgu8b4m3
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
43GtdG9nZ/w/RoQ/1Q==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"huh", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", 
       RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "//.", 
    "lucaSubs"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6187726809983034`*^9, 3.618772681188303*^9}, {
  3.6188286895496826`*^9, 3.618828819378682*^9}, {3.6188290979326825`*^9, 
  3.6188290990526824`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
0/h6cs6po2jrxiI6j94r9p8SSJW+X51V+COVzAi3rW56UEjcMxaPXWfDoQ95
LEUqwypJ1oqz2rwfY2mzXIvL/N6Ywef95G5TWkxq9256yWubSmapN9vvOcCh
jZNNSEZKDHm3Qvne4XMl5AjfvU0mvBza8IYv4Ll8DtESP6TWsC6PVCgZKdQO
xpm3Uk01It5hZMa9HWbKPSXk0Chbi59d8VTG0+WORmAVGdB/XDZj3lV6ifea
qMuMGLrlYW3r2tnlJLBsd6BeUwC5PqJhXfDaeKqhm299Y10x8d269WytThp5
odLvMX+wP93198OTQ1YVpGL2zluyMZdprvKSkVOaYqkY3/VigfAaUus2dmqh
egb1VPvSUDUrgrr1bMwYaKghttZnUjo8M6nLdwftzU7hdAdfv8si9XoyS0zd
NqSniJ47M1u0ZnsAXdt9InjR2zrSd3e8//DB4ZbCK+XE9rBAKm1lIBbjWkc+
S0ldaj1dQKsvLPP8UxlEX9gYG+0vTSZLotxH5zZScknaLMnPgENP2VpMsjat
J0uM4qXNHlLaXHJBw9k4gL6ZMcV++KHBeVxb02GOSQxdvNngxV3LGBofPPKA
UUM9qXbI5asUKKZK0fvSL4r404b6jUfcdlaT6MX5Zf7rrtLSc2EWhruj6amR
s7X9g64S/pfXUoNNSgjnsL5DbV889d+20bLxQDE5nDbDqXdjBjlUyLfTZjuH
jjzSt/PHzFLi0Pn9koxsKvE9W2KRO51DDxePvs4zGP+z19s2dY8spVZrrr07
YONDP1gKvz+SlEGWTyvZdGaw/dx4lZvae3DwOkGVF1M8s4jJveCW5HMFJFI5
kv+t7uDzK2efXtVYSyynNW/oXZBDD68sE5imFEoTpoSVrUmtJiKbDejGykQq
87xd+IlFFE25Yp3dLVBJfg1LmjAzNYAW5t/bG7Erlp7feGvbuYwasqf9+c/n
qmn0behyrdS1EfTT5bmrH5pdJ3qCwqMEHhcTnXPSJpaD8d/itQL/PsFacrXj
VFZLZBbd9SLlTdS3MOZ99x0ydVK7+XqeHPJ349ET48M4dNU+tZOL/J1IKJNX
qb4sEn4vNp66/9Gf9eJgCTkO71lOnn2wdTAuvVs/LJF/fwlxviHJvyA4jSyZ
mTu3ZJD/HrYypfVvNVnyvqlK4nQqNZsUUR1lMziecbWVz394j1Rpes8gN+KJ
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
/LlO14VHD7Yf8Bb8r/6BdKWgyu4F6b5c+Rmr/5OfiWXqHxEZ0DU5kc3P5DL1
rzla3HRekvWjxfxu9V7b3QEt69BPKPO7p/4ISkqvY/1cG+Ik3uLjlmxjNj9z
aug6pEN3w/ilMWz+6uDQ30taeDv0Fxux+ZnnzPoL2wNjE16dtEE/RkM+yfUc
MYUnYa7o5z2zbsJk7p6BdAVv9DMi/d/fS8ZayGdv12HzV63/Iz8Tz9T/5IbG
VQ8nsPkZA6b+wdPEZ//8GoN+3jK/W7SiIHZV/1Icf34c8ky8HHdI3nVl8y2F
Q+2K+G+6cJ3osPmW2KF2SGJfbNSKi2TzV85DzxHZNlHg3V11Nt8y9L1cHBF7
sDa/o9oO/Qyto4wlxvMvbO52c0c/u4eeCyJR/LPlUC+bv5o69ByR522ys45P
DEQ/T/9HviWfqf+6ppnODjZsviWGqX+K/gPJgiNsvsWOqX94hnRz3JU4HC9B
/e8+LzfPuh6C4095pv7B5+Y8vT+XzWupMfVXKxH+oaOvgJ4nM/VP4nWQVG1g
8y0NQ3GPpPNNn/BgL5tvgXWmPCc2JU4LZ/NaRkPxnJTMlTxzbOMprnnrLaIn
vOLkh1lsvmXlULwlUj6dqwfOeqDnofrcIJapNYedlfzQ89C6qkRSvHOD44WS
IK751P/Nt9Qz9efdmGIQbsbOTw2Zeio/4JtZMNgO/zs/vUUezTU6vJUEoc9V
TD3fKmwYxyPG5q8mMfU8Isx3deDNPvT5halnhUuuZLMY61NxqJ8llY+TrPbI
s/kWWI/G82rzZ+8QNn+1dGj8QPav1Pz0ex6bb4lk1k1s3rvN/JQqm28RYtZ7
8v4iS8Yd80Kf8H3CXp6Ex0+i2fzVJ+Y7zbD01S/jzdj8VeP/yLcoMPVv+Ds3
SewK2z6hnmmHN1fnxUaiT6hnrfY4uap6f/QJ9dw8e/+O9QvZ/BXUM7DR5rH8
HDZ/1cvU88PIPskT5mxepWhoXEc+Bm3paJFm8yqwTlBWT1Z2RBCbv4obGq+S
G7KO5uGjz6BP+D5n4iUNh9fObF7lwtB4klTrRc+Zp+KNPj8z6/vWqFlvWtrH
5q/0hsarxEx4uWLJvDD0qczkK35w5VUKmfqnKyTN1Whk5/tQf/H42caeU1jP
UP+pfefcchXD0DPU/2lMuoTWKfb9uwtTf7HOrq8darboGeqvpfDD+sESNn91
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
eZXV/b/sPacFk/J/vADzGPOfC9dFe7nRGzZKw/3FnmHe4PuidYKl4gEk4F+7
bcV57pUnlycpOPkSA675LB9zPnIS1zw0lTkfuZdrvpnHzDcNuOaV3sy88hPX
/FGGmT9+5ponfmXmiW+45nepzPzuHdc87hIzj3vPxAfgC5hzkBO55mXvmXnZ
ca75115m/iXCNc8SYuZZpUx8gHmEX21Ki+hFBYwPwEc58QomjzWhIUx8AC5m
XzBdMsGJijLxAfijOz+WeuzwonuY+AA8ayBcxNTMn+Yz8QF4VNKGI3dMYulq
Jj4AnzdzfDAZE0cbmPgAvNfl719P8wDqx8QH4CnbvcelC5+lykx8AE4u6qwq
uHGBCDDxAXinpfKUAudQIsLEBxjni9b/kjcMOk3LmPgAPF7PtUqh0AnjA/DN
TYKP10+7RFOZ+AD8o5jCy0nrA+hIJj4A18sTflgXFIvxAXh5mp1djTcbH4BH
xktWCUhaYnwA/s4pSGNNowPGB+Dh3cFHI3OCMD7AePvPLa1th+OcqD0TH4B7
qS9f+jzjEhVi4gNw3wF7j9VdATQhonlgp381jttlyxpEvu0JwLgBfEzMxnmt
fecxbgDvbW7fIKZ3njxl4gZw6YY/Cx6sCMC4AePYguVH5FxnedOTTNwAHndB
Zkz12UCqxOyXCLwro8LlfKIN5WfOhwLuPeuKkCKvOYE4g9ff4Gqw7Z0vKWPi
DIzr5uc5ne7uDqS9E5O7d/o34XjvrPvdq0oaxuQmE3+A71qzV2VqvTcJZOIP
jGdevWouldX0JEeY/TDhd28x51QacvEUhjNxD6/fcmhJ9jb3eMr0a9jPDujV
lVqEnib2//1OjzYx3z1yjQeoVkvMvhWJcWQd834Q4nYF8x3jfOZ9IsRh+O5I
8T/nMWXSSubcSRUuXszwmUNxAPM8OTnv9Mo/REKcxPgD57yPHWpv2B4qtiod
M3Rgz6ME7jruVp1NM8vBG5z72cmcJwX+I1tjj5VsZM/vgHHRI72AJDKKQwX/
65OoCeyrPNXqyf1+kyzdN8zb8uolIvjfcQWpPB/CE3zbH8+RBJ88kxNu7Q8N
4ap/IZFYcjlVgsThPp9Q/s88VcuJJ9hzP4E775Hb2SnHnqMHnuH70mvMuTbg
4T5zXuEtLk4Zvu9ffSKwXYXs0HvTciuWpv8rn4B8H/+rw5tN42jlv7/LGT10
iz1429EYS/uY5wLqKbC1WjXu1xo8ZxDGJ2vj9v24Fsy+74Py5WIjLj6RsKOJ
TDyBfrz5+6kd+TXs+YDABYz/zhDQj6QnmDgDfHPZ5RP2xz3QJ3BRZZdXlcMv
43k04I2XOQfQYSjuYbvadc/1aY5HHJ4TBFzUsl7xbAl7jhj4LGV8QnsGrsGc
C9nMfLcGHnYx3xnCuXXAl77xmM2/6TiB+wj1rGXO+7vFxeEcQAOu91lwDuBI
5vrAVzHn/Y3m4pEM72HuI46jtseI3o5VI3OZuA08e8nY0dPunyPQzwJP/pI+
10XeEcchWB/mPRr8vXDfH7sYhEuf1sNzEvH9HVMf4HD9UYULAqMfnyL/nZ8O
9hdi10wqZDi0iLm/MN6LlLwd614XDuMQ7N+VG79/1ueNoyXMeAOu49GqJXm8
K57uHhqfYPsfJ+F57f+r68zjat66P566kS65VIZ6jKVLN3VD4Tr6JiWaB6R6
cEIkSoNokBLRoHlWmk6GQnSdPEnauaISCpkrXUPXUGQWV35ev7PX+j5nX8+/
79d57bP3/u699trr+12flSMnIlWS9Y/73fbCgJGksoBso/sIeO7tr6VFmYV0
P57E/d6P1uM7ynCo05ce2b09ypu3w1VNzVXq3nydPvb3Z5n1LF3X8iT2v29k
0PxcDxFTRziV6JzQspulwdbLEwpCmXp5MG8FtU+zWp4XEJm26LqWxgvoV1wq
f5i4z6GQiceKOWe6/p8z3JVyuN9B/wuYunW4T2ndOnWGK1AO9hb2EfloeLHN
ORV/D/wTrTcHfgvM87O68uudOenkNu0P8Mxcwwn2JhmE+r24Ds2vldwY1MH/
L/BTaROHl+tlYjvAt9L6cUHUzuC6Eva7mXErB+/FwJcM2+eU+ksBU39NiN/7
wfkF66HgQuvaNYMK6XlXiPNsQeupfWK4FeXwfOF/55u/qtvmnw33euTqb0al
vI/Pw/ML1rlxyw1ztZhcMp/uF+BHf3bWPdSXD34jcnX/ujuPS/KYeo583eqx
zPP93F/yfNfT+mIwXqiDtpzhpyiH+ACs88AwR5uq7UH4vGA+x9F7kwYzz1ZS
83wN13+GuWGx8bf7mvv/6M9tqTqMqURzpmLR4u50XG/AS9ddjG3/r/q28L+3
aR20rdTPBzvW3ntK7cOFCKbedyoxW+TZHjgnmvxA1ydw7f326vktyaRjgbzD
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
R26Eg0HlzELyf9xvOw8=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4A7ae9FuUb5StUiy9z7OnHvS/fHM4erguIpqDxYG1+0od6m4hPZa7+B6Gp3V
ftAH4x7WXlasRnkl5Z1e0/5IXKvwS+n4mmxX1VjJTyyh3WSrJc6lKl6hmq+z
/r8uSfIjc72N4sry31WzojyUcqyqvamXOg6wnDYocS2i8nCKTW0Vz932XJ8r
vRkcW1NO87PS9XKqfVJ8Q3EPxZS7F/Z/lQdcQ//BiesYVWfYN7VeUWxZumNM
cD2R5Fz93PNbF/8OzjPuS59xwd9M3051Qso7yC/PJZML+9fKz8r3ke8g+aV4
r/SJbL7+heMPytXKx1FcUfWUfQrHAZQ/7VU4DqCc6X6FYw7KdcrHkRyVzFId
m+IDyqXWiH6OcvJbFc6vyY6VXhgcv2moXAulWriOuWNN9YJraSQrZGcpZ6H1
rw//19LxBdmlBxaOjShn3ay0vJnEeJsGn0PtZ9m30rPSt5OD48mqndC31Jh6
V5fCdYaqFWlaOFelur7Lg2PLqodZFZwXUz3nboXjGIrTSKa1Zf1Hc7954ZyX
6hI3L5zDkk0r/182kuK3vQvHWJSDVr2X8kHKKasOVjnJsTH3rvyz8rZ7FY6r
KAet/JH0hHI/qq2QTaG8w3qV665Ub6ZcsPSVYpurS8ed5eOrpkz79gXm+mHp
/KJqzL4rnQ+TTb6idGxItvrK0vFEybRvSteyynf4tnSMW3b18tI5RfkXHeKa
KMbzb+lYm2prVWOrGN2fvPfr0nWq8lN+S23/yfbrrm+UWR99XrrWV/7L7oXj
YFrnqcFxbNVTvRdcp6eahyrqetWoPUHrnbiO65fUukF64avguKhqXeoWzmOq
JrZBYb9VdZtflK4rlj/1d+nYk3zJf0rHOuWfSkcNzKyn2hfOLaq+dJvCuUjV
dqqeU2fuZL7JhpVrZVRv/JPsiMz52vqV49Sq+90u+j5at20L5zpVv7pR5TpI
1S3XrVwrqfrVfQrXBKoG6b/ScXn52j0KxzRUk7B34Rig4os9C8cYhZuBZyau
Td24cs2l6mDbwb89cY2r6ggVY1MdQr3KMXrVRS8rXQ8s3/mi4PyC6pE2KpzP
VY33h7LNEtd6TQ+uk1ReRfls5bVVG3NJcPxEtXOqIZScl+3xaXDeRDVsP5fO
iyjW9Hvp2K58t1WpYwSyn1eVzq8oNvV5cD2n6nC+DM6/q2757eDaV9XAfCQb
IHHdztLgPLhq1X4rHTdUfOOT4JpV1Qe+G1wLrTqcJcG1pqrhWRZcU6ranhWp
bXfZ7X+Vzm/Jl/yzdIxeMQfZP8p9/aT1C86/qKZrQXC9rmp+1paOkyqmcWFw
nks1bz+UjuHKv/4sOGetGq06wflo5dqeD64TUB3g38G6THXv0pWyB3+U3ikd
B5fP+389oNST
          "]], Polygon3DBox[CompressedData["
1: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
7iWf+rGN56M10YXVhwc3eQe+i+9a/UBOKbdcgGO3YP+J8z815wD3lXD8NZvU
X+T+coxNmvAzuccX4DfMFxj/O8cb50s3z8xntxZj3sL2bas/zMbnH508n4/o
9+OcMbqJ8cb6NRg/CtvXdfSJ+erwQnMK+fr7JTr1IozdE/ua4DcZ/02rLyza
xC4HGdRyHrn3ly0Xegf8DPe7i9/fhDPLndXfbqT/cYlWqma6RC/rQX3AGtKC
vfg/ucg53Wjht5gzNJkzU/Yyv/7lzthvbvm0c224fNBYUaKPbeIzl2v2El+s
ESxC/5i+8CD50KLmkn4n/XWr6GPjYd+vSg53JuMmBh9fJee4rMlc0/+a737B
MxlTn8/nY+DBrkdwAV8Jns71UqIHyLnNJf6i/cL1zuHYRNhGl2Mz/nbwPODn
m+jzB9epNzln5KPb1JlLNzfJb7euk5/s5PyTi+nz6tTbvpTbqx830TDNlc2Z
rTXJ2eRuxiRjk5qTXH+81h+qSalNqUlZm1iJ9nA3HE2utmSdXN3nY66rJqg2
qKZobUlN0dzLHEytUQ1RLVHNRq3ZnFnt03dkLm3OrHapxmgurb9foAkfnqL1
9+aOaqDX9KIZqh1O14mWrGaodjhtJ9q1Gp9anxqdtSg1OrU6NThrVWpwanFq
cNamzAHNBc2hrmmSw5nLmeNd3yTHNNecUT7aJMcy1zLnu65JDnN0+/vUpsxZ
dmifp1qCOaK5nDmdubU57Int87miSY56Uvv7rmxSkxhQh6PKVV1f5hbTV8l1
XU8bGYvb+eT72L9KDdH3a81isjoajrWMUXW0Pzmn3FON1/s1B1ML+KCO1inH
lGuq+cwKfrYTLcgccKd2PjheDiOXWZ5jyxr7aYd2o7GbT77J9Z+skqO+Ax4F
fqJKDvwW+C3wU1U0rfeMC+Dnq2jsn4Hf7aVWYc3iE78L/HiVnPZ14xz46Soa
8Afg13upJVtTHtXG51/NtTupJZhDn9G+T9+Pmoa59uD2fajpWNtQk1LrUaNW
q1bjUOtX47D2oGam9mFOf2b7PtWa1TDUMsz51SLVtNT65dByaTU2awFq4mpv
auLW1uSgclE1PLU8awrWTvTXNc9yf9dck7zG/GbsbjRG/b7+/xufr7ik3mMM
N5YPbeIL9YkbOj8Zc3g3mqL1cDmaXM0cb6nWp95C/5dufK0+Q99xSTf1roV7
8S/6mZF98fXqLbMxZu8m9e0h9E/l2FhNfJC+aFba23XGOHaWKjVe9wBsW8VH
6auMucZer+G1vIbXmhe8e5Oc19z3rG7qeWqEB7T+7KwmGsNR7Xy+sIkGoRYx
FfgC8NQl9aE76+itU5XUa+6ooydPX7Jf4j7w2uApSupHt9fRr8ct0Z+vqrM/
YfwS/fbqOnqeevWZ+o46+yUmBp/rXAKv1pc57Fwe6W/viz6jPnpCnf0PcjPz
d3N2c/cxSvj6JXX2J/zRZD/F6eAh4NGxH+/cq7O/wvrUcLlunfqeNUL56gO0
xeUnJXrnRdhXaLmc+Z4c6UufI/bz5Jp19FB9oPrJJnV8ozHQ2LdKndior5aL
y7+XafIO9I2r1nk3+na59vTd1Kh8J/rKteq8K9+JvnbNOu/KNenaXLuOLzVm
6BtXq6PvGnPl5hvUicVy9KXBW9Xh7sYG9UXX+y91fKpca6M6vlafKlcfWsfX
6sPV+zas49v14epB7r/Rt3dL9Npz6ujVxoBB4M3qxAZ9hr5jWB3fbv3A/TLn
1tG73UPzaDf+Wr+tnq/eol7m3pQPWU8vVOEE3zTR6NTKnRPOjY/AL1apCXzX
RDN8pUqNQi3RGqR7V3znvntrYK9XqXlYG1MTfLVKjUOtUH6plizHuqEXfqmW
dajvvJcaySdVajzWTnzmB7Xx3HdhTcS9QP5Gf6s1k4+q1GispVizeK9KTcha
hjWPd6toZtZCrFm8VqUGYy3DGtBXVfIJa0PWZD6uUtO1VnOInLRJPvtaSQ3m
6yo1KWsz1py+rVIjsxZljejHKmvQtWjN7O8qNW5radasfq6yR8haljWxv6rs
qbJWZs3rjyr5kvmNnErt1zki17IG9meVPUjWxqw5/1RFk7cWfVed2rM+Rl/z
ZB3tT81J7enBOrUua0TmY+5hstZlzcu9TWr6NfjyTrR+9zA1dfZIuLfJPV9j
1tmz4F4wa9TfVKnxWbt2D0V/7Ld1srfCmv5YdfYwWOtX41HrUQMfvZeaxD6c
P1on/E2Ory6gPiD37+sl9szTjZ5qPeGANh79ayuJvcZwY3mh7deN5r9aCX6i
kxjV62XPhns3Nqb9WpK/qN3u19rN4fUl7qmyfrBfCTeQQ8gljgUf0ckcc669
1EQ/N+c295Zjy6XvrcO9jymZi85B56J6p7qy+vIH9P/i/N07qTG9V1LTsra1
D7hm/A/mtN385tHMh52TbX4xZvt73Ev1QDd7U/4s2VuyZXu++e4PdWpmaqG3
lOSyO3dTf9inhAvJaeQ2v5fsy1FD+a0Eqw1tTvvDXKaX/mJyDnOtXnJ1Y5ax
64CSXEtOJDc6sIRLyaHkUjuXcBk1mTfNf0u4mZxsVHv//nY5hlqqHGLdJjFB
bvFVyyes+Y/bPg9zOTXvsXrRANQCvP5bJWvWtasm9XbJHiP3Gm3BOZ9zrXM5
dlEna9S16h4e9/KY83zq95bMfdeEa+OckrXsmnXtnlGyll2DrkX1ALX0B42Z
4NNL1qY+Qd/gnhv33qghvsv1lwQ/XEXju6iXPTPundkU/D72E0p8oT5J32SO
bu59YZ3c/cSS3F2fqe90j497fTbj2Iecf1KJbzO2HtYXDde9BQ93ou2e2c5X
fZK+yT1p7jty/9G33nuJr9En6ZueKqk1WD+x/qkeLvczh/6E/ocl++LMSdUG
rfmp26/Tzl/3aNl3z5F7t84u8X36NH2b3+l3u5/wuZJ79t7lB2op0/TyrF4A
z2HsKPEVF9Fm7mXPnGvr2W720vl7xqF/Sjd77yZqn9cNdXJfczpzu6dps9M/
riSWGGOMNXuXcH05vdx+L/C2nXBmubP6k7qk+uTlvXByubk10FdL9EnjvZrl
yyUailrKnm08UtOynvlHHa1LPWzG9hzPfaBEW3PNqvW/WKKVDekkF7+v5Fm5
P/NZn60xppOa+x36LtrCnXD4u733Em6vJvwC/RtK1oJz0LmofiZPki893463
L4cyH7ioRBvQx+vr/X5zgXHa96XeZ17gsft9tyW+35hh7Bjcnv9mq1VsU7LX
1fxbve7iklzRnNPcc2SrKejDr+9lvNqempja2IW0GzuJMcYa9bSJmvxmtWw1
69/raDhqOWoaaiFP19E6LiiJZcZAY6Ga1cxt/qmWpb45bhOfre/Wf6nV+QzN
x9TArUNbj1YbV//r36TG4vxXQ1NLMycduxcNbpY2n1Wbu6yktmTOpH9TH1Z3
/sjrl2hs+tPT6mhv8mP59lfypRLNUW3tB9rt7frzu90P+1H7/t3bq6bv8zii
hJvJgeRCv5RwVWOI8fDIkr2mcrovW7uxUv3V/FU+pI6vnn9FLzmkueSc4Nf1
TSXxzBz6vXa9uzfTGGYs+2/rv+SIcsVDSrilHFQu6vPQ138t32njlbVyf5P6
qzUx9wo90kmtzJrY1K2eYK1MDXLlJjHd2K6m6N4na3RqjWqG7k2yxqWWeCnt
uU40BrWG89v5IeeR+1ijmqbV09Tfby15ttNyvzNw/c1K3tXHtKvpHy6n7kST
vbJED/faz7XrcYRzqhNOLbc+vISLypHlyoeVcGU5tlz70BKuLSeXm5tTPdfq
E/Jta2ruBXuok1rbySXcVE77c+sP3dfbv+Ub8r8/Wv4o37PmN37L19RjzBle
bvm9/Noc073w5iDmnseXcGM5t9z765J9yc4Z+ctXJdq+c+BGfVvJPnBrKMYH
9+uptcuZjN/mlM41zzfXNId8s80nzC3NYT9s+b18Wv2of6tP6kuscbrXyxqS
tc+hLZ91TatXWQNzL94lndTGrDG5F9Oc29qT+3Xm7qbG9EiTmqd726yxWgu1
puveNve8Weu15jlpq4epT1lTde+VNStrrdY8x2v5trVQa77u1bImZy1YfWtA
q4epZ1lPqJrEUGOp9Tj3Dlkzc4/qVb2s9YEtN1Yz+KHNL/7l9yXjJ29SW7Dm
PHrL76/thfPIfYxJrs9Le6l/Tdb6LjWGX6toBPI3NQHz9I+baAX2zd2HdXJM
f2otUJ9yTUnNuVeH/xmfrHneVKXmai3UmuvlVXJka7E3lazt81r/Zb7yY5u/
mG+oUXxWRSNQuzAm/a3v6yRWqZG4907NQ+1EjifXk1Mab9VI3OunRqJ2oobg
3ip9pr7T/RnmEsaH25rwRWO1MdxYLl/Ul+nj9HVqHM9W0UzUPty/I3dWwxqn
Fw1jVBVNRG3DmoO1h0NaPmp813fKma4tqYd6fX2me8rVbD5o81m1HGvc6oFL
dqLXWcN2L4gaiLVta6LdNr+bs33/1pKcw+438/8RrPUao6wrWcN274jv3Nq2
NW73oqgxWPu2hu7ek0Gd1NatOTvvnH/Wl6xJe5/er/qgNXP3hltjt5Zuzd29
LIM7qcVbQ/V/VaxRW1u1Ru3eN/mKtWv3xLs33pr6m+BTSnJHc2pz61NLcmlz
SnPL08CndpJjm2v7PwT+L4F65bdNat7uFVqmk1q4/yMgN5Ojfd+kdij3kk9Z
J3UPu3vZrcm/3UTzktvJ8dQ7rEVaG/Z5uT/NerXrz/nzRZX/cfB/HdxD8Bq2
S7i/+zvRuNW61WheavUTtRvX4wpNcjLzGfcM+L8H7llwL4H5ed3m1+bL7hHw
fw/c4+DeAfm2e+LkiM4f9xio51q/tf7rHgL/10d9170F7imp2vzdfN89ImO0
+b17R9zD4P9CuOfBvQ3WdPxfIvcQWOtxj4H/u2WNyr0H/w/xBY1V
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncVmMex/Gn7ud+nkFaKF4iCSM1Q4jSXlqGFq22Fu3Z2kulPa20apeS
9kWbNjNSpGUUZbSItCgV1RAZ+6R5/+Y8f3zvc/0+1/c659znnOv3u65ibbo0
6pw7IyPjDKXp5ayMjK9SGRm3015xbXAG9rW4FO3D6mCPYp3EKw1+ENuYmZHR
FOuCvYE1wN7BGmCtsLlYZWw5Ngk7iBWj7VgV55uOnRLfRnuwB7DTvF9TD31j
8WOOE+iA9vW0ha8C30vYp+KitBWrhE3EPhPfQNuwyth47BNxEXoPq4g9jD0j
Xu7+6mJvu95jWGdsFVYf24Q1xFpj87Aq2EqsBdYTW481wbZgbbC+2CbscexD
bCp2DLuVPsRquO4jWEfxCr562Aa+Wlh9bAJ2S7wLrCvv49hk7DZsGdYKq4UN
w/JiL2E1jX0QG4+No+3ih+hJbKm4Jt86vibYE9gSrAa2FmuMdcAWY4toj3gy
HcZuppsoT7b/67o1tAfxXGbsOGO78Y3GPsJ201Hx36gB9pK4ON8MvmnYcawE
7cJqOldzqi4ewHcpNpavNd9z2EasBfYB1ghrg83HqmKrsK/oFHXXN0bfF45T
6Avt4vQBX3Xn74ANim/F2DbYv4w5TIeoo74R+j6Pb5T6aL/N15xvh/77sGpY
X+w5ejueMbXAZovL8i3h2+M6t+TynLRvpI/jOfHdz/cC3w18E/GNeIrvGu3f
4psTt+cbGN8j32Y6IJ5N32H30iFjG/MdotLGljL2Ktomfo3ve55ydJivCdYM
6y5e61xraL+4OfXA1okb871n/DH6gjrrGxXjHdtSP+13+Fry7dL/JR2nLvpe
0HfEsR31136XrxXfbv3VsPJYRyw/ttS93I81xqZgt2Nz+B7HnsXexB7CtmJH
6Qh10jcy/rNjM+OraD/L59PLeFH/q/g5rGy8M6wRT734f+JX+cpgi/laYr2x
DVgzbGfMad5KWLfcSZ4bhdXna4nNwSphK7BHdVbEumDCjJF+nuAbHLkFa4t9
jPWjJd5HOdqJHdHf1NjKjj34DMl4gecz+pSeAYbrO+hYPeaI9ii+onyT9D+J
DYlchbXD9mCvYKexO2g/Vtf5Z2JnxHfSJ1g9rG48L/EsY+/BFhlbB2uKzcRe
oV3i2pETsGniO/jm8s3CvsXKxL1hDSM3UQVxJz6HjBF8T/E9H/kaewLbjz2A
NcGmYqWw17DP6SA9rW+Yvs8cx4vz6C/jWJaWxjfqGu30zzD2bn1r8I+wmzzP
37A84s3ihXSC7zrazHe/eEzUpKgTfL2wi7y9sKHYW1hT7AA2xnV2YWnKivfj
Q5rH96F2ZuRFvrvEc2ib+IKxc7GSMbdoK/ZfbA5WQjyXtmN/YPOwv4jX0bfa
+VzvfORQcVXXfSrqRHzTtD6+ebyX/mV4Hf738dHup348W/+5NV6ebwHffr7L
aTVfefF82hc5OGorVk580rgTUR+MeTGV5N3J+OJoO9cwvsvFPehp7DWsIvZW
Tl6rivXG+kQNcR+j+F7GPhb34LvANxybFLkU64z9gpUW30UFtQu677PaI/mm
RF7n68r3W8yPdJJXKmQn+SPyyAhsctRAvi58v2LDolZjO7FO2M/YEGwcVt3Y
78Tf0/NRv7Ea2HnxD5lJjToU90KFqK2+HXxF3NdFmkXvi3tSV/0LXaO6a2w2
tnc6+T7LZifzM+bpOexWnny0MOqrvqGxvtDegXU09ie+sdgr2F6sd0aycJpC
S6IOYcOhvOKptBQ7ho2IbySeJy2KPIoNxfKIy9DGyCt4bedf4X99g53FqsX7
omXYTMfCUTtjrUDLsYVUWPtaeljfNse82FD/vVXkQlqTlczrmN/fuEY9bCVW
MGojXzNxB1onfo/vdb5svvzYlkiW+Kx4X+75ESyXeGI6eUZd493ouyzG4RXE
FTOTObE2nhOt5/vW2EnYteK/6y+vfYfjnbQ4clDkXffSK3JH1DhsbdQk7XZx
f/z7HPemk7ob9be4eF/kRHrTNc5hk/Vdl05qf6wBjuK5+eY714yYr+Jv+Cbq
KyxuSfeIz7v25dgE3gkx//k+xQfE349vIPJE5DNsYDwf8fXOmSfqrLE9jXs3
1rBR07H/YPfR6fhuabaxB/D+8bnE902vRg7H+mGZ4k6xrsbGYn/GFsa6CVuB
ncRGYwVjXHwv2I+R27Gb0sl6OdbNJ/GUcQvcy1LHEjGnsF+izmHT+VZqnzJ2
jL5CMe9pFfYVNha7Ku6XNmE/YTOxm8Wt4z9HTcR+0ve6eFa8T+3vsCn6ioif
SyfrqnLZSV2P+t43ndT28tnJuiPWHwPTybq+GnZGfDZ8Ma89t3yUn3rEvIzv
iXpmJXnhhGOv2Ato74sc5ro/5uSJyBfPZiW54qTjgMip2mf5xvNd4pp94jnE
OgMbhP0e+QCbFusK7CCdFV9HxbS3RH6m3439N++vxvzJ8Q/+ebEuove188W6
S99f+V7EdsQcinUXdjvWH5svPhNr9DgHNhrbiRWg9VipeE7Yuzk1K2pXpucz
EHtd+3tjp/IViPyK/RPLS2uw26IGxrxJJTU0aulurB82DzuNfU0/ihdREf/h
FrqV71e+NvEdxZzmudL5psTcw+pgPbFC2DSsfaw5sF7YVdh0rC1WG+uOFcSm
Yh1jLYGNwW7GFmDdsLbYy1hpbHWsjbCHsdFxz9j8qBXubwOWK/I2dkPUMWqU
Sr6/+A5nx3oSq4kNyZ2sMWKtETU4anF37UKRJ2JPEfkTOy4eyZebpwM1xAbn
TvJq5Ne+keuwL7FRWK74RrE92DWpJE9Hvh6H7RUXpk1Y2XSy3tidU4uiJl3i
vfVPJ+vmitlJvY66PYzvH9hF15hvbFGeQdgy7Dw2DcufTvYGA1LJOj7W83c6
x5uRT7yvI1SFToqPxtpE+zBVouPiS2lI1KHc8We966xkj1gvlexlYk9TwPmK
xV5N+5Bx7Vn3Rj7HmzpuEKf0leQ573y1eJbTKboau5H2aZ/IlcyJmBsD0sl+
rGp2snePPXy3nDVKJawyVclO1qePpZK9auxZr8b6pJM18r3Zyf4s9mnDtS9i
JXnWu07RrGSP0y2V7FVjz1o86nR2Uicb8BSI9SjPFZnJ3jX2sFdqb00ne932
qWRNHGvjosblifW9cS14mtNq8fZY3/pPpR3vjrV+rN/prVTG/xfFCxyuTyc5
K3LXGzn1enU6mXMx9y7QbNoV78LY1ZGHXfNnuhDXpOXYD+Lpxl7B9zy2JpXU
2qi5V8e7xX7HSrhOSefbnzOn56aSXBU5q7b/MSaeA09Dcd1cSQ3NF/cd7VTy
Ti/JSvLLO6nkPuJ+HjJucDpZC1yWleTaczk5cWoq2dfH/r4WXwO+J/kaZCZr
11VZyX97I5XklsgxDfj+B9PQaz8=
          "]], 
         Polygon3DBox[{{1526, 346, 1095, 1150, 488, 1560}, {1562, 560, 455, 
          1106, 1107, 1713}, {1563, 561, 453, 1100, 1011, 1449}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{263, 1, 258, 228, 1157, 16, 1171, 31, 1185, 46, 1198, 61, 
       1212, 76, 1226, 91, 1242, 1243, 106, 1269, 120, 1282, 135, 1297, 150, 
       1311, 164, 1325, 179, 1340, 194, 1465, 243, 268, 209, 261, 251, 812, 
       210, 813, 211, 814, 212, 815, 213, 816, 214, 817, 215, 818, 819, 216, 
       508}], Line3DBox[{621, 2, 1031, 246, 263}], Line3DBox[{623, 3, 621}], 
      Line3DBox[{625, 4, 623}], Line3DBox[{627, 5, 625}], 
      Line3DBox[{629, 6, 627}], Line3DBox[{631, 7, 629}], 
      Line3DBox[{635, 8, 632, 631}], Line3DBox[{637, 9, 635}], 
      Line3DBox[{639, 10, 637}], Line3DBox[{641, 11, 639}], 
      Line3DBox[{643, 12, 641}], Line3DBox[{644, 13, 553}], 
      Line3DBox[{646, 14, 644}], Line3DBox[{264, 15, 260, 247, 646}], 
      Line3DBox[{1183, 30, 1452, 230, 264}], Line3DBox[{1196, 45, 1183}], 
      Line3DBox[{1210, 60, 1196}], Line3DBox[{1224, 75, 1210}], 
      Line3DBox[{1239, 90, 1224}], Line3DBox[{1266, 105, 1239}], 
      Line3DBox[{1280, 119, 1267, 1266}], Line3DBox[{1295, 134, 1280}], 
      Line3DBox[{1309, 149, 1295}], Line3DBox[{1323, 163, 1309}], 
      Line3DBox[{1338, 178, 1323}], Line3DBox[{1352, 193, 1338}], 
      Line3DBox[{820, 217, 821, 218, 822, 219, 823, 220, 824, 221, 825, 222, 
       1030, 245, 269, 223, 262, 252, 1366, 208, 1352}], 
      Line3DBox[{323, 257, 820}], Line3DBox[{434, 329, 643}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1157, 1450, 1601, 1907, 1156, 1719, 1367, 1158, 1720, 1368, 
       1159, 1721, 1369, 1160, 1722, 1370, 1161, 1723, 1371, 1162, 1724, 1602,
        1806, 1163, 834, 1164, 1725, 1372, 1165, 1726, 1373, 1166, 1727, 1374,
        1167, 1706, 1728, 1566, 1581}], 
      Line3DBox[{1171, 1603, 1807, 1170, 1604, 1808, 1172, 1730, 1378, 1173, 
       1731, 1379, 1174, 1732, 1380, 1175, 1733, 1381, 1176, 1734, 1605, 1809,
        1177, 1606, 1810, 1178, 1607, 1811, 1179, 1735, 1382, 1180, 1709, 
       1736, 1383, 1525, 1526, 1560, 1568, 1571}], 
      Line3DBox[{1183, 1386, 1737, 1182, 1385, 1490, 1489, 1917, 1181, 1384, 
       1478, 1587}], 
      Line3DBox[{1185, 1608, 1812, 1184, 1609, 1813, 1186, 1610, 1814, 1187, 
       1738, 1387, 1188, 1739, 1388, 1189, 1740, 1389, 1190, 1741, 1611, 1815,
        1191, 1612, 1816, 1192, 1613, 1817, 1193, 1614, 1818, 1194, 1697, 
       1742, 1470, 1527, 1528, 1467, 1585}], 
      Line3DBox[{1196, 1392, 1743, 1195, 1391, 1500, 1477, 1913, 1479, 1390, 
       1469, 1453, 1914, 1512, 1593}], 
      Line3DBox[{1198, 1615, 1819, 1197, 1616, 1820, 1199, 1617, 1821, 1200, 
       1618, 1822, 1201, 1744, 1393, 1202, 1745, 1394, 1203, 1746, 1619, 1823,
        1204, 1620, 1824, 1205, 1621, 1825, 1206, 1491, 1492, 1918, 1207, 
       1493, 1698, 1919, 1471, 1454, 1484, 1514, 1522, 1559, 1597}], 
      Line3DBox[{1210, 1395, 1747, 1209, 1495, 1501, 1494, 1920, 1704, 1208, 
       1499, 1456, 1543, 1455, 1926, 1544, 1523, 1524, 1584}], 
      Line3DBox[{1212, 1622, 1826, 1211, 1623, 1827, 1213, 1624, 1828, 1214, 
       1625, 1829, 1215, 1626, 1830, 1216, 1748, 1396, 1217, 1749, 1627, 1831,
        1218, 1628, 1832, 1219, 1629, 1833, 1220, 1630, 1834, 1221, 1702, 
       1915, 1481, 1480, 1576}], 
      Line3DBox[{1224, 1397, 1750, 1223, 1497, 1502, 1496, 1921, 1705, 1222, 
       1498, 1482, 1483, 1927, 1703, 1529, 1530, 1531, 1564, 1586}], 
      Line3DBox[{1226, 1631, 1835, 1225, 1632, 1836, 1227, 1633, 1837, 1228, 
       1634, 1838, 1229, 1635, 1839, 1230, 1636, 1840, 1231, 1751, 1637, 1841,
        1232, 1638, 1842, 1233, 1639, 1843, 1234, 1640, 1844, 1235, 1569, 
       1595}], Line3DBox[{1239, 1398, 1752, 1238, 1846, 1641, 1237, 1555, 
       1845, 1716, 1236, 1504, 1589}], 
      Line3DBox[{1243, 1753, 1399, 1241, 1754, 1400, 1245, 1755, 1401, 1247, 
       1756, 1402, 1249, 1757, 1403, 1251, 1758, 1404, 1253, 1759, 1649, 1855,
        1255, 1760, 1405, 1257, 1761, 1406, 1259, 1458, 1517, 1708, 1923, 
       1583}], 
      Line3DBox[{1266, 1860, 1653, 1264, 1859, 1652, 1262, 1547, 1556, 1717, 
       1930, 1557, 1261, 1552, 1553, 1516, 1925, 1567, 1718, 1600}], 
      Line3DBox[{1269, 1654, 1861, 1268, 1766, 1411, 1270, 1767, 1412, 1271, 
       1768, 1413, 1272, 1769, 1414, 1273, 1770, 1415, 1274, 1771, 1655, 1862,
        1275, 1656, 1863, 1276, 1772, 1416, 1277, 1505, 1518, 1558, 1932, 
       1596}], Line3DBox[{1280, 1421, 1776, 1279, 1420, 1775, 1278, 1419, 
       1774, 1715, 1550, 1418, 1773, 1713, 1562, 1417, 1592}], 
      Line3DBox[{1282, 1657, 1864, 1281, 1658, 1865, 1283, 1777, 1422, 1284, 
       1778, 1423, 1285, 1779, 1424, 1286, 1780, 1425, 1287, 1781, 1659, 1866,
        1288, 1660, 1867, 1289, 1661, 1868, 1290, 1565, 1573}], 
      Line3DBox[{1295, 1430, 1785, 1294, 1429, 1784, 1293, 1428, 1783, 1292, 
       1427, 1782, 1291, 1426, 1924, 1519, 1588}], 
      Line3DBox[{1297, 1662, 1869, 1296, 1663, 1870, 1298, 1664, 1871, 1299, 
       1786, 1431, 1300, 1787, 1432, 1301, 1788, 1433, 1302, 1789, 1665, 1872,
        1303, 1666, 1873, 1304, 1459, 1460, 1707, 1909, 1506, 1503, 1577}], 
      Line3DBox[{1309, 1437, 1793, 1308, 1436, 1792, 1307, 1435, 1791, 1306, 
       1434, 1790, 1305, 1916, 1667, 1486, 1485, 1561, 1598}], 
      Line3DBox[{1311, 1668, 1874, 1310, 1669, 1875, 1312, 1670, 1876, 1313, 
       956, 1314, 1794, 1438, 1315, 1795, 1439, 1316, 1796, 1671, 1877, 1317, 
       1536, 1537, 1929, 1318, 1447, 1461, 1448, 1575}], 
      Line3DBox[{1323, 1442, 1799, 1322, 1441, 1798, 1321, 1440, 1797, 1320, 
       963, 1319, 1910, 1473, 1487, 1472, 1488, 1520, 1521, 1579}], 
      Line3DBox[{1325, 1672, 1878, 1324, 1673, 1879, 1326, 1674, 1880, 1327, 
       1675, 1881, 1328, 971, 1329, 1800, 1443, 1330, 1801, 1676, 1882, 1331, 
       1474, 1475, 1911, 1332, 1507, 1515, 1580}], 
      Line3DBox[{1338, 1445, 1803, 1337, 1444, 1802, 1336, 1885, 1678, 1335, 
       1884, 1677, 1334, 1710, 1883, 1538, 1532, 1539, 1333, 1533, 1928, 1449,
        1563, 1590}], 
      Line3DBox[{1340, 1679, 1886, 1339, 1680, 1887, 1341, 1681, 1888, 1342, 
       1682, 1889, 1343, 1683, 1890, 1344, 987, 1345, 1804, 1684, 1891, 1346, 
       1462, 1535, 1546, 1551, 1545, 1922, 1578}], 
      Line3DBox[{1352, 1446, 1805, 1351, 995, 1350, 1895, 1687, 1349, 1894, 
       1686, 1348, 1893, 1685, 1347, 1700, 1892, 1468, 1511, 1513, 1510, 
       1599}], Line3DBox[{1366, 1466, 1028, 1365, 1906, 1696, 1364, 1905, 
       1695, 1363, 1904, 1694, 1362, 1903, 1693, 1361, 1711, 1902, 1540, 1542,
        1541, 1360, 1712, 1931, 1594}], 
      Line3DBox[{1452, 1377, 1451, 1908, 1169, 1376, 1729, 1168, 1375, 1591}],
       Line3DBox[{1465, 1464, 1896, 1701, 1353, 1688, 1897, 1354, 1689, 1898, 
       1355, 1690, 1899, 1356, 1691, 1900, 1357, 1692, 1901, 1358, 1042, 1476,
        1912, 1359, 1508, 1509, 1463, 1574}], 
      Line3DBox[{1572, 1762, 1534, 1549, 1407, 1548, 1714, 1763, 1554, 1408, 
       1263, 1764, 1409, 1265, 1765, 1410, 1267}], 
      Line3DBox[{1582, 1570, 1260, 1699, 1858, 1457, 1258, 1857, 1651, 1256, 
       1856, 1650, 1254, 1854, 1853, 1648, 1252, 1852, 1647, 1250, 1851, 1646,
        1248, 1850, 1645, 1246, 1849, 1644, 1244, 1848, 1643, 1240, 1847, 
       1642, 1242}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{621, 827, 1719, 622, 1808, 840, 649, 1813, 852, 662, 1820, 
       864, 674, 1827, 876, 686, 1836, 888, 700, 1848, 901, 1754, 713, 913, 
       1766, 725, 1865, 925, 739, 1870, 940, 754, 1875, 954, 768, 1879, 968, 
       783, 1887, 983, 798, 1897, 998, 813}], 
      Line3DBox[{623, 828, 1720, 624, 841, 1730, 650, 1814, 853, 663, 1821, 
       865, 675, 1828, 877, 687, 1837, 889, 701, 1849, 902, 1755, 714, 914, 
       1767, 726, 926, 1777, 740, 1871, 941, 755, 1876, 955, 769, 1880, 969, 
       784, 1888, 984, 799, 1898, 999, 814}], 
      Line3DBox[{625, 829, 1721, 626, 842, 1731, 651, 854, 1738, 664, 1822, 
       866, 676, 1829, 878, 688, 1838, 890, 702, 1850, 903, 1756, 715, 915, 
       1768, 727, 927, 1778, 741, 942, 1786, 756, 956, 770, 1881, 970, 785, 
       1889, 985, 800, 1899, 1000, 815}], 
      Line3DBox[{627, 830, 1722, 628, 843, 1732, 652, 855, 1739, 665, 867, 
       1744, 677, 1830, 879, 689, 1839, 891, 703, 1851, 904, 1757, 716, 916, 
       1769, 728, 928, 1779, 742, 943, 1787, 757, 957, 1794, 771, 971, 786, 
       1890, 986, 801, 1900, 1001, 816}], 
      Line3DBox[{629, 831, 1723, 630, 844, 1733, 653, 856, 1740, 666, 868, 
       1745, 678, 880, 1748, 690, 1840, 892, 704, 1852, 905, 1758, 717, 917, 
       1770, 729, 929, 1780, 743, 944, 1788, 758, 958, 1795, 772, 972, 1800, 
       787, 987, 802, 1901, 1002, 817}], 
      Line3DBox[{631, 832, 1724, 633, 845, 1734, 654, 857, 1741, 667, 869, 
       1746, 679, 881, 1749, 691, 893, 1751, 705, 1853, 906, 1759, 718, 918, 
       1771, 730, 930, 1781, 744, 945, 1789, 759, 959, 1796, 773, 973, 1801, 
       788, 988, 1804, 803, 1042, 1044, 818}], 
      Line3DBox[{635, 834, 636, 1810, 847, 656, 1816, 859, 669, 1824, 871, 
       681, 1832, 883, 693, 1842, 895, 707, 1856, 908, 1760, 720, 1863, 920, 
       732, 1867, 932, 746, 1873, 947, 761, 1111, 1929, 1112, 961, 775, 1040, 
       1911, 1041, 1109, 1110, 975, 790, 1114, 1922, 1129, 1154}], 
      Line3DBox[{637, 835, 1725, 638, 1811, 848, 657, 1817, 860, 670, 1825, 
       872, 682, 1833, 884, 694, 1843, 896, 708, 1857, 909, 1761, 721, 921, 
       1772, 733, 1868, 933, 747, 1025, 1077, 1909, 1083, 1084, 1088, 1039, 
       1010, 1138, 1149}], 
      Line3DBox[{639, 836, 1726, 640, 849, 1735, 658, 1818, 861, 671, 1063, 
       1918, 1064, 873, 683, 1834, 885, 695, 1844, 897, 709, 1858, 1022, 1032,
        1089, 1090, 1923, 1135, 1082, 1142, 1130, 1932, 1155}], 
      Line3DBox[{641, 837, 1727, 642, 1093, 1094, 1736, 659, 1015, 1016, 1742,
        1034, 1066, 1919, 1019, 1065, 1020, 1052, 1915, 1050, 1051, 1086, 
       1148}], Line3DBox[{643, 1078, 1079, 1728, 1140, 1096, 1131, 1144, 1128,
        1095, 1150}], 
      Line3DBox[{644, 838, 1729, 645, 1057, 1917, 1058, 1059, 1060, 1061, 
       1048, 1913, 1046, 1071, 1072, 1073, 1920, 1068, 1067, 1074, 1075, 1076,
        1921, 1070, 1069, 697, 1846, 898, 710, 1859, 910, 1764, 722, 922, 
       1775, 736, 937, 1784, 751, 951, 1792, 765, 965, 1798, 780, 980, 1802, 
       795, 995, 810, 1906, 1009, 825}], 
      Line3DBox[{646, 1013, 1908, 1014, 647, 850, 1737, 660, 862, 1743, 672, 
       874, 1747, 684, 886, 1750, 698, 899, 1752, 711, 1860, 911, 1765, 723, 
       923, 1776, 737, 938, 1785, 752, 952, 1793, 766, 966, 1799, 781, 981, 
       1803, 796, 996, 1805, 811, 1028, 1029, 1030}], 
      Line3DBox[{812, 997, 1027, 1896, 797, 982, 1886, 782, 967, 1878, 767, 
       953, 1874, 753, 939, 1869, 738, 924, 1864, 724, 912, 1861, 712, 1753, 
       900, 1847, 699, 887, 1835, 685, 875, 1826, 673, 863, 1819, 661, 851, 
       1812, 648, 839, 1807, 620, 826, 1907, 1012, 1031}], 
      Line3DBox[{819, 1003, 1045, 1912, 1043, 804, 989, 1891, 789, 974, 1882, 
       774, 960, 1877, 760, 946, 1872, 745, 931, 1866, 731, 919, 1862, 719, 
       907, 1855, 1854, 706, 894, 1841, 692, 882, 1831, 680, 870, 1823, 668, 
       858, 1815, 655, 846, 1809, 634, 833, 1806, 632}], 
      Line3DBox[{820, 1004, 1105, 1102, 1104, 1103, 1931, 1134, 805, 990, 
       1147}], Line3DBox[{821, 1005, 1101, 1902, 806, 991, 1026, 1892, 791, 
       976, 1099, 1928, 1011, 1100, 1145, 776, 1127, 1038, 1037, 1139, 1146}],
       Line3DBox[{822, 1006, 1903, 807, 992, 1893, 792, 977, 1098, 1883, 777, 
       962, 1910, 1036, 762, 948, 1916, 1056, 748, 1924, 934, 1136, 1151}], 
      Line3DBox[{823, 1007, 1904, 808, 993, 1894, 793, 978, 1884, 778, 963, 
       763, 1790, 949, 749, 1782, 935, 734, 1773, 1107, 1106, 1108, 1762, 
       1024, 1143, 1023, 1925, 1141, 1133, 1087, 1132, 1081, 1080, 1152}], 
      Line3DBox[{824, 1008, 1905, 809, 994, 1895, 794, 979, 1885, 779, 1797, 
       964, 764, 1791, 950, 750, 1783, 936, 735, 1774, 1119, 1120, 1118, 1122,
        1121, 1763, 1116, 1117, 1115, 1126, 1930, 1125, 1124, 1123, 1845, 696,
        1054, 1062, 1053, 1927, 1097, 1055, 1091, 1021, 1092, 1926, 380, 1113,
        1035, 1033, 1049, 1018, 1914, 1085, 1017, 1137, 1047, 
       1153}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
rozGHTjnvtKS/sVcg9TetJrzFrQjGTUttZo1GvCbUZr/mrcjDapkIrNQFcrc
e/XeAtZPh7M333XW1SIVtsmiJdtWVL8g07eHmQD77ecIJpcmpPeqTVq5oB6t
12kMkPdjn1zRzzDY143yIxzsD9KVIGGtnBcb32iQ9VKJ94lkG5qRMbwo74mQ
y+kv7vtxXpYYPHBf90sdYng2WiK4qQWZho7yFuA6k0dkc2IkFbFecnQuJBei
RzI/zeR6aJA4Jr7ZYK0e7UjYK3c+qQntOPbu6RjOs2rPfic2hNehGNraSzOT
FnRBdbx8EeM8y/IxzS+2Fx3rj2I72/oObeG7Nr/rNQ0OKtg6d57qROenOvbH
v6Eg59avkYp/acDLae8UKdCK3tHPFwQO1qDOnLxDrdivLq5Pa29abkLTfjF9
TUfr0Y/ftirH8O/13tMiKjvSgMgz8xxlAY1IK+L91kkenDcZvapdvRsQVB2f
+fW7Ea2vdR6d5ybgFTtJcosiFQWkH7sRQytCkizvnao/0yB/WxNf6B4qSuq7
ucn9TjES3HeB6dcQDQKr9c1633ehbjfh5cRKMpLs8hT1nqPBco3P8/a1HnSA
Xj37eiQJvZmPPpDwjgYptkFk0lwP2lt6Mb5hgoRyp/5OW+E8zvn+bq5CTA+S
Fmlx376Yi0zyLn52L6bBI5mwDfMxKlpI7jy8rbQA2VR16B9qpYFKhdEO4Woq
+nhD4Nx9+UIUq32gXKqTBi117a1KXD2oxcmTrelIAVKzOmN8vZ4GPtUzI1K5
NUjqFe+t1c9tiNNkb78szqFdQ8a/ebwjIeJUkulDi0ZIaaRjzsE+M+48+wBT
TD0yWP6dZrm7GUXBm8b/csGN/B8BGWHJ4FxasPJGugFKZuY+TuH5Xct3upke
QwYVLVa1yYly4Io96PkIz8snx67fpitvwSoiKp13oAFyL9/h3YtzkKXvywWu
Q6Xw4DHXTLRQOdifFTh6H/tMG1+ZX7aM2SA7+ySy26UOqjXnyAXY71m09PRt
jiiCk+SymJrqapgVux/tj30mj8z5TKs47BurLSNq/pSCz/y2ym943u+qLpRO
fSsBr/qVdqPhCvjSxz4tjPeLiqeFzEJDGfzLkDAbqCmFqzvoGljxfolRDfjB
cDQLuuoZbp3LqQNSrIPn07cE7DXqC0j9mA+8pxafIuwz010Jijv2mR8/DAT0
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
63x8Q4BpK0p2vdw75mkI5q2Of+KiKCBozD4YatyKWrvU9/3IiQMeh0y1k28p
wPiu3ZO5JQws2bfl/dR8BR3XKosNFrAOylxSnWoIA4GqoMjTVaEwsP2hlSa+
X23T+FmFmjBoZy1x1DKKB9GZMf58fL/kYErSttIwsDpAteNTbjrsFBou+e+7
d95NTg+DXoZB8MholpwiGfbQSc/zYl53bWPf6fLHYaDL1Vd4zKwc3M0GSRXB
BBxo4VbYXdSC2ND1TXIccYjcr3zcJocCxxT6TrwrbUG5/oXXpsNvID7/tea2
JRTw66/xGsO/V31hHGu5OQYervcb7culgDlTcYD+w0gQ0F+6/8suGHZv6C2z
/4V1or1byFmjSDjqZHJZ60wcWHoVBB+a+s/nursu724kDBpFqjDtSYfNsVn8
Ovj6n5iWSltTt6Ax8+NXdKYTkOmgrfX5Rgocsba6+mdDCwp+obiH8tIaKWWt
y5PposB0cJu2LG0LUmN1qo2/GglU7vayt9sosPfPxSHZ6WhwfG3WdU4wFhJM
OgKfYl2p69flLEdEg2Kf8oT5/jS4rnRp7yTm24pe+xbfKjejjQkJ6Xknw2Bg
ckCqfoICvwnVcG/TOEgOO6CVujEVhg0HWxXw73tjDO33CzSh6/QvZsfr3gDn
rzXH6dcTIJAzS2eR0oA0MjJcs076gYDi542cXP/0rNYKPftXh66R+X916F+9
abpCb/7VlUwrdOVf/Xh0hX78qxO7V+jEv/qOY4W++6vjzFbouPZlH2TmFT7I
f3VZ4Qpd9ld/zX38f/XXX52lu0Jn5ZVs63bGuulQ/HhV6LV7qDpfIPks1k37
GE5TMeG4xQcjucNt7uAiLtv0DOumpC3ZUuewbsqJ+NLm/jwcEp8VMbLg+glw
/1SwvyYddLo/qWrbJ8CpW6FfDmLeJXZZrCEf66b2eK9KN7kMmPfvsijtIeDy
7J5Fz9R00L4r+GIuogQk6eUfBOH7Lc5SU9sxX4MyGJjvu18uRUWHf/DtxfqU
VFphXMZci/x+S0XVB2Yjvfi8rQoKGGcaU4+Y7a1FOTsH0O3qaFT9cbuvIub5
LSmtBWlYN322PXDA4IARxJbwc3dj3bQ/JEnZc08tCl3y5nM/FQ+1/cGiHy4R
kK9mmJmO9Y6P5Q3C6ewrsF8XVPYT35fuk9uNk1jv9HyXzjmZEwqIju3M6Mh/
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
Df6uLTmq7nhRICH31Wu6XjyKVHbNq/tGwINJ7YpiHwroqdrZjF8IQmnFD/Lq
8f91UGvQYL9BAfNrErHVNz2AqN7qqziN82ile5L23hQgf66cdp69D9xWoe2i
UwR0MnRgdjPpwHjSFSIsXCgw6X5UnM2PBts9Ts+F4vnf7T4ubmJPgbgIcX/e
+QLYrF3sa4zn75Up7+yP/V74DS/KuQul0KATJpCN599gY0L9cpQCMsrxPwRd
K0D9oULvQj3Q/KDHmTWc6TDS9br98aFHyFX9dNuBcQJ+rBJTqOJOh7PiF+Pv
Toei9RMivdGTBFhn1B4x4kmHacFh16Qv50Ei7qm1CZ5/zMqsk6+50kFqQ02F
IT0aWjjSayPx/rh9GT15YHE6FG4U/inanwz37tgeVyQIuMfQb/nKpN9y7rJw
3vBUGrwJ/QT63/LATqZCYaob7/8Pvy3yI2kwnUqeL3UqAPctuatW4PUOS1LF
L39Mg2Dt5W6JvSWgt1V/f1HNQj/KV7p17WlQNR7A4S1TAf25RO4k7Y9Oy1cm
nZY57ieq7CFUUL0r5ZfmmIi8eZdK+Y0RcKjQ/LhSOBVq20fdyGWRSMb023Lp
CQJO/l0esTWCCi+vzcmVPToByXtT1yjj9b50k1R8HUaF5dKvkxzdokB7TYlH
Ld7Prxt8H+27RQU2bl6VZVVJoK26SqlylAAh76l/T/pRQetBcuNwXQbc+tWv
If8J+38mPRY3Jj2WIKb3To/ffyl+5UaF4ujaI6e6nkC+dmZaOPYP8Rc9eDTt
qKAz+cGk0KAEyNUTyQF4f6KEeB424rifbW3reE0yHtn6x04ZyhOwg6HHIs/Q
Ywlh6LFkM/RYrjPpsdQQmhHfy3Jg/lC2ckcJHVxnyS/b2/7on9gx6Z+csPYv
7V6WB8Gxhh9/ed9HlmcJLef/6JbYM+mWJI+Gfl/Plgcyp6/+yJWlQ5HQfhKp
lYCPmVzL6TO5ICyo7LwhsQj6N3a4BVb90Q+hMOmH3EvdJ5ivR4Nx1cP7E9ED
FMwmpMQ/SEDR47Lhvwxo8M1Ib8C03As1tXndd/iPjgfBpOMh4R5fJ6BOA5+q
zre+D/LBjQinSLVg+4bvdfqKNEjxurlEUaAIOoo/k20rCVBh6GxwMnQ20hk6
G1XCPmkid/KBav29gTT/EG3p/Snl2kuA9v0gttaofNh1IcSkoccXLSYJcq4b
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
xeDPrmXiz07Mfwt8lJoAtbbRHmLKxeDMocIx8h8d6RGm+lg8PU78uGsSXLF3
TX2nFY1ecUbaDs3g8XmTV2ou1MfWqmUGVrgj97Vkj9v/qY8pMtXHfvNP/2Li
n4ZmFfWeNk6CJhOrN5z7i0GkRXZ/NM5bHWRRlLZeEpTKcq9OWV8Ol76jNa2V
rOtjSsu3k7VmyOAssSmiTTMa7ZWwlTfFcfmbIHIwnSXD8r6A7+eROzo0cJxn
EcYVh7c40kSxna7896KnrX7w3HLcjvaf+lgiU33sNw9Uj4kHKrGktEOoC4/P
yTZeqVgMoY3sfHw4v1hW1cU70YHH/1c3f6doOdwykOnTqsD5l4h55mtvCoiR
fQ8nHYxGhZXbRmMwnjmSUrqD/wYF8r2/qG4sd0dihWNXAc8/epB+t9mHAsp6
ObvzW/xAVKmo/yuez8BDfgFhPI6+UF+S+n4SCISoWGRO/qmPMesk/+Zd2jLx
Lt2ceMrOWFFgWU1G6/F9xeDiKRmsh/Pi1zmyE3uMKHDMIcHh9t/lkDzg/yC8
nAD/t4/5KDoU+DUtrKL4qwK6ZWr2fs/C92o2OGOGKx2a1uUu0teIRmzWgenJ
GP+MHZbuPcaTDvq+nP20UnfEEcE/fBivV6B7yGwptmc/uPPJ95kfNArUWPzE
83fbpOy4GY/Ts8F96xNFEjQ6KqgWYjzj/cTtW86idKC1u7F/50iBQ7vV626M
/amPMesb/+ZFIiZeJGpr19cfSINn+7QjyvcUg3ejTZM1zscnmy9yCXamQWin
5cHKteWgeC7eMBnncZtvfjI8+iwNIuM58nfNVcCrsvIS/kyMnzff8DV59AwZ
cJW63ajMRjFN+YtOCrLWN+6bddqfEEaF1vtDwe/Vo5HErYcBV8cx3n78mW9N
BBXmamfShUrcUWbvJ9eFPnftikPRreFUuPRJrHBfsx+cuqU10Y73gfdN4M66
UCqcfRsfx7GPBMYi0uqR+Hzds/bMzgVR4ef51mv3F6fArpPjD0ww3nOM4O10
96XCVSV++7FBKhjkK8orDP6pmzky1c1+8wdHmPiDrPSNX0VtU6pwpIJGQYHW
v7uKIUjr6Kh6A45HNILjghkV55cajlVryiFQoGpzQDEB+lXmirFHqaBZOH9I
7mcFHOk5VjGB88HatpaPb7c1I953+fYiwTFIy9qx0kvhT51tD4s6G7PuMYXB
g0tg4sGx0hl2Py9utHIBJ/h7HviiHI2yRATEOv6HPvBvvth2Jr7YVc7TuWXT
ufBD4eJ42bZiuFhP1ir8Hzq9qWwuNVv0aWCy2JKDUIpG5w4odH7E5xLw+fwB
WQMaxDZcWDaY7440NWKl/P+HXu5vXhWdiVfVapXNo7qXBmqehromW4vhSVe6
zvMyAtZPNKwbvpMPa9XYpdv3RaMte3efLcX41mOsbstsVD74VT/3vpfnjp7P
xey1xLjiacugdhW2h5HWFzyq8oOfwo07VmD7Mwb/aP7E/+Ufmagvrjv0gg7U
opFnd/ZEoz6TxJ92C7qph20NHV7iODsg3bkuxx19vKV1cAnOF87oGoXLYTtZ
QNwptsIPrtSbG5Rg3DKrcCQjvoMOt0SsjKmyJHisUXLq2gfshxk8HQ0mnk4i
C12mOfvDkz9Gq9AHa65/9v8oQrbSO3o3Xf1TZ5NmqrOplQjsUV1VAGlXL0vt
2BWN5u29Srtw3CzzOi7nIlwAA+9bTS5luiPajieXffD3MjvbdVMB20fXlOh6
lfvB466LD3diuy3fhzORQgUgaCkaOCBNAs20c8aTON5Fc9+p9BUsAHZa2dDw
FBlCA5YO1r3+w4sZZeLFhLLQS3S/K7qYrlOJHjp48HX3ViLreVJ1OcaT9/NV
3Z0sK5HOmW9mJlzF6E2Ra4RBMP7uWvb9LHeuRIlmeg3Nm3JQd6Tf4i3JrHUX
x1/uVllqVAijJ8XlU9Ld0e5Trlx1nQv97G5mtZwshMbwEDatUj+Q3Oet7Int
67NNXYTxOHXtyaQfG0iwW2JjkSKOL726tg59+oU4338aFfGNDBXzu7OWYX8i
PdCnvke3ENb9/X3jSBsVbA7U6X7H+Oru8Y73BjoI8X/7gbqL6tAL+0U9joDv
T6+n6NerCB3fqNOjM1SJECXZKAzj5BV8Y+3ViQglhrJXuggWI3TnvNexe9gP
nJIv7CxBqOEHl9PM9hw0ZjacfDgHn2/m6uGuRoQ6f0ZMVnyPQV5Zwu82lP/5
vZK5r8rvd628TO9acxwsC3i300DS7m+lA8vL4S/RS2ZiePzSth8fnlnVoDra
XTW1F5XowNtIxSjNBV7q5MSBQjpc57zcBzLFYO3CGeBc8IfXM8bE69mr4do0
yP0c2Qhuf7BIIwa9uLKH2P+Ktf7n7/eK5oz3itWM94qs6uq/3wcu4vi/7wNz
WOgBsnr/yUrfjzPWwiZ2Yyva2+QsSD0Tg2ZXBmTrchOwXIPInp7E/iKDc05v
UzFs38kRPUb7o+8UzdB36mLoO1n5Usk6zvXoXsgxT5HKSuTlLBXOIfXnXdku
pndlrPTi1FnoPX7i/9z3vLgKxV4ylWSn1KG4Eanrq6VY65KVstDXmmOhzyYx
F5VqnJMDg6VPMhp6KiBtwtf7XSoB/w/K4QUR
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{419.11157972133213`, 144.02810740826013`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-0.038313456976673516`, 
   0.03556703259616532}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.6371508734299929`, -2.958863378137667, 0.12192016708967172`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.618772681858303*^9, 3.6188245808196507`*^9, 3.618824614485651*^9, 
   3.618824758235651*^9, 3.618825562157651*^9, 3.6188257330386505`*^9, 
   3.6188258739656506`*^9, 3.6188260374836507`*^9, 3.6188261382066507`*^9, {
   3.6188281490266824`*^9, 3.6188281697506824`*^9}, 3.6188282158046827`*^9, 
   3.6188285377916822`*^9, {3.6188287877886825`*^9, 3.6188288204926825`*^9}, 
   3.6188289299906826`*^9, 3.6188291009426823`*^9, 3.6188292589656825`*^9, {
   3.618829369224836*^9, 3.618829392884599*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ha", "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184999448251543`*^9, 3.618499953735244*^9}}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.61876102120022*^9, 3.6187616285662203`*^9, 
  3.6187720434063034`*^9, 3.618772140146303*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res2$2$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res2$2$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}}],

Cell[BoxData[
 RowBox[{"genPolys", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", 
      RowBox[{
      "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
       "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
     "\[RightGuillemet]"}],
    JLink`Objects`vm1`JavaObject26281602447310849], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.26390299628032804`"}], ",", "0.4229906020162966`", ",", 
       RowBox[{"-", "0.0741459119982666`"}], ",", "0.1623945477125028`", ",", 
       RowBox[{"-", "0.08461933266007209`"}], ",", "0.01469623835848159`", 
       ",", "0.016046832311105555`", ",", 
       RowBox[{"-", "0.0454338271928837`"}], ",", "0.01925436216176758`", ",",
        "0.3568383654098097`", ",", 
       RowBox[{"-", "0.25758372146485997`"}], ",", "0.037023393920831746`", 
       ",", 
       RowBox[{"-", "0.06926678306284922`"}], ",", 
       RowBox[{"-", "0.0014361942330693668`"}], ",", "0.024591406246907067`", 
       ",", 
       RowBox[{"-", "0.03867554043769941`"}], ",", "0.07822463884192346`", 
       ",", 
       RowBox[{"-", "0.023566349158044373`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.08000000000000002`", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0.1523809708335952`", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.05406222929348628`", ",", "0.048398084993005776`", ",", 
       "0.0157034836099502`", ",", "0.02112697544523406`", ",", 
       "0.023280513055899378`", ",", 
       RowBox[{"-", "0.0019309194513797358`"}], ",", "0.0032709702470289158`",
        ",", "0.0038064452860332772`", ",", "0.000051016137582779866`", ",", 
       "0.041271867681631484`", ",", "0.056495118667116796`", ",", 
       "0.015308680547816275`", ",", "0.017927945683695636`", ",", 
       "0.012225420453020004`", ",", 
       RowBox[{"-", "0.014680841998869033`"}], ",", 
       RowBox[{"-", "0.00227354846441177`"}], ",", 
       RowBox[{"-", "0.006566982974938392`"}], ",", 
       RowBox[{"-", "0.006827251236209411`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3179652255738143`", ",", 
       RowBox[{"-", "0.3745925170232909`"}], ",", "0.08984939560821686`", ",", 
       RowBox[{"-", "0.1412675722672687`"}], ",", "0.10789984571597143`", ",", 
       RowBox[{"-", "0.016627157809861348`"}], ",", 
       RowBox[{"-", "0.01277586206407663`"}], ",", "0.04924027247891694`", 
       ",", 
       RowBox[{"-", "0.01920334602418475`"}], ",", 
       RowBox[{"-", "0.31556649772817824`"}], ",", "0.31407884013197673`", 
       ",", 
       RowBox[{"-", "0.02171471337301553`"}], ",", "0.08719472874654484`", 
       ",", "0.01366161468608941`", ",", 
       RowBox[{"-", "0.03927224824577604`"}], ",", "0.036401991973287605`", 
       ",", 
       RowBox[{"-", "0.08479162181686174`"}], ",", "0.01673909792183488`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6597067423162005`", ",", 
       RowBox[{"-", "0.6237293358981738`"}], ",", "0.18341055962198918`", ",", 
       RowBox[{"-", "0.2632431860385369`"}], ",", "0.18910095371670943`", ",", 
       RowBox[{"-", "0.040811111507779385`"}], ",", 
       RowBox[{"-", "0.06485611913329394`"}], ",", "0.13432911891853075`", 
       ",", 
       RowBox[{"-", "0.06320548168176492`"}], ",", 
       RowBox[{"-", "0.6608032805951336`"}], ",", "0.629847424438847`", ",", 
       RowBox[{"-", "0.17891951999600694`"}], ",", "0.15905067782391044`", 
       ",", 
       RowBox[{"-", "0.04142219845880331`"}], ",", 
       RowBox[{"-", "0.025093503784199136`"}], ",", "0.13514929220486585`", 
       ",", 
       RowBox[{"-", "0.23122777975739406`"}], ",", "0.10288159983422404`"}], 
      "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.618772043436303*^9, 3.6187721600393033`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["do some low order plots", "Section",
 CellChangeTimes->{{3.6185022767966976`*^9, 3.6185022778567085`*^9}, {
  3.618594948368533*^9, 3.61859495408859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"getParams", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6185950001940613`*^9, 3.6185950061841216`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.61876101858022*^9, 3.61876162672622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ha", "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184999448251543`*^9, 3.618499953735244*^9}}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.61876102120022*^9, 3.6187616285662203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nonStateVar"], "Input",
 CellChangeTimes->{{3.618650291276863*^9, 3.618650295776863*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"rr\"\>", ",", "\<\"z2\"\>", ",", "\<\"z2exp\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.61876102258022*^9, 3.61876162914622*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6187612813572206`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", 
         RowBox[{"-", ".5"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
   3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
   3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
   3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618428161337283*^9, 
   3.6184281636473064`*^9}, {3.6184289239089956`*^9, 3.618428929629053*^9}, {
   3.618494134656559*^9, 3.618494135156564*^9}, {3.61859576370079*^9, 
   3.618595780474964*^9}, 3.618596727244566*^9, {3.6186502699968634`*^9, 
   3.6186502705368633`*^9}, {3.6186503071068635`*^9, 
   3.6186503213268633`*^9}, {3.618760814572582*^9, 3.618760815152588*^9}, {
   3.6187610495502205`*^9, 3.6187610750442204`*^9}, 3.6187612851972203`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Bj5p8ZXXqov90TPwF+I31VfoBKJn4Jv3798UvjgIPQNPVT/WXWF9MHoGPmS6
fVKcTgh6Bn58gIfeLJNQ+nc+C+josdMvTtzuTf/OZwENzZPun3jZj/6dzwI6
Rf+Lq0p+IP07nwV0W7fDzvq/g+jf+Sygvlp7SidfD6F/57OA3gvWkng3O4z+
nc8COqZtxVpeRTiTzwKqz/XP/85nAQ33mFK5qHs0k88C+vLxCKnuATFMPgvo
1Ln9NYvnxzH5LKCH7TuvXKq7yeSzgCbWf6rROpzA5LOA/hjY5tzPIZHJZwEd
oXJIwVQrifHMo59sD2ZPKQxlPPOozJKlbjPfhDOeeXThryH7lAdGMZ55dHfG
G6XF82MYzzxqfzyvz0rdOMYzj0bPud6iYR/PeObRFyeUG6M2JzKeRf3zvz3z
aD8lyZiEUzzGM48GDj4xOPlyMuOZR2e1PbJOC0phPPNofs2655nJqYxnHt2a
kK6ZXZTGeObRl5fHZebeTWc8/xOnyeVxBW8z0DP0e7U/LUldsjsWPQPfIfd9
uNOAePQMPDFkOzXSS0TPwFPmp37ql5mEnoFnVAyckDgwGT0D5+813br5YAp6
Bk6/ljl/F6SiZ+ACrn8OnoEXjXF4t/RYBnoGXpr6cPSzikz0DLxCY7G2y8Rb
6Bl47QMfB8WzfPQMvOHY17TaO9noGXhT302vjs+k6Bn44erG/v1X5rL5TJoT
XbbGnE5i85ls+N2o9WF4MpvPJF9t0vp5GSlsPpMFV4+pW21NY/OZ3LwvWJHT
ns7mMxk3dSARv5rJ5jO5fnyPivrsW2w+k35c/5zJZ2Ir+XtW3eEcNp/Jz2kT
r/XrlcvmM0nVqhg8oyGXzWdidsLCfWNYHpvPRCFgxAALCwGbz+SpIO+S1/J8
Np9J4EtjiYyBBWx9Jv1eWWgrqaey9Zl8fJ0sKzc9na3P5M7bz81i0plsfSbZ
7+feeP45i63PJPSjxb6KRj5bn4lzW/Jk3q0ctj6T+T9/fCnXzGXrM/bPmfpM
Rv1emJU0V8DWZyL9Z4d/2MR8tj4T8Q6rs9eHFrD1mXzt8NG70LeQrc/kdWfm
8jO/Ctn6TFrFmieYvyti6zOp7vaz174Hxex4gywau3tDrkwmO94gV+9eaVm9
5BY73iCv3fOMK42y2fEGWarx+csmd8qON8g6O49lh+/lsuMNclJ3mvOstjx2
vEFCFxZUfe6Vz443sH/OjDfIz09fdp2aVciON8jEKteQxauK2PEG0YqZ/Eps
ZzE73iDW53NnFpiWsOMNEqW/w9LJvpQdb5D6JW18De8ydrxBOkZcFJe6Wc7k
cx05tENdY+0jPpPPdWRuyaGgoxspk8915Kyf2q+KB7lMPteRx9o7IvSGCph8
riOrJQ5ptW/IZ/K5jsTmWf92Ol/A5HMdGWDlGimXU8iOn8lRrn/OjJ/JnRdJ
f5YrlrDjZ6JyIz/qjkEpO34mgVsbNh30L2PHz6S71IuOP/Xl7PiZGBV+j3bv
V8mOn0mZtcSWiSuq2PEzUZw3UizzVDVl5oOkSn34+DdbcykzHySHWkLnaCbl
UWY+SHqbzlie3C+fMvNBEiqWqTXUsIAy80Gy7OqKvadzCykzHyT3JlaZPxhR
TJn5IDmVsd12xfES9AxcluufM/NBknzv8I1+U8spMx8kG82/x5s5VFBmPkje
drfPqb9fSZn5IHHx6l81f2E1ZeaDZLBMxfvKNTWUmQ+SvbruXzu/1lBmPkgS
IrZ2zA6rZftF5IWBVPCsxQLK9IUIv27gkP1Z+ZTp/xD3pUNcfOYXUqbPQwzj
h/2pTCmiTD+HLBo58kj3OSWU6duQgRdGP1NOKKVMH4Y8/zZux6Hp5egZ+C2u
f870W4h7vcKy25OqKNNXIYbLFFP7hFVTpn9CArZ5ewa61VCmT0KcpXyrFmjW
UqYfQiwK/frU96+jTN+D7LYOWH64oo4y/Q2iPveGde+L9egZ+nUdtuKjLccX
UKYvRyTLbL6dyi+kTP+NjBj8u9pmXzFl+mxkss7JKAfxUsr004hSeLutS2gZ
ZfpmZMV78x2uKyoo0x8jWvPfzb76pBI9A9/N9c+ZfhdJe3r0SJV7DWX6WmRx
36R7NXtrKdO/IvmKH9bUz66jTJ+KaGgrpjV0q6dMP4rUWR4a11RbT5m+E9nh
F+3aHHwbfZ4d+5Tf2dlCA+ZtkmwbH4p9jGtVQx+qe7TStkcLagtSw7CPEX96
rbjHhHtU00b36iarCOxjFHJ9cpvoF29jDaKwj9HawFszYc19aqfXeK/yRAz2
Mdq5Pu2WsOmGmbw47GP0mzXCLe3wA/rn2AtH0yEJ2C8y5vpdL5n+oQ0Xv+32
BYfXzI/CfhHE/7ahWWHj7hjsF0H8Ux8+PjPmZhz2iyB+lRMbD2SNT8B+EcTv
Vjnwq9SjROwXfebifzNxhv3ElTzsCwkyVoemHW6kAwQauvXdrqPP5v2nijo7
G+nuvt2vNI/zQZ9tg+JfqXs0Ue2DDh+OXfVDnxK5jyQ9Jtylb5/Wng3ZFCjq
9x4eMqsl7S69vuh4YFJSEPpcMGLNpglrmqnL4Beeu/aGoM+NxdaWh1uaqeaJ
nHHVC8LQZxzX14pj+m/5XPzDurtXrHf2Rp8tXPzTxg8Y10T90CfE/1R3e8SX
1TfQZ18u/jE70qbXuwajzzFc/OOkI0Z9CQ5FnxD/902/wh+2hmP/DeIPmZBW
6EWi0HOvjdEuh1v+qReOTmkBS2zQs/yf1ri0w/U0JmDCt60pduhZOUa6prOz
nkrG+Zk7Gjug5w3bVn5W97hN099FqTXfckLP+3uclPWY0EDj9ddZb4m/iJ6t
k2IXtqQ10JM9Vzj9Gu2Gnj13P9CZsOYOJZ+n2uzJ8EDPH7m+llvk3/233lz8
D/dPvTN02Ur0PJqL/3v9SnubYYboGeIveRe7IrrqGHpez8U/pemR7Z5qG/Rs
wMXvIROyaHbv8+gZ4tczPyB7t/ASeob4qc2TiPqBHuhZ+DuqoC//yPX5X78O
PAt/L5W0Jv74HqmsM1hvhb/rKir/I+RXdqw11tsJXfWnmja1hraO2XMK6220
X/NvdY8a2rHjZPf5ty2x3uapS43xmFBLr5iPOSzW7yjW26Yvy1a0pNXSXssW
LPzZy5j+XR/+GR8w/bfrXPxZu2ZoLlp5HettERf/jPeLl2UsvIb19gsXf6fh
uR7BDzyx3o7n4lcs+uX9Vekq1luIn9cvpiNjkTvW21wu/jFmIw7VvLiM7zWI
/8JVjdN90p2xDgu/93y66GHCkUTPa+hZmJ8FVGXS+tg56dfR89mu77GQemiP
Tht7wRs93+z6XRfR1fsneZzp74OeW7t+v8V08259snqZD3oW1plSmrO4Pvv0
RB/0vLDr91hGbcWt+stneaPnT1xfazfTfxvDxa/Z0yl+qVcketbk4jdRPbpw
qV8keob4055+m25pFYme47j4Z3Ub5vJ4ZiR6bubiv+NWt94xJwI9Q/yRVyef
3j0xAj2rcPGH9R060NQgHD1v7Ionhdroxc0yfRKCnuO7Pjftn9/F7gcfO0PR
c/+u+2dS088xX6Pbw9CzSVe+3aIxr9wtffLC0XNpV15lU5lNg/dQwwj0PKkr
fyiNnTkzUe5pBHoWdOVJHjW1eXYgfmEkem7n+lonmf6bNhe/nukt39kFSeg5
kYv/IR2nUCfJQ89SXPzfNBrfXF7GQ88HufjDBtx9bKDPQ8/FXPyv+k+R2mbG
Q88TufgFqwoOGxjz0HM+F//s9JvdLq9HTiVD/xf/OfqwxnaKg3WMqP/WxT1o
2HrZA+oT4tCzdVc8ftRr8epBK8JuoudfXR5CaHKQ9IRjv+PRc1rX80ZQm1sq
1YdlE9Gzedd9YqmqXlYu3zcRPSt2xZ9AXZc4PZ/UL4npv/nyc5n+2xgu/hE7
594XZKejZwku/n76l5R6rMsQ5TMXv0fonDy9ogz0/I2Lnyc/ya5peiZ65nHx
G9YbHj9kk4meTbn4k/LaA4bnZKLnGVz87q+qfz5+iZwOF3ISHDRVulJC1H/T
Ed6HHBti9ENzAg89Bwo/l9zL/yj7XiEZPT8SxknuxxYbR8qloOe1wucixyvf
vD/9IwU9N3Zd70FCp+hGH8pPRc/ZXfwcMcyW87a0SkPPL7m+lgTTf5Ph4r+9
Knbs5vRs9LyNi1+5x9dlyhdz0HMAF/+s35evzV1L0fMzLn6qaDF63TeKnrdw
8VtUaL+narnouYWLvzZwkNELF+xnkjQu/h/9f1iNFIj6nNnCPCd1TTKS2xtT
0PNI4e+CyPZYkXNaOQ09Zwt/R+STcU5Yll06et4t/N0R/d5OVCYzAz13E/5O
ycEH/lIXWjPRc5jwd036fup0H/E2Cz2vFtYBsmRR4pqiF6I+5xuur6XA9N/4
XPwl3u68o0156HkEF//s+pmT5+0XoGc+F79hTLuS+EsBetbj4jeSf3j/gV4+
ehbn4p8zs21sWXU+eg7n4i9pndqZNw/7mWQVF//UyRcsi6+I+pzzhHWbiA/s
7P0kNAM99xTWeZLRJm8fqZ6Fnu8I3wukh9SlOU53b6HnCOF7hDzXXy17bms2
ej4hfO8QvU/rZ3jTHPS8RvieIhk6WtkGErnoeYTwvUYu6ob8kYgV9Tn1ub5W
FdN/m8vFH+a6frNqQwF67sHFvzrMQLHSoRA9N3Dxp2wNCTKZWoSeI7n434X3
ih9eVISerbj429zdt9zeVoyeIf7cESuu+4v6mWQ4F//OpXIWR3VL0PMd4TiE
zF3zStzUXNR/yxGOW8iORz/V6nfmoOcI4TiHXLw7/WH0MFH/bZRwXESUHpxL
+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
8MxAy4/y4QVUjas/wO9WXqzI0y2itVz9Af7jd1CUgWwJTefqD/AR09MceleX
0vfC3zWOQ3ZeeLho/dJKrt76Ij+V+WXYx+9V9AtXZ4CvP+Z4qnR7DTf/5SG/
18/t5QilWrqfqzPYnwz13WoysI62cHUGeIdKeEH2uzrsywFn1j3iuMiP2deM
/a5fxScn5obi/lDgRRNk1641DMP9ocAtNxiMOiIZjvtDgU86yftwjReO+0OB
NwSLCfjbI3B/KHDH8g2ejztE+5fZPh6sRwU+7dx5YnYvCveBAm+JvT3Qyz4a
94ECv9Aw7mmWQgzuAwWu2mme9rA6BveBAn87hTr3soxFP2y/DvzgursBiyNN
bH3QD/B5sidpxz0f9AM8bGRyo5uqL/oBPmj8+w/jfHzRD3BbBYU+qV990QPw
Mcy+Y+DuChoqB0f5owfgnTMdtX+f8kcPwM2Ucw+6NvmjB+Cti36dG6McgOts
ga9ZoezHuxqAHmC82pPZRwz8l7yms/Jqe/QA/Kt796AX48+hB+Afe6Sle3ez
Qw/Aqz7UBV7NscHnBc5j9v8Cj6gfZNHvwlF8XuD+mVYhh1eZ4/Pi+kOSF3qj
mwk+L/DvEle6G5w0wueCce9LZt8ucJ0he820Z9riOm3gaxeZm8vMtMd12sDn
7LM5cmfGeVxHzfb9IH7g4TvsfRpTPbGfBnzYOwnfDKVruG4Z+CVbD1+f1OsY
J47DmX2vwOmStRUPE/wwTuCTRs/bcVo+ED8XuEQ3Nc+6L5H4ucAXH7nVPFox
Gu/P9gPh/sC3r77NL/SI+s8+Idwf+LBa2WOZJJk538yZr/Wv55s587f/6/lm
zvyEfz3fzJmf/K/nmznz0//1fDNn/i3mfDN2XPr3uWfO/Jx/PffMmZ/3r+ee
OfML//XcM2d+yb+ee+bML//Xc8+c+TX/eu6ZM//2v5575sxvZM49g+fy+Hvf
JV5vwpyHxvYV4XsB/sj5RvjoG6L9mMDHHpFRPTpXdB4a8L07XGoKilPxewEe
sqxj/1Ad0XlowB8rWPw68DED/QMfN+ilG98hCz2z/UbwDHzIjDHpEWspegY+
7aJGxG8z0blnwNd29vg0UUV07hnwQxZUVbOH6Nwz4BdfWJ0/WSXapwA8dte8
2mBv0b4SGP+z+yuBXyU1ada9MtAbcOnTugln7mSiN1w/k/Y68mzELfQGvE/b
iSAby2z0BtxRsaeP7WqKftg+JO7H4fhHc8vQeevzmf1llMRLZY9WUipAP8AP
x4n7K40SnVcGfKqGxjDlnqLzyoC/euHmqfyuCD3APIXd/4h9Rf/ZrsrPRPsf
gZ+Y1vjq2Ucq2s/L8WG6OSEaHaL9j8CPTXDfOK6H6HnZ/iQ8L/CB8sc3rJxV
jM+Lfchnar/llEvweYGXxY2I+axais8LfNKxd9vKl5Xhc8F8h91vCHxWzSOv
iFECfC7g0/KWHt+yLB+fC/gk3o3NPfaLzpcDzu4HBG4qf0mnu2Y5xg/ceMAb
1aSjuO8Pub6YhpzetUqMk+1bQpzAl0zMV9NzEO3XA95I4rc/LyzCzwXe5+it
StNo0f444BtXbzI7dbxGdG4GN49wruTrlEwSeQZudqlbbcHoOqzPMD6cx+2X
gfoG46LcK9OlBr3zxnNOgL/h9oNAnQHuFL0weMAFP7wPjDf2/CgLXLPOCcef
OM7RTnYyanbE+wPP4vZBwP2BGzhLBM2+dgrHjfj3VtWWI4d5J/BzYZwwwXD4
1/OSO7HOANdIPa7iveIg/r6A5+/6YG2Za4F+gI/k9gtAPMDjy4xD3p25hHUD
+KJ+K+qWV17B3xHwF+FS3da5uuN7BMYVT7W1dA5VX6Z/nyNUTGNlT9QNP+su
2mcH19sXfj0j44m/F+DynwbLPY65hvHjunduHT7ED3xfmlLPbPdgjB+42Dud
oR9aQzB+4P7jHRTGTgnD3xFwlZ2xqpssROdvwHjGjv/hbcgMf3wu4LGWNwJy
k2/gcwE/5D15spl/MHOeDKW2x206/+wOxd8X8GvajY2XxorODQbeg1sPD88L
fLhKbXCHeBw+L/CZQxVOXS66ic8LfFW7rfZIlwR8XuA3jU28GsITsW4AX7DN
u9soJ9E5wDCuKDVqGVKSFYYegG99sy8luT0CPQB/avpW+8aMaPQA/GjbsU8X
jGPRA/Buln+uWIbcxDqD47QfjjP0WxPQD7s+HPwAf7lbefQY1WT0g/3JoFPv
h2xPQT/ALR/nZPc7nop+gC+ZIH65m0ca+gHe01BN51t8OtY34BWRF6e9K8/A
ONn1yeAT3o+G+1v3OOuk4PXAbbl1tvBcwJvtf59QOZmH94H3ztSprgkr/okH
vhfgQ0f2P/IsPxPvz64vhfsDLzYY/6BMRnQOAPCce4+p3+hC0fk/3Pvi3XvS
2dGZhZ8LfOi8xvGaWtmYD8CXWZmq3wihGA/wsdw6TIgHeOoqjdW7koowHuAa
L722izcX4/cI/P6FRwdju+P7At9HScmfNmRp5WCcwCUjNh7S+Wd8CHECJ0en
JLSk5mHeAj+6ROzzzt8CjJ9d3wjxAw+ddOTmm/WlGD/wO23qnw56lmH8+H6k
Y5ReN5djHgJXvfj95IGxlfhc8B5U4WtVZ9WK9ukDl+SlrhyoLMDnAn4vcniW
ka/onEzg8QFnZuZ0iM7JBG579VGYzD7RvnvglFtnCM8L3K23t4z1a9G5l8D1
//xyqdtQic8LfO7nPZ1TkqvwebHP2b43i/YT7QcHfujD4C+vs/F8S9G6Pq6f
Bh6AS+aMkC/6LdpHD/z0PYnCz2dF51gCf/P756Gx3UT7u4HvGvlmkKa96BxL
4GWqLZnWPcvQD/AB3LpB8APc5mXOaUkn0XmVwL/ZbxsY0KMG/QCPv1r9NLlQ
dF4lcMNQtYyy86LzKoGPTqYXH6mJ9nEDbxTM3/O9j2g/NYyXKrm///4/Btc5
IQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx0unlQzu//BZw2KkuhhHYphLKUEEcLRSolIaVoI4SEqIhSkTYKpRCltG9a
6Z32fbm7t/Zkq3t537a0qDz3b+Y788w883z+auaaq6v363Wd67zOOZPyyfNW
LoICAgJ6IgICQvyfm37E59J0y4jL3nJC1GX1SGt556O8kwffrcbum1XKiDr9
2sQ+1UboRQYHr1LlwbZkq+eIWBkRJcrLeLW6Gc5KW2cbz+FB6kUEW/B7KVFW
5WtMWdWK0h8Ja8NYJFo6XB9EUEuJ84e9TsyTagfd/vQXiSYSf763lD4rKiUO
t8/0x4p3oIX2rJL6hoTfeTG1XbGlhOZKkZccAQpcy7oGJoJIWK6JFAi8Vkok
rRg58/UXBXf1vzWGnSQhYK5GXD9SSnwS0650/9QJ5dzlZ17pkTAjqIraOqWE
3WLyq0MbFfUXQ1hm0iT2zB7iVS0sJYJlirqyimgIq6t69oLDxaqNEQq6ZAkx
Pl1qahhPxxNjsV9ZlVz03iWevKwvISZPZ0dK+DEwu3GT9f3HXOi6ftm2+GUJ
ser++4fjR5l4Fwq5/We48N/i/SHhegnRYytXOb2xC/GZXv6zdnJxglOqEDcr
g3i2V29NyeZ6MI3WZeQ68CAkryulxEonTEJ0s6p3NWL9DYXvzrt5SJOf/s5p
Tye2ki0bfY2bYfQvSm7Nah7MZNtuLShMJ0rox8VDTVrx5IlLkZQED+YST1Y/
jk0nzj9/Odyu3A4nOarwOjaJFcpRPx76pBPN3/MNt8t1gLK4hAxrIHFxrYOJ
jF06cUck99jJRRTUUINZe16TINRKF2puTydsO/eXq83uxP7xlEH3WyRMijpv
8WTTicbcNXVnxjrxW/fWonnHSDCD2madHk0jmlRfJiz5TMX6+oDZ+ptIIJ+j
lNmeRjS4aG1Y1EKDtvi9M8vESZR9l4poSUsjpE4pa+zLoyMr1Fwoc4ALm2ra
YE9AGnHMdt23tIcMiDQeiZpbwEXgCufCkWNphIS3ynG1i0z05+RX7Q/movj5
nStzNqURjdmqi3P2dcGpap3yraP8e/To/TPq7UKcnL3KdGZHPQSmXgS9PcPD
6oKlpsOuLsSbN6uTPuxrxLVe1cR9ljzkPnvvE3zQhTiebL9Qw6oZr8uXveZt
5qH03BO1gZ0uRGa8QOKXg61YnPx461sZHtQtHs3/u8qFcFiwk9qu3o6/FlZE
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
FxOnsxVk10w1Q+qNa2gC/71cTjywdNM6JvaK6qVrxLaCMvDsd9dzDkwfEIML
ljIRuWKp8aql/Plos+aAYAgHjEjVFHFhJlxU39JLPrXj3Ut1acXzHMj8Lz9X
/19+fv9/+bnClhsCNxkM3COGXth4UjB1h+Z1YhsHEbr7GHMqGJhqPjx3p04n
SvWZFnEKHOi0XZxsS2Ggh9YU8HGsE0tEnqVwZnGw4RtXtzecgTvzgq03F1FR
1RdQdOIzG/t/3z6nfZmBRx0futZ40RA+169ZsJYN+830659sGTjQb+hTup4O
UtphZ9drNhYf1dhLggFOhVR611c6fDYvOE0GsSFnty1JS7AHOr/P6RbH1eHU
mYw3IW4cuI9X/6B87+bjmlb1Z1sDMqV3btrNr+vJ9ZZg1/5umNVt+i7IbISZ
XsDsL/p8XOV1zvvZ2I2x103n8i82w9NEVO38Og5OWfmc8y3sxp5CmZrB2a2I
ixvsZC3hYEUXpXluYjeG3wUcd4lrQ2752xgHfr3ewkkhafe6cdLVtTI8uh0q
K3+tpo38d35usylCdPOxbkw4pM2Rkafg7EvbbFYRG7c3zX2oZdCNRXr3byn0
U4CU+XvjE/j7M5Z22K7qRtaYYs6/+E5kTooVXrjNxorYDGrpvG4c170on3mU
CuF337wuuLIhUfe68sjPLvy8vcVi+WIa6Gb7ZJL2suG6JaNJj96FbRHpNWim
Qbt7w5bFa9mYP75Y/XxJF14vH/gjeZuOBvKTT8M8NkR/3ZVZ7d6H0bQYpUTF
OqSdrO5162SDbbSGMutIH47PmEqIF9dD2/7Ii+2VbDyWnBEvN+rDoWcSCy+Y
NULz6NodgjlsvJbqv+Cs1YfubQoD6QNNEPAMFK+MZ8PQ/PDfv8v64JWT3vjY
owXHLqx7fiuEjTNKC4dChfvQsGXNwILJVqwW/tNsfImNurAHD5dze/FsSp8c
39WOJ5Ev45fb/3d+blqoleZY1ovRB01HZ1V1wM/B0UlyPf+dtn9eqJ7Yi7Ky
Eu0xfwoEh49c0Jdm4wlNR3h+UC8Oxr1V/aTXCfOjX2Sf/2Vh12r/PHn3XrgE
u00W/+mEX3eA4oaPLNSGTLscN+tFXWXphXNZVMi8Wmb7r4aFR1cHrzA1e7F8
rp76H74Of7XLJ0MqjYWhX+eNo6V6sSLm+qu9S+j4EaIjdCGMv/94s/fqjAHc
zfcI/vq8FpShQoW8rWwcvpx+wDN2AHWfk+6s0KrHt0i/7Ker2YgqvLgt+s4A
vCcFBMPeNyC6crQsWJaNRRNTzJgLAwiVeZE5bdwEar/RuI8oG7u9UhffsB2A
mxi9xLKtGeKL5a1v/GLhY0CotLXhAAae5wy4HmyFxeHDf6IHWNhT5LhTUWMA
1zJJNzlqG0pkN+vWNv53fu60K1upbKwfznMXVeq7dODxspvHYp+xoLY9pyW+
tx/xmTe2TSry9clRqda9wSxslVfZHV3Rj8iArsO1fB1O2Faxtc6zsM71Q+Gb
V/0osD6zMy6iE7+yVCoP2bDwsEL/3Jc7/POFJEbcjahoc6i9QOixEPnSptbC
rR/RazesXD9GRZe1ptplFRZ0lLJX/zDux7RnSkR3Cg0TxwXkb8xm4eAOJd/D
nwfR2p/ULC1fi7+e0rVa8Swksv0dW7sHsWYVcYyRVIfpWDNDDf69dPXZVmW2
D+LE9oVtwmsaEMW0ltnix8Lzr50mEzWD2DO+Uso9oxGCf9Umjp5l4Zd3x4GC
0kFYrHfU+qLRDIckr52xtiwc9Uo/NpQ1CGHx3vhDqS1Qc3A7M2nMwvn1TmLB
LwcRW39IJ165DcFmAhsDNv93fj6P4z6+J2QQWXK+liPCHdBQOTezSoKFkNVz
It2vD4LTtXGbwbsOHLvxROXg6AgKw4cpi88OYpfmh2XNFynoVwxYWd4/guw4
+6a99oM43bXlqs/KTuyZbeNyoW4EbtepUfPMB3Gm6HjUbkYn6t0+HLyQPYKw
Jy9MnHcOYvnVLWeUgqngOeZ5Vj/i74+7s3haL5uQ0xfbO3+6ASlGlJUNu3lo
FrZmyuvmEjlWR3Y2VTSBcvDKBoU1PIzvK1A2bM0jbK3OnQy92YKX9U65xFwe
dPWuL9rvWEDcbOb+UdrahjNWl2a955JoT9+dwOK+JUbfbG9Lu9IOeWbNIrUW
EheeP/WmXSkivCgBD/6adcDI8I6lRDrf71xOta6fLCb2fsGHMyoUnI9ZFeQX
TKLhP/JDF3UxJadDWcRc35JDlfx6/RTGRNfbk5BevDvWID+HuOlxeNX+ZCp2
tLRcjt9CgiUVwxTbkkdEGDSl5p+nQcK00LCOr+cbJPx8mt7mE52jBmYsHb5O
qJv3mhjm4hTaCg5oviXuBZWGfJqkY16yf/8jgoszw3rNbq8Kida/20qiyxjY
qEtbczyGi/V+P2OX5NwmWjbup8uINWKdHPWIqzUPLzIlNedzIgir81mnm9qa
0Pl3p+Lu7TxMDZUGPw5+RDjM33ekK6oFpwLXXHBQ4uG7rM19a4kEwsRhw4dZ
Fm3ICGY9qxLigb7/Z8YvIpGIXXSTGRjQDtr7Ayn+X0gk3RQREv2ZREjaTcv2
2XVgHsVx6esavk8PZirtXZ5K7I4p2XDh/3KhIhFhoyQSkdz///zNU6SPmrj6
NlEdJ6rpMdiJU07bpiPcSZikbZgt/DecSFmg7dubTUU3GsP0jUlUP3YznqbG
EOs+hyob+NJA+W6o9VSFhKqLyKrNy+KJjKc1a8N30/Ewtiw2c4oL38Tnh2TU
Egn1lWtTciUYoFzhvr5L44LV3J4moJ1ELDlGhD9vZSD16d+9uzK5YFTeqbiw
NYVwPuxZvz+ciQTDvGtDAXzfLTOVNc1Nxr9tx/fKCjXigj3l6QkzHoTEuk8+
u/cSm7ghG0qbmlB4yadVcAu/zxGzWwcPPwMzrFxeLLIFa4Rv6FEUeKgMF9/s
lvwY5oemV1by+/yNqOH2CvMgNr51aue/SPyQeT374J122N+NzNQaIZErs/Ll
vZZAnCEXFeo58nVv7vM/PU0k3mh8dFRleSDbrcz2ti4FV9xEB7gZJBr/I38z
emS52HNvMkaq1PpW93bi7L+LYSudSYR2tUYJjiei7KPviyWZVLR+fPXvpCGJ
d3+YWXPsEuAextwp50PDuGP5YR1lErGKGwhZ5iN4WS91UN1Dh/rfvMjsaS70
Mv+JmbpEwkYh9bnCfAa8EhOH+/n+6650Tqy+WCCSyx4/+EthgF6l2krN4+KE
+IM27eJzsHFWKMyMZkLy/vnWxFAuPDIU+k+vK8aF8WZbIzbf92/13vhVi4dd
e3nb1S4Xwnfuee+cgiZ8XOBvelGeh4mnL/+5lxfATZV4vvJ6C+bmZp5WnsOD
8IGVw0/F8hG28pC7/fY2HNnUIyf4g8TtuVo/ZA/nwjU85bS4bzsuXa1tU2SS
+O7tK+Zrng3uzadaokc6oG3y4G3wexItGUvO1PxOR5jFkpWBGyiIrb1VaJxI
QuY/8rf4uLTyyWtFMO/fozm/qRPral4IL97HX19Hr11W+xYdrgPX5yVQkTF1
S2DJWhJ92xca7JUuwE82edHkLL/P6w8Gv5hLQjFtvhndLQ9h2/adfaNLR47j
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.3477705485634658, 
   0.08309942495467432}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6187610227302203`*^9, 3.6187610692442207`*^9}, 
   3.6187616292862206`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polys1$1$1", "[", 
    RowBox[{"[", "4", "]"}], "]"}], "//.", "lucaSubs"}], "//", 
  "ExpandAll"}]], "Input",
 CellChangeTimes->{{3.6187613680052204`*^9, 3.61876141532522*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"4.56674912716431`", " ", 
         RowBox[{"(", 
          RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
           RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
           RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
           RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
           RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], "+", 
           RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], "+", 
           RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
          RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
          RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
          RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
          RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
          RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
          RowBox[{
          "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
         "\[GreaterEqual]", "0.1700283424116845`"}]},
       {
        RowBox[{"2.48859054425355`", " ", 
         RowBox[{"(", 
          RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
           RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
           RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
           RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
           RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], "+", 
           RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], "+", 
           RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6187613176912203`*^9, 3.6187613724252205`*^9, {3.61876140270522*^9, 
   3.6187614166852207`*^9}, 3.6187616293262205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", 
          RowBox[{"polys1$1$1", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618428161337283*^9, 
  3.6184281636473064`*^9}, {3.6184289239089956`*^9, 3.618428929629053*^9}, {
  3.618494157486788*^9, 3.618494179391013*^9}, {3.618595784535005*^9, 
  3.618595805385214*^9}, {3.6185967326886263`*^9, 3.618596744408744*^9}, {
  3.6185968980582943`*^9, 3.618596924062562*^9}, {3.61876129287722*^9, 
  3.61876129487722*^9}, {3.6187613276312203`*^9, 3.6187613287212205`*^9}, {
  3.6187614333192205`*^9, 3.6187614421292205`*^9}, {3.6187616827582207`*^9, 
  3.6187617253419666`*^9}, {3.618761778661433*^9, 3.6187617790514293`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXdcE8sWgGMvV7Eh9oq9d2w4VsCKFbtiV+wFOyqIKCAiRaRK6B1CEnrZ
iC32gEGjIoK99+5Vny+7M0vO3Ln/+Hvf298y+2VycubM2d12SzdOX1FZIpHY
1JZIqvz9N2iYv0n57rNcu3uTFX/+3Of2GCdblu/2RbbnjB0fe5ym+IRT7W/d
GJVHcW1qi8SSVRkUX6Q/TyrFC/XHx1D8ip6fpLhE/5/zcMjL+OMR5Hf581N8
GT8eiuv48VN8Cn+9FF/K+6G44JPFuZXbZAHp6+9SniHHniHHniHHniHHniHH
niHHniHHniHHniHHniHHniHHniHHniHHnhmci/+n0YH1d29SniHHniHHniHH
niHHniHHniHHniHHniHHniHHniHHniHHniHHniHHnhmcexNuv7LD+CLKM+TY
M+TYM+TYM+TYM+TYM+TYM+TYM+TYM+TYM+TYM+TYM+TYM+TYM4NzK/Tz/DLl
GXLsGXLsGXLsGXLsGXLsGXLsGXLsGXLsGXLsGXLsGXLsGXLsGXLsmcGF+VPA
mM8FjPlcwJjPBYz5XMCYzwWM+VzAmM8FjPlcwJjPBYz5XMCYzwWM+VzAmM8F
jPlMceG65AzPcoZnOcOznOFZzvAsZ3iWMzzLGZ7lDM9yhmc5w7Oc4VnO8Cxn
eKY4JxH+g54hx54hx54hx54hx54hx54hx54hx54hx54hx54hx54hx54hx54h
x54ZHM8fxJjPiDGfEWM+I8Z8Roz5jBjzGTHmM2LMZ8SYz4gxnxFjPiPGfEaM
+YwY8xlyHA8ZngsYngsYngsYngsYngsYngsYngsYngsYngsYngsYngsYngsY
ngsYnimOf98pz5CDfIPyDDnINyjPkIN8g/IMOcg3KM+Qg3yD8gw5yDcoz5CD
fIMxn4sY87mIMZ+LGPO5iDGfixjzuYgxn4sY87mIMZ+LGPO5iDGfixjzuYgx
n4sY87mIMZ8pjtdflGfIwXqQ8gw5WA9SniEH60HKM+RgPUh5hhysBynPkIP1
IOUZcrAepDwL63HKM+SgvkF5hhzUNyjPkIP6BuUZclDfoDxDDuoblGfIQX2D
8gw5qG9QnoX6EuUZclCvozxDDup1lGfIQb2O8gw5qNdRniEH9TrKM+SgXkd5
hhzU6wjfd+DmxGVVz3Bnu+zvdDf9HpVXQy4cjxjHUxycn/p8IQfnpzhr/LAO
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
xH/KbtZETjxjXtfavdWchgriGfPEj+0O+NVVEs+YT/TPfKCtmUY8Y/5iuPW4
RlXTiWfMj5Q/jpn2J514xryzy97ax39kEM+YX+jWaP21z5nEM+Yrr8ddr/M+
i3g+zud7KG1Ii7qLe8cTz5ivOpdYr8GKROIZ8+bTRjQ8E5hMPGO+8s0qt6Gr
ZcQz5kgpc290MJV4xrzp7u9HX4XIiWfM36PRx85lKohnzC9Vc/c8dUNJPGMe
cfnG8R1v0ohnzPd6tfSeWiuDeMZ81uwVPl07ZBLPmPdqlexbGWURz5hXf/jl
xN252cQz5mWx6KRyWw7xjHn2hiP+Hp65xLOSX7+gqjcXjNnxNYF4xrxb5PSD
i9YlE8+YdxkSWR6+SUY8Yz68baijSUIq8Yy5dY3Adm6P5cQz5kvf+J7+1UZJ
PGO+rdhzyeZ5acQz5kdy3So99k0nnjEPijgUNud6BvGMebLbgVFXamURz5if
3rynHI3NJp4x187Z7qjYl0M8Y/4UbW7XOSuXeMb8Z6d1pwM/5hHPmBsZrVpi
1IsjnnX8ehzN3HJqlyeXRDxjvmPU3p/FQ2TEM+Znx3cd+sgnlXjGvMH0mzs/
vJYTz5gvmncwQ2KlJJ4xT1za54tReBrxjPk3u3sDWv2bTjxjbrHVbWt3m0zi
GXOfPWbyIbIs4hnzsoOP3lnWziGeMe951Ku3zfJc4hnz3b4jNizPzyOeMb8Q
/DJxS1OOeMbcbfoV+5FDVMQz5qk325+wfKKC9ToUaVSWEnM4Bdbr0O0+1ml7
zVNhvQ7Zzkv27pghh/U69Oxg3U3X+ihhvQ5tTFo3eUd8GqzXoS83L3dr2yED
1uuQg6R7zYshmbBeh6p1c3u8uUk2rNehozOeFzT3yoH1OtTIwUp6pnYerNeh
wOgYh3XO+bBeh9prqs9v/JuD9Tqk/bdfy/s5KlivQ/5eD9wUO0+DvK4MLejk
/f3wwAJUdtFu1//rzBv+bz/9Hnfxsfd4144exD/mr0bFTT743AMfjzB3Mw7K
H793Czk/5lYLNqTP+rSJnH8dz5EycalXTnUZOT/me0dyvkERyeT8mE/+pnu4
qf9pwvH4f84fWtDqFuGkjpphlxBqauMKj+faNjK53fYE4sDxyCQ41CL2ABkP
+buH98278PSvx14bj9r+vy6doZ+epdy7lVXOS1PcMUeYT938/mbwjoXkeH46
l6Ju37rkOV1LIcdjPuE3F7BfQT4Xcv5TUauarG13lBxPxv978c7ajyw5fH48
fkWhZb0R7cXx4/Nvnr69LKNcHD8+T+Xs1SNzbrmS4/Hf1ey5PnHC87lkPPg8
njHW4WGNU+B4UPdRT+5Nr16AXk3LbH3oJd0vnfWXTsvMp+r5mMPjAwP+/18W
dTzm8Hj+XyV1PObw+Ez9302mjsccHr9b/28kdTzm8Phd/L+MPnlbqk8eH//f
/d62VL+3g/AvPA/m8Pi9/Dip4zGHx2fzHqjjMf/v8ysZ51fSfeD850j34Qv8
v8eTzxhPPnW8MA+p4zFnHE/1geP5CTmeh5Dj+QY5nleQ4/kDOZ4P/92Xbkv1
pePPHXL8+UKOP8f/Pl5J95MLn8t/nyef4tgzg1N94Ngz5Ngz5Ngz5Ngz5Ngz
5Njzf/el21J96dgz5Ngz5Njzfx+vpPvJBc//fZ58imPPDE71gWPPkGPPkGPP
kGPPkGPPkGPP/92Xbkv1pWPPkGPPkGPP/328ku4nFzz/93nyKY49MzjVB244
nwsY87mAMZ8LGPO5gDGfCxjzGfal21J96YbzuYAxnwsY8xker6S44XyG58mn
uOF8pjjVB27oWc7wLGd4ljM8yxme5QzPsC/dlupLN/QsZ3iWMzzD45UUN/QM
z5NPcUPPFKf6wLFnyLFnyLFnyLFnyLFnyLFnyLFnyB0M/n+RY8+QY8//fbyS
7icXPP/3efIpjj0zONUHDuYzYsxnxJjPiDGfEWM+I8Z8Roz5jBjzGTHmM2LM
Z8SYz4gxnxFjPiPGfIac6gMH8ZnhuYDhuYDhuYDhuYDhGfal21J96SA+MzwX
MDzD45UUB/GZ4bmA4ZniVB84yDcoz5CDfIPyDDnINyjP/92Xbkv1pYN8g/IM
Ocg3KM9UP7lhvkF5hhzkG4z5XMSYz0WM+VzEmM9FjPlcxJjPRYz5DPvSbam+
dJA/M+ZzEWM+w+OVFAf5M2M+FzHmM8WpPnCwHqQ8Q449Qw7Wg5RnyMF6kPIM
OVgPUp4hB+tByjPVT264HqQ8Qw7Wg5Rn2EcN6kKUZ8ixZ8hBPYfyDDmow1Ce
IQf1Fsoz5KB+Qnmm+skN6yGUZ8hBfYPyDPtgQV2O8vzffbNKioN6GuUZclAf
ozxDDupdlGfIQf2K8kz1IRvWoyjPkBvmySXUeiR3dUiz8d4ixz53Fg7t791B
7DPHPgcM1U2q2H+Ofb7TxyWxzxn7TNB/j0SOfa7Sf+50vXE1o35oqr8uuk54
f9zLK1YVxo99BiYfeeJVYfzYp02TThKDvnrBZ4MDZ5pVHD/2efWZbf+K48c+
x51c+iR9/S3KZyX9degon3l6zzrK5y6959uUT97zbcon7/kO5TNR7/kO5TOR
UX/j/d+ifPKeb1E+ec86yifv+Tblk/d8m/LZUO/5DvSJruk9U5xz7XXuyvq7
dP2N93+D8sz711Keef9ayjM/z4spz7z/Ysoz75+uc75j1N/4+U/X33j/NyjP
vP8blOdSvX8t5Zn3X0x55v0XU555/3SdM9DdeuV47yuU54YL3QLupl+lPLvp
P5drlGfev4byzPvXUJ55/4WUZ95/IeV5NaP+Vqb3c4XyPFvv4SrlmZ9v1yjP
47KDVv75c53yzPvXUJ55/4WUZ94/xTnTbOP+GevPUJ6D9P7PUp4b6f2fozy7
6/2fpzxX1ntSU575OHOR8vxeP28vUZ7fM+pvvP8zlGfe/1nKM+//HOWZ93+e
8sz7v0B5znW/GeBVYfzY88CFDa6aVhg/9jynUPFnvLeS8my1revKDXfTKc+D
m4Re8e6QRXnuov+8cijPJvrPJY/yzPtXUZ536/2fpjx/YtTfHup9KinPRXpv
6ZRnld5PFuU5udckSXqF8WPPwYWnV96pMH7s2X2b2dXffzjKc77+/KcpzzO3
vr/YY7wT5dlu3PXfncd7U547FUb5Z60Pojxv7TUioOP4cMrzVP3nFU157qn/
XBIoz9X0XmWUZ/5f/1zoObZJUn/TCuPHno/ruTfl2Sri4FVlhfFjzwf0x4dT
nhcs9JesqzB+7Hmo/jwJlOdWzzcE/vqTQnmuwXMqH+7Mn4fKh8fzf5fKh9fw
46Ty4Sb8dVH58CLeA5UPj+O9UfnwM0b97cOf//8njh97NuY/RyofHsx/7lQ+
vICfJ1Q+XImfV1Q+PJafhzAfRr+26OctlSdn8fOc8uzEfy8oz97894jyHM5/
7yjPSv57Snk+z3+vKc+3+DhAeX7JqL9t4+MM5fmb3j9Hea7NxzHKc0s+7lGe
e/FxkvKM+LhKeZ7Cx2HKcx8+blOeM/k4T3keyf8uUJ7V/O8I5Xka/7tDeb7D
/05Rnpfyv2uU56WM+tsL/neT8ryV/52lPP+r93+B8nyI/x2nPBvxv/uUZz8+
T6A8t+bzCsrzDD4PoTyf5PMWynMJn+dQnhGfF1Geef/XKM+8/6uU59t8nkZ5
fsWov/Xl80DKsz2fN1Kes/k8k/LM+79Oeeb9X6M88/6vUp5P8Hky5bken1dT
nnn/xZRn3n8x5fkun+dTntvy6wLK83J+HUF5juXXHZTnWEb97TW/rqE88/6L
Kc+8/2LKM+9fS3n+rfd/g/I8ml/HUZ5d+HUf5fkyv06kPPP+71Ceef+3Kc+8
/9uUZ37+6yjPvP9blGfe/y3K83JG/S2OX6dTnnn/dyjPvP/blOftfN2A8sz7
11Geef+3KM+8f4pzh6f9npS+nq6/XeLrIZRn3n8p5Zn3f4/yzPu/R3nm/ZdQ
nnn/dJ2zLaP+xvun62/8/C+lPPP+SynPvP97lGfe/z3KM++/hOWTyvdcGZz/
vOi+L6GOR32OwvEUdwWfI+g3o8bJ6EMj96FfXjk0JcnqONhnL+NGlH7b0/Oa
C+H4+Mi2eZWrxHmC/fcyLsNq6cXAmofE3x3hePnWajHxqmNk/uDjeysum9Qc
c5BwfPzp85MnTtd5gP36Mi6m1cDl9g6O4vdaOF7TzO/t97dHwT5+GTeyvvmy
cxv3i/NQOL50XalPWI2jYH//73ge1/sd+mgP4fj411ynwePbuIN1RxnXVnge
guG+fxlX3zOt/6xr28jx8L5+fDzmtVdmHPCf4gr6BMo4yfIj13qP2Uw4Pr5Z
1p8OI1ceAf0DZdzDzelFxpvWEo6P71LH6uJTh8Ogr6CMO9tiQc1Lc5cTjo83
W3x8vecJF9BvUMZZuVfZ+9tlHuH4eAu5roFZ0iHQh1DGNcoPuVaotCIcHz+r
Wrv00rPOoD+hjNt9Y8HNS+1bcZjj45fOWTPPpeQgmbf4vvi0Rj0t91hWyDMF
fiRVNfbVKDGOYT7PeubohcPFOIZ5j9dP0bVBYhzD/LfbHnPUV4xj5D79LvWG
ybqLcQzziPPhg9t1EuMYfM4A/twxH1/5Uv8qLcQ4hnkL6cK+2xqLcQzzN+bv
ez2uJ8YxzFV3nXvY1BbjGObeu5p2u1BVjGOYL2+S2HnwHx/iH3OzNNQx7jvh
5L7+U6o2960s/IlnzHOL2tecneJPPGN++1HHviuaBhDPmH/50mXeVscA4hlz
41o9Djq+CCCeMe/Xonei54xA4hlz6579ikNyA4ln+JwB7Blz92mDO2cfCyKe
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
sV+7OUmjYqi8cfPckOr/BsPj1Wisd0poq+VxVN6Y3650769/Eqj8cIx8adhV
cwWVH0p+fPfMa6Ck8sOyHgPyAtsnUPlhnzfrjzz4nkjlh44pMTO6FSZTeWDj
f7oMDy1VUnlg3suz7cZcSqPywJVXltR4mpZO54EXMu80KU+k8sCI7F8+F54m
U3ngE5uw6GE7ZGC+adFuzZiDPrtTqXzvybLXNzftT6fyvd33PBVqpwwq3zOa
3e94W5dMKt8L12jX7XTNovK9JkvNv/mGJlP5nvuZ89Y37WRUvvfPzQ2mDw6l
Uvme2zOTr6+lcirfq/0z/9L3HAWV12XmyjePbptJ5XWDr88bN2VYFpXXZZRX
bjbPJpvK6wZ9in+1YnMOldelVZ+h2nw0F1xvCbIU+vlhvncu7lixekkqle/1
mTVcesRXTuV7QZIXdlYXFFS+Vz3x5MCaP5RUvrd59jiJukc6lde5Nd5Zx/h0
FpXXfVZ1vHXjYzaV19muuxHm0ymXyusuNXFcN2NuHpXXDTzTy6zR0Xwqr5Nu
KKl0I5+j9knH9H1htSDqGLVP2nTZgSlrQjygB+61r8nM7SeOUvukBecT5x70
cKf2Sf2+jV58/JAbtU+6ttvt5SEO+Pl7Yp0QP38P7p+2L59svPiQC7V/+q3h
o2brHA5R+6fXxu5us8vemdo/Dd9ev6PL+oPU/umO2OhuPiucqP1TfF8q3D/l
Rlx/3qKZD/xecLNzZFYfPnpT+6dvzbxj1Ne8qf3TI8qt1UPjvKn907Z9Z62w
d/YGfsTn6cF91fyxHvvX1POG3xfO5vSGUvTCi9pXfWM+1dzknBe1r+qS3Tf4
VagXta/axqzRz4LdXtS+Kr5fFcQ3zqyHzaquISepfdV9daaEX795ktpXPfdq
3D37+v7Uvmqdq+ZNW07wBx603HTheXdwv3WcbdueZwICqP3WoyObrl5zI4Da
by1qWz+iXt1Aar+1aaWapWkWgeC6xPtY4X5rnfJaITdLg6n91kodmyon7Qih
9lu/ru50uaDeKXBd4vPl4D6sb7tN40vfScH4NZznmK8zm5mHUfuwbiv22c50
DaP2YeH75TEP7WV/rsHGMGofdpNTDU75IgyMU3w+G9yfVW5fqYvfGkXtz7pc
+lY4+S3MM+n3rWO+UrOn6ZGrkeDvqv6um/jnlcF924O9t46xnBVP7dvC94lj
XiI8j4t1nyzc5/0HvL8b8yOShvmTusRQ+7xVIx2abF8TC/Nw5Gj5fFPo3zwf
7vP+fjHzkvplPL3Pe0xl+qFHIrXP+6VvD4cWG5LAdcHnSon1w23Cc6XgvjB8
rzfmi4o8mnLBMpjPo5aRY87NME+F+Ty6Y/9987N7qdS+sL9lSmuHfXKYzyOb
ZisuN2ijoPaFTV423xnNKah94Qng/d2Yn+p2LjPuWDxc96EPf4ZJhv1JoPaF
xxXLLa9sTKL2hQPiu3ouLEum9oW/oqlrd3SRwXlInssE94vhe7oxf7XlRdiB
Bgq4TkR+96LGXbyooPaLR1oted7ASQnXieiFvKXHvKFp1H6xbytdn4gPadR+
sRl47zbmSzOPed6ckUztF3tw9c9d/5hC7RcvWDbe4dFFGbVf/H5l7ablAanA
j/g8JbhfPH3c9GbxaWnUfvFTq0bK6EPpMJ4gh0naKRGzMqj94oZTTzwP7ZgJ
4zP1nmvMX8w0C3s+LJXaL177/le/QFM5tV/80uPs2Qn/KMB1adB64flFcL/4
2Phz+4a5ZsL4jOo9ca//alMWjM/Iy2l6ePCcbGq/GL4nGvPd++XPrB0U1H7x
E+W+zcq9SjBO8fk/cL84fP+YogFHc+DvHTJKqzc/wD2X2i92Be9Nxrzs7uDW
rd+kgb8rPg8H7hd7PL3SyC8/n9ovhu8Fxhw/BwbWG8F7ckk+eUN47gqsW+L+
wP8BfSXItA==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
v0srlsw=
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1:eJwt13W4VNUaB+CBIQ7dXdIg3SAlnQLSSEp3d4q0dKOUCKJewgDrgnINQC9h
oai0ShiIKJ2+65n54zvPfO/81tm1Zu298/cc1npo4kgk8qVKqmYki0QmRSOR
dXC7PpV+uhrDVrGXWRL9M2o0W8m2sKh+jnqObWN7WE79L8kjkev6rCqbypEi
ElnMt8p9ov9abon+WTWRrWXbWEr9zOBsM3uLZdBXVif0SVRKNtBOzw5ZuZfZ
bpZJ/5g6o0+t0rKhctXY6TBOpWFDWBV2Up9MpWKDWC32s/52okgkMxvFarKf
2E2WiY1kNdg5dp1lZCNYRfYdu8N8jPRlD52DAvavHq+vKjoHtcO58fmuXBa5
0XJV2SmWEPabDWYtWWJjC7IKbBnryPKzuqw1e5N1Yo+yZuwp9j67ZruZWEVW
SRW33Q5yuVgNfTO5/8i1YxlZBVaPvcTas5ysOmvKXmOPJ0QiG9hRdpKVkGmr
MrDyrC7bJNeGpWalWA22lv1uX5KwwqyIesS+tJKLskLhnMgtl2vNUrGSrDp7
gT3JUrIS7DH2PKttX9azI+wEe1SmFlvHDrMfWfFwbW33e/0D5/mhymC7dfhv
LLnKKTfB/6vLftenULnYRNaI/a3PpAqyZ1k99keYKyo3m8SasGv6LKowm8nq
s8thnqk8bDJryK7qM6oCbDrrzKrb5y5sMDvEngrzl3Vmg9jnrDH7R59ZFQq/
U9aA/alPp/KyKWwWm2HsFraLZdQ/oe6HjCrFFsg1Y3fDMagS7LlwbM7fJmO/
YmdYaZm67EX2JTvNSrE6bCP7gp1iJVkF9a3+VqLYOtLHn+bsXjh+VZLNZ+XZ
Mf0NuSSsN6vEjrN7zOWK9GNN2Z1wLdSjbF6Yf+y8/r5cVjaGtWCJ7EsBXp4t
ZeXYN/prcr6K9GLz2HLNbv4JKxDGOY7CrB3rxXbJnbEDF8KCqBKF822+5JMb
IPe8/lVf3ZLLy/qzNewVdoPlYf3YaraV3WT52TC2ke1g91kBNpy9yHayB+wR
NpRtYOvDtm23MBvHXtG/E9Zn+1ycTWU72V6WmlVki9iH7DDLzaqylWw/O8YK
smpsFTvAvmWFWBW2lH3EvmD5whrLlrD/saMsb7i+bCH7gB1iuVgltpjtY0dY
HlaeLWB7wz0gzH/HUYSNZ6/q35VLLleIjWVb2dssGcvKWrLhbERYn4z9yfW4
4nM+VVpumnP1M/srrCGqDJvKbrMcxjZhHdgr7DrLwhqwNmxz/PpejN+Lwj1p
j20WVRPkXtO/J5dgX87KXdJnD+sVG2vsaXZWnz7sDxvOCho7wthN7HX2kCVl
xVkn1o+9y6JhO6wD68PeZolZEdae9Wa7k8bWqx/icy/MwTdkzrFffc6hiuJx
cjdYVmMbsrZsCysmO4XtYNvDfcT5K8mmszf1++TShfWVlWU92DC2z9jUrDzr
yZ5WP+jTqAqsV7gech/JpWRlWHc2lH3IUrDSrBsbwj5g6Vgl1oeNYp+wBFaK
dY2vdXtZdtaRzWWr2SWWjT3JprPF7Ey4/7IXorE5FebWyBSx+dKKPaOfpi7r
k6hirKO+r7HvGFs9WWx9DOvkFt/N12eRa+LzBDbXdz/I5WCd2Dy2hl1kZdlc
9h47yLIZm4yViK/PA9keubSsIusd9o19zEqxWext9inLYmxpNpu9w/azzKwM
m8PeZQdY1nAvZ9PY6+wDloaVYM+wN9iHLC0rx+ax99lnLDtLzkrG7ynh/vFf
+5KbPc2Wso3sCsvJurPFbFFYu/XpVWXWVz9a7lO5DKwK68fGsP0sM6sTjf1O
w+/1rD6jqsr668fKHZDLxKqxAWwcO8hysR5sCdvA/mQ3zedsrBFrx16OP79k
jsaemcKz0zcJsX3uFo1d73DdW5oHfRxzo/h2wza+M/ZpVi9+PcL8+5r1ZPXj
czIc2zesF2sQP95wbMdYj3Dfi8/7cC2/YsNYOzaWzWK/sO6sdvx3NJx9wYaz
9mwcm83Ox9f2IdHYOQ7nup19niDXh83Wr5S7JjeR9WVz2Cp2nU1hg9nCcF9g
99hkNogtYOvYXTaJDQxzm61ld9gI1oGNZ3PYBTae9Waz2Ar2D+vCasR/l+H3
e5h1C89T8d95WCOOsn6sKRvEJrEfWX/WjA1mk9kJNoA1Z0PYFHaSTWUj2XL2
Ekukn6ZGsRVsc1juwjGE5xUWXkqmslPGdmU14+tLWHOOxNercqx1WNtVHed0
iFwbNlo/Q+4nud6sYXzuhjn5bXydnByN3WfD/barsX3lGsfn6Xi543JDw/Mt
G8Nmsp/ZYNaajWLPsnNsEGvBhoV1iJ1m41gvNpMtZ3+zkewpNonNZ7+xUawz
m8wWsN/ZXfM+D3uCdWHb2D2Wl7UI+8t2sL9YGlaTNWfr2UV2W19cVWFz2AV2
S19MVWaz2R2W29jmrDPbzs6zm+EeoyqxWew+yyfXknVjO8PDnfNXiLVlPbVv
satyaVkt9gRbx/5m6Vht1oJtYP+w9Ozx8NtlG9ktlp01Zu3Z1vg7U8Fo7NqG
a3zcNh+wR1grfXe515PG3i9vJI69U4R3i/1yl9gDn0urmnKL5H5lD/VlVC22
MLy/yT7v/33OvmdFXYsxqiubGtZEdlluLOvJZrBl7CobzbqwKWwh+yN+j1rL
DrH/q/TmVXW2hn0WjkGuSHi2Z6vZQfYdKxzeR8KDLyvLavu4OP7OlDQae3cL
73BHEmLr7uPR2D063Kub2MZlueSsir6BsSuNnet/LmO72Mcsf3hXkEtgVVlD
tkruD5aMVWb12YqksWe4+dHYM0R4luhnG1fkUrBq+kZyq+VOsR/1UZWN9Wf/
Ar2r5Ig=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
n6evEKyd5FflgjWVfLJasBaVn6TBek/+dlSwftZzHhqsvbWOhwRrG/nSwcF6
Uusln7oEjonzY2ngSTx/abCeVHzIgvWh/LxqsB7WvJ0RrAkX0denvQYv1vwH
5xfz6L9KnBOVoT8uONd4R2OjY7Ri7ynBec17WsfgXEb5Qc3gfGS+9kJw/vKu
/DM4r5mrdQzOgxbQNwjWKh/QNwzWSx8G1wMyzXneekTxajNch8+GwguDa3uq
d0ob1Q7Ood7XtdF5hXKH/TO/zzDFh2DNL5+ZEh0HpEk+TBxjt3P/Honz3/Hw
R4nj6vd5n5OKqz/CGxLXN3bmnaMot90FPxx9zum865P6+W/X3GPbzT0nM6Yn
vAeeArcKzqOXKS4mjvnbsJ8bXAdYQd86OO9eTr8gcczfypjn4f+4z0T4vcRn
xxa4W3TurfrnkcH5mvaX6hZ5rUXedYuC1g5uEqwb/z8fxV5OPob9rGDN85Fi
Y3Cup/1YJTjP0j7VOXwpnNEfFpx7ag+qzqZ627pinaa8/DlvLbCv5j/vmk2q
9co7fkj/70ffJbgOqfpb02ANtoT+f8G1mjX0N9DWKD4H14r20TvmXU+qoGdQ
XsO6v534TFRNS/l4F31/5jNP+f606Piv2u/O1PmdYtrU6HNEGvXN6DNXOuf1
6LxCem9MdC4hXfQP195R4hg4NjrfkN6YHH2mSO9NjI6N0lQDovMZ5cXTo2Oj
asXjo2OvNOGE6Ngr3TguOt5KT6oWolrlDTrDovNDadFJ0fFWGu+l6BxMOfIr
0fmM9OTg6BxMevKv6DP4yeBai2qkqpXqfDta88wc/h19jj4VXANTvfpWnSGZ
cwz5Z5vM+ljn74jouoP0YcA+J7EOGRmdY0vLDY2uO0izDYrOu5RPDYnOA6Xf
hkXXHaTfRkfnitJ+r0bnh9LJv6auz+hsHRWdh0t/Ph6d3yqP0Hmvc/9G/n8i
Ov9XLvBVdN6lGvKs6LNPvyl8GZ2bqZ48M/qc0m8Ez0fnwNKKL0TXKaTDZ0Sf
Tartb4mOHapFbIve83fBW6P36p2Kq6nj9hB4Y3S+pN9WPo/OD/W7yYbo3wBU
W94cnRPqN5QtqffaUK79OjqO3A1/EZ1z6reDHtF6Wtq7Z3SdRflpr+j8RLlA
9+i8VzmO6rWqyV+sd4iuDUmTPxpdp1DOKO1TVRovb42rnG41/FR0TqWc68no
XFQ5VyvW/dSC49VD0XUl5cXPROeuyiWfjc4/lbv1i64RqC7UP7qOoDpP3+i8
VHlK7+icR3nNy9F1AdWXnovOaZUP9omugyh/OSdz7UNxdXh0/Uuav23m2qX0
p/S3dLjqxh0z/66j3xpUL1dN70quGZK6hqwa70up45jWtH/qOKk1fTl1zNFa
jEhdz1QdW7V5/bZyufZp6jlU3fK4Yp7eWboqdS1RdexRqWuYqm+PTF23VN17
dOrao+rkA1LHOuUpqvHrN5SLNO+Z81Vp43Gp96/29cDU8Vb19ldT62HVtMtl
PvOU41TIrIFUm03h2YnzhYqZ9aJ8tVLmM0++Nz61NlZMmAhXL7Eu3S+zjlft
VHpW+dEG/KR85nNUvwWUzXzOqfb7Smr9r1r64NQ5her2e1LX1qQ/62Wu70g/
1M1cU5MOiZnPPNXbs8znourGp2WuwUmDKfYol/mMZxiTuias3xR0Jigv26ia
Sea6oTSP3lu52CbsZ2auIUqfnJ65Hird0jBzrVOaR3V9/S52feJ6v37zug5u
lLm2KB3SNHM9V9qmfub6rHRRi8y1YJ1r7TLX1pVD6XcV/ZZ6e+LfZPTba1f5
d+aaoM47/W6j355u077KXF/WGd0ycx1Z+vb8zL9d6axslrl2LE2lfSm9dwHX
bmdOriqxLmqSuaYsTXhh5hqodMtZmWvQ0oeNM9dSpbv+D907E/M=
          "]], Polygon3DBox[CompressedData["
1:eJwtmWWgZMUZRN/s9Ezffbi7u7u7uy3u7gQNJLi7u+tiu7i7u7NIgOBOEjyB
QILknNT98WDPu/NGbnfXV1UzzTZ7DNt9yMDAwG78p/D/dZqBgbk7AwMfdAcG
jhs6MHARfBe8IxdfhS+B74F3hl+HL4cfhveA34Ivhu+Gd4Jfg1eHZ4L/wvMd
CV8GPwTvzvU34QvhO+Ed4Ffgc+Gb4S3hF+Gz4BHwxvBz8BXwI/Ce8F/h8/oD
Ax34NPgL+E9c3xGeEL4RPhO+Ft4IfhYeDj8K7wW/Da8JzwK/yfs7Gj4bvhHe
nOvPw3+uAwPjwQ9y/e8+PzwufD/8N/hSHv8g/Ace/wa8AjwUHsn1g+Dz4Vvh
rbn+MnwGfA28IfyMzw/vBE8E3wQfwPNPAD/K338Jn8P1m+AtuP4CvD+8Mzwx
fDO8NjwX/D6PPxZeDZ4afhk+wvsD3wJvxeNfgvfl+ceCb+f6Z/A28Avwaj3W
CP4jPCZ8K9c/hVfm7yeGn4IPhffm+ujwjfDH8F7waPD18EfwfvDY8J3w5/Aa
/P3M8BvwUfCBXJ8Qfhz+Cl6J6+O09/MQPx/Xx4cfhv8B7wOPAd8MfwKvwuMn
gZ+GD3M/8tPls63P7/7OXriG60/x7z/xu/e59nU/++FT+HL4U3gL+F34AvgT
eHP4Hfh8+DN4S/g9+EL4m37W5zP4Cvjf8J7wN/AI+Nt+1uNzeDj8A7w7/BV8
DfwjvAf8NXwt/DS8jJ8PPh7+HN7K9YMvgr+Cd4A/gS+Dr4WngS8ruT+X9vP5
zy3t/urn/p0OHwhf08/6XwofDD8JL+X+LdkfT8FLww+VnO8v4e3hj+FLh+Ye
bgd/VHJvv4C3Vg/gi+F/wX+Av4Svhr+Hd/Xew1fC/4R3g/8BXwV/DG8Gvw2f
5/mGB+BTS/bHOfDv/OqUkv34JryO+xc+A56H9T8Jnoz9ucTgwMB88CnwFPBS
8LzwyfDk8JLwwvCZ8DTw0vBs8DHw+PAi8NzwifCk8OLwG7ze2vBLvN7pvN5D
8MLu35L9+hd4LfhF+DT4fXgj9Qw+B34JXhl+Ej4JfhlexfMCnwy/Bq8BPw+f
Ar8IrwQ/AZ8IPw+v6HmAT4A/gDf2vMDnwu/BG8Kvw2fD78IbwK/BZ8Gvw2vC
L8Cnwm/3cxZehc+EH4AXgu8o0d+H4UXgu0r07gl4SfgB+Bh485rzs2Iver8t
/CK8ei/6tgM8Cl6rF/3dAn4aXqkXvd8SfgZeuZf5sAH3eFP+/S6/O4hrZ/F6
v7LeJ5Wc5zPhX+ATS/RkZx7zGo9dl795B94efhles5f5cjaP/43Hn1yiT9tx
/SWur9HLPJkKPh5u4HvgBeDL4CnhB+EZ4dPhseB74bng89VT+AF4iRp9nhF+
BF6yZn7MBD8KLwRfDk8FPwRPBB8BD8B3wzPDZ8Bjw/cNzX68Ap4afhheqmae
zQw/Bi/iPYGnhZfhXp3O5/svT3dCiZ7+getvOi+4/oH3s2beLtnLfNyoZp4t
3ct82bBmPi7Vi96vXzNvl+hlfqxbM68W72W+3dnP/LiR1zscvrmfeXhNib7e
2I9+X12i/3f14w9uKpkva9X4gYV7mc+7w285b+EPna81fmChXubv8jXzbA74
cXg3+A14g170elf4L/D68HvwLvDr8HruIXgz+El4hV78wqbwE/Dy8CjnTY1f
WbCX+bpSzfybC37SeVYzj+eGn4JXr/EfC8BPwyvW+I854Sfgq5o8/74lr78o
18+Gp+P6sqzXMvBF8GzwioOZB5vAX/D4CeFn4Pmc5/DgYPRc/3A5/APPN6If
f3EF/GOrt8PgD+EJePwr8OLws/CYg5k/6vG38MSD0ZtFnYfw6PAoeDH4GXgM
eGQ/83Q4/G+e//p+5u9V8M/wdf34jSvhn+CL4B58don/uBjuw+eUzOvL+5n3
58PftPNnCHxGiR+6AO7CZ5b4pQvhAp9VMs+v6sd/XAz/E76yH79xEfw9fEU/
/uIC+Nt2HiwLj4LH5vO8BS8HvwKPA38Irwa/BY83GP1cFX4THhc+kvU73PUu
Oe8HN5lfU8C3wwc1mVeTw7fBRzU5z/OUnN9Tm5z3tUv2z2lNzvM6JftnRBO9
279kv1/bRA//XHJer26yX/cr2c8HNpmXk8G3tvN8ED4P/ho+pIl/mBK+Az4c
3tt5VqIvxzfRl2VK9OS4Jnq2dIkeHQuf5vkv0btjmujhIiX6djJ8qXpacv5O
aaKPa5Xs98Oa+Jup4bvgk5ro4yolenUifJ76XqKHhzbxN1PBd8LD+/FrF8Lf
tXoyKXwt/B/4FngyeAT831avD4CHcn7mZr2mhQ+GR4fng6eDD4HHgOeHp4YP
hAfheeBp4IPg0eB54R15P+t14gn1L1uoQ/BH/GzpzKphf7+ej4cfcz3hYfD0
8KHwmPAC8Mb8/234Y3626kXfj+Tf4/DvBbk+OfwnuAfPAc8OHwtPAC8KLwaf
A08PLwcvC18Mzw6vBM8KHw2PBy8MTwL/ER4CzwpPCu/r54Fng2eBj4LHhRca
zPzZB+7As8CTwfvBBZ4dngL+M9yH54SXhi+EZ4VXgA90jsLvd5IBntBndzKv
N4FvZ72m5N/X87jfuJ+3wVPA18G/ws/C88OPwaMNxl/MCt8Nl8H43XnhR+Ch
8CPwbPA9cA++FZ4cHgn/wvM9Bs8B3wdXrj8Kzw7fC/fhu+Fp4VvgAfj1mvU5
3gwA38f1GeDb4S58DzwdfCvcGYz+D/d889lWhteBr4cXg9eAt4Lvg1eF14FX
ga+E54VXgVeFr4Lng1eF14avgxeFV4dHtPt5Fl5v2sHM59s8r1xf0/0E3w4v
C68F38v7mx6+jccPgXdu4u96rf+/q/Wri5bs912b+M/a5hFnyKhuMoKzxRny
Sjf3yNmixr7QzRqqva7Z293cU9fSM/pcN2vg2XVN/tbNTHGtXIN/dDODXBvX
4O/dzBjXxjX+ohtP6dq7R97pZg3dO67Rh/A8naydM+jVbtbE2eSa/7WbPeFe
UMPUMjVOr6WGqWVqnF5OzVP79Ph6q0l6uTfeI729GqfWndCJt9OD2lXc24k3
dca91s09d/apSWZ/PY9atQrPt0vJHnAvOCNf72ZPOTudIc4SZ4Re8uaSrkRP
pDdyz33SzZlwL+7BYz7rRHPervHMdhd6Nr20HYRdhBqkFun5zNLOBL2gM/aZ
bjTU2esMNjs7s53NzgyzsJnQWeLMtavQYziLneF2CXoAZ7se2q5Gj6i39kx8
1M0Z9azo8e0y9Ix6/zP43TudnDHPmjP52W403FntzH6+G01wlruHP+7G87i3
7RTUFfXlzRqPZzZ3Rur9nInORjOH3k+PpddyZur9nKnO1mc78ZbOVGerM/f/
3nhouiQ9sVlAj2F3oKfSezjDneVqttrtDHOWXdCJF59BzS6ZIWPWaPgCJZlR
bVdz5yvRXLV4RniOkhk1NjwTPGfJjBq3RnPnL9F0tViNXrbdr2q3M2GFkpng
rFCTFyyZGWr1zPBcJTNo/JoZs0x7Hnz/zoR5288zSbv//Tznt/t9ll66shHt
5zMjr1Eyc8zOZuTVSzyr2dkZsAk8spPZoMZtU6JZap8at22JZql9zqzNSjTT
Wabn3bREA/XCaqpdlx5brXUmzdOeF2eVnmHl9v2arZx5y5VkIGehM3fJkozv
LDaD2j2aIcymen67Qj2+WWCRXt6/r68Wm0HtHs0kZlMz0dbt51GLzTx2e2YQ
s9AuTfJ1v6QfMjNt1b5/s5SZye7NTGCWMuNs3N4vs4+dwvIlmcCuwYyzUXv/
12zXY9WSmev91aMs1uqV3kXPo17p0fRCavyirX7pdfQ8S5R0HHohPdHiJZ2I
XsmMY5doRjX76OH0cnpWs4yeVe+qZzUL6Vn1rsPb9dED6gX1gGYzPbxdnJ2S
3t5Mbten5zerm7ntBvV4ZnE7SLvIXZxJNR2mXaadWK+mw/muGw+vl7eTtZu1
U+tyfSQ8bknn9DPXr4PHK+mkfu3Hk+vN9exj8Pgb4AlKOr2Osxsev6Qz+72f
juabbjouuxs9s955n3b/HdJ+vnHbeXlYq5+TtvpvZ/NFO//MVnYqX3fTodm1
2Nl92Oql3sbO5/N2/tkF2el81k2HZNdjp/NpNx2MXY+d3chW39VrO6dvu+kE
7aKcJ6Pa+e28NHM/1eq7WdzO7oN2ntrl6dH16nvBE9RkGrONGWKsms5xrJKO
0S7STnLMko7TrtKObvSSDtTuzg6zKcmwZlk7vjFKOlO7PzvCUuJR7A71IHoR
Oyu7Us+QZ0mPYveqh9HLeMbsNu0QOyUZ16xrZjA7mDnGq+m4fuymU7P7smMd
uyTzmn3tbH/rppOzyzVDmaXMcKPVZCazk5lknJpO99duOjK7Xjvd37vp/Ox6
7Vz94sPO0S7Wzuxf3XRydml2bD9009nZvdnJ/dRNxjRr2gH+u5vOz27QjvX9
1g/Yvdq5+d2HHYpdnJ3Jy61f0y/Y0d7bnje7WzvCr7rp5OwO7cD+WNJB2I3Z
8d7dTeb2fNrZvddNh2OXZ4fzUjcdsN2OnexoJR2sXa0d7C/ddJJ2s7fAk5Zk
0qE136Hc002H73cr/4JfhKeCr27n+Wa9dEh+d3A/vHCrX3PWdLp2/2Z8u147
Xb9rMOPb9dr52eWb8e0C1e+dW71WT/XQu7R+TT3Xk+/a+jG9up2e3vqAVi/t
fLYv6XDsguxwNijp8Ox27PBWKsmsdnur8XzbwXfAq8HrwkfAr8I71WRCs6Ed
ln5jLnghrh8HTwmPDw/Cm8If8f5/5/nf5fPMCd8BT2SGa/XwO7ip0cWpzart
z8xc37+Ta3bMb7T+0+756NaPmqH002bkt1o2O4/F3/8XXh1+1eeHv4SXgB/v
J8MezvO/0omftH99spvOZySzbnl4fa5fDS/O9cXgFeFz4TngteF94MfhTeA3
arzbB/y8VdOZr9r6J/22fnn/1o/pr804e7X+1nlrJlPv/E5M/2gHbLZ8T32u
yVgHtP5Ov20m2rv1w2YlO//V2vnpdwF2nn43aKdnF3p/jbfSI+mV/Ex+lhl6
+ayH1XhTM45Z55Aa76qn1lsfWpN99LR62yNq9rqZyezknvcsXFJyFl6q2Yvu
UffqazV7x3v+/3tfk7X0xHrjY2qyg5nD7PFAjdfRE+oNT6nxynpwvbid3tSt
Hqp3D7efR8+od3yoxjvqOfQefsexTjvfzUMP1ngRPZXeyg5y4nYeq+cn18wu
Z5jZbJLBzEc7pl+4flRNNjNDmiU9I+6V+Xs5O+fCyzsrusn77kH33nMle/Oc
mn7u+276TjOw59U97973DLn3ay9nayp+ZiptR8G1C2r29n+66Ttfdo070QC1
4Pyavu/nbvrNJ2q8jPfAezGpr9nO+/+ovzWz1JlqVj5WD99JpjPbnVqT1cws
Zpeja7KhGdWsel6N1qv59qun6VE7yXhmvbNrvI0ex35DDXD/3FCiDSfVaIOZ
2Gw8sqa/mpXr0/H462qyx2zw9PAVNe/dNXFtrq/JGmYUs8oNNVnDDGIWua0m
q5g5zB4n1GR7M7XZ+vIab+Cecm8Nr+mXvEfeq4vUQHhISZ96VU1/ND08OXxN
zdrMCE85GI1QCyfsRTuubdfTNXQt1Tq176cSzbu9JtuYqcxWV9b0WdPBk8FX
1/RnM8BT2Be1+229kr7sjvb1zEhmpVtqspgZyCx0Yk3XYKdht3EpvI2zv6Q/
V4PV6r+VaPMjNVqihqll99ZkDT22XvueGq+tx9Zrq6Fq6dq9ZPX74FM7yShm
leNqtFnNtks4vqbLULPV7ptrspoZyCx0Y022MzOaHW+CD+sk85n9Lql5v0NL
+mxnjOfhryWz59aabGkmNZte1t5vz7hn/eIa76aHs/9+sWbWmeHMcq6ha+k9
L+aDmn5rWMn3T9s08QZ6Jr2TnXun9Uf69w2aeF09sl7ZGal2b972qe6hIa2/
s6vfs4l31HPqPfdq4j31pHrTPZp4Tz2mXtPPPLT1n3b76zXxznpqvfXpNd7c
17d72qiJV9Kj69XXb+K99eR687trspKZy+z1KvxcJzPH2eM9alr/qp9bl79f
sBPPrnffu4l31oPqRfes8e7ONGfbPlzftpMMY5bZtonX1KPqVf2OaN2Se+x3
R97jYW3+8rs/97h73U7RrnhYE2+vPps1dmryfa6eW++9Q5O1cE300noWZ/Ww
XrzMdk28sR5Xr7t9E6+rx9Xr7tckK5mhzFL7NslaZiizlJo0a+uvBms0SW1S
s0ZXO5pkNTOaWc15PlEnHkOvsVuTe+k9NUvs3sR7mjHMGls08dJ6fL3+xk2y
lZnN7LZlE++vp9Zbe4bHaf2/eUGPo57eX+J9nq/J9mZ8u4ezauaRnaXd5cE1
2c6MZ1e2SXseluvF6zhjnDXOFL9re6pmLVwz1+6Fmu7DTsRuRE1UG9WwAfd+
TRdiB2IXckZNN2qHapeqpqltauoQrj1T01XYWdi9qIFqoZr8G6//HNdv6KRj
sWs5s6Z7tXO1e920SVZ03pitnYE/t3nE7/424/oKnWQYs4wz66c2n5hnX2n3
ix5Lr6Vn1xtP1IuXd2Z/3+Z1v7t0pn3X5lPz7iZNsrWZ1eyqB9ALOPP9LmCr
Jq/la5qV7qzpMuw47DpG1Xg7PaJe8cIarXA/qzWPw5d00lnZXT1W013ZWdld
PVrTXekJ9YabN8lqZjSz2v8A5LbsCw==
          "]], Polygon3DBox[CompressedData["
1:eJwt13fYlmMbAPAnvePpFYUKLe2ihZZPw2jS1KaBUqJlNUgqkoxSaCAtDZqS
0t5TEynK+Oy9w0eq73ce9/vHeRzX+XvO677u937u57yut3SPgW0HnJFKpY6J
TDEnnUq1M3gkI5V6WLTLSaXmsvZstPxQnlTqjuxU6mXWho1kb7PebBZrxR5i
B9ht7HWRl5Vjg1kx+Rsik1VgQ1kJ+bNijfxY3lSqKtualUpNZKvYB6wy28ye
YavZUVaFbWGzrdva9Ubwg6yXmufEWvmH6qqxbeoaqZvA3mSrxLB8qdTjrJS5
bfgsdXXMGyeWyd9RU5atNncO+50tMue0PBXPQPzGFrKT7JR42PWyXa8Sv1is
9tmL6t42/s31GrreB+oWsH/Y6z4/0zi/WCpOx/2xwsZFxFxxnC1meYzPEK+I
v9hrLNs4LR6J5882WOM8a7xqjXnsD7ZEXV7jDDFazGab1BVSt0DdfPYnW6ou
0zhLjI112G51xdQtU/do/M1sCyvMFrLXWB5/bxl+H7tQvkSckq90vfOMC4kn
PJfy6prwpmKzz6bxd4x/d71G5h51vRnsU3ZGvHvs21jX3CLm1mFXiHXmzlT3
jXE+0UXdr+oWshPy5T4/y/hsMV18wP6xRgt1n6mbxX5h54ge7H9sMTspX2Hu
OcbnipfE++xvc5ur+1TdA+7lf+xCUVQsUz9b3a/GC4z/VvOPWMT+ZW+wAsYF
xRgxh21zvSKutygr+b219bfdG88v3lf1j8X3brxD3fnqFqubzLawz1lN9hab
ynaxb1ld9jabwrayL1gttocNZ1Pj3WVnslnx27JuTet24B3FLus+pO75eF/U
5Vc3W90ktpl9xmqw3ewF9hb7ntVn77Kn2fLoD6w8W8ueZ7vZd6wee4dNiN8/
e49VYOvYveypeP/YKT+tSex697eY7WcHxCj394C6SfHuyLPMfUndCPZC/BbY
WexlNoxNZltZNpsev8v4PuOdZAXZPDaKTYvviBVgc9nj7FX2FivOXmdPsoVs
LyvJ3mBPsAVsDyvBlrOR7MX4TbOz2Rw2hD3D1rK87IV4fv62hp79bbxX9E9/
2/3Rs4w3qstUN03dU2wR28cuYivYYPZ0vKcsD5vKlkVfcL2yfBArKh8aPVW+
Xl0Ge1Hd+OjH7F1Wjq2JHuFeOpj7aHwn7M7s5HnFc7uJdxEL1MwXHY3HqDvs
s77q9orLWFs2h10nb61uvfxHa/wg0vaPffxyde34XHXXyzur2yc/qaYlO2TN
/byGuvZ8Hmsub6Nug/wndQ3YdnU3sI3sZ3YV28Hask3sF3Y128nas+3sD9aE
7WWjWUFrXM0nsgrZSc9OZya9JXpMdfd8EztgfNrc1uoOm9uB7WB/sqZsP+vI
drK/WDN2gHVie9m/7ES8W6632zqXWKM5n6bumvgNicqsBXuJXSs/KOqyrtHz
Wdvcnh+9f0g66eclcpJeHj19aDrp3SVZaVEqJ+lRf7MyOUkvj55+fzrZMy7K
SfpT9Kn70sn+VZQ9YlzAulfJJ1i3ojkHxJXxDkTvYDdEvxbXsp7xDsY7Iu9t
7n/lBcUt7GvX3sOrqGvJprOG8tvVfSY/V/Rk3+fuo7GfDk4n+1xx9/I2u8bc
HvHbVHdjdrK3xh47KJ3sw8XUtTPeZnzcM26sbp/Pb2T72SnWir3HurCDLCXa
sCNseeyH1ijPhrDi8ftTdwXrw1axVqw7e0+eGX2SfWTuOFZVXbfolayxupvZ
YXmW6MQ+Vvcsq6Pu9tjTWUt141k11j36HWuUnfTiWplJL4ie0DwnOQ/EueDB
dLKnlWNjjS9S11o+09xaPn+SVWSd2HxWP3evrZCZ9PXo743MfYyVZK3kM9TV
jp7LKrHO7BXWIHoVq816R69kLdg6cQ67nI1mF8snqLuU3RJ7IGvKurFD8oxY
lx3zDHqyj+RniW7si6xkL4w98aF0sudWcH+3Gh8zPlPkiEKsB/vQOL/oau7n
5vZin8gLiJvZV+w29rH8bNGdfRn7Eavu/m6OvYE1yT0PxLlgeDrZm8vnJGeT
OKOMTCdnr0psjPEF5jaTTzW3WnZyBjk/Mzm7xBmmrrpR6eTQfKl8lLoL1HVl
78rzivbsQ/dyCzsizxad2SdZyfkizhkj0slZqaLrvWLcyfUekx9R18/na+Ke
WTU2gpWT3x3fsXyhd/xft/Bsbs/Zk5H03Oi94/Ml592JbI18tfiGDYp3kC2X
p1xvirl3scfZjdY5gSey/uZ+m/tdxHcyx9zGbIrxTnMvMHemukPm3mDePXwb
6yNvrm6p/BN11dnK6DV8XLwr7LQ1JrN74v2NPsdOsudYS3NXsq9YHXPXs1bs
TfY1u4JtZC3YCvYlq802sFezk74XZ7J8xjlxXlBXz/31i71QXfvs5F07mpH0
5ujRU9UfjfdX3QOxp8e7G2cmdVexgWwT6xjnI3Y1u4ttZp1YEzY9I3nG8ayH
x/mUtVQ3nO9X1zPOFawzG8veZ/3jnMLqs/5sA2uXnZx9lsg/dq2P4nm53hTW
QN2AOCOo6xBnDdaYDWLbWZc447CmbEh8T6xbnHFYEzaY7WBdY49nzdhQtot1
z07OJY0yk3NonEfb5CT7+bqM5D7ifsa4lxmshboH+T5ze+Q+63jmw9LJ/zVl
zR1o/EP0dNFP3e/xrrEfYw8T/dlxtsu8cq7XmE1h9eTbRWl2LXuO/Ue+Q5Rh
DdkkdmWcsc0/EWfIdHIGv9C6O3lZdY3kk9XVlW8ShVltNpZVlW8TJVgD9jSr
Kd8Q/YDVZGNYZfmq6MWsChvOysjXRj9h1dlIVl6+WuRnVdlDrKx8oyjEarHH
WBX5CpHFKrL7WUn5ynh+7BI2jJWSvxnPlVVmD7LS8vXiXFaDPcoukff1t38l
LyJuZz95Hpt5UXV12VPsMvkAdd/H3in6st/iN8h+jnOBGMj+zEre5xkZybk7
zt/Hfed3s59YSTFA3R/qmrKZ8oNqSrH5uX3ju4zkf6P4H+l830c/9nWMRR91
P6u7g30RfV70Yj+w6+KcGb3P9SqxJWyr+y7u76jPx7Ma8i2iGKvHxrHL5Xea
+6W8sOjNfjS3D/tcfl7sq+w79m78vszty9axW+XN1M2TH7ZuRbZU3ZHspF9E
3+iq/n35/wEQrDh1
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jsvZUEAwPHBvRfXM9loCT3xAfgEVEo63SpQUmwUCgpR7haiJIiSQpSe
u+ux3mvXM2LXWhpvIvhNovjnN5OcM2fOnFPe3NbQmhFC6Nad4vhKJ2pOhlDM
dpaxi1XsZy0HWc9xNnGaLfzGTu6yl2f8wnsOM5UKYZIlnI3r8S8ftKEbXWg2
M4RNznGL89zmAne4yJ/8yt34XH7XL+Ml/uYy97jCfa7ygD94yDUecSQrhH98
1LFudalqe1tnBWf4gRNMcChe550+8w97uMOOuDd+5BQbOcY6DrCGfazkJ5bG
ufVO4xmpSNf6r0L7K2Q+C5hmPnOYF8+S6bgf5jKTOXz1IV+UbfxMy4cnJuM5
MxG/N7PiedNtYdTk/P0/eANtXU6X
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0skqhWEAx+H3mA4XYNha4AZwA7gB7E17Ymue7cgFYK9DkigHSVbHPJMk
U8lsJfMji1/Pf/FNvX25tQ3l9ZEQQq+ejHfe8VTDaSFkcIw5nGQBF1nMdZb9
XctK3rGOH/xUk50TDaGTBRxiMUdZxglWcoHHPOeL1vSgazWneA9buMFWbrKN
W2znNju4w07usovd2rN7uM9eHrCPh+znEQd4zKrUEC74qhM96kYNvi3BGsZZ
zhhLOMJCDjKPHcxiphrtN+dQy1tW/D2XpUywiHHmM8ZsHrjvjM9K172utJoc
QpQrTOMyU7nEFC4wmfNM4hxnFbFnGDjNH3OK35zkF2P85Dg/WO0cLiP//8Mv
3MZS7g==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1378, 1674, 722, 1377, 2219, 1585, 1379, 2220, 1586, 1380, 
       2221, 1587, 1381, 2222, 1588, 1382, 2223, 1589, 1383, 2224, 2012, 2321,
        1384, 2013, 2322, 1385, 2225, 1590, 1386, 2226, 1591, 1387, 2227, 
       1592, 1388, 2228, 1593, 1389, 2229, 1594, 1390, 2425, 1675, 1595, 
       1676}], Line3DBox[{1392, 2014, 2323, 1391, 2230, 1596, 1393, 2231, 
       1597, 1394, 2232, 1598, 1395, 2233, 1599, 1396, 2234, 1600, 1397, 2235,
        2015, 2324, 1398, 2016, 2325, 1399, 2017, 2326, 1400, 2236, 1601, 
       1401, 2237, 1602, 1402, 2238, 1603, 1403, 2239, 1604, 1404, 2240, 1605,
        1405}], 
      Line3DBox[{1407, 2018, 2327, 1406, 2019, 2328, 1408, 2241, 1606, 1409, 
       2242, 1607, 1410, 2243, 1608, 1411, 2244, 1609, 1412, 2245, 2020, 2329,
        1413, 2021, 2330, 1414, 2022, 2331, 1415, 2023, 2332, 1416, 2246, 
       1610, 1417, 2247, 1611, 1418, 2248, 1612, 1419, 2249, 1613, 1420}], 
      Line3DBox[{1422, 2024, 2333, 1421, 2025, 2334, 1423, 2026, 2335, 1424, 
       2250, 1614, 1425, 2251, 1615, 1426, 2252, 1616, 1427, 2253, 2027, 2336,
        1428, 2028, 2337, 1429, 2029, 2338, 1430, 2030, 2339, 1431, 2031, 
       2340, 1432, 2254, 1617, 1433, 2255, 1618, 1434, 2256, 1619, 1435}], 
      Line3DBox[{1437, 2032, 2341, 1436, 2033, 2342, 1438, 2034, 2343, 1439, 
       2035, 2344, 1440, 2257, 1620, 1441, 2258, 1621, 1442, 2259, 2036, 2345,
        1443, 2037, 2346, 1444, 2038, 2347, 1445, 2039, 2348, 1446, 2040, 
       2349, 1447, 2041, 2350, 1448, 2260, 1622, 1449, 2261, 1623, 1450}], 
      Line3DBox[{1452, 2042, 2351, 1451, 2043, 2352, 1453, 2044, 2353, 1454, 
       2045, 2354, 1455, 2046, 2355, 1456, 2262, 1624, 1457, 2263, 2047, 2356,
        1458, 2048, 2357, 1459, 2049, 2358, 1460, 2050, 2359, 1461, 2051, 
       2360, 1462, 2052, 2361, 1463, 2053, 2362, 1464, 2264, 1625, 1465}], 
      Line3DBox[{106, 603, 107, 604, 108, 605, 109, 606, 110, 607, 111, 608, 
       112, 609, 610, 113, 611, 114, 612, 115, 613, 116, 614, 117, 615, 118, 
       616, 119, 617, 120}], 
      Line3DBox[{1467, 2054, 2363, 1466, 2055, 2364, 1468, 2056, 2365, 1469, 
       2057, 2366, 1470, 2058, 2367, 1471, 2059, 2368, 1472, 2265, 2060, 2369,
        1473, 2061, 2370, 1474, 2062, 2371, 1475, 2063, 2372, 1476, 2064, 
       2373, 1477, 2065, 2374, 1478, 2066, 2375, 1479, 2067, 2376, 1480}], 
      Line3DBox[{1482, 2266, 1626, 1481, 2267, 1627, 1483, 2268, 1628, 1484, 
       2269, 1629, 1485, 2270, 1630, 1486, 2271, 1631, 1487, 2272, 2068, 2377,
        1488, 2273, 1632, 1489, 2274, 1633, 1490, 2275, 1634, 1491, 2276, 
       1635, 1492, 2277, 1636, 1493, 2278, 1637, 1494, 2279, 1638, 1495}], 
      Line3DBox[{1497, 2069, 2378, 1496, 2280, 1639, 1498, 2281, 1640, 1499, 
       2282, 1641, 1500, 2283, 1642, 1501, 2284, 1643, 1502, 2285, 2070, 2379,
        1503, 2071, 2380, 1504, 2286, 1644, 1505, 2287, 1645, 1506, 2288, 
       1646, 1507, 2289, 1647, 1508, 2290, 1648, 1509, 2291, 1649, 1510}], 
      Line3DBox[{1512, 2072, 2381, 1511, 2073, 2382, 1513, 2292, 1650, 1514, 
       2293, 1651, 1515, 2294, 1652, 1516, 2295, 1653, 1517, 2296, 2074, 2383,
        1518, 2075, 2384, 1519, 2076, 2385, 1520, 2297, 1654, 1521, 2298, 
       1655, 1522, 2299, 1656, 1523, 2300, 1657, 1524, 2301, 1658, 1525}], 
      Line3DBox[{1527, 2077, 2386, 1526, 2078, 2387, 1528, 2079, 2388, 1529, 
       2302, 1659, 1530, 2303, 1660, 1531, 2304, 1661, 1532, 2305, 2080, 2389,
        1533, 2081, 2390, 1534, 2082, 2391, 1535, 2083, 2392, 1536, 2306, 
       1662, 1537, 2307, 1663, 1538, 2308, 1664, 1539, 2309, 1665, 1540}], 
      Line3DBox[{1542, 2084, 2393, 1541, 2085, 2394, 1543, 2086, 2395, 1544, 
       2087, 2396, 1545, 2310, 1666, 1546, 2311, 1667, 1547, 2312, 2088, 2397,
        1548, 2089, 2398, 1549, 2090, 2399, 1550, 2091, 2400, 1551, 2092, 
       2401, 1552, 2313, 1668, 1553, 2314, 1669, 1554, 2315, 1670, 1555}], 
      Line3DBox[{1557, 2093, 2402, 1556, 2094, 2403, 1558, 2095, 2404, 1559, 
       2096, 2405, 1560, 2097, 2406, 1561, 2316, 1671, 1562, 2317, 2098, 2407,
        1563, 2099, 2408, 1564, 2100, 2409, 1565, 2101, 2410, 1566, 2102, 
       2411, 1567, 2103, 2412, 1568, 2318, 1672, 1569, 2319, 1673, 1570}], 
      Line3DBox[{1584, 1680, 1679, 2426, 1583, 2424, 2115, 1582, 2423, 2114, 
       1581, 2422, 2113, 1580, 2421, 2112, 1579, 2420, 2111, 1578, 2419, 2110,
        1577, 2418, 2109, 2320, 1576, 2417, 2108, 1575, 2416, 2107, 1574, 
       2415, 2106, 1573, 2414, 2105, 1572, 2413, 2104, 1571, 933, 1677, 
       1678}], Line3DBox[{1682, 2005, 2645, 1904, 1681, 2530, 1905, 1683, 
       2531, 1906, 1684, 2532, 1907, 1685, 2533, 1908, 1686, 2534, 1909, 1687,
        2535, 1910, 1688, 2536, 2116, 2427, 1689, 2537, 1911, 1690, 2538, 
       1912, 1691, 2539, 1913, 1692, 2540, 1914, 1693, 2541, 1915, 1694, 2218,
        2646, 1916, 2006}], 
      Line3DBox[{1696, 2117, 2428, 1695, 2542, 1917, 1697, 2543, 1918, 1698, 
       2544, 1919, 1699, 2545, 1920, 1700, 2546, 1921, 1701, 2547, 1922, 1702,
        2548, 2118, 2429, 1703, 2119, 2430, 1704, 2549, 1923, 1705, 2550, 
       1924, 1706, 2551, 1925, 1707, 2552, 1926, 1708, 2553, 1927, 1709}], 
      Line3DBox[{1711, 2120, 2431, 1710, 2121, 2432, 1712, 2554, 1928, 1713, 
       2555, 1929, 1714, 2556, 1930, 1715, 2557, 1931, 1716, 2558, 1932, 1717,
        2559, 2122, 2433, 1718, 2123, 2434, 1719, 1200, 1720, 2560, 1933, 
       1721, 2561, 1934, 1722, 2562, 1935, 1723, 2563, 1936, 1724}], 
      Line3DBox[{1726, 2124, 2435, 1725, 2125, 2436, 1727, 2126, 2437, 1728, 
       2564, 1937, 1729, 2565, 1938, 1730, 2566, 1939, 1731, 2567, 1940, 1732,
        2568, 2127, 2438, 1733, 2128, 2439, 1734, 2129, 2440, 1735, 2130, 
       2441, 1736, 2569, 1941, 1737, 2570, 1942, 1738, 2571, 1943, 1739}], 
      Line3DBox[{1741, 2131, 2442, 1740, 2132, 2443, 1742, 2133, 2444, 1743, 
       2134, 2445, 1744, 2572, 1944, 1745, 2573, 1945, 1746, 2574, 1946, 1747,
        2575, 2135, 2446, 1748, 2136, 2447, 1749, 2137, 2448, 1750, 2138, 
       2449, 1751, 2139, 2450, 1752, 2576, 1947, 1753, 2577, 1948, 1754}], 
      Line3DBox[{1756, 2140, 2451, 1755, 2141, 2452, 1757, 2142, 2453, 1758, 
       2143, 2454, 1759, 2144, 2455, 1760, 2578, 1949, 1761, 2579, 1950, 1762,
        2580, 2145, 2456, 1763, 2146, 2457, 1764, 2147, 2458, 1765, 2148, 
       2459, 1766, 2149, 2460, 1767, 2150, 2461, 1768, 2581, 1951, 1769}], 
      Line3DBox[{1771, 2151, 2462, 1770, 2152, 2463, 1772, 2153, 2464, 1773, 
       2154, 2465, 1774, 2155, 2466, 1775, 2156, 2467, 1776, 2582, 1952, 1777,
        2583, 2157, 2468, 1778, 2158, 2469, 1779, 2159, 2470, 1780, 2160, 
       2471, 1781, 2161, 2472, 1782, 2162, 2473, 1783, 2584, 1953, 1784}], 
      Line3DBox[{1788, 2585, 1954, 1786, 2586, 1955, 1790, 2587, 1956, 1792, 
       2588, 1957, 1794, 2589, 1958, 1796, 2590, 1959, 1798, 2591, 1960, 1800,
        2593, 2594, 1961, 1802, 2595, 1962, 1804, 2596, 1963, 1806, 2597, 
       1964, 1808, 2598, 1965, 1810, 2599, 1966, 1812, 2600, 1967, 1814}], 
      Line3DBox[{1813, 2487, 2176, 1811, 2486, 2175, 1809, 2485, 2174, 1807, 
       2484, 2173, 1805, 2483, 2172, 1803, 2482, 2171, 1801, 2481, 2170, 2592,
        1799, 2480, 2169, 1797, 2479, 2168, 1795, 2478, 2167, 1793, 2477, 
       2166, 1791, 2476, 2165, 1789, 2475, 2164, 1785, 2474, 2163, 1787}], 
      Line3DBox[{1816, 2177, 2488, 1815, 2601, 1968, 1817, 2602, 1969, 1818, 
       2603, 1970, 1819, 2604, 1971, 1820, 2605, 1972, 1821, 2606, 1973, 1822,
        2607, 2178, 2489, 1823, 2608, 1974, 1824, 2609, 1975, 1825, 2610, 
       1976, 1826, 2611, 1977, 1827, 2612, 1978, 1828, 2613, 1979, 1829}], 
      Line3DBox[{1831, 2179, 2490, 1830, 2180, 2491, 1832, 2614, 1980, 1833, 
       2615, 1981, 1834, 2616, 1982, 1835, 2617, 1983, 1836, 2618, 1984, 1837,
        2619, 2181, 2492, 1838, 2182, 2493, 1839, 1305, 1840, 2620, 1985, 
       1841, 2621, 1986, 1842, 2622, 1987, 1843, 2623, 1988, 1844}], 
      Line3DBox[{1846, 2183, 2494, 1845, 2184, 2495, 1847, 2185, 2496, 1848, 
       2624, 1989, 1849, 2625, 1990, 1850, 2626, 1991, 1851, 2627, 1992, 1852,
        2628, 2186, 2497, 1853, 2187, 2498, 1854, 2188, 2499, 1855, 1321, 
       1856, 2629, 1993, 1857, 2630, 1994, 1858, 2631, 1995, 1859}], 
      Line3DBox[{1861, 2189, 2500, 1860, 2190, 2501, 1862, 2191, 2502, 1863, 
       2192, 2503, 1864, 2632, 1996, 1865, 2633, 1997, 1866, 2634, 1998, 1867,
        2635, 2193, 2504, 1868, 2194, 2505, 1869, 2195, 2506, 1870, 2196, 
       2507, 1871, 1337, 1872, 2636, 1999, 1873, 2637, 2000, 1874}], 
      Line3DBox[{1876, 2197, 2508, 1875, 2198, 2509, 1877, 2199, 2510, 1878, 
       2200, 2511, 1879, 2201, 2512, 1880, 2638, 2001, 1881, 2639, 2002, 1882,
        2640, 2202, 2513, 1883, 2203, 2514, 1884, 2204, 2515, 1885, 2205, 
       2516, 1886, 2206, 2517, 1887, 1353, 1888, 2641, 2003, 1889}], 
      Line3DBox[{1903, 2011, 2010, 2644, 1902, 2529, 2217, 1901, 2528, 2216, 
       1900, 2527, 2215, 1899, 2526, 2214, 1898, 2525, 2213, 1897, 2524, 2212,
        2643, 1896, 2004, 2642, 1895, 2523, 2211, 1894, 2522, 2210, 1893, 
       2521, 2209, 1892, 2520, 2208, 1891, 2519, 2207, 1890, 2518, 2008, 2007,
        2009}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{500, 723, 2219, 501, 737, 2230, 529, 2328, 752, 544, 2334, 
       767, 559, 2342, 782, 574, 2352, 797, 589, 2364, 812, 604, 827, 2267, 
       619, 842, 2280, 634, 2382, 857, 649, 2387, 872, 664, 2394, 887, 679, 
       2403, 902, 694, 2413, 917, 709}], 
      Line3DBox[{502, 724, 2220, 503, 738, 2231, 530, 753, 2241, 545, 2335, 
       768, 560, 2343, 783, 575, 2353, 798, 590, 2365, 813, 605, 828, 2268, 
       620, 843, 2281, 635, 858, 2292, 650, 2388, 873, 665, 2395, 888, 680, 
       2404, 903, 695, 2414, 918, 710}], 
      Line3DBox[{504, 725, 2221, 505, 739, 2232, 531, 754, 2242, 546, 769, 
       2250, 561, 2344, 784, 576, 2354, 799, 591, 2366, 814, 606, 829, 2269, 
       621, 844, 2282, 636, 859, 2293, 651, 874, 2302, 666, 2396, 889, 681, 
       2405, 904, 696, 2415, 919, 711}], 
      Line3DBox[{506, 726, 2222, 507, 740, 2233, 532, 755, 2243, 547, 770, 
       2251, 562, 785, 2257, 577, 2355, 800, 592, 2367, 815, 607, 830, 2270, 
       622, 845, 2283, 637, 860, 2294, 652, 875, 2303, 667, 890, 2310, 682, 
       2406, 905, 697, 2416, 920, 712}], 
      Line3DBox[{508, 727, 2223, 509, 741, 2234, 533, 756, 2244, 548, 771, 
       2252, 563, 786, 2258, 578, 801, 2262, 593, 2368, 816, 608, 831, 2271, 
       623, 846, 2284, 638, 861, 2295, 653, 876, 2304, 668, 891, 2311, 683, 
       906, 2316, 698, 2417, 921, 713}], 
      Line3DBox[{510, 728, 2224, 512, 742, 2235, 534, 757, 2245, 549, 772, 
       2253, 564, 787, 2259, 579, 802, 2263, 594, 817, 2265, 609, 832, 2272, 
       624, 847, 2285, 639, 862, 2296, 654, 877, 2305, 669, 892, 2312, 684, 
       907, 2317, 699, 922, 2320, 714}], 
      Line3DBox[{514, 2322, 730, 515, 2325, 744, 536, 2330, 759, 551, 2337, 
       774, 566, 2346, 789, 581, 2357, 804, 596, 2370, 819, 611, 834, 2273, 
       626, 2380, 849, 641, 2384, 864, 656, 2390, 879, 671, 2398, 894, 686, 
       2408, 909, 701, 2419, 924, 716}], 
      Line3DBox[{516, 731, 2225, 517, 2326, 745, 537, 2331, 760, 552, 2338, 
       775, 567, 2347, 790, 582, 2358, 805, 597, 2371, 820, 612, 835, 2274, 
       627, 850, 2286, 642, 2385, 865, 657, 2391, 880, 672, 2399, 895, 687, 
       2409, 910, 702, 2420, 925, 717}], 
      Line3DBox[{518, 732, 2226, 519, 746, 2236, 538, 2332, 761, 553, 2339, 
       776, 568, 2348, 791, 583, 2359, 806, 598, 2372, 821, 613, 836, 2275, 
       628, 851, 2287, 643, 866, 2297, 658, 2392, 881, 673, 2400, 896, 688, 
       2410, 911, 703, 2421, 926, 718}], 
      Line3DBox[{520, 733, 2227, 521, 747, 2237, 539, 762, 2246, 554, 2340, 
       777, 569, 2349, 792, 584, 2360, 807, 599, 2373, 822, 614, 837, 2276, 
       629, 852, 2288, 644, 867, 2298, 659, 882, 2306, 674, 2401, 897, 689, 
       2411, 912, 704, 2422, 927, 719}], 
      Line3DBox[{522, 734, 2228, 523, 748, 2238, 540, 763, 2247, 555, 778, 
       2254, 570, 2350, 793, 585, 2361, 808, 600, 2374, 823, 615, 838, 2277, 
       630, 853, 2289, 645, 868, 2299, 660, 883, 2307, 675, 898, 2313, 690, 
       2412, 913, 705, 2423, 928, 720}], 
      Line3DBox[{524, 735, 2229, 525, 749, 2239, 541, 764, 2248, 556, 779, 
       2255, 571, 794, 2260, 586, 2362, 809, 601, 2375, 824, 616, 839, 2278, 
       631, 854, 2290, 646, 869, 2300, 661, 884, 2308, 676, 899, 2314, 691, 
       914, 2318, 706, 2424, 929, 721}], 
      Line3DBox[{526, 931, 2425, 932, 527, 750, 2240, 542, 765, 2249, 557, 
       780, 2256, 572, 795, 2261, 587, 810, 2264, 602, 2376, 825, 617, 840, 
       2279, 632, 855, 2291, 647, 870, 2301, 662, 885, 2309, 677, 900, 2315, 
       692, 915, 2319, 707, 934, 2426, 935, 936}], 
      Line3DBox[{708, 916, 933, 693, 901, 2402, 678, 886, 2393, 663, 871, 
       2386, 648, 856, 2381, 633, 841, 2378, 618, 2266, 826, 603, 811, 2363, 
       588, 796, 2351, 573, 781, 2341, 558, 766, 2333, 543, 751, 2327, 528, 
       736, 2323, 499, 722, 930, 937}], 
      Line3DBox[{715, 923, 2418, 700, 908, 2407, 685, 893, 2397, 670, 878, 
       2389, 655, 863, 2383, 640, 848, 2379, 625, 833, 2377, 610, 818, 2369, 
       595, 803, 2356, 580, 788, 2345, 565, 773, 2336, 550, 758, 2329, 535, 
       743, 2324, 513, 729, 2321, 511}], 
      Line3DBox[{939, 1162, 2530, 940, 1176, 2542, 968, 2432, 1191, 983, 2436,
        1206, 998, 2443, 1221, 1013, 2452, 1236, 1028, 2463, 1251, 1043, 2475,
        1266, 2586, 1058, 1281, 2601, 1073, 2491, 1296, 1088, 2495, 1311, 
       1103, 2501, 1326, 1118, 2509, 1341, 1133, 2519, 1356, 1148}], 
      Line3DBox[{941, 1163, 2531, 942, 1177, 2543, 969, 1192, 2554, 984, 2437,
        1207, 999, 2444, 1222, 1014, 2453, 1237, 1029, 2464, 1252, 1044, 2476,
        1267, 2587, 1059, 1282, 2602, 1074, 1297, 2614, 1089, 2496, 1312, 
       1104, 2502, 1327, 1119, 2510, 1342, 1134, 2520, 1357, 1149}], 
      Line3DBox[{943, 1164, 2532, 944, 1178, 2544, 970, 1193, 2555, 985, 1208,
        2564, 1000, 2445, 1223, 1015, 2454, 1238, 1030, 2465, 1253, 1045, 
       2477, 1268, 2588, 1060, 1283, 2603, 1075, 1298, 2615, 1090, 1313, 2624,
        1105, 2503, 1328, 1120, 2511, 1343, 1135, 2521, 1358, 1150}], 
      Line3DBox[{945, 1165, 2533, 946, 1179, 2545, 971, 1194, 2556, 986, 1209,
        2565, 1001, 1224, 2572, 1016, 2455, 1239, 1031, 2466, 1254, 1046, 
       2478, 1269, 2589, 1061, 1284, 2604, 1076, 1299, 2616, 1091, 1314, 2625,
        1106, 1329, 2632, 1121, 2512, 1344, 1136, 2522, 1359, 1151}], 
      Line3DBox[{947, 1166, 2534, 948, 1180, 2546, 972, 1195, 2557, 987, 1210,
        2566, 1002, 1225, 2573, 1017, 1240, 2578, 1032, 2467, 1255, 1047, 
       2479, 1270, 2590, 1062, 1285, 2605, 1077, 1300, 2617, 1092, 1315, 2626,
        1107, 1330, 2633, 1122, 1345, 2638, 1137, 2523, 1360, 1152}], 
      Line3DBox[{949, 1167, 2535, 950, 1181, 2547, 973, 1196, 2558, 988, 1211,
        2567, 1003, 1226, 2574, 1018, 1241, 2579, 1033, 1256, 2582, 1048, 
       2480, 1271, 2591, 1063, 1286, 2606, 1078, 1301, 2618, 1093, 1316, 2627,
        1108, 1331, 2634, 1123, 1346, 2639, 1138, 1361, 2642, 1153}], 
      Line3DBox[{951, 1168, 2536, 953, 1182, 2548, 974, 1197, 2559, 989, 1212,
        2568, 1004, 1227, 2575, 1019, 1242, 2580, 1034, 1257, 2583, 1049, 
       1272, 2592, 2593, 1064, 1287, 2607, 1079, 1302, 2619, 1094, 1317, 2628,
        1109, 1332, 2635, 1124, 1347, 2640, 1139, 1362, 2643, 1154}], 
      Line3DBox[{955, 1170, 2537, 956, 2430, 1184, 976, 2434, 1199, 991, 2439,
        1214, 1006, 2447, 1229, 1021, 2457, 1244, 1036, 2469, 1259, 1051, 
       2482, 1274, 2595, 1066, 1289, 2608, 1081, 2493, 1304, 1096, 2498, 1319,
        1111, 2505, 1334, 1126, 2514, 1349, 1141, 2525, 1364, 1156}], 
      Line3DBox[{957, 1171, 2538, 958, 1185, 2549, 977, 1200, 992, 2440, 1215,
        1007, 2448, 1230, 1022, 2458, 1245, 1037, 2470, 1260, 1052, 2483, 
       1275, 2596, 1067, 1290, 2609, 1082, 1305, 1097, 2499, 1320, 1112, 2506,
        1335, 1127, 2515, 1350, 1142, 2526, 1365, 1157}], 
      Line3DBox[{959, 1172, 2539, 960, 1186, 2550, 978, 1201, 2560, 993, 2441,
        1216, 1008, 2449, 1231, 1023, 2459, 1246, 1038, 2471, 1261, 1053, 
       2484, 1276, 2597, 1068, 1291, 2610, 1083, 1306, 2620, 1098, 1321, 1113,
        2507, 1336, 1128, 2516, 1351, 1143, 2527, 1366, 1158}], 
      Line3DBox[{961, 1173, 2540, 962, 1187, 2551, 979, 1202, 2561, 994, 1217,
        2569, 1009, 2450, 1232, 1024, 2460, 1247, 1039, 2472, 1262, 1054, 
       2485, 1277, 2598, 1069, 1292, 2611, 1084, 1307, 2621, 1099, 1322, 2629,
        1114, 1337, 1129, 2517, 1352, 1144, 2528, 1367, 1159}], 
      Line3DBox[{963, 1174, 2541, 964, 1188, 2552, 980, 1203, 2562, 995, 1218,
        2570, 1010, 1233, 2576, 1025, 2461, 1248, 1040, 2473, 1263, 1055, 
       2486, 1278, 2599, 1070, 1293, 2612, 1085, 1308, 2622, 1100, 1323, 2630,
        1115, 1338, 2636, 1130, 1353, 1145, 2529, 1368, 1160}], 
      Line3DBox[{965, 1370, 1371, 2646, 966, 1189, 2553, 981, 1204, 2563, 996,
        1219, 2571, 1011, 1234, 2577, 1026, 1249, 2581, 1041, 1264, 2584, 
       1056, 2487, 1279, 2600, 1071, 1294, 2613, 1086, 1309, 2623, 1101, 1324,
        2631, 1116, 1339, 2637, 1131, 1354, 2641, 1146, 1373, 2644, 1374, 
       1375}], Line3DBox[{1147, 1355, 2518, 1372, 1132, 1340, 2508, 1117, 
       1325, 2500, 1102, 1310, 2494, 1087, 1295, 2490, 1072, 1280, 2488, 1057,
        2585, 1265, 2474, 1042, 1250, 2462, 1027, 1235, 2451, 1012, 1220, 
       2442, 997, 1205, 2435, 982, 1190, 2431, 967, 1175, 2428, 938, 2645, 
       1161, 1369, 1376}], 
      Line3DBox[{1155, 1363, 2524, 1140, 1348, 2513, 1125, 1333, 2504, 1110, 
       1318, 2497, 1095, 1303, 2492, 1080, 1288, 2489, 1065, 2594, 1273, 2481,
        1050, 1258, 2468, 1035, 1243, 2456, 1020, 1228, 2446, 1005, 1213, 
       2438, 990, 1198, 2433, 975, 1183, 2429, 954, 1169, 2427, 
       952}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvHk0le/7NozMlRShUopIyFQZoq6kJBkiQiUZQkXJVMpQlJCxREpmIjLv
jb1x7m0mUyQRoUwRtyFDZXiu77s+7/v83u+7Pv+/z1r8Y61j7XXd13Xcx3mc
53mtvc9dljcNrjAxMDCc42RgWMPw//zd/3//n0Sr+Cq+iq/iq/gqvoqv4qv4
Kr6Kr+Kr+Cq+iq/iq/gqvoqv4qv4Kr6K/3/xs4pa2hlbUtGhRy8WWr6nwfSZ
pciMCQKlMFcb5vCnomsGB9n1DTMh+IjeluYxAm0q69dz2ZyKKouL1dorskG8
Uig6YoRAem1st+c3pSJv0StVQtG5YM510n5xgEBd4wc4D3GnooWBppUivXw4
U711mrWfQGD/46zq+lQ0kcTp+oaFBK9EzJ8VdBPoRj9P/DJHKrqpUHG9m0IG
Ie9t5SyfCcSv90fjAWsqWjN24cSpm0XgeSvw959WAkXaJiRVMqUivvBi/15h
CgSh4dKIRgKROBT56pZT0Fjdq76wdips5tKPaashUNJjB47QPynIJ6lfUO9x
Kfi3JUkU0QlkMjA9yDeXgrjl9yutUwK4rXCaTZ1KoFiLAmGLqRTkEWUk2eNM
g+Z3/J0uBQQKnzyjcuNnCsrf6TYgepoOxGVePd13BFIOvf/2yHAK2uVW7d+5
qxxsmbV3tqQQSPJF0MzZtEjkb3Xtt/xIGpRpM3Od/kWgNY9f3DudGonc1an7
dEwz4dfuY+sdpgjkwsGsypAciQ6lynBer8sGkfVJn2Xxe3HbMnDTKSESaVr0
yyrG5EL+6OnqyFECldVxGyfGRiLSi6g4wbP5sFgzfDBuiEDnv21UDXsViQrk
libPcZBgl+DTMK1vBDrzgN1F9UUkepW836KjjAxtJRTN6B4CfVybYPgmIhKl
eItphzoXAbMgS9cTzH+gMaHyISwS2UVbyTnuoUAJu1CdcBuBVJQvhlCCIlFw
jVv+9S4qLN5MTrqE+X8y9Jhs5R+JVH9JvnIOKoUTUbMrCPPPtElEtNE3EikO
yva4HwYIV2fwrKERaM/zLwbzXpHItP+nVpEbDXriJcpniwnkOKBR8M09ElFk
69lFdelwQX6D9/s8AknoPvgS6hKJukPZrRd3l0Mgt9X1UxkEqosRTk401Uce
p57U0H+kwbWWrjytOQIRrFJpPCb66KfDpdpNFzKhddpc3H6GQA8ZQ1b0z+mj
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
M/9hbIb7Fpd3PNlPBwYHew9LmEDhVgG/SAKpKLipP0o65i2sf+ey/dQ4gYru
XFzq+ZGClMf1K5+S6QCCgTtf4nrygHFahePRZmixvOIv/TEduBrV+c4uTSD2
D/M+zZWNEMIX9KsglQ789itx/U0TKNXuU52jXRLS4JlhvElPB2rZ51oqQaCD
U3fCSIeTkJfbdm25cTqwiz4dvYbXd5Yz7bZMagLfV30/L7Gmg6cvp1MNG+5D
j739+8aqCcTdjsvvcsB1IAd3mUrNBGJ4e7a2C6/fetBv475BzANSl72G+ffP
jT8YNpKC9if6zB/6iesZl52dhbhv8g7dNMmH4yKmZfi663IaFPd9+zKP9+87
a3xu3KIJetTrzAwS6LAn8MyNe1UTaMCh4I38llTUQAueZqWlg/GD3dpLmB+U
6LMYpJqEBsWb41uFy0HXYt93H7x+qzapmSG5CXikBvSNZNPA7+bUdVt2Ar1n
/f1alaEZ9iqFPiDZ0mH7wmBTWunE/33f/l9/k6v4Kr6Kr+Kr+Cq+iq/iq/gq
voqv4qv4Kr6Kr+Kr+Cq+iq/iq/gqvoqv4qv4Kr6Kr+Kr+Cq+iq/iq/gqvoqv
4qv4Kr6Kr+L/x+O8B48phaVGopeqvTelxzJgWNF2qXGKQI2P0p04+FLRw1hS
zeJwFjwxXeG1/0EgXUdkHJ0cieSif0naj2dB4ZFT1ewEgXoGtCbGeVJRnvSZ
wlu/cqBtiD/w8hCBdol7ud1MjEQ28xLO9vM5oHxnMe7vGIFed1gMxG9MRd1K
u+ScXfKA22Tx1vrvBBI/kFe2KT4SweI5Ss7tPGCt2lSTOkKg9qfBPsIbUpHx
O3vd3zP5cKNIhcu5l0Csb+6b+b6ORLyuFtbu8/ngHnHWk3OQQFccSn87rUtF
wWyqr/44keD7pcCU8C8EavJR8KO/xPuvT1kocSPBsQs5HHv6CRQfquH5lCMV
+VHcChymyFDGned7tYNAccPejo1RkYhZf3m90ywZ1toqFi12E0jgn3kIrP/M
Q/D+Zx7C2QGuUrQmFdlbWA86/iyGBFaFVxpN//t3/an/9bv+m0HLr/TCI1GR
x1+VhclieJpWsqa9jUDZpkuLjSspyJU7k/2nHRWcuFYitOsIZCclaFMdHIn0
JPoMCxyo0CPSYvEZr7+7P+201GIKEo5Rjs0dKIGO4NKT6ysJFPqif35tYCQS
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
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{407.91813696071404`, 249.71001365205532`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.0009762665799040969, 
   0.1422586411102199}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8331131909834935`, -1.4806159771511491`, 1.1096152374945802`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6187610228602204`*^9, 3.61876129579722*^9, 3.6187613294612207`*^9, {
   3.6187614373592205`*^9, 3.6187614429392204`*^9}, 3.61876162955622*^9, 
   3.6187616904582205`*^9, {3.618761720838011*^9, 3.618761726371956*^9}, 
   3.6187617796914225`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polys1$1$1", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"0.053932474820764846`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.04798776609640922`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.01670871244439306`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.023629687748652782`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"0.04394592654842053`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.562499205311084`", " ", 
      RowBox[{"(", 
       RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"0.062148925335828206`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.562499205311084`", " ", 
      RowBox[{"(", 
       RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"0.01791366344295127`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.562499205311084`", " ", 
      RowBox[{"(", 
       RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}], "+", 
  RowBox[{"0.025333745792808712`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"2.`", " ", 
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.25`", " ", 
      RowBox[{"(", 
       RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"6.562499205311084`", " ", 
      RowBox[{"(", 
       RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6187610228802204`*^9, 3.6187616295962205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
  3.6184273766373463`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFvAk0V9sb/68JTUqEFE3SqHkwVFsDRSRDg0pJoUmjIUVFMoQyZp6Hj3n4
mPlwRKXSoIhCg+ZSKZoH/vfnc57n/L77d+/633XXumu97l7Hc95nn+c8+/3Z
+xlvcdDIsq+IiMjiASIi/f75b4RGqEzb8cvM+Ef6eT09T5hni8sXGpueI+ZX
pF1e+l5Crr1w/vUvRp5EN3pCU/2ycuSps9K3XNRzJw25ozNarYuQS0yd8HGR
thvZ1nudXOSHJoSdfkhcyd3e8TzkDaOHS51QO01u9vIQ5AemSaxRs3IiIr3/
uC0GvlDhz0En02PkqXA8Af532LsgRs+WtAivj/xy3wclfTUPkZ3CeJDLtXuX
e1vtJg+E8SNPrLMWG6FvTtYK7xf57v0e8bOt1xELoT7IRSojxkYovlvK6ok8
9pfk/v1/DRjQ2co2J6zQpoUxtY8Vaxb4oc7Ay05q64xU9UOdgatKPBwZZ3UB
dQb+R3FSmKzZedQZeMWsw2POG/uizsBdNctj+uv6oM7AVxoOnHhC0xt1Bi5u
sT7588JzqDPwG0fipu5W8UKdgZ8/8yHj8URP1Bm4YZDa7PXyHqgzcOmks3m1
w91RZ+BNBXcXLhc7izoDD7+qUFr89wwBnYFva9qzZNYXV+BM2mCp0zYtjYzm
2mdHB+kHoc7AjZ51quRoB6HOwC3s+71ZrxmEOgO3HSQd/1stCHUG7h6ttDVu
XhDqDDxk7gKZVSpBqDPwlKtade+Vg1Bn4KWbN5wLGBeEOgOv/Wi1UlU+CHUG
/sjVofuRVBDqDPyjjGfxmaFBqDNwkfTQI1PFglBn4JIkdcYdkSDUGfiE+pJX
tr8CUWfg861vxMp/Qc58jLezUtK5x0xTVnqq/igEdQb+XitmxJr1oagz8AxL
ea0tt0JRZ+AHzgY77NMKQ52Bz0oannaiPAx1Bv75sner94Jw1Bk4/4XosMjM
cNQZ+NH+rssyJkWgzsDnK/09KoiKQJ2Bf1txLPnmyEjUGXjRzq4Hrb6RqDPw
Y2cODP4wIAp1Bq6e8HbJX+co1Bn4r6pdh4Z+i0KdgQuePYlXOBCNOlv2zvNa
ZkS3pd4+mwjUGfiZ1DXfX+6MRJ2BfzGZE2++OQp1Bm4lIqvfsi4adQbelP7n
+/pVMagz8MTphw3fKMaizsDN+rxInhQeizoDH9m04Y/FyDjUGfjtjOuGsX5x
qDNwd9fFvEeD41Fn4GRT9h95j3jUGfgPlQlGm/omoM7Ac/oF84KdE1Bn4Hse
iv299yMBdQY+Pvu40XDbRGo+VzG/7vOKI/5GU/O5ijkv+sdGUy2Wms9VjOKE
xB5+Vyw1n6uYrCV6/pOy4qj5XMUQ0y8TQnfHU/O5iqmzjcwfNDGBms9VjLnf
Sm3nRwnUfK5iPqW/b+oISaTmcxXjUhO0x8IoiZrPVYzk88W/G4YkU/O5ionv
fuGzqiaZms9VzFx5X8VSFx41n6uY6gULcmYsTqHmcxVjbPhoWcy3FGo+VzHP
95+tl8xNpXTmM58abUe80o6jdOYzpqpGT3014ymd+UxV2KysBeoJlM58Ztrv
IU6P5iVSOvOZgK3vdM6qJFE685nf5TWyKpOTKZ35zM6xSS8bxvEonflM7WnX
PCf5FEpnPjP/2XYXJelUSmc+E7liicHNoWmUznymf5K8gq1YOqUzn7ER/fFu
dJ8MSmc+02h9v7j6VwalM59Zcp3vvu9LJqUzn0me5mci9TELdRZh/3lZFby6
WyIBdQauvDfFqGVVIuoM3EqybGvx6STUGXhy8S2r4JJk1Bn46+1PDx3p5KHO
wCeLdR03mJ6KOgO3zhpwdsauNNQZeMp6uQsDo9JRZ+Bv/kwLe3U/A3UGPiVx
SUK1RBbqDHz3mnWZsauyUWfgJo65LUs1c1Bn4F9vlppntuagzsCDxl1+Odox
F3UGPt/21t5zI/n0fCbNWYUnZZoS6flMOiO6L08xSKbnMxnkpT1Yo4ZHz2cy
wf68oT5Jpecz0djZGLK9KI2ez8R4neLjw7My6PlM9i+xUnLjZdLzmbhNy9p7
cWw2PZ/J7cEnNjWsyaHnM9ncN+bEI7Fcej6TVz+qol9V59LzmRzpeHWp4xSf
ns+k++Wglz808uj5TM61zhTv+yOPns9Ept5o+uD8fDo/k1vhTfkzY5Lp/Ewq
bpksst+QQudnkiVyr6T8n/eRys8kep7B4gFX0un8TM5b3azQc8qk8zM5Faaz
LGheNp2fySKr5202djl0fibZPeMTJA1z6fxMpoSZ7yqYwafzM4mdGzPJVDyP
zs9E9uajV3+e59H5mfhZjkmJZfLp/EzEezbvWRlRQOdncjo0bNob+0I6P5Mf
cx60exsV0fUGqXT/8U7bOoWuN4hnT1pqtVkaXW+QdcfMdmuaZND1BpH7PGxy
uW4WXW+QT/PbOiPH5dD1Bll/WN2oZXQuXW+QkszA3FGyfLreIGPevR++aUQe
XW+Q08rahy4OzafrDfLCIuZOg3gBXW+Q1TE/Zkr1L6TrDZLZYnjesKeQrjfI
cLn0Dxd+FdH1BrE16a9/+2sxXW+QB35mGUM+l9D1M8k/Mmr89llpdP1M1s/p
M0bSMoOun8nXjjcy1eFZdP1MdDe+8VTfnUPXzyRi4VZ3qTO5dP1M2kfWnXkf
xafrZ6LxdYXLleI8un4m5xqKTkbX59P1M2nOm+7k8LGArp/JtMAYx3UDi+j6
mRw/IuUwVamYrp/JDUMP276khK6fifyc34dbTEvp+pnsHX7wYL5tGV0/k9KO
Z/t9Lwjo9SBJ3aa+0eF7Or0eJON3bjy/bX8WvR4kN+eVPos/lEOvB4l44eqT
Mum59HqQaKk2jTr3kk+vB4lLqWXB37H59HqQlC/+su7w5gJ6PUh+Vri+fxFU
SK8Hyfxlkp6b7hTR60FyqDpm4s2BJfR6kGRozWTIylJ6PUje1Ag2550so9eD
REl3zTflEgG9HiTmNx/6h3eV0+tBErl2t4rEP3+C8jdItO4W3wtMJu1vEIcb
G0Qa1XJof4PEdPSovQjMpf0NUiOderTzA5/2N0iHmlGmyOp82t8gstt/v5KI
L6D9DULcEscp/Cmk/Q1inaq/efqGYtrfIBdufwtUyymh/Q1S2BVza9WgMtrf
II/ldMQ27BLQ/gYRXdqpuauinPY3yMydEcePyDG0v0Gmr5ywWVOtkvY3SEXj
N/tVr5CDP0YCFzpV8zyyab+OmD13KXFakkv7deRwupb/pCI+7deRs0cH7rk9
O5/260i4xi1Nh7QC2q8jmf385cYpFdF+HblUa/LpWlQx7deR+4Fy1w7LltJ+
HXmzpTVG3r+M9uvIn4mxDtWDymm/jgx/v9Ngv1sF7dcRpfzJk0d2M7RfR8ZU
2PU8Lquk/TqiHL9xX96xS4Ty68gsd7UmjwVV5OTpxjU7+1czl6ecUm4pfMQY
NR1M8Zrki/oDvybdE3/mrS+MJ8DD59bs03M6gtcHnlOUYr/pyyH6+iRitH9o
mWgOfX0SWrkvJSIhi74+qfN7d/nQvEvIIf5pQavjFJqQo496seRHz8QNXvR4
JtY7sOdzEGGo8cS4J0Y/5XQOHT9xmCnHe/2PjkO2LZoTz1Qzna6v9tu0PGaS
Vb3GxWV7AyfA1x35Mj/FwYweTzS9R9x2vZ1Njye7F453PJWHzwWv3zjl8f59
431wPMSv+fRDQefzVQxcH+JfOzRbdukELn64vnHzFKaojYsfrrP49+aIsiYv
ejxT90nv3vq3pnQ8JOh3V0HcyGw6HqIydJnASPSf+m7+lS63ds7XzS6XbMtc
7Uf2mL6IMyyuwL9reHjod5Xb7sjRdx0katcv9QJx1V26NSysBMd7eS/YGCF+
FjmMzwt9Mzm98jwbZz6Or0wyKxJfcQY5jDebXNts9MCX7O79u1k4/htzVtbe
2QU5xlOY6furw+effPB/rpOI47fkb+m4evAUcoxnpZ9mvJgPCevlQTj+2pv0
7LgXJ9j8YI5+virr58N4jLP+SJfOWG8cT/vSUcLxOB+SDfVmb7xtixzG8z8t
Mg1b60UihXHieGn3yE9zVhxGjn/3lPyQZVaeZK9QBxw/wO7hjlGH9iHHeCT+
Vrxx9mCvk4/jnz5yfHbbdBdy1CfyyWG/YHdyRvgccfwx3/lXxT02I8d4plcp
qWaeZf9uBY7fVfHu/Ov81cgxntLEpieX3WAe4njtz5G2UhMUGOAYz2qPcx6t
Z3Degt9bdyfH/sSqIJyfwLcZnnJ8vywI5yHwD/f0ncwWB+F8A+5sMubU7YVB
OK+AD2l850LmBOH8AR6xscQtZ3oQzgfg0x56eIxH/9z8//HP4bkD12lV8u03
OgifL/CHZl0XbEcG4XMEvvvJpYCXw4LweQH/bu4XvGFQED4X9P+fbQut6R+E
+gMfuUslQrUnEPUHnvjyd1TqT+ToV39pMxiiox2KOqMPHHVCdWN2KOoM/Kwp
b5elXBjqDHztyHq/oy5hqDNwubvdApd3Yagz8DafaW8vGIejzsDTVm8YGS0I
R51p/xx0Br64MtOm9HwE6gx8gNPDsGvfI1Bn4LcXDbjaaB6JOgMP6Zrd+eJ6
JOoMfEf2VsWuuVGoM/7usM9Tt09kFOoMvFM5337YgGjUGX3pLx/jZLQiUWfg
cu8cvl8aE4U6Ax/9VETf5ksU6gxcsdErXu5mNOqMfvLNET+qE2JQZ/Tt224l
Fy2JRZ2BS28NMPRNjUWdaf8cdAYuazSap+oShzpj/LeeGEp8iEOdgY9anfjn
+aZ41Bnvq3o3r+RyPOoMXGGpitGF2QmoM95vyec/uyITUGfg4+YX8tTFE6n5
XMWM6VczunN8LDWfqxj10epbZK7EUvO5itk0LzNcfXccNZ+rGPs145q3DY6n
5nMVE7wzcNSZrHhqPlcx+SdETXmGCdR8rmLuBTqG1n5JoOYz55//73yuYoZd
3i4rrZFEzecqRqX13gbVx0nUfK5i1nzRurjVJZmaz1XM3iEl908r8aj5XMV4
Ks0YmVTDo+ZzFcNbHGNyfW8KNZ+rmCsmI4I+DE2ldOYzM3wuvto0Pp7Smc/s
XlZcWvs7ntKZzyR8e3h+aWMCpTOfeZz+2yI3J5HSmc+M2qGwSMk7idKZz6yX
IYNDLJMpnfmMX635k4GaPEpnzj//X535jNjCRI+OLymUznxmefuVLRZ3Uimd
+Yxz7OtZ91PTKJ35TPH6gf1Xu6VTOvOZL4OmPyjdlkHpzGdmV+plqKhlUjrz
mb12B07HSmWhzuD3Lh1plcuMS0SdgV+0XijvMjcJdQb+sUT0zPKVyagzcO0h
Te39NvBQZ+Ax23gmV6xTUGfg33Mcyt0dU1Fn4Ab9Viuv9k5DnYGDfw46i+D/
ePP9RlYG6gx4069ic5/KTNQZeI6e13X9e1moM3DxGNO5w15ko844/keQ/pvj
Oagz8Efj//a53i8XdcbrrLEsTPXJpeczMYhe4KQ8Lpmez+Syb77jwj08ej4T
Ned5Dtr8FHo+k6z9fNsNv1Pp+Uwmbp1zxGplOj2fSdianIP2vhn0fCbDNGbZ
uDdm0vMZ/XNqPpM/PjLzjefn0POZFPVvnNvyIIeez+SwU/Ccnc659HwmM76Y
zG4fz6fnM3m1T3rW0at8ej6TuOf1Kr/35tHzmWzZEjjjzLB8Oj8T88kDVvmO
TaHzM+nMm/uwPSaVzs/kjKb5Pt1x6XR+JiNv+f5Nic2g8zNJMS27IDY+i87P
RP3Vm/FWcdl0fiZWaoM3P/PLofMz+udUfiY/r6i+15Tk0/mZLPcxWHDoLp/O
z+SckdXJGP88Oj+TejnnmtuG+XR+JgpPAod3SxbQ+ZlYJaWZqtwroPMzyd53
KX5rQCFdb5CDOQ2SXxTT6HqDKDbnqMY1ptP1BrnZz3f72vOZdL1BTqjscf+t
lU3XG+RievyGhpM5dL1BDlQOf5e2OZeuN4jW/ZPOLgv5dL2B/jlVb5Cu7s2J
Mz/m0fUGqZW6vmjAjXy63iDxUxbVtiQV0PUGOb4kaRvfpZCuN4iRkVSnp1kR
XW+QqdYuZ7erFdP1BhFx6pBbOLKErp/JabXE1s2KGXT9TPREZoVuGJpF189E
rqbE2OhPNl0/k07teDHe1xy6fiamadYvlT7k0vUzYYaqVMe/4NP1M5l0uDN2
XGseXT+jf07Vz+TTIuetY2oL6PqZbIhYrh5eVUjXz0TQLSYnV1pE189kgsWt
r8G5xXT9TDyvBNRLpZbQ9TP5OGVTrn9sKV0/ExMfhQvDQsvo9SAJqDrKu6SQ
Ra8HyZLAxt8DJuTQ60EyR6tr4vQFufR6kCh/H6a3bjWfXg+S0akzbO225NHr
QTJ8i05k+IF8ej1I+g+1usy4FNDrQfTPqfUgeX8oRnpQShG9HiRtEwSLZ5UV
0+tBcr/hwS6T2yX0epDccP/q49hWSq8HSYXqiILoL2X0epDkvZv5qFqsnF4P
El7kmgFv5Stov4jcSxqvFiSRQ/tCZH1ycLr5klza/yEPkgcqquzn0z4P2cJz
9vsZnkf7OeQx73Pfq9fzad+G7EixtAv4UUD7MORFysPX2yYX0T4MsWL9c8pv
Ie9SL9387lZC+ypkf9oCcjmvlPZPSEdaaq7fszLaJyFH0hWUzCTLaT+EfE33
vzhVs4L2PcixjAEDvx1gCOVvEOdGwZK2tZWoM/h1m/d6Ra+SyKV9ObK/xGRL
2SY+7b8RZ/FxcrMS8mifjVzY2N4Q/yGf9tNIXHKhv4xqIe2bEf5Xl7XnXIto
f4xUr9Qf3H2zmPbHSAPrn1N+F3n57Lnbyx1ltK9Fvs3JXmaaIaD9KyLucrz7
5rdy2qci8nVaZZrLGNqPIhcviC9u1qqkfSeiuOiAvHQ7p+fJ8S8EPT0tzPu8
AZtcoy6gnhdvyz5dHdDKqD/I7lsY54t6Zp1Y0y9A6RGjbik74fUGb9TzCuuT
78zQGfD8pifq2Xqfr6Ok85jJy9TOSO3njnp+YX3aGXskZDV+u6Keg2fL+xXa
PGHCy5d5z7Q+hXruZv2u/pR/eIqNX1PUpt3I1wP1hPiTdhl8OZnohnpC/HOd
/1TaObmgnhD/vZg38QemOaGeEL9vic0aj0e2qGcXG//MC8O/71Xai3pWFWsn
FNo0MfeCpuyxux+IejZbHr/a09PEOKiaVGotDUQ9O0dkvV0d8ICZq2bpeMIj
APUcVNk2JEDpISMSsiVIJtefm582I2e3FD5knhkukpQt80M9VeV1jJV0mhl+
/acnP3UvoJ7rapzsbVqamavlS3b4PfVBPTNYX6uY8t+q2fiHW5MN5uqBqGcL
G79T3VC3wPkBqCfE//fiJakZw/xRz4Fs/Ep2BYNMgi6gnuPY+O3s+bnytT6o
J8T/Yc7xMRlVXpgHIH4f3pA14ifcUWfRdaleNi33mG/JNd3LG0JQZ8W/rRmF
NvVMg9u6UznpIajzwrThdT099cw1pmLHmZ0hqPPajSu7Vgc0MHUbRySX/b7I
1Wn9j8kEKN1n3uut0TO1vYg6O+Wmq7UU3mfGxOwx2XorGHUO2vZkq5JOI7N9
rU3FZdFg1PkT62sdovw3MTb+vmuuLZTNCkedx7Lxp3zs8n0tE446Q/wWHf1X
KZiHoc76bPxz9H/vKPYKRZ13sfFLizc9Lg4MQZ0h/oHjQssVT15EnSF+yeCl
3W9XB6POwvfoJiNbYhU0vD4CdRa+L7eYOXf1lo4eFYk6C9/r28w2bTldbxKJ
Oiv15p87TKzc9SJz7UjUOTWi+c/qgDrm26rtHhEqkajzpdUS4wKU7jI7GpqL
Nb5GoM4Pvi5b0VJ4l3lcrqG3LCqCyg+1jDTlv4Ww8R8PSRn8ejjnv11l498j
+qE26k8s6vyVjf/FRKUlHg9iUeeJbPxvO/S3JyTGos4Qv/3evXM7zWNR50o2
/guBjoVHh8aizhD/9sZvjQYmMaiz8LlXM+q1A6Y9vhuDOgvn52Xm6vnE7uUr
OP/tZO9zvMIcf6Uadt03FnXO7H2vrzLF75kXrtdiuTzc+/7WMKfj1NoOdMWi
zsI8c5251z/5vK9EHOqs1vs+3mCyZAZ8eDwqDnX+zPpaHZT/No6N/8jADyeq
biSizgZs/KdGPq2r+ZCIOkP8MnVXGntEklDnDDb+RWrRvnv7J6HOzWz8z9ft
+Sr2IxF1hvhlZSdLPGhBP5Oos/E3ejc1NWdzPue63nj+0enAvSfr38Shzlm9
f7eQ+ZI/YdsPR85/G9p7/RLmcqql763f8ajz/t75VsaM1Y+wuW+TgDpf751X
5Uz/mOruYXUJqLNy7/xhmKMxjzWdJySizlW98+QSs3/t+3kKlomo8xfW17pB
+W9GbPx7T8x5H+XG+W85bPxBSvX3Pz9OQZ0l2PhXOVkfOjY1FXXey8bv7vqx
bM6uVNS5ho1/7aLdxQoXUlHnSWz8seENlovT0M8k1Wz8JzLmXfYt4HzOIQn/
J35XhvkelyZ4ncD5b708gJnQEluemZOIOjv1xhPBDLMJcLm7Jwl1/t2rQzzj
kWn/bbJUMupc2Hu/yYxnpP6Y3Ixk1PlQ73XSmZHqsl37F/JQZ5Xe+LOZae71
x7fk8Cj/LVyQTPlv49j4d36w2+q4lPPfBrHxp8672jy6LoObz2z8x6cMHPTZ
MBN1/s7Gf7926bsf1ZmoM5+Nv0zB+sQ85SzU+QAb/1RF1/LYY+hnkpls/ONu
XcjRLON8zlFCTupOH7ab+DoJdd4qvA5Z12esws7XyahztPDvks2zGbv7TTzU
uU0YJ+kYanTqeHEK6rxGeF9EIrxJzcgrFXVu6h0fQIoaDJK26qahzuW93JW8
LS+9FPab8znfsL6WK+W/SbPxb91eetPkRzbqvJGN3zyutSPenPPfotj4N+y9
f3d+eQ7q/JKNP+DcqiFPJXNR5/Vs/FJ958UkbstFnVvY+B/WhZxzTeB8zkI2
/uff7G47PuV8znLhPCdtA5dpnnvFQ53HCN8LcnJylJOcIue/lQvfI5LU1b7n
oVYa6rxN+N6RDQdUxG+ZpaPOfYTvKQkM2bGxyzIDdU4Uvtdk00HPjXrbMlFn
bWEeIKlf48QfaGehzu2sr5VF+W8CNv603acU5R7mos7ybPzvpmzoXGTK+W8C
Nv6DmsmKh+/yUWdzNn717IMJ1cvyUOd+bPy6dvzTs9LyUOckNv7ogAOF+YPQ
zyRabPwLxRJXGu/kfM75wrxNPgUMH/z5ZSrqPECY50ma/ujWWyac/9Yo/C6Q
jkK5bY/yMlDnZOF3hFTcFvcf2y8LdXYQfneIbHC7bdDybNRZR/idIn/dnvZX
VMtBneWF3zWSd/Hy5MHXOZ/TgvW1RlP+2zw2/qS4uMYBhZz/1p+N3zbnzpeb
hpz/dp+N31PGYV/my3zUmcfG31Yfos47XIA6O7Lxn3ozx6L0K+dzQvwWJlrP
Xh1GP5OMYuM/J3uvdMYrzudsFNYhpO+Yp/c3vkxHnSuEdQt5eDRM44x3Juqc
LKxziNpxLaO28Zz/piCsi0igbOcQNZP/y38T1lFE/7r69fBhnP9WKay7yNp7
fx6NrOZ8Tn9hnUYC5qquSTvA+ZzvWV/Li/Lf7rPxxzVXn+8K4Py3cjb+7kU6
33focv4bxB/3flXx25+FqLMiG7/nD+buubgi1PkTG3/BltwVWsuKubqOjV9Z
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

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.000976255360128981, 
   0.14225862511652695`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6187610230602207`*^9, 
  3.6187616299262204`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzFnfeXJld5518q1xt6Zrr7fTvMjBAGm2jAtE1wwNjYBNt4cbbXYY2xx8LG
Eaez3rUxRgTFQZpRmFGWRglJKCCBAsHpHJ/1hnM4+wt/wJ6zDmAsBAyj0FtP
rFv3Prfeakl4f7i3+71V71tVz+d+n3Cr+u23veMPzvm133rHH7zrne84+82/
/47fPedd73zP2W/6nd9vhtLnjEbPOadp62eP4Pfd0Ui63d3Pf/7z74IOXgz8
vYQu3T1y5EiKo/gr/Na++mln9wJ/z92dsDWvR1nPtp+iz3iKPvX//MM//MP/
fPjhh6GNEuzTf/vc5z6nu1vnUhhjP0Efe9o89ad/qGT5lXwVfmQwMllmkswx
4pfV3HiMZNkH5MbZ8Ud9ST+KrkH24bNv3wN7THTnQk+Jr+SLeiLWwXDPd9Oe
/6wfUseO/Zu05z96F5d1Lk6u3jsUT8uHemek9caz9B1TOm6jhj6Ev0EHerBn
l9I4zCG9qCkdEA+z+3dnjfDX3hl1ztM75FZ3unhbS73afHf3b/3TyIx3/PrT
O40NvfKZHrJyDin0rUMeWX5If97B2KLLFI8zfvYOWegVremB2mtb4QN1hRAe
6Nf8GVsZO+3rGg9Pf79xAEt9v0oH+N+q2XaCp/wROzs78Bu+mjkfy1Oh72M/
p2dmXVxndv2NHupvzsJXMx5zD2V56HfSof5X18opX8HfHLY+e+p8NoxBdLOm
5a/QZ/8PvYwVPeUJfPYz+9j/ZpzySudjD+OrDPoSPzvTz+bPtz7+HfTxf2+c
tffJ1tEmfEzvQNbE+2U60N/1+pBaD964sr/Wo/31YXy1zxgbY0+y4jFsMXPy
afy1noY1Iws1cW4ccmWPp5Grbb3wxOfyWd1eG+eSuj5uzyaBcWkxk/wnOo1P
qUn2uRN30OXXzhibQAlKFIhp8pfo8A+rFfap9WcDrxgp4RDIuBmUc0gHnsMv
0jl8Uk3gkWodnRz5rw5DA2P81eEBYwn0OJTxVjxFd+vw03yg11NWrksbdHI0
lukYT5jSONN04Jn+Ap3pfcacKgae1UxNVg88EWty/zydyD1qsv16IvXAExlD
n8BQYmy1rJQNtBKf3F1dK6WsvEEnVwYT6+mcnGW5/0gn91H4kenJ8QGwwvss
ntJn9aCfPRwdy6BHG1bG1oLH8DTdd3inacWVn6PTvK1XE7XadcC5rvDxnTFo
uNN44NnnxtlbRuazv1lnQDs9s4GmXdGTs7bmA0/OMu3P0sn9kZ5ctCj/JrX+
AT3/0jibmTE21fPfP/D8i4Hn/zN0/n+IP/a+SnBWF0rKzuszhxrf8xk9z88c
xlcr2GfuGLRK53060Bz/Hy/4kEFxBhes13oIX82M6wfDEMU8ap3uWMZjeKE8
hpYdqvyffmZX21/NTngMTkKSp32GLUroS+Py8FISDl/BVsuElkEKZz8pbCo9
8WfIe8PgnRjXuBKZA4eCS25eTQbiT42rzdRmCW915wBl6sHizTM0wrpaszVC
vvSCHcOIuj9zaDoQdMoX61y6qiczLtwqC37S982F/rbavaKUnfGn9ew/fQhf
rRhjY+g1k24GeSOg+fQhtMtQfSfOVTplSDXwAnkx9RKdo6uKZ2Kc+MwYq6BP
2KpLLv8wNPyUw96YWMOdqHu8iIt7XU270mNdhEUpU0oWV+tTECbYTYPRp1V8
fJ01jy27ph+na7qwC0YWkgadTaJgxgOvmFE2Z5gJzyHnPzbO/8fo/M/r6kVW
sT6lR/7UIXw1M8ZWoMcTsa7OGiuVGE3F3J1i2MAXTQci4Ev4kIGgGHgJU+hx
aF/PO1wPkCs0mnSFe4HYiAZNswEg3k5Xca4Boo4Z3Rur9CqSge+gK8vcMf2M
sbENC4rmF5yy5cAr+w90ZX+pfCzZtwtt04HMCjqRZmgo5RW9Nuu6j8AKLoP+
1GHNLybxK3qvsrKWzcY6C5vjPqLn8sghfEVjuTtGTc66Gohwohe139sKGpJ3
LGP0o3RFf6aMLKG1q85go0cOyclDKhhc4MwYQ1rTZTsHs3mII3oaF/unfo5A
y5O7jxzsEIF4F71AqTQjfLtjmb6jMLbCkQ+5UkcH4lBfdllvo8v6E72sNeXV
HO/hgwlcmh70IL6yKNV6mk8bc9NLQOt9B17iI8j6EUil9NpFfVPjOn/ESfai
/qRdYRvDtcs5PHwQX5XQQ6cn9/AhfAWGOiQ598OH0oFXjLSz2OyWucBXi6/G
aqOEtwZhDq+N5+p7ulBlPTi4sO7YIb5CvBLyKcEVz4wxfEel02B/jxXcayr1
HZlxTVS0BgULz9rf0yted71M/NpobMUYS2Tq4mu6IuvKV4yxSvmnsa35EmuI
Wlq1V4Y1rLDyQ2SK31bWrSmas3lIr/Ohg/iqgj6PTQKJ4Q8fzAZSz3WeFAPf
MZHZ8sghuXQSv9S+e7nsd3dngNxwCi57xRgbQ6/cm0HeSB9QBzYS+Jl7OXr5
9cDLn/JneDXdzLGK+LGZcd1vpet+l+IedW+ztBV4bVzyzBgroRcBDnoH7gdv
O5R4BvEuZpktahWOOAX6DKiCHvZngeXV30LWeK1aY+gTJs8z5s10L5cvWfyg
d/BMawwm5cJDaoqH4uYpA7/i2mjf3mz0Gvwx/BGRdum2dSjNIR/Ua3vwIL6q
oC+MixZfMshClU7CJNiKuusa7CE0WDDWBq3cMNjQSfVmMtgradPTet7MSu0P
qkHnatDEMOgsNiZFSLAVP8WavbnOVAtQxm4uMKNvbvLQFJMeEt/FO/PsfOjQ
1LCu5cDe9I2x7pYKeq6CzgxbrRhjY+gzVuYgHonygDn34MGuxS31Z4adp+oR
JrZh9/Obls3YNy2XuPVI1qbOSMtFtrfRGuyf1Iv6ZNwq6ArEXw2y/EwtP419
XteiZLhaDZcYZqUpnXeMKdN4n2FRa5b+4HKLtk+cLYy5N/Ft9km82mAsg14K
Vvht2AScqqn3D3xHSu/YfbCt0h5U24z2akdrZlp2/AE/QFt3oQ50PeOoreZ2
P7ltWm2FbeeMQZPycbnlZXbJJBruhW2zUvaEs/VBtSPY90EsAB7UWNRj79ne
bPpT/vzjJZZPbvNlbqNwt4uYPUR3g+ZprvPU+rwE+skAk2ko6e5sGIrHEsOg
BfSlY0FJmFcMa72RrPXj3Tkm8eET2/LZn9jGV7PO2EFouB/ku2yAfQNNluiU
rPfiDNp5SdEocw3KyVZgptQwU+2LvWMmnDk8ld6uA1a4bQNBudRgNIaGRauJ
vj5x0LPpFPrkWZmalZKxPg/d6tiYmoXq95CYEjMGc7ZJUvmguaZmPZnI8+5t
xrwbDzRjDr34FvgtNOPMGJuo4eHqPqHecbR3refDfW/Ok5VMqZPVmphtFKoM
i1oi/j4y5g+pMVuX15zOA2q4B7bx1YxnoWNMaFKnm8b3rVjRBKXAPMjuM9sw
ctRBphfnilZ0vYKzn/rQ6UDrvYGs9xadqhtuwPAMZxnzATXmAxRc6Ioe2E4N
Y6KTKAz75Dov8+EW/YRa9BMH5dCW4aLz2DNm2p3b4DsOJXuzI+aGWVfSadRw
3bEJWY2ce7B1ymO7DxyUax4larV6z/rf52/dk6EiDhXdLczTISb7XjLZG3Xq
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
/wIE/OaqU7jqIOpD38hOZ8oBbBQ5m9/Q3+WsOfcq9kH/Lr0K+tr+0S+pW3Bd
7D/9+T5ojRaaq0jhElLnEgRmsvvPf9FYvgvzC5iAfgHPvjPX4VqQYwKXkBl2
rqH/Iz1D+o7s0S8bdn6Nc67/2Jxr05pX1OO5k+3x/OUc/smdgimcerPhX1ih
cHhMBt6nh6d/ZT16h3H4VzNmeQbx/zaHbBqeQXQCHVVvQl/yN/oV45O/wxuD
d6OprtLzom8rG71TwfnvgVft7vR/Z0e/Zuxk/Z32FfrGV9Abjxg7vdIYO65v
pL8gHv26sdMrjLFL1C5EdXSOXpm1+0V6HIpjo98wdrK+8eY8fSPdgR/9prHT
S42xD+gb6RnE0buNnV5ijLVziR68Gf2WsZOVCP2ZvpG+qHr022oSa/c/VQv+
KO3+u8ZO32KM/bEeh1b/Rr9n7PTNxth79I0/RW/8fWMn67ssf0ff+HP0xvfo
lVm7/6buTt529IfGTtZXEJ+jJiH9klvxdjrbGPtVPeKv0hv/2NjpucbYL+sb
z6E3/olembX7L+juNJtG/9nYyfovAT+rbyTKRN/b6aAx9pP6xj+gN/4XY6dt
Y+zH1JZ/Qm/8r3pl1u5v0+PQmY3+3NjJ+uc/b9U30jtG7zV2sv7J1w/qG/+S
3vgXxk7WP+P7Pn3jB+mN79Mrs3b/Ht39fNr9/cZO1jfRf6da8GJ647nGTtaX
bLdZ/CX0xg8YO1nfSPoqfeNl9MYPGjtZX7Pycn3jCXrjh9Qk1pdGvFR3v4Z2
P8/YyfqrtBepSW6gN55v7GT9oc0L9Iin6I0XGDtZfxBwtr7xNnrjhXpl1u6H
dPc7afeLjZ2s50k29Y330BuPGjtZN7nX9Y330xs/Yuxk3V49oLZ8kN54iV6Z
tftMj/MI7X6MT8nZCVvzmtjhzp+lnY/zabg7N7+Xut/f0n6XeUeGD0t1p7+n
nS6HH3jg/04Do+f8P4Mkavw=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427441564007*^9, 
  3.618427442114012*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nAvQHmV1x79CgBpCBgGlgHLRlIBtGaiItWRYQS4JkatWGotIQ0K4pdqp
lwIBJKK+7YxT+IhCEhMugXBJgOQFPgK8yYYNl6pUyRtCLl+CZtRaBwoJFxlr
ndTuc37Puv/zHcaZzPNzv+c9+9uzZ58977572NQvnDt9l4GBgQm7DQzs+vt/
5x9/63u3XfV0edjWMx7eufMnZRo/Ul74zH7X/+LbT2WexsvL0xd+YMO6E1dm
nsYPlC8uP2jplhmPZb6+Ht9TXmB/B0/jO8q19v/Df1yPbymft3/h/16Pv1UO
1P/dMAF+9X4Pnrbtqi9N+GnavoBvS9sXw2n+zLfYdheleDL/+xRPsTHFn/lm
+/sz0/5mfnba32Jq8iPzLC/MZyE+4eXFX1o2d2jmsPMMV89w9QxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPXcnqfxLD6z5/v33PdrM4dfcp7h6hmunuHqGa6e
4eoZrp7h6hmunuHqGa6e4eoZrp7b8zSexWf2/NqdX7543KS+8wxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPUMV89w9dyep/EsPrPn6XWe/9B5hqtnuHqGq2e4
eoarZ7h6hqtnuHqGq2e4eoarZ7h6bs/TeBafks9VkM9VkM9VkM9VkM9VkM9V
kM9VkM9VkM9VkM9VkM9VkM9VkM9VkM9VkM9V4LkbeO4GnruB527guRt47gae
u4HnbuC5G3juBp67gedu4LkbeO4GnrvO84D9p57h6hmunuHqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp7b8zSexafmcxHkcxHkcxHkcxHkcxHkcxHkcxHkcxHk
cxHkcxHkcxHkcxHkcxHkcxHkcxHU58BzFXiuAs9V4LkKPFeB5yrwXAWeq8Bz
FXiuAs9V4LkKPFeB58p5tuuj8wwP1hvOMzxYbzjP8GC94TzDg/WG8wwP1hvO
MzxYbzjP7XnceiPI536Qz/0gn/tBPveDfO4H+dwP8rkf5HM/yOd+kM/9IJ/7
QT73g3zuB/ncD/K57zzb/YvzDA/uB51neHA/6DzDg/tB5xke3A86z/DgftB5
hgf3g85zex53P+g82/248wwP+hvOMzzobzjP8KC/4TzDg/6G8wwP+hvOMzzo
bzjP7Xlcf8N5tv6S8wwP+nXOMzzo1znP8KBf5zzDg36d8wwP+nXOMzzo1znP
7Xlcvy57vvZrL02+aNSa8ukjrjt8eGhrmcYPl/iH49+2L2T7PL9sr/MXwfxF
MD/bM0+OX3juozK/bF8G22s8hcRTjLngo8fcWa4p35j9n1fMHH65TOOH7d81
BXyvxHX7Iti+YHs8MA8e2J74dX7iZ37iZ36Nn3mC7d39lMyj8eT4jzj2mTdv
eKXp66bx8vLSKT+/45wVq/LnpvGDmbM9fPbpJ5w/d+7jefuv1+P7Mmd7OHGx
/ffq8V2Zsz38Evsctp9RjxdmzvbwefZ3bH9rPZ6TOdvD59q/bP/denyD1YcL
cz/f7sImsD3z6PZwtl+Qts/5sDBtX8DZHm77XbT9zMm87WdOcVnykLdPXhZm
zvbw71m+iP/MxX+RjtvjeftvpOOYOdvD0+euyttfbnHA2R5ueZi3H5/yMHO2
F5771Zq3cM1PuOYhXPMNrnkF1/yBaz7ANR/getzb8TTHF67HUeLPxwWuxwWu
/uHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6bsfTeIarZ4k/e4arZ7h6hqtn
+r3qGa6e4eoZrp7h6hmunuHqGa6e4eq5HU/jGa6eJf7sGa6e4eoZPnI+V0E+
V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V0E+V4HnbuC5
G3juBp67gedu4LkbeO4GnruB527guRt47gaeu4HnbuC5G3juOs/0e9UzXD3D
1TNcPcPVM1w9w9XzQOu/xjNEPbfjaTzD1bPEnz3D1TNcPcODfC6CfC6CfC6C
fC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6CfC6C+hx4rgLPVeC5
CjxXgecq8FwFnqvAcxV4rgLPVeC5CjxXgecq8Fw5z/R7g/WG8wwP1hvOMzxY
bzjP8GC94TzDg/WG8wwP1hvOMzxYbzjP8GD9HORzP8jnfpDP/SCf+0E+94N8
7gf53A/yuR/kcz/I536Qz/0gn/tBPveDfO47z/R7g/tB5xke3A86z/DgftB5
hgf3g84zPLgfdJ7hwf2g8wwP7gedZ7h6pt+rnuHqGa6e4eoZrp7h6hke9GGc
Z7h6bsczR/snzrPEr/0Q5xmunuHqmX5d0JdznuFBn815hgd9M+cZHvTHnGd4
0NdynuFBn8p5hgd9J/VcXnvYz3s7d/o+53d/tP9PJw5ucfcjD149edfBcVvd
/cgz1idXn1vWdyeNm/Syux95y/q06nPPow+8cWim7zdeEvQPr7P41Sfxq0/i
V58Sf/ZJ/OrzTYtffVYrTl00NHOD87l5+lXP7ty5wfl8Y58HfzVxcKPzOXr1
tjGD4zb5fu/M9xw9PLTJ+fyrAyd9atykzc7n2c/N+srM4c3O59Kg/7bG4lef
wxa/+iR+9fmudvzZ56EWv/okfq0DxK91YPez7/uXmcO+/3bw77YsHZq5znk+
7v69X9i5c53zfOZ5J785cfBF3xca9c/vHRy33nmetXzJx4aH1jvPcy74yfnj
Jvk+5/ag/7aHxa+eD7H41TPxq+cz2vFnz9MsfvVM/OqZ+NVzOo+ed57T+fIf
znM6r3/kPI+r68+Pnef75m/+34mDLzjPT00ce+jguLXO88a3T/zE8NDaoD74
/tstFr96ftbiV89vW/zq+YPt+LNn4lfPqy1+9Uz86jkd9zXOc8rPp53na+vj
+Izz/EB9Xj/r63B9/j7nPKc6833n+WP1+fgD53lH0H871OJXz2dZ/OqZ+NXz
0nb82fNmi189E796/muLXz2fXcfziPP8YP25Q87zXvX8jzvPV9T59qTz/P06
r1Y6z4fX+VM6z1WdJ085z28F/bdzLX71vMziV89jLX71fFk7/uz5OYtfPf+p
xa+e11j86nnMov+Pf7bzPFDzQed5Vh3PfOf5t7WHO53noXp/FzvPX6znWeI8
/0Ud/0POc/p3Xs/ls8Wvnkdb/C6fLX71/E47/uy5a/Gr53+w+NXzURa/ej4g
cbcePj/N49bDC9PnuvXwthSnWw9PTvvl1sMb6u0H3Xp4Zc1nu/XwfwX9t/0s
fvV8nsWvnhdY/Or5F+34s+e/sfjV87DFr56HLH71vDLlufP8vnReOM8r03nk
PF+Qzjvn+Y/Seeo835XOa+f51FQHnOdXgv5bz+JXzwda/Oq5Z/Gr5wvb8WfP
u1r86vlui189n2Lxq+djU912nndLdd55fildF5znxek64jx/NV13nOdJ6Trl
PB+YrmvO89Sg//Zhi189j7L41fN6i18939OOP3u+0uJXz8Svng+w+NXzS2kd
4jyvSusW53lxWuc4z+9P6yLff0vrKOd5dVp3Oc83pXWa8/xq0H9bb/Gr55UW
v3omfvV8cDv+7Hm7xe/WdRa/er7R4lfPg2ld7TxfldbhzvPUtG53nk9P63zn
+cPpvsB5fl+6j3CeR6X7Duf53qD/dpPFr56vtPjVM/Gr58nt+LPnYy1+9Uz8
6pn41fOZ6T7ReT4u3Vc6zwen+1Dnefd03+o8v57uc53njem+2Hlene6jnedp
Qf/tDItfPX/E4lfPxK+e92jH3+Szxa+eiV89E796flfqzzjPO+z5OvW8OfVP
nOfKnkt0/eTUn3Geb079HOd5Vur/OM+HBP23P7b41fN2i189b7L41bPEnz0v
sfjV8xyLX/tF5jOvk/FPH0yf+7L9detA6+MVOg9+dB6b33H6hEHfNcfJc8vX
WDw8t8zzlvBcv+x5Zrg+zwzX55nh+jwzXJ9nhuvzzHB9nhmuzzPD9XlmuD7P
DNfnmeH6PHN7nuUFPjdZn019wtUnXH3C1SdcfcLVJ1x9wtUnXH3C1SdcfcLV
J1x9tudpng8Xb9nzR6yfpp7h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp7b8zSexVv2/AHrm6lnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoarZ7h6hqvn
9jyNZ/GWPdMfU89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPUMV8/teRrP
4i17Hmd9MPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPXcnqfxLN6y
5/HW78Jz+/fvnZ76Z3v8t39H3+npcWF7jkv7d/Sdnh4vtud4tX9f3+npcWR7
jmP7d/ednh5ftuf4tn+P3+npcWd7jnv7d/qdnuYD25MPcLbXPGF78qT9u/5O
T/OH7cmf9u/9Oz3NK7Ynr9rvAej0NN/Ynnxrvx+g09M8ZHvysP3egE5P87Md
z3J5nwDxNHkr+SbvGcj5lvP5IOtzat7CNT/hmodwzTe45hVc8weueQLXfIDr
cYfr8YXrcYTr8YLrcWnP0/gXb9nzwdbPVM9w9QxXz3D1DFfPcPUMV89w9QxX
z3D1DFfPcPUMV8/teRrP4i173mB9S/UMV89w9QxXz3D1DFfPcPUMV89w9QxX
z3D1DFfPcPXcnqfxLN6y50OsP6me4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmu
nuHqGa6e2/M0nsVb9kwfUj3D1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9w9Uz
XD2352k8i7fsmX6jeoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2e4em7P
03gWb9kzfT99nwBcfcLVJ1x9wtUnXH3C1SdcfcLVJ1x9wtUnXH2252l8wvE5
3vqf17T7ruXGq7/e2+d3TT8zjR8op/7brJsO+uCKzC+qx/eWr9rzHPBX7bmA
167Y+pXPvnxvw+vxreWoI247ceOn52U+UI//tbzH+tPwe62PverXU7ZdsOPu
zMt6/J1i/S8fnr+4vyzzdfX49uL0F594dsHSocw/WY8XF6tXP7Vjzjd7mVf1
eGkx/zPTxp56dNO3nFePlxcvPv/LRSe+/+nM0/gR65evyv1D+vs76v1bkfkb
tv9X23sL4LPq8aJyTL3f92c+2rycVB/PBZmfUI+/Xd5h/Xj4Hebr1NGfGpqx
/7LMT67HtxdP1p4ezbxnHo/+2YVjPvPDJzP/y3q8pEj+Vme+zvzuZe8TgNt7
CYrr7XsQ+mOz7XuQ0fbeAvie9XhR+aH0OZkfWY/nlx9P8WZ+Qj2+sZxp3yfA
L7fvKf7sgN/89pDjHs38z+vx3cUduw2M33/vJzNfVI+XFGOu3PXIPb68OvM9
6/Gy4pTXv7lql6lrMk/jh4t5Vqfb/ai7yklWV+AT7Th9zuoH/O/q8U3lAjvP
4Avs+O1TH+cnMt8v5UGRjtvqzE+248r7MeDX2Psxplve0c+ZZt8rXW35Bb+y
Ht9c/ua4U7514z+Vuf/zP/X4oeKxdx++ac3iKvOhetwt5tp+08e4xb6X4nsf
ON/7bLfnM+Cv23MxUX9jsvQlJpvf9dJ/eMnq8uelz/B5875O+glrrV6/IH2D
561uL9/3+N//78rcH/jcLlPWXFJeOoF6DN9qdXuT3O9vtu2myn39hVa3N8j9
O39/htynnzXi+/2yn+JI+96K+3H7fsrys7kft3zN32dx/8j3WZutnuf7U6vn
06yew6dbPed3p/DXrJ5vt3qWudVz6hZ8d6vn1Cf4nVbPqUPwntVz6g28b/V8
otXz3Dewer7K6jl8tdXzeVbP4VrP4euknnM/SD1/w+o5/E3b/1lWz+HX2Pk2
1uo5fIx5OdnqBPzjVs9vs3oAv818nWLnPZx6/oTVc/iTUs/hWs/hffPL+2Fy
nFLPuV+jnu9p9Rw+Ruo5XOs5XOs5XOs5XOs5XOs5XOs5XOt5+/7oLqvfD2R+
mh0n1oPw86Wew7Wew7Wew7Wew6+Ves79hdZzuNZzuNZzOPX8davPrKupz3Ze
lLLOKak/cOoP60n5HrxYb/Pk9bbNw32QrD9L276Q7YtL6no5o/n+vR6fZ9eT
Kq+LLP5ycf3/fzXzu+zvL0vHLa9bLq/H1+MnrzfSuFu+k3xmnsYPlWelv8v8
k/X4H8sp6TzO64fP1uNritnpeGWexjfn91lxHed9Vp9IeZJ5Gi8r9055lfm7
rb78wK5j8Ods/7nPgP8s8WKaXZfg08wL1x94uq9YwHmU1w92HpWj03mXeRov
K29L52nmabykPDKd15l/KJ3XJfUPPiF5K6+w4wOfmTzb+vb2zNP4xuIYq3Pw
VAfnF2OtnsHT+nUR69i8nrH3YpWpLq7O3OpkeVSqq5kfZfVuRarDmafx3eVJ
dtzgJ1kdZD0In2L59IodH/h/p7wtzrHjAD/X8oy6Ak/jecV1Vj/g11r+vZWu
X5n/Ol2/8vnOuoLzfW66bmaexsvLXrrOZp7GS8tT03U589PSdbl8wfzB0/j2
csg8wR9J1/3yO7auhA/a806juskHfI96fF6xv+03/E/SeqNg/+DvpPVJsYP3
Dhh/3Z6nvjitfzK/JK1/ii1pvZT51rReKu61usL64XapS1xPqUs9Oy/hK+zv
Z9j5l9cbUpe4fmldglOXPm15BD/H6tLfWr7Ap1hdut7yAn691CW5HuW6BNe6
BN/b6hJ9EfgzUpfgWpfg06UuwbUucV3TugSnLi20ugSnLh1hdQl+pNWl460u
wT9qdekLdnzgX7S6dJrVJfhEq0usv+DHSF2Cj5W6xHVZ6xJc6xJc6xJc6xJc
6xKcuvQrOz7wV6QuwalL+1pdgu8rdQmudQnOeWvr9rxOsHV7udLqD3yl1Z/T
rP7AJ1r9WWue4Gut/jxmPuCPWv15zfYPviOd1wX1Ff4eqzNvW7zwt63ObLc6
A7f7JruvWpH5DKszw1Zncj/Q6gx9OXm+keceS1mP5edU4fqcKlyfU4Xrc6pw
fU4Vrs+pwnlOdYH08fR51PbnNs+jwvV5VIkzP48K1+dR4fQlLpV+nfqBqx+4
+oGrH7j6geOH/WjP/wfP5bb6io0HiSd7gKuHvO6V55/hPAc7W/p46gGuHuDq
Aa4e4Hi4TPp7ur/yuXl/4bq/7T5hs7/w8a37l6a/p/sF1/2C637B28e36ftp
/HCNH67xw4mfOFnfapxwjRPe9r8qr5P1c+HjW32nph+o88N1fu0TMj985Peb
dXojv9+s0xv5/Wad3sjvN+v0Rn6/Wac38vvNOj3dL9aB7Ff7vWed3si/u+y4
313CR37vGXHqe886vZHfe5b3S9571umN/N6zTk/9s1/6nDzb63HRviLHBa7H
Ba7HBa7HBa7HBa7HBa7XHbh6bn9u4xmuniXO7BmunuHqGY7P/D4HW/+73+8Y
V29w9QZXb3D1BtfrUXv+P/g9Tqsvqr8vK50fuPqBqx+4Xo+4T1EPcPUAd7/n
Na4e4Ho9guv+yufm/YXr/rb7nM3+wvV6xP2O7hdc9wuu+wXX65HMn+OHa/xw
jR+u1yPuazROuMYJ1+sFXD8Xzufm92bYfQTz5PdRGGd76nP+3tnqM/WNdRH1
je3hWs/h1BnmYb2hdRLO+c78cJ0f7n4311oXzcmfyzpBPxeudQbO+UU8cI0H
rvG01zlN3YBzHhEn64qR3yP0nIsTrnUAzvlC/HCNH67xt+dp4odrHZDPzfvF
ekb3C677BR/5fTKlW5fCOb/YX7juL1z3tz1/s79w3V+JJ9cNOHUDD/J9ZfYA
Vw9w9QBXD3CtM3DqDH7g6geuftqf2/jJfULxI3FmP3Ctq3DqG3GyTtC6xPVR
6xJc9wuudYnrjh4XuNYluM4PV2/t62NTl7he6OfCNR/gWpfgGg/cvW+qdb1r
jiNc6xLXF40TrnHCNW/hWpfgGj9c42/P08QP1zyUz837xXVQ9wuu+wXX/YLr
+QjXugTX/YXr/rbnb/YXrvsr8eTzDq51iX6aeoC79/YYVw9w9ZD7e1KX4FqX
4OoHrn7an9v4gasfiTP7gbv3pxnXdZc8H1j8HyFFM0c=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztyLENQFAYhdE/xCAKW0jsYASJ2go2MYrKEF6MwA4krxK96tzmyz31MPVj
ERFtFVE+3a91a5Zjjbw5/7PjnHPOOeecc84555xzzvnX09sjcc4555xzzjnn
nHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc845/9Vv6weBRQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.07999998857142858, 
   0.07999998857142858}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6187610232602205`*^9, 
  3.6187616300962205`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNXeuPJcV1b/p17507s2/wLizL8lge5hUYHgYSMMYsxoSHzfsZloXZXcCG
AAmxYzsxWITgYMc4xLElK3LiOFZEYkgsK+zCrncBOwlK5CDlA39APkSKIlmK
8nVy65zq03W7f1Vd1d13hg/dc6e6qqv7/E6dOnUe1dfvemrvQ5/Z9dS+3bu2
X/PErsf37tv95Padjz0xKUqOiqKj9k6Ojdsj9Xs5iorT8vL777+/T53UP56/
h+qULC8tLSVUSj/Vr/K/W43qA/qdmZXomPwfpY5rtxj3iJL/fPfdd//twIED
6ohiOie/fO+996Q6epYclH26+23j5qf+P/UnVSXzTa+fGgT7X/UnFtLSr7Hj
Bhl4On2rX8q9U7nVvCCXy1X9wP8jlxiTtNofXXuUK/+33HEkl2LwKJpr/ksq
zYF7u9secDIbarhNHm6dg3IP8+33O6oMwM2Pk8fZ4Pk4e9p1tEXeAt103Ww7
P0be8kPgKgJiqbmjKq+qsmPkLY8FN01B2UPNHeVy043yHlvDbl9y3RBUWisd
nACuojH5IN/2P2TUbQeVkLTazQ3fc46CbWE3+4U8/umeDR/ghv8qT/FhUAkx
0i5u+K70eHZYw3+SHs8FlRA293PDnzmHD3oKx83ekqdA2J5lI2JcTiDFxeKO
h+X6CLQ+E5TNgbL7+GYH5fEuCWtYcvmvgkpjUHYvN3zd9nroPvOg7B6+z0/k
AdBYvDTsZj+Wh/o4qLQAyu7mhq/JU+wEldaAsru44Y+kx2vDGr6i/pAc+CSo
tBaU3ckN/0Z6RHLgE6AMzRR38M3+Wt77prCGT0tDqwJ4olS5xfPet/O9f5v+
hGuL5ax/O7j5elB2W7cOS03gzpXpsNQIENVvs5E5KWnSuutSH7jPyq+4Zcd3
3iTvvAt0vBGU3VJl0Vx+bZBfu0HDTaDsZr7ZN+UplkClo0GZXmT8sfSIZiH0
FI6bvSg3ewRUOgaUfYobflUe/7OgEtLwWB5Ez0uPj4c1fE56fBJU2gzKbuSG
zzoJhp7CcbMvy1MgneYxULYFlN3AN/uSPBlSFNDNkEZ7Pd/sC/JkXwxr+Dl5
it/3bPjrxgC0EvZLNlpQke77KXno56w41FZ2uu1vys2eB22Rcs4TIxOWOv0q
qHQ8KOOpOHpUenwxrOEl0tB3wXmyPCNq8QIoQwo7T97RR+iP/1JtuzzuS+Aq
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
RhA=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
  3.6184273766373463`*^9}, {3.6184274456340475`*^9, 3.618427446374055*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
b5DiJetHnf0dwNYbJMl2qPXs4V5svUGW3IxL/bjfka03iOCAlMLJt3vYeoMo
vzhiPm7rNcLUG2RxW1jH3a8ehKk3SOKcwR59dvkRpt4ghR2r5i1fEkaYeoO0
Guq+zxgSxYxnEXFs1gt8+SSerZ+Ja2Ld2RMqMWz9TB7dNVv2Z0ckWz+TZdX9
ZsrPD2brZ7Lx+szKKYk+bP1M0s4JWq4dcWXrZ5KQPGHfyZKLbP1MFD4bq209
aU6Y+pm836yr/9LbiTD1Mzn0/VtXwzIvwtTPZKt+0a7FBoGEqZ+Jat66nfKm
EYSpn8noT8m3r6lHM+P573iGT6S/P8Yx41lEBi10+nA8Mokw80HyKmVvrteU
YHY+SIY9/Rw8sL8vOx8kTjK9RnSrdmPng+RV6Ap+xtSr7HyQHOte++XN0r2E
mQ+SFcMeuG9/40CY+SB5W2RVZTnpEQHPwNP+iuizOtaPMPNB4jhKZWJjRShh
5oMk8le2T9x5HmHmg8TlcJeoP31jCTMfJNbVc4R6HgmEmQ+SA3rHS25PTibM
fJD4b93YcthIQJj5ILl/p/Xr7fFCwvQ3SMSbD71KNl5k+xtE6oxlg+ISM8L0
N8gGzdi29oI7hOlvkBDpgvB9yx4Rpr9Bur1rnXF4tx9h+hskbOOvwT4qoYTp
b5DQHdJn33+MRM/AbeT6HOi9OoYw/Q1ikDPAYFxYPGH6G2SK1ZAli/rzCdPf
IF2mjZix3YQSpr9B3p2QdeTvTSVMf4MYrLprv2xIGmH6GyRVVd6mKj2dMP0N
Mqmb25l9JzMJ068jtks/6CZ09SZMv47ILHJ66moUQJh+HXGePdfmTGIYYfp1
RGbYsQGTr/MI068jpYP/ahiREEOYfh1xGSAf2vdlPGH6dWRr39fnf8jx0TPw
kT35y97qUML064iZTdYN09mphOnXkXV/NE7uLRISpl9Hplve37Z9Xzph+nVE
/ke3vzb+yiBMv458O2OqttIpizD9OlLdXjFQd1IOYfp1JPHkwg5tYS6xsq5Y
vls6jaarXhhfG1tP5e6aPGy424z1HvCvty5XzG1pptz1BPi3Hx2VXfZK+lTA
d/dyKnLcXESZ+5Mz5Hrqmu93CXN/Ihi5t+e1mmuEuT9peqy5KCInCznEnxtz
vXtqew7GD31I05UhgfJ6TyhzPX3fbcLca+dLKHM90ddNlQvUeEyY+MnnpHfx
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
g/hFn14+b+E5tt4gH66rDbCXtiRMvUHGTzuxdf0gZ8LUGySw+eZsoZkXYeoN
kjzxSdrWrQGEqTdIgdnM1W064YSpn8mZUbl/vNxi2PqZGG1fsclwDY+tn4nd
zAdbpsiEsfUzWcfz6uF93p+tn4miul+U/GtPtn4mhes3psqHOrH1M3GactZU
StmKrZ+JNNc/Z+pncjjjtsYUoSNh6mdSVmBb8dfLR4Spn4nS2wULptj6EaZ+
JuuPzr0TPyyUMPUzyehQ+ORVHkmY+pk0Jrm6v1SKYcaziHyzlNedciCeMPNB
4vRbGD6m1ZedDxIri4Vqyw8+YOeDpOzH98+rWhzY+SDxfFf+e1m9GTsfJL36
Kr9d182aMPNBMtW2POjx376Y+SAxvdS/pfisJwHPwAVc/5yZDxJ56fXjCj6F
EGY+SGY++f7osUskYeaDZKfOitBnMdGEmQ+S694PEseUxRFmPkhiu37MMv6U
SJj5IGk2XljuJZtCmPkgudKsb3bMRcD2i4iD4jOp3AF7CdMXIl+/7ewdW3+D
MP0fsv/U4hz+vPuE6fMQtVnvlqyW9iFMP4d4TZs5UfAmgDB9GzJUw7qvZkkY
YfowZIn88/bibTz0DNya658z/RaSNGhq9SKdeML0VUi77IZl52YkEaZ/QjQG
nE3iqaYQpk9CYnusvvflpoAw/RBSdqW58E5PIWH6HqRV+mRPdZs0wvQ3iMzl
Hgtzv6ejZ+jXjbjY+FHxrj9h+nKEl1jsZj0mlDD9N+Lb0aTyaUskYfps5KNz
dfuY0dGE6aeReVqivI1vYgnTNyNXC3M9r/ISCNMfIyWH0k4lnOOjZ+CKXP+c
6XeR6LU1t291TyVMX4tUP9p0zv+gkDD9K/LnvWiPoCCNMH0qMk579epqzQzC
9KPIsmt5cz45ZxKm70SOVemN7fs9C31aqTzj//lTS5O/B5/clCPpc94rHNqk
71hHBW/vFh7ZJOlbhp1f3s1xbD0dlHaiYWZaI+aHDK5PPvASf7tlhaQPWVfO
Wzp2aQO9MLTriMgXkn7jZ65Pa2i9WF7UVod5uK+GgkOsaSMNSL60uulXLebh
A//RP7zAxf/ZYquJp5ukTwjx3z//MHtZgKQfCPGHr2o0fhIl6e9B/FrtivP2
8yV9PIh/zHGDtdWpkn5dGxf/FeGtx7PTsS9HhfFLfGJNK+l614bbU/Ik/bea
vecy//yppJ+yZs/d9lHSf/s0KOy1vmMV/Z13e7S5bD367CNo7uc4tpqe832q
b6VeJ+n3mg7RqI2tpnvWTg89sbQWfc5WWLp+7NIamiyyWb1pVw36XJNlYW5a
W0OvqOZPHW8u6ceG/Ef/LY2LP3tYwv2DE8rRZy0X/5upvR6WLyxDnxD/+REb
GtUNStFnb4i/1sPo1CER+lTm4n919MmIwHMl6BPiz6gaOzT37/ka5AGIf/zk
bM+IMZI+Z481gfamtSKqf+zZlddd69Cz0q+6kFjTUrorfmlllWYtep4ZJFv8
508pfVsWvC9mew16XmWwuE3fsYw+yegz/YJttaROkz4j7zi2nOpf30dmhlSh
Z4vI4Dm1seVUaRy1qymsRM9ORo2GY5dW0F135WRNPlSg55b/6L/15OL3iB6a
oxUj6b+N4uKf+8zsxM5qSf8N4td7lb3t/HdJ/20lF79QoHjx0rBi9LyHi9+g
tia/dV8heob4+zScGhh3Lx89Q/wP7PuINgly0bP4d5RPtfXfnH88txo9i38v
BVQUsPXkppNV6Fn8uy6klfVZQZ+DKtHz2M78U0SXvdQcZd1QgZ4D3Wt+6jsW
08kZriXfZCrQc6q+jLLj2BJqdfpnqpG2pM9Z9WXRX7WxJXTBb8OWyH1lTH7I
o+lM/82Fi//YGvOvP3SK0XMmF/9gzbg7FU8L0fMXLv5xh85H3J5XgJ7HcPEP
XjFn+ZibeegZ4m+oaNl1pyoHPQu4+K/18f5cPTIbPUP8ci9XdPtlKOlzit97
GtVUbjHbdVzSfxOPz3S62O3wwLJYSf/NqvM9ZtD0F08/TPtWhp5DO3/XmTSq
15Y+NjPLJHm48/ebRQf+yd2dZFaKnsV5Joc25Mz58SRQhJ7ndP4ec6nCwcfF
XxtK0HMr19fSZvpvylz8dlWBy695Sfpvq7n4o92uab+Ty0XPEH9Kt72Bqhez
0XMIF7+P/BxH8joTPddw8e8X9fiqsSwDPUP8vWcVVv70TUPPc7n4ry++Pd2n
IxU9r+mMJ5pO+PZl/8ggSf8trPPfjaXR9hZhazsk/bf+nfdPoJEf/2id0BWh
Z5PO8ZZEFdWsv9jcKkHPOZ3jKpm2z/71xbKsGD2P7xw/lBLF09P3D5X0OYWd
4ySVvvev3XU+rBA9f+b6Wh+Y/ts6Ln4t2f0BismS/lsEF/+mrkYvuyzJQM8y
XPwGD1Z5p2anoedDXPwzmmdXb9MVoucsLv6WAsUbxUkC9DyOi39I1udTZHMK
ek7j4u+12CfPcXISeu7n8//iv0gVi39sr27+//pvndyRjjt3c3nRvGL0bNEZ
jzvVbp31Yc+4IvT8o9ODN+3jsiq1e0EBeo7tfF4/GvvcSNbmSD56PtZ5n2C6
sP5AbUXvPPQ8pTP+cOpvaTK656Mcpv92n/+Q6b8pc/HX6I3tHl4l6b/14eJv
P6TpOPS0QDKeufibTI/NjFFKQc9fufivGZgtbNFJQs88Lv5Wx706TVvj0fMR
Ln555ZXaV/bFoGd1Lv7vvyeoN+7loefhYk6U13QLUJuWj54Nxfchk8u1S9x+
5qLnh+J/l8h1O2b+lOag52ZxnKS22sOlp2U2el4ufi5itSVteo/pWei5svN6
RyJ18enKxmcZ6Dm5k18kO9b/euJ4Ox09v+L6Wh5M/02Oi7/HH2HaxVcJ6NkA
4vfvfW7rmjj0/ICLX8brL9WXwdHo+TkXf9C7Y4WqPyLR80Yufim5MdULLMLQ
cy0Xv9qnZd3vvQ5Az7Fc/MUntqgYLPBBz8nicU76SA1w8vbORM+K4t8F6R9r
1NfZJgM9J4t/R+SDXMDvXVvT0bOR+HdHQhTfmvaekoaeu4h/p0SvYMKW63/n
K/DsK/5dE8F4I8FLKkDPS8R5gGiuU9SbL0XR81uur/WL6b/xufg3H5lv6T8q
Aj0rcPHXtOx81HdvMHrmc/FbBkyZrnXcDz3v5OJ36tYcL9znhZ67cfEvlG7f
eu6KK3p+zMXv4/BBz3bYDfSsy8X/5L76vt8yh9HzdHHeJu3hCtYKg1LRc3dx
nict96x1HXoI0HOF+LtAHFYK+qe+TkbPfuLvCPmZctxOPjEJPZ8Wf3fImIvD
fihbJaDnpeLvFJF2idzbNCMOPSuIv2vE59f87A3N0ejZmOtrZTD9t2lc/CHm
jTUa29zQszQXv3D8duf0dQ7ouZyLX/a0Z0rEHgv07M/F7zD6V6TwhjHO785y
8bcviP42sPYqzu8g/rD1/sLHic44jx7Oxf9i4YTAD/GPcN5XIa5DSApdUTW2
Wxx6ThHXLcT34+I/8kNj0LOfuM4hi800lFKUotDzSHFdRDwXD5ihoBAp6b+J
6yhypFR4ddOgMPQsENddZFDqSucnlYHo+Y64TiNT11HHqsuP0fM7rq+V3fbP
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/vIBfAi+CV4SHNcV39+h72Di/Ggx/fuz+20hfCBxXrYIvita96SxP8iv0Z8j
7ffQ+xzQvonWZAG7TvtYoRo+Kl8Gl8yOP5l99zWJnxOj5+9Edg4fjtZJ52K/
Tawrzomen9PZ9d6U+Jk5sv+rNVBedJb/q469Mu11OJXdczsYXzfl87g5cZ6S
M/ozf82u7e7EPj+Xnpn1z4pB/2Z9uOLIzsSaR/rkaNafKx7tgivB50l7wI3g
unyHw1nfrrj2T9ZvKw4egeulHPvGR+elF0hfJP7+il9ns7GgeFYvdIc78syE
d2iTciw7Q3/zlON7scT9N0lPZuOCYtzJrN9WzD2V9avSBj8njgWKfU9G58wF
5V+zsUaxfkp0PiytciL7XoqPMdhvS3ucExwLpPFCsG9XvD6Z3ec6c/sSxxrF
aGmEb+DVihHBMUvaqUxwDiVtUzI4fknvzc+e/Xnyp4lzq7cS+xT5lrXZfXUg
e66fp38j9ivFmuBYLH14Fi6ZPY//0j6D/wk+c79lfUDR4DguLVo4eM6lVy8M
jmvSnB/Sbk2szeZG5yfSbNJrTzJmHJ97jfx+yvrzWsWklHVsJjhWSrdI66l/
KOPzBcd6adTzgmOltPHM6BxDejIX/Z1S1tUFgrWHtGue4PguTduWsQ/Bg3jm
9sS1EcWyrxPnPopBHyfW/9KxyxLnHYq5yxP7BOmcjxLnAtK3jwf759t4/oTg
tesCDw7OkVvCw4Nzc2m/DxPnTdLMw/R5cCv6HwzO2aUbHwrOo6UtVyXOTRSX
VybORxSXlybOuaTJBwbXKJozflBw/t4Cvh9epD0Ptwuub9TV+sDT4Trwluic
WfphceJ6i/TbwsT1FsX3ScGx7HbGLEmcV0pvT6R9C3elf1HiOo90woLEtRdp
gPbBNYd6jHlMcw13hocG5/LK6bVfHoaHsC7t4BHwYLgD/Cg8DO4Kj5X/g/vC
U+FJ8N3w0/AEuDc8GZ4I94Afh0fDneBR8INwd3giPArupRgMj4W7wRPgkXBH
eCQ8HO4Cj4FHwJ3h0fBD8Hi+/1dwp+jagWoIygseDq4hSAtIl2nMp4wfEVwP
US4wJLiucnO0rtkGr2fMmODajvTG1MRz9Rn9Y4NrLx2jcwvN+Rr6RwfXhZSb
jAquKSln2Za4BijdpVxtLjw77XzrRe0ZOH9wPWEVNm9wXWKl8qzgmsYn2ILB
tYhPsaWCayBfYEsH10C+xJYNrlGsxV4RfL7+i70ouC7xGbZ8cF3iK+yVweu7
HlspeN03YIsE1zRWY0sE114+xxYLrtus0Rwkrj9IH25NXJ+Upv0qcb1CWvEb
+MqUdd3axPUNacLLg/Xbd5rjxDUN6cAtieui0sPHE9c2l0qXJa4xSkNuSFxf
lZZen7jOKT25MXG9VHp7dfR+Uj5bMbgOsA5bgTYU/iZYt+q8L5SeD67vNWV8
v+Balmpam6LrFNK3fYLXrgncN7hOeCPcJbg+eT3cMriOVxu+N7h+2AxuEexv
lc92Dl7366QZomtPyt8/TVxjkf6/M7hW2Zj+rsG1zfrwX4zpCH9E3+nEOYv0
9p+Ja9Ef0p87uMa1ApuTdje8HHtpcF3rW2yO4PrYMsWWxDUT6e1etNfhBnxW
Orhe9DH2juA6aiP6bwiuTyp/7xlca20IV8tYW+tcVA72FRux+7I6Q5rhieia
stZ0UnTNV3qvfrCv2IOdEF3vlpZ7Oromrvd9Krr+rndsEFyH3IttFFyf/An7
Q7Sukh6bGF1/l1Z8PLr+Lj05ObpWrveaEV2f0VmbHl3n0bw9E10X0rl7NroO
o7P5XHR9RmdwWvQdgOb2+mC/9wN2avR9gOb2+ei6jc5dw2A/+aPWP7r2ovNV
L9jv7cbWDc5ldmlPRdegdNY6BtfZfsN2Cq6bHcO2Ca6bHQnWGNIU0h6tguts
h7A3Bddd9wfrfOnouqxV8+Ca5wFsh+B63a/YRdE10O1wW9ps+o9iawX7ZPVX
Dfa932OrBfvkLdpL0fmYnnl1sJ/fjG2sOYV/xlYPjh1bsbWD/f8ObA3aOHhb
sC5SfjMH2zS4RroPuzi6rqfxS6LzwJ3w5ui682n4g6y20Bx+Eh0ztDdWRMct
fYdvouvRmsN10TXK4/C26JxBucOu6Lqh8oKd0XcG0v/bo2uIymuWRccz7cM1
0fHvIPx5dPzT/C+PjlVa90+jY6HWYm10bV1z+1V0LVjzvyo6Lv4Cr4yOhXr3
j6JjsPbYx9FxUefl6+iasvbG0uiYrb30RXS9/rD8R3TdUj58d3TNSHnKnug6
i3KT9dF12JOM2Rpdl/8LfiRYu/4/n46u8/5O33fR9dwT8Ibomu8p+Pvo+4M/
4Y3RNeI/4AeCc21pjEeD6zZ6/o7ovEu5mOr/WvOr2J93B2sSPfO+4DsCrW//
4Jgu/1wlWBtswh6NziuUFwzQXKf8HXoH30HoO3QLvpvQd+4efMehd+lBW5jy
u98e7P+1H5oF1+q1FnWCNYz225fRukfnrnjG9zTygW9F3zEorr0TfU+g2Ppq
dN1VcXlWdH1Y8bpQxvdS0mMFM76vkiYsm/GdjWJHiYzveOR7C2R8vyWt+Ep0
PVka4JbgGrv2XoWM76WkdfdG186UPy6IvsPQuSuf8b2XNOolGd9pSaPOib7z
kAZ4N/reRed3XvQ9h/x5mYzvlhQrS2d8v6U4uDD6zkPnd370HY/WpWTGd1eK
Ze9H39nIV7wXfZcjH/JadK1YmuTt6LsZ6ZaLM75LU8ytmXENQnq1YsaaTFq9
Rsb1F2m/N6LvexTj8md8L6hYfE3GtRLlArUzrt0oR/gxuqapXPix6HtZ1RPq
ZFzHkcaulXENSLq6aMb3gorFl2Z8DyfdWCzju0nFzTej76KkNwpnfKeoWF8k
43tE6YSfo+uqyt9Vq9ubcp7YOvgORWe2XMZ3nMoXVOeUb5eP/x9WSsrb
          "]], Polygon3DBox[CompressedData["
1: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
b41kX4EPwhdRAx0TXHOiNlon2Xfj4/H15EDkQnBqcsmayb6LGEQsqpscC4gZ
xI75atcH71Fz/FVy7CGGEEvIWdoG5wzkMgfACTPHKGJVdeJHZp+GbyOnIreq
UvhrcipyK3Iqcs+k9+8RXDOqSnxJjlVwELhIo2QuAqeAW9RLjm1wMrhZ/WRu
RgwiFsHZqB+gAcPlDkzmInAGuEPjZO4Ap4Bb7Jcci4nBxGJqfIODOSC1P3I+
cj9ySnLz1dH6MDUIahEfRNcDqKmgJ78WrQ9Tw6KW9Wa0loJminYKp4XbksPt
1hOic2VyZrR0auis5X/QnndGxyJiElr8r8KLMmu+aL9vR2s3aDBoMXB8uD6c
G61oQ7QWg8aD1vNzNLeAY1Creitau0HzQfv5NlqbR4NHi/8mWounJkBt4Lfo
WE5MR5v+U3hlZg0OLW4f/GRmDgRPWoefzmy/9wv/Hs0l4BRo3eTs+G58OPoX
HBpufWtubv1LtLZNzY3a2/fCczLXVKitdCn804W5c4/vomst1BioNXwdXVug
xkGtY0c036dGQa2CnILcgpwQrQ1NA22DnAethhySXJKcEO2Mmii+CR9F/WZN
dD2BGiC1wNej9X1qVtSuXomuLVFTora0Irq2RA2KWtTy6FoUGhhaGDktuW3t
zFrOqmjuTo2MWtna6HoFNS1qW3DTvsKH5+aozYv1J+U+yyuja2vUuKh1rYvW
6qmZUTsjZyJ3IsdCeyRHI1cjB0NLJKcmt66TWXsjhyaXJudG6yQHJheul1n7
IqcmtyYHRyskZyZ3JgdFq9weXRui5kPt549orgfnQ6vdGK0VoiGiJb5TxAs0
RLTE/wOJO9EE
          "]], Polygon3DBox[CompressedData["
1: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
H47V5js=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4y2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEX/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhvfCdKzmcGT7T
l4wRzXi5/f8//AHtF0sV
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1019, 1122, 912, 689, 1123, 913, 691, 1124, 914, 692, 
       1125, 915, 693, 1126, 916, 694, 1127, 917, 695, 1128, 1025, 1242, 696, 
       1129, 918, 697, 1130, 919, 698, 1131, 920, 699, 1132, 921, 700, 1133, 
       922, 701, 1134, 923, 702, 1340, 1020, 924, 1021}], 
      Line3DBox[{704, 1026, 1243, 703, 1135, 925, 705, 1136, 926, 706, 1137, 
       927, 707, 1138, 928, 708, 1139, 929, 709, 1140, 1027, 1244, 710, 1028, 
       1245, 711, 1141, 930, 712, 1142, 931, 713, 1143, 932, 714, 1144, 933, 
       715, 1145, 934, 716, 1146, 935, 717}], 
      Line3DBox[{719, 1029, 1246, 718, 1030, 1247, 720, 1147, 936, 721, 1148, 
       937, 722, 1149, 938, 723, 1150, 939, 724, 1151, 1031, 1248, 725, 1032, 
       1249, 726, 1033, 1250, 727, 1152, 940, 728, 1153, 941, 729, 1154, 942, 
       730, 1155, 943, 731, 1156, 944, 732}], 
      Line3DBox[{734, 1034, 1251, 733, 1035, 1252, 735, 1036, 1253, 736, 1157,
        945, 737, 1158, 946, 738, 1159, 947, 739, 1160, 1037, 1254, 740, 1038,
        1255, 741, 1039, 1256, 742, 1040, 1257, 743, 1161, 948, 744, 1162, 
       949, 745, 1163, 950, 746, 1164, 951, 747}], 
      Line3DBox[{749, 1041, 1258, 748, 1042, 1259, 750, 1043, 1260, 751, 1044,
        1261, 752, 1165, 952, 753, 1166, 953, 754, 1167, 1045, 1262, 755, 
       1046, 1263, 756, 1047, 1264, 757, 1048, 1265, 758, 1049, 1266, 759, 
       544, 760, 1168, 954, 761, 1169, 955, 762}], 
      Line3DBox[{764, 1050, 1267, 763, 1051, 1268, 765, 1052, 1269, 766, 1053,
        1270, 767, 1054, 1271, 768, 1170, 956, 769, 1171, 1055, 1272, 770, 
       1056, 1273, 771, 1057, 1274, 772, 1058, 1275, 773, 1059, 1276, 774, 
       1060, 1277, 775, 1172, 957, 776, 1173, 958, 777}], 
      Line3DBox[{781, 1174, 959, 779, 1175, 960, 783, 1176, 961, 785, 1177, 
       962, 787, 1178, 963, 789, 1179, 964, 791, 1181, 1182, 965, 793, 1183, 
       966, 795, 1184, 967, 797, 1185, 968, 799, 1186, 969, 801, 1187, 970, 
       803, 1188, 971, 805, 1190, 973, 807}], 
      Line3DBox[{806, 972, 1189, 804, 1290, 1073, 802, 1289, 1072, 800, 1288, 
       1071, 798, 1287, 1070, 796, 1286, 1069, 794, 1285, 1068, 792, 1284, 
       1067, 1180, 790, 1283, 1066, 788, 1282, 1065, 786, 1281, 1064, 784, 
       1280, 1063, 782, 1279, 1062, 778, 1278, 1061, 780}], 
      Line3DBox[{809, 1191, 974, 808, 1192, 975, 810, 1193, 976, 811, 1194, 
       977, 812, 1195, 978, 813, 1196, 979, 814, 1197, 1074, 1291, 815, 1198, 
       980, 816, 1199, 981, 817, 1200, 982, 818, 1201, 983, 819, 1202, 984, 
       820, 1203, 985, 821, 1204, 986, 822}], 
      Line3DBox[{824, 1075, 1292, 823, 1205, 987, 825, 1206, 988, 826, 1207, 
       989, 827, 1208, 990, 828, 1209, 991, 829, 1210, 1076, 1293, 830, 1077, 
       1294, 831, 1211, 992, 832, 1212, 993, 833, 1213, 994, 834, 1214, 995, 
       835, 1215, 996, 836, 1216, 997, 837}], 
      Line3DBox[{839, 1078, 1295, 838, 1079, 1296, 840, 1217, 998, 841, 1218, 
       999, 842, 1219, 1000, 843, 1220, 1001, 844, 1221, 1080, 1297, 845, 
       1081, 1298, 846, 1082, 1299, 847, 1222, 1002, 848, 1223, 1003, 849, 
       1224, 1004, 850, 1225, 1005, 851, 1226, 1006, 852}], 
      Line3DBox[{854, 1083, 1300, 853, 1084, 1301, 855, 1085, 1302, 856, 1227,
        1007, 857, 1228, 1008, 858, 1229, 1009, 859, 1230, 1086, 1303, 860, 
       1087, 1304, 861, 1088, 1305, 862, 1089, 1306, 863, 1231, 1010, 864, 
       1232, 1011, 865, 1233, 1012, 866, 1234, 1013, 867}], 
      Line3DBox[{869, 1090, 1307, 868, 1091, 1308, 870, 1092, 1309, 871, 1093,
        1310, 872, 1235, 1014, 873, 1236, 1015, 874, 1237, 1094, 1311, 875, 
       1095, 1312, 876, 1096, 1313, 877, 1097, 1314, 878, 1098, 1315, 879, 
       649, 880, 1238, 1016, 881, 1239, 1017, 882}], 
      Line3DBox[{884, 1099, 1316, 883, 1100, 1317, 885, 1101, 1318, 886, 1102,
        1319, 887, 1103, 1320, 888, 657, 889, 1240, 1104, 1321, 890, 1105, 
       1322, 891, 1106, 1323, 892, 1107, 1324, 893, 1108, 1325, 894, 1109, 
       1326, 895, 665, 896, 1241, 1018, 897}], 
      Line3DBox[{911, 1024, 685, 910, 1339, 1120, 909, 1338, 1119, 908, 1337, 
       1118, 907, 1336, 1117, 906, 1335, 1116, 905, 1334, 1115, 904, 1333, 
       673, 903, 1332, 1114, 902, 1331, 1113, 901, 1330, 1112, 900, 1329, 
       1111, 899, 1328, 1110, 898, 1121, 1327, 1022, 1023}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1123, 252, 488, 1135, 280, 1247, 503, 295, 1252, 
       518, 310, 1259, 533, 325, 1268, 548, 340, 1279, 563, 1175, 355, 578, 
       1192, 370, 593, 1205, 385, 1296, 608, 400, 1301, 623, 415, 1308, 638, 
       430, 1317, 653, 445, 1328, 668, 460}], 
      Line3DBox[{253, 475, 1124, 254, 489, 1136, 281, 504, 1147, 296, 1253, 
       519, 311, 1260, 534, 326, 1269, 549, 341, 1280, 564, 1176, 356, 579, 
       1193, 371, 594, 1206, 386, 609, 1217, 401, 1302, 624, 416, 1309, 639, 
       431, 1318, 654, 446, 1329, 669, 461}], 
      Line3DBox[{255, 476, 1125, 256, 490, 1137, 282, 505, 1148, 297, 520, 
       1157, 312, 1261, 535, 327, 1270, 550, 342, 1281, 565, 1177, 357, 580, 
       1194, 372, 595, 1207, 387, 610, 1218, 402, 625, 1227, 417, 1310, 640, 
       432, 1319, 655, 447, 1330, 670, 462}], 
      Line3DBox[{257, 477, 1126, 258, 491, 1138, 283, 506, 1149, 298, 521, 
       1158, 313, 536, 1165, 328, 1271, 551, 343, 1282, 566, 1178, 358, 581, 
       1195, 373, 596, 1208, 388, 611, 1219, 403, 626, 1228, 418, 641, 1235, 
       433, 1320, 656, 448, 1331, 671, 463}], 
      Line3DBox[{259, 478, 1127, 260, 492, 1139, 284, 507, 1150, 299, 522, 
       1159, 314, 537, 1166, 329, 552, 1170, 344, 1283, 567, 1179, 359, 582, 
       1196, 374, 597, 1209, 389, 612, 1220, 404, 627, 1229, 419, 642, 1236, 
       434, 657, 449, 1332, 672, 464}], 
      Line3DBox[{261, 479, 1128, 263, 493, 1140, 285, 508, 1151, 300, 523, 
       1160, 315, 538, 1167, 330, 553, 1171, 345, 568, 1180, 1181, 360, 583, 
       1197, 375, 598, 1210, 390, 613, 1221, 405, 628, 1230, 420, 643, 1237, 
       435, 658, 1240, 450, 673, 465}], 
      Line3DBox[{265, 481, 1129, 266, 1245, 495, 287, 1249, 510, 302, 1255, 
       525, 317, 1263, 540, 332, 1273, 555, 347, 1285, 570, 1183, 362, 585, 
       1198, 377, 1294, 600, 392, 1298, 615, 407, 1304, 630, 422, 1312, 645, 
       437, 1322, 660, 452, 1334, 675, 467}], 
      Line3DBox[{267, 482, 1130, 268, 496, 1141, 288, 1250, 511, 303, 1256, 
       526, 318, 1264, 541, 333, 1274, 556, 348, 1286, 571, 1184, 363, 586, 
       1199, 378, 601, 1211, 393, 1299, 616, 408, 1305, 631, 423, 1313, 646, 
       438, 1323, 661, 453, 1335, 676, 468}], 
      Line3DBox[{269, 483, 1131, 270, 497, 1142, 289, 512, 1152, 304, 1257, 
       527, 319, 1265, 542, 334, 1275, 557, 349, 1287, 572, 1185, 364, 587, 
       1200, 379, 602, 1212, 394, 617, 1222, 409, 1306, 632, 424, 1314, 647, 
       439, 1324, 662, 454, 1336, 677, 469}], 
      Line3DBox[{271, 484, 1132, 272, 498, 1143, 290, 513, 1153, 305, 528, 
       1161, 320, 1266, 543, 335, 1276, 558, 350, 1288, 573, 1186, 365, 588, 
       1201, 380, 603, 1213, 395, 618, 1223, 410, 633, 1231, 425, 1315, 648, 
       440, 1325, 663, 455, 1337, 678, 470}], 
      Line3DBox[{273, 485, 1133, 274, 499, 1144, 291, 514, 1154, 306, 529, 
       1162, 321, 544, 336, 1277, 559, 351, 1289, 574, 1187, 366, 589, 1202, 
       381, 604, 1214, 396, 619, 1224, 411, 634, 1232, 426, 649, 441, 1326, 
       664, 456, 1338, 679, 471}], 
      Line3DBox[{275, 486, 1134, 276, 500, 1145, 292, 515, 1155, 307, 530, 
       1163, 322, 545, 1168, 337, 560, 1172, 352, 1290, 575, 1188, 367, 590, 
       1203, 382, 605, 1215, 397, 620, 1225, 412, 635, 1233, 427, 650, 1238, 
       442, 665, 457, 1339, 680, 472}], 
      Line3DBox[{277, 682, 1340, 683, 278, 501, 1146, 293, 516, 1156, 308, 
       531, 1164, 323, 546, 1169, 338, 561, 1173, 353, 576, 1189, 1190, 368, 
       591, 1204, 383, 606, 1216, 398, 621, 1226, 413, 636, 1234, 428, 651, 
       1239, 443, 666, 1241, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1327, 444, 652, 1316, 429, 637, 1307, 414, 
       622, 1300, 399, 607, 1295, 384, 592, 1292, 369, 1191, 577, 354, 1174, 
       562, 1278, 339, 547, 1267, 324, 532, 1258, 309, 517, 1251, 294, 502, 
       1246, 279, 487, 1243, 250, 1122, 473, 681, 688}], 
      Line3DBox[{466, 674, 1333, 451, 659, 1321, 436, 644, 1311, 421, 629, 
       1303, 406, 614, 1297, 391, 599, 1293, 376, 584, 1291, 361, 1182, 569, 
       1284, 346, 554, 1272, 331, 539, 1262, 316, 524, 1254, 301, 509, 1248, 
       286, 494, 1244, 264, 480, 1242, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.5826398185881514, 
   0.2090526787805283}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6187610233802204`*^9, 
  3.6187616302962203`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9nfmvJcd131u9d9/7hiLnvTdcRVIkRXFfmhK1UKS1kPRC2ZJlSoq8hZJF
S3YEOYocw4kQ27DixLFhixwOORRnRiQFJ4CBJIARJIiVBDCQBDCEGIHyE/+A
IEAQIDAQID9Obtdy6lTV91RX3zfKD+/NvLv0cj51TlWd863qjz/39S998SvP
ff3LX3julqe/9tyvfenLX/g7tzz11a/tXqreVhRv+9Lu5/iWYv7/5aKwvy5f
fuutt748/5r/OOH/u/lXdfn555+v1Kvqv/P/3F+fZh9v1f8b/iH1s/u7qBPv
PauP8X/nf8r5lUYf/79///vf/6vvfe97809Rqt/VX//gBz+gL6KrasFrn9In
+D90O/qb9jPm4vY7X7l8Y39N563pFjdLtqqZdf83fU1fQYe+Rl8fE4duwB2Y
k/wvusqB/reh/7V0Team/idd00gfKsHRf0V//H/Qh04lLu9X9Yf/PNnu0Flu
oqu5evnw/zbxkQ4c/Hq692syL+dL+53o2oCz/+7boQ/Gr/3yfic/IqNfe+VO
FLa3+bUjussbwEFr8Nrzyydq6aDX0H3cBA6FHOCLYavrwYcO6N1bM6/aHPa/
0ZWhlnJz5jX+kj7Yf6WrQGdEB0Px8Av6YH9FV3bXui9+n67iHvAh1Lg+r7/4
l3TG+8GHkNmf01/8z3TGB9d98T8mXeo+6WDqG+ai/4LOjUxyr2Q6Efkv6sP+
Bzrs+8CHRvmL/46O/kHwoQ147ReY/6h3PgQ+tAWv/bz+4r9J3g+6isTB/hVd
xUckNwte+zn9xT+jq3hy3Rf/JZ3xafChU+C1n9Vf/Od0xh8HH7oKvPY5/cU/
nf9RPcYzmWc0X/xndKnIv38s8yr+hj7Yn9Dlfwp8CHUnn9Vf/HW6CnHcdyt9
5Nl1x/66+mf9IPEddDOfBQe/Grz2mZOd8Aa6w8+Bg6ORwKdPdsLr6A6R1T8j
mblyNtn71Md0INV0GjWX8MfIh+D8z57srId0w5+hs9aXL3/neHeaeS7jXV1w
6p8JW2pL/3MDgGe1G+6ONbLD2js6kg/7LTrEz9Ahdp+8fOl4Po461gYcEV2o
mXv8URLux+ks5XyS3bvTNOnT7f46ZU7Fv4FO9dP6VH9AF/9JOmx78sP+Pt3B
J+iwm/CwuwMesMMaisUZcNhP6sP+Hl3tT3IjXDw+xY9tjL5lx55fm7Gg0eon
9LG/SZf8DDWwaj62PezFY/XXFTjV79BtoC7ySbq1ITz9JXx63bxqOr25BHQF
P6Wv4LfoZtEw5UfUb3UJ6jwmYXCKX45pFwf5l3MdONNP6sv5BhlkAB/6IGd9
gc52QfM4AFeVZaTXRSOZq/pNuqqnuG9EV/BDsMvH9RX8BmFyjWLDr+CibAN7
BfNZzFWYK9ABdn7N/hTCZTzDYrbYXh/3ot5rx9ouF9QVRFe6NVc6X6W5Wn2l
pXEhbrBm/l3PL5lrtlYz7HSocPGgKL5GBvuw65t2h3ntSF+Z+ZmPeJV0dSiq
buRL3P1l+yF2iXNTfZ33TVJk+wl94V+lO3mCt7XXjur5gnmDu6AuU136fNnm
8hcunbWD+d7L+fcArroCV43CvLnqr5C5H9f/043Axozd5c8xbOVNVOAmuvm3
agkIQp95J8j+erCuM0/qncfI/rtDfPvInkq1oKP5VO525lsxt6RvpwT9xUYC
U9E9mf/FN9aBG6szb0yP/4tH6cZy02O3EVT07nvJPD0wT5c0D+pOR0KuXKn7
IZpCXfqKJNctZLr3001v17SJjXTTqmNX97vRdx7fbwvut8m83x/V9/uAfmuv
TDVKK91E9nifF/JfPdJXvjPMgTHPbBpjImaeqPu+oPhjG9Xzbx38Kzv6UX6D
fKmff7fAjA3oc1WnElsSjQSe/uFY8gZysfdSN9XOhrRX/+0jZcjNlTTn7q9G
tzvBfqgZCvbLbYlPL3seyvpeTy3tET7uwfYplVl8l3RdZwWMNARdj25juktM
2Ae1rzrfPqh9PbVsH5cfTGf874M+uTPZ1hhuNpr1U2W4SjJcJRlOjX5tlxU1
sX7+jSaP3UrrtZnWezLs4lBu9zS9+xBZaHfe80fITCUP76aRDcu2qpV1am4r
bqkLxw0wV5c0VwfMVaXNZYddC+b6NDWjB3lffn6+eedhO8vMf41Jq9TAKo1v
ldr06hfmy4xsoF7rgA3alTZQw23qLfT0QN0umtZ8TBviU9Qy7uf9e8IQFTBE
nzTEHJx0Tx+MDfr9TNIDk9ghMZvV6U/k+tFHtT0+Sfa4h3ql3bFfmW/iPN3d
+SP11ygZakgaqgGGKnWwNjZiE8haCkEdsJtysR7YrUF2IxsFQ6xe6thYLUHn
B8Qx9e3UmLrZeBUw3jD/roDx+vl3DYzXzb9bMlRFbStKSCzaaAA2qilC19KE
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res2$2$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res2$2$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys2$2$1", "=", 
     RowBox[{
      RowBox[{"CreatePolynomials", "[", 
       RowBox[{"lucaMod", ",", "res2$2$1"}], "]"}], "//", "Chop"}]}], ",", 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}, {
  3.6187619929242935`*^9, 3.618762035898224*^9}, {3.618762122922224*^9, 
  3.6187621533862243`*^9}, {3.6187622498202243`*^9, 3.6187622635342245`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"orig\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.1739919658128525`"}], "+", 
      RowBox[{"0.3084434303022472`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.033325830608045205`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.13941919080650814`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.06906838241442652`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.011543941351973716`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.25927273994065125`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.13519209506868105`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.006732812374668676`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0671063044708433`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.019827510285110043`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.01903901379017913`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"0.08`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.1523809708335952`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"0.055242908510318024`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.05024938243363647`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.016548666403381297`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.02286065945757579`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.02433203891170228`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.0035769912683403004`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.04067744523080743`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.05519161709850983`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.014239794504891339`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.01937063235715702`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.01196466799186175`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.01801785185671642`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"0.22923487432317055`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.2581940478686108`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.049874497011426516`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.11655853134893238`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.09340042132612877`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.015120932620314019`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.21859529470984387`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.19038371216719088`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.02097260687956003`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.08647693682800031`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.007862842293248259`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.03705686564689561`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"0.36100404640089784`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.2558395046791415`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.04663165078448481`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.19459321712774366`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.13424090188058022`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.02428463736818991`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.3392614327058859`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.23421869768866582`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.03168771071593478`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.1465373932537325`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.11002738058823826`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.005667008302588585`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}]}], "}"}]}],
  SequenceForm[
  "orig", {-0.1739919658128525 + 
    0.3084434303022472 (-1. + 2. (0.5 + $CellContext`qq)) - 
    0.033325830608045205` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) + 
    0.13941919080650814` (-1. + 6.25 (0.16 + $CellContext`ru)) - 
    0.06906838241442652 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.25 (0.16 + $CellContext`ru)) + 
    0.011543941351973716` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.25 (0.16 + $CellContext`ru)) + 
    0.25927273994065125` (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.13519209506868105` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.006732812374668676 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0671063044708433 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.019827510285110043` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.01903901379017913 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.08 (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.1523809708335952 (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.055242908510318024` + 
    0.05024938243363647 (-1. + 2. (0.5 + $CellContext`qq)) + 
    0.016548666403381297` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) + 
    0.02286065945757579 (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.02433203891170228 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) - 
    0.0035769912683403004` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) + 
    0.04067744523080743 (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.05519161709850983 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.014239794504891339` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.01937063235715702 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.01196466799186175 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.01801785185671642 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.22923487432317055` - 
    0.2581940478686108 (-1. + 2. (0.5 + $CellContext`qq)) + 
    0.049874497011426516` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
    0.11655853134893238` (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.09340042132612877 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) - 
    0.015120932620314019` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) - 
    0.21859529470984387` (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.19038371216719088` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.02097260687956003 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.08647693682800031 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.007862842293248259 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.03705686564689561 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.36100404640089784` - 
    0.2558395046791415 (-1. + 2. (0.5 + $CellContext`qq)) + 
    0.04663165078448481 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
    0.19459321712774366` (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.13424090188058022` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) - 
    0.02428463736818991 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) - 
    0.3392614327058859 (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.23421869768866582` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.03168771071593478 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.1465373932537325 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.11002738058823826` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.005667008302588585 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock))}],
  Editable->False]], "Print",
 CellChangeTimes->{3.618762266094224*^9}],

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.618762266104224*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"cnstrPolys=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z2", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"eqvdIf", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1739919658128525`"}], "+", 
          RowBox[{"0.3084434303022472`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"0.033325830608045205`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}]}], "+", 
          RowBox[{"0.13941919080650814`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"0.06906838241442652`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{"0.011543941351973716`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{"0.25927273994065125`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.13519209506868105`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.006732812374668676`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.0671063044708433`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.019827510285110043`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.01903901379017913`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}]}], "\[GreaterEqual]", 
         FractionBox["1", "50"]}], ",", 
        RowBox[{"0.22923487432317055`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.2581940478686108`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.049874497011426516`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}]}], "-", 
         RowBox[{"0.11655853134893238`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.09340042132612877`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"0.015120932620314019`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"0.21859529470984387`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.19038371216719088`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.02097260687956003`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.08647693682800031`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.007862842293248259`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.03705686564689561`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}]}], ",", 
        RowBox[{"0.1939919658128525`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.3084434303022472`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.033325830608045205`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}]}], "-", 
         RowBox[{"0.13941919080650814`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.06906838241442652`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"0.011543941351973716`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"0.25927273994065125`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.13519209506868105`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.006732812374668676`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.0671063044708433`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.019827510285110043`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.01903901379017913`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}]}]}], "]"}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "ProjectionInterface`Private`subPos"}],
  SequenceForm["cnstrPolys=", {{
     $CellContext`z2[$CellContext`t]}, {
     $CellContext`eqvdIf[-0.1739919658128525 + 
       0.3084434303022472 (-1. + 2. (0.5 + $CellContext`qq)) - 
       0.033325830608045205` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) + 
       0.13941919080650814` (-1. + 6.25 (0.16 + $CellContext`ru)) - 
       0.06906838241442652 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
       0.011543941351973716` (-1. + 
         2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
         6.25 (0.16 + $CellContext`ru)) + 
       0.25927273994065125` (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.13519209506868105` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.006732812374668676 (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.0671063044708433 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.019827510285110043` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
         6.25 (0.16 + $CellContext`ru)) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.01903901379017913 (-1. + 
         2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
         6.25 (0.16 + $CellContext`ru)) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) >= 
      Rational[1, 50], 0.22923487432317055` - 
      0.2581940478686108 (-1. + 2. (0.5 + $CellContext`qq)) + 
      0.049874497011426516` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
      0.11655853134893238` (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      0.09340042132612877 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) - 
      0.015120932620314019` (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       6.25 (0.16 + $CellContext`ru)) - 
      0.21859529470984387` (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.19038371216719088` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.02097260687956003 (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.08647693682800031 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.007862842293248259 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.03705686564689561 (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
      0.1939919658128525 - 
      0.3084434303022472 (-1. + 2. (0.5 + $CellContext`qq)) + 
      0.033325830608045205` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
      0.13941919080650814` (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      0.06906838241442652 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) - 
      0.011543941351973716` (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       6.25 (0.16 + $CellContext`ru)) - 
      0.25927273994065125` (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.13519209506868105` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.006732812374668676 (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.0671063044708433 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.019827510285110043` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.01903901379017913 (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock))]}}, 
   ProjectionInterface`Private`subPos],
  Editable->False]], "Print",
 CellChangeTimes->{3.618762266134224*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.1739919658128525`"}], "+", 
    RowBox[{"0.3084434303022472`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.033325830608045205`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.13941919080650814`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.06906838241442652`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.011543941351973716`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.25927273994065125`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.13519209506868105`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.006732812374668676`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0671063044708433`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.019827510285110043`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.01903901379017913`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.08`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.1523809708335952`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"0.055242908510318024`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.05024938243363647`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.016548666403381297`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.02286065945757579`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.02433203891170228`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.0035769912683403004`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.04067744523080743`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.05519161709850983`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.014239794504891339`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.01937063235715702`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.01196466799186175`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.01801785185671642`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{"-", "12.159282567953603`"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.014750901322456085`"}], "+", 
             RowBox[{"0.042468631915684577`", " ", "qq"}], "-", 
             RowBox[{"0.03281410509720253`", " ", 
              SuperscriptBox["qq", "2"]}], "+", 
             RowBox[{"0.052139999914531464`", " ", "ru"}], "-", 
             RowBox[{"0.09601761124078391`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"0.062178555913183525`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru"}], "+", 
             RowBox[{"0.12929744456650957`", " ", "uu$Shock"}], "-", 
             RowBox[{"0.2055043877496855`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"0.09055318203931037`", " ", 
              SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.41670349177671484`", " ", "ru", " ", "uu$Shock"}], 
             "+", 
             RowBox[{
             "0.053045786226033384`", " ", "qq", " ", "ru", " ", "uu$Shock"}],
              "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{"0.033325830608045205`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.6168868606044944`", " ", "qq"}], "-", 
            RowBox[{"0.26660664486436164`", " ", 
             SuperscriptBox["qq", "2"]}], "+", 
            RowBox[{"0.7992203090908402`", " ", "ru"}], "-", 
            RowBox[{"0.8633547801803315`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"0.5771970675986858`", " ", 
             SuperscriptBox["qq", "2"], " ", "ru"}], "+", 
            RowBox[{"1.7456612256776232`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.7743960329051198`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"0.35347260686617454`", " ", 
             SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "-", 
            RowBox[{"3.5333036414326884`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "1.6264752561166502`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "+", 
            RowBox[{"6.247175643397866`", " ", 
             SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}]}], 
           "\[GreaterEqual]", "0.1939919658128525`"}]},
         {
          RowBox[{
           RowBox[{"-", "6.247175643397866`"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.025718203613276397`"}], "+", 
             RowBox[{"0.09874652095886437`", " ", "qq"}], "-", 
             RowBox[{"0.04267634849455795`", " ", 
              SuperscriptBox["qq", "2"]}], "+", 
             RowBox[{"0.12793306202867394`", " ", "ru"}], "-", 
             RowBox[{"0.138199216648045`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"0.09239328306843408`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru"}], "+", 
             RowBox[{"0.27943207063858866`", " ", "uu$Shock"}], "-", 
             RowBox[{"0.28403171836225466`", " ", "qq", " ", "uu$Shock"}], 
             "-", 
             RowBox[{"0.05658118596997207`", " ", 
              SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.5655841684500661`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{
             "0.2603536940466113`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
             "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0.36100404640089784`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.2558395046791415`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.04663165078448481`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.19459321712774366`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.13424090188058022`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.02428463736818991`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.3392614327058859`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.23421869768866582`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.03168771071593478`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.1465373932537325`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.11002738058823826`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.005667008302588585`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.618762126012224*^9, 3.6187621585862246`*^9, 
  3.6187622661942244`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res2$2$1", "[", 
  RowBox[{"isConvergedQ", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.618762110462224*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6187621108922243`*^9, 3.6187621289122243`*^9}, 
   3.618762174796224*^9, 3.6187622782342243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", 
          RowBox[{"polys2$2$1", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618428161337283*^9, 
  3.6184281636473064`*^9}, {3.6184289239089956`*^9, 3.618428929629053*^9}, {
  3.618494157486788*^9, 3.618494179391013*^9}, {3.618595784535005*^9, 
  3.618595805385214*^9}, {3.6185967326886263`*^9, 3.618596744408744*^9}, {
  3.6185968980582943`*^9, 3.618596924062562*^9}, {3.61876129287722*^9, 
  3.61876129487722*^9}, {3.6187613276312203`*^9, 3.6187613287212205`*^9}, {
  3.6187614333192205`*^9, 3.6187614421292205`*^9}, {3.6187616827582207`*^9, 
  3.6187617253419666`*^9}, {3.618761778661433*^9, 3.6187617790514293`*^9}, {
  3.618762087492224*^9, 3.618762091582224*^9}, {3.618762225040224*^9, 
  3.618762225240224*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0nXk8VN0bwCUp0kabVkVJe9o3D5WtvbSn7JIkCUkl0krZsockZJvJlp3L
2NcY+75kqdAq7fl55845fu+97/RPn8+387lz7vc859znPHeaM0/7wkE9fj4+
vrhxfHwjh/5+vNlraptVNjGvaU/s4GALcXUyU7nNyg00cybbdj7MpPGd/vNr
KhTSaLwyemZk45kEGj/NuU40jZdz2j+n8WIO96RxPs6fW1uovJVsD1TeQF6f
xnXI/tB4Ldl/Gt9L3i+Na5N+aJzrkxcn9M2ivOPPN9A8UznyTOXIM5Ujz1SO
PFM58kzlyDOVI89UjjxTOfJM5cgzlSPPVI48UznyzIMT4WPFbM43VNM8Uzny
TOXIM5Ujz1SOPFM58kzlyDOVI89UjjxTOfJM5cgzlSPPVI48UznyzIMT7wPN
9aVU2TTPVI48UznyTOXIM5Ujz1SOPFM58kzlyDOVI89UjjxTOfJM5cgzlSPP
VI488+CEHifOi2ieqRx5pnLkmcqRZypHnqkceaZy5JnKkWcqR56pHHmmcuSZ
ypFnKkeeqRx55sG58cPiEc8sHvHM4hHPLB7xzOIRzywe8cziEc8sHvHM4hHP
LB7xzOIRzywe8cziEc8sHvFM49z7iuHhOYaH5xgenmN4eI7h4TmGh+cYHp5j
eHiO4eE5hofnGB6eY3h4juHhOYaHZxon+Lh/qJ6pHHmmcuSZypFnKkeeqRx5
pnLkmcqRZypHnqkceaZy5JnKkWcqR56pHHnmwVH8AI94Bh7xDDziGXjEM/CI
Z+ARz8AjnoFHPAOPeAYe8Qw84hl4xDPwiGfgEc9UjtZDHp5ZPDyzeHhm8fDM
4uGZxcMzi4dnFg/PLB6eWTw8s3h4ZvHwzOLhmcXDM42j5zvNM5VT8g2aZyqn
5Bs0z1ROyTdonqmckm/QPFM5Jd+geaZySr5B80zllHyDRzyzecQzm0c8s3nE
M5tHPLN5xDObRzyzecQzm0c8s3nEM5tHPLN5xDObRzyzecQzm0c80zjaf9E8
UzllP0jzTOWU/SDNM5VT9oM0z1RO2Q/SPFM5ZT9I80zllP0gzTOVU/aDNM/c
/TjNM5VT6hs0z1ROqW/QPFM5pb5B80zllPoGzTOVU+obNM9UTqlv0DxTOaW+
QfPMrS/RPFM5pV5H80zllHodzTOVU+p1NM9UTqnX0TxTOaVeR/NM5ZR6Hc0z
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
M5VT6l00z1ROqV/RPNPOO/h3PYrmmcr/nSc30vYjqQZ+4qquwxz5tCzftNpV
avg8C+Rzzaba3f9/zgXy+ZGzLg2fp4B8RnDm0TBHPs9wxp1ebzTgUT+U5NwX
vU7YothTrPJ//Uc+fZj3ulz+r//I55FpC/n+dX4H1+ckmyzx/+8/8lnyRnP1
//cf+VT01O6KP19D8zmCcx+1NJ9pHM+1NJ9XOJ7raD5Jz3U0n6TneprPSI7n
eprPSB71N9J/Dc0n6bmG5pP0XEvzSXquo/kkPdfRfIpyPNdTfUIpxzONE/eX
5xSfb6DX30j/FTTPpP9KmmfSfyXNMxnnVTTPpP8qmmfSP73O+ZFH/Y2Mf3r9
jfRfQfNM+q+geW7m+K+keSb9V9E8k/6raJ5J//Q6p4/DPn1V12KaZ9FT9t4N
8SU0z/accSmleSb9l9E8k/7LaJ5J/+U0z6T/cppnAx71t1aOn2Ka56McDyU0
z2S8ldI8KyY/1h8cfEXzTPovo3km/ZfTPJP+aZyQTJ68OuF8Fs3zY47/bJpn
MY7/HJpnB47/XJpnfo6nfJpncp0poHn+xInbQprnTzzqb6T/LJpn0n82zTPp
P4fmmfSfS/NM+s+jeU51qPZ2+b/+I89rT00qkfy//iPPx8pjB1Vd42ieVcxk
9I0b4mmeN0x7UuwqlUTzvIgzXik0z1M545JG80z6z6B5tuL4z6R57udRf3vN
8RlH88zmeIunec7g+EmieWYu380X/3/9R559yzP16/+v/8izg9n6kr+DBM1z
Ouf6mTTPhy59KliqepPm2VDx1V9pVVea54XlwV5J5x/TPF9aLue9QDWQ5nk/
Z7xCaJ6XccYlguZ5FMdrFM0z+bdXKtVz6DTGasn/6z/y7MzhrjTPKs/sSuL+
r//Isw2nfSDNs/opLz6j/+s/8ryJc50ImufZb419/gy+oHkeTXJaPixNXoeW
D6uSn0vLh8+S/aTlw9PI+6Llw6dJD7R8WJH0RsuH3/Cov33m/n98qufJ5DjS
8uEN5LjT8mF1Mk5o+fAIMq5o+fAOMg6p+TD8MeXELS1PTiLjnOb5JjkvaJ5d
yXlE8xxIzjua5zhyntI855Lzmua5hlwHaJ57eNTfzMh1huYZ/Y4E1bMwuY7R
PM8i1z2a5+XkOknzDOS6SvO8l1yHaZ5Xkus2zXMiuc7TPMuTzwWa53zyOULz
fIB87tA815PPKZpnbfK5RvOszaP+9o58btI8XyKfszTP5P/byqN5vk0+x2me
x5PPfZpnDzJPoHmeQ+YVNM9qZB5C8+xJ5i00z41knkPzDGReRPNM+i+leSb9
l9A815F5Gs1zL4/62yoyD6R5NifzRprnZDLPpHnGv5dL8Uz6L6V5Jv2X0Dy7
k3kyzfMEMq+meSb9V9E8k/6raJ4byDyf5lmC3BfQPOuS+wia51By30HzHMqj
/tZH7mtonkn/VTTPpP8qmmfSfyXNM/p9D6rnbeQ+jub5Drnvo3kuIveJNM+k
/3qaZ9J/Hc0z6b+O5pmM/1qaZ9J/Dc0z6b+G5lmXR/0tjNyn0zyT/utpnkn/
dTTPFmTdgOaZ9F9L84z+3w3VM+mfxom7B/7u/uf75FTPhWQ9hOaZ9N9M80z6
b6J5Jv030TyT/htpnkn/9DqnBI/6G+mfXn8j47+Z5pn030zzTPpvonkm/TfR
PJP+G3n5pOV793lwcrzo3/vi1vFo48htT+P3KeNI+b4ZrZ88voeGz7vceutK
HLOtg/KevZWYKHhIs9KoC3PUvnCUmTAxsYPy/r2VyNxz9MIth87h5w63/ZG7
xpqv4DWOH9Te1P2E9ZrwDszx+ZVjzsa3GLdT3te3EpJNpx525L8entfc9sb2
OiIf/doo7/FbiUopLV+37vbhOOS2/zn2tDZfSSvl/X4rcdtIN2KHYDvmqP3Y
mdEm8763UPYdw+eu/vu9fyvx5pdhQdD2VtweXWc+9/xQ1B7xTfMe52vHNVK+
J9BKrLrbGBWW3Yw5an9QytnMTrSB8v2BVsJ16utSIf4mzFH7c9K3JYJM6ijf
K2gl+oPf9p6FBsxRe7vFVsXZpTWU7xu0EkfWfhQuvFaHOWrvs+yCZefSasr3
EFqJhOyBRYuTazBH7WNX6koJOlRSvp/QSsw49EfJ/lsV5qh90erjZQvfsnHc
ovM3D6es89ju2j6cZ3K54XelxWllbTgOEb+x9mj6ugltON4QdzM9czBqTyuO
K8T3a3woVpveguMHn1taN+GrknsTjhPEn6mtnL1JtBGPO+JF3PNM0bgjPqB8
8byESB0eX8Tnslzcxe7X4HFEXHVLTJqgYDUeL8RN49mdP25W4nFB/PHKL+P6
BtnYPz7PNFxsXeu1cuwZ8WZVg9SQL6+wZ3T+ZqDOvYF2jVbsGZ8rmuJ9w+94
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
/xridVHmvDnN7bTvv2kS48aOHbpf5JP0XEvEHRNOd+4crquQnuuINs+ETS+0
27BP0nMd8ebaFFv9hlbsk/w973oib7SUS/y+4boc6bmeGDTJrZK7MVx/q+fW
heZR6mkN3P4Pfjo5ZuTt4boK6bmG6NLKPy1sWot9SnH7f322h8r2IzXYpwq3
/3lSOTmMVdXYpxG3/6zLh6tVBaoo6389YTJV2WpaaQVe91D/y/h8oqc6Ddev
kjicTUC81IE/z4frKqT/CkKr5V5F+4ZW2vffrApaDfY5tGDPpP9KIuhBfLen
bzP2TPqvIuTHPJJ8EtyEPZPnkFYR+7dYzNILacSeSf/VROUiTfZb/wbsOZ5b
Fyqk1K8SuP3P9lhUzB5RjT03cPvvY3xPP0mwirIOVBKdf9+nnR5ZiT1Lcfsf
qKzOZn1jY88q3P6zVcqedb4ux56NuP03598lm5dXhj2j/s946/WrVGm4fiXD
uX4xESq54W/J7Cbs+SL5u/2ES8d5SV+1Ruw5mXNfpUR04b4V8bYN2DP6/tuo
6qZ5s0LrsWfSfxnxUHD6r5LcOuyZ9F9OqKr/TS5qqsWeSf/lxKYaZ60pfTXY
syu3LqRJqV8t4Pa/YoPgoFLYcF3FmNv/gaseRXOyy7HneG7/93SwrbfVlGHP
ZPy/IqJeW6zSzXmFPUtx+79CNUC2obgEe1bh9l/8x7wR77KLsGfUf6Mvv3yd
GQXYcyvng7MIubR9R+MX1GHPizjXzyaWfFzh4H2+Fns2IX9Xnxj/UuvVYWYN
9kzOi1yie2ynZE93NfZM+s8n4vuT7h2fUY097+T0s4CwutD6J0CxCnt+xLmx
QmLdtWN2mWeH61eN3LpQJ6V+1cjtv3rUWwViYLiusoDb/w9inTPND5Vgz8bc
/hs/tpva9KwIe47n9r9OKWfVt44CynvSPGL51PDzWdPysWdlbv9NhGQLFbbk
UuK5kAiQOKVsenC4frWc0584QnGjMyP2TBX2nE4urIRT29HmNKISe97HuVAS
4XpvqurySZXYMzleKcTu5cV9AuoV2DM5L9KIVLZlsUIAG3sm/WcQHeazOjua
yrFn0n8mkTUtYf37ycP1q0fcutAJSv1qIbf/IW/f6Gz8OFxXSeT2H1ZtPClu
moc9q3L7r2hxOTenKwd7ruf2PyXxWbDc3mzs2ZDbf//vad/tQlnYM/k9AYJ4
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
d0eo9eGoqFzID649x3qmFVjea+z43ztWCuIfE/McR7g3Ld55l8InXW6fm2Uc
T+Ha6y1D/nvnCOMW5eVfp/CM8u/9KTy1HHejcP7v/SMxXsR/Dxgv4Mun8GV8
fShcx9efwqfy7aVwK543CpfzqWPwqWPwqWPwqWPwqWPwqWPwqWPwqWPwqWPw
qWPwqWPwqWPwqWPwSfFG4XKetQyetQyetQyetQyetQyetQyetQyetQyetQye
tQyetQyetQyetQyeKd4oXM6zhsGzhsGzhsGzhsGzhsGzhsGzhsGzhsGzhsGz
hsGzhsGzhsGzhsEzxRuFy3lWM3hWM3hWM3hWM3hWM3hWM3hWM3hWM3hWM3hW
M3hWM3hWM3hWM3imeKNwOc8qBs8qBs8qBs8qBs8qBs8qBs8qBs8qBs8qBs8q
Bs8qBs8qBs8qBs8UbxQu51nJ4FnJ4FnJ4FnJ4FnJ4FnJ4BnfDybwrGTwrGTw
rGTwrGTwrGTwrGTwTPFG4YhnYPAMDJ6BwTMweAYGz8DgGRg8A4NnYPAMDJ6B
wTMweAYGz5g3Ckd2g8GzisGzisGzisGzisGzisGzisGzisGzisGzisGzisGz
isGzisEzxRuFo3WQwbOawbOawbOawbOawbOawbOawbOawbOawbOawbOawbOa
wbOawTPFG4UjXcfgWcPgWcPgWcPgWcPgWcPgWcPgWcPgWcPgWcPgWcPgWcPg
WcPgmeKNwtE+hcGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGz
lsEzxRuFo303g2cdg2cdg2cdg2cdg2cdg2cdg2cdg2cdg2cdg2cdg2cdg2cd
g2eKNwpH/iIGn3oGn3oGn3oGn3oGn3oGn3oGn3oGn3oGn3oGn3oGn3oGn3oG
nxW+j1nTyOAX7U8rTbZ60bLDDQrfVrgw7r9z/Bj/XRLYfmFhAIV3bTr0fN5f
Fyg8dO+JQRYffAHjk0MemvplKin8trt2o0dINIUPOVBw8ezBOArPGbqpxLQv
7R9rEPZ5h3HruxR+w6hifqvk5xnb317133v0GE81tT23rGoEhV8LL9Lq/gqi
8P0Rvr+0xh4U/sUk3GZVM6G9Er62X6ybxYcoCi9qrbozO+UWhfc4ULL9v/ed
Mb78n5V1/3uXGePnif+ZxyV/S4dQl/VeXASFL3JsdmhOSjCFbwyo1W91s6sU
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
yYgfhSLkzrv/jQtQo/2vQrHiTq1Ouy/dR7z9sWS3R017u/8O4k2hcLk9d3kX
OxXiTaFwdSr5qMqPQ7wpFLWcmrUekHiD0oFhN/Yn3ct+QOk9y35lBku+hlN6
7/d6w+hPaXcovXex26xjY9vfpnTdvnrrVS2G+1L6bUqAb4Z6dByl3/ys5gbc
bBJL6bffrWrtDXkdRemr8ZpViX1ORlD6asjpx50+nlJS+qoVySfFesmTxKGw
XlLZzL4T2dmP0kvGJI8V66Wi1gHre+dfpvTS7vRXW0998aP00gmSd4n1THuz
Vt3f2XhReubLhv4vUgsuU3pmQefntRJD3Sk9k6A/3zN2rwulZ0w6X7xs4X2Y
0g+lgX67lpqep/TDgVG9QnySzlD6YazXqtj0i8dp/ZC0tcUcH0dKP6jv1Hi7
KWItpR8WXk08sbX7Ug7H46qlLiqubPGUisdNMb0/I+5oCdZXnGtCnzvbYp5Q
8bjCIef793laTMXjOl+v7P13g2IqHre+u42B1yjhHm/JH2VN7vHGcTqDUVvO
TjpeQMXpfPqYbYt/lof54Qa2bz6nL+ioON3dxq8He7vnUHG62TW4Zk0/Ynsu
3V+E43RTvNJWt75cjPU2N/zAqft9dEVUnK7r6ukdxzYqouJ03V3bVw10L6Ti
dNUX+XAP6z5C/Oi4InIvN47f3e4yqUWf5zl4fHKX3qRkz1qQTcXvbCOmOO9I
y6Lid7Ps0id7jM2k4nd9YEbNO9HYbkv3GqH9FBeX+anpPcNCKn73u6D6veF+
eip+Z/ys+RblgAIqfrf/bc92nW/nIR6ke7NxXK9rzco22j/6Dcf1rBs2aTHJ
KIOK6y0aNP303rnp2E/LlYzf/nrt5lTULum+IxzXS3VZnu84JY+K652ZVury
4mMuFddbWHez+RT3HNQuDdee3FON432weL9XnwYPqXifJsfZ4J8FyVS8z3L6
lf33fR9Q8b5ocg8SjvcZZbsum5qjpeJ9h6O2jB7nkoXqKd3zjOOAlXKXdQg9
dY+KA2a7tc5zrZFIxQGF+5FwHLDOq34/aoRp0O9K9x7j+OCekU+yYvrEU/FB
4d4keTl/9Bi51xf7ed6Re0JwPHEwuWcJxxNdr/itbjAxhYonfjkxqLeZRRLW
ezB7991Pu7bgflFC5NpZsdcP36PiiY3nP7F/4ZFIxRO3jN9k0jriNmqXdI4L
tRd8yP20OP74jtzLhOOPYVtv/G/3+xgq/rh+Rs6FFy0iqfhjz96fO80yVVJx
w0/kniUcN+z3trfFeeO7eF8AG4O/Vam97Q4VN1SuVgXuDFBRccNH5o2u5MTg
flfBwvver2KMbuLxA3nkHlccT8wg9y/huJ41uR8J7cuglWdQz6+Hb1FxvVS7
Ye5JnW/Qcb2Z6ioedyOpuF7PHnM3bLS6juqphmhyzyqO0/Wp9PBVq5l+VJyu
2dNb8++leWJ7BfPI/Ug4TrfAw9NR1SmMitPF3RmR+OlSABWnM7h9P8ytpxcV
j+vQaJ96jLMXFY8bfu5zm003Pah43D3zkWZP/c5R8TIvj8yG426dpuJlOv9+
jp0G7MPrILiS+zlx/Ou0wYSLI4505HD8K4PcpyQvRw/TyL2U2H+SR+7TkOMK
xR3FqiEG3wOoOOwqkr8stxvSvZHYb9OHnE+T86lQ7HI0H+8bHEnF8Qf2K2iW
nRKAeFMo3jrs3dTsrJKKgx/aUOP5ra3+VBy8GrnfA/uBlaeKvXZlX6L8rmGP
mjbwPBqE13cYuTnx6+dSHyp+OjI+4cKTQmfK/9Z9yhG/v0/4U/HNLot6N+3n
HkD55Ra/qNw5UeNDnVvYMjdu7rB2npT/M3Bp3+F3G7tR5xnSybk4HAdPJecJ
UX9BI3JPAvajxpF7RbC/UbgPBJ8rWP3328S4Ti54fYdU2T0YUjxaRe7JwX7y
p9s3Llz36QAVLw4h+ezYLxpB8qzxeQYrki+M49r9yTlA7HcV7uXA5x9mtUgv
q9M9CLVLC+Ek7/j/ABeM9Rw=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
/LE3hS9VjILrw5cUdf2+Et6Fz5/YD8HrmNt/4MPwengsPrPgx/EZmlxTXcG5
/ZNj4GXwALg5fDk8LLnWKgE/mHmv7VZOybzXXlG9kVyXlsbnhuRYfRJcLVkv
nAhXTK4t/0f1eHI9+X+q/ZNr0f+VZkrWL0WKWofpuvowfuXkGlViok5yvi6m
ejs5/wZcOzlHn1rUtaNq4JJaG8k1/0XYuyfX5xfDnYlFczPrnW78fQT7f6te
SM6hGbYayTn0ZLhWcu4uCt+cnHMT3DTzsxjEb+3A/oBiL2NugWfC4+A3k5/L
FGnAcK2p2kY1jvLIQc49BH+q+wAfhj/X9XL8JjkmL8b/J47fFVwfv8N3n+ke
FnFdr999Gv42OV8swf/75L2zDD6Izye6//i8Df9F1wsfgD+G/wv+KjnmL1Td
Fa5lVWd+l7zfl8J/T85xi4q5DtVe+F55J1yDSl/s5/gh9j+Vr/GfCN+NfXXm
fHcY+17sSxQ3sK/KnB/fwb4neS9MxP5a8pqfpPyieKz4zOf55DV8j+YAPwiP
lz/jvA//xjj74GPwv+Ddmdf/P+DX4Q/g35UTVdPDY1RXYz8O/4F9YuYxn4Hv
yDz/1fCuzHvqJ/iVzHntZ3hn5jjzI1wnXI+OZsyHOT6C/WXsFTP3DXrAC+AF
ug74rnDslt4cFtYnHVhXnyTrlDbw8LCG6Qh/mqxl2sIjwnFceurByOsA+IHI
czz8Gf578W+H/9fJeqQ9/CP8bsG/1S+sN1rCvcOapBncJ6xVmsODw/WcxhkS
1h4aZ3Q4P0nr/ZS8jzTPUeEcJt23O1nLNMT+SrIOagDvStZB9eHlyZqlHPxc
OFZqbTwfjqdaD1vCcVbr4ZlwDNJeezhZ+5Tn3GXJWqwsvDkcN7VOng3HL62T
tfhMx+c6fNbBM+DK8IpkrVQBXpmsla6BdyZrtHpw37CWawHPj7ze0trGZyo+
FbGvStZT18ILIq/V8FmTrK0qYf8gWSe2ht9I1n2qM/cn17dN4fPDmlwx58Kw
DlfcuyCs4RXr7g/XeeqDXRTW84qHJcLaQH2PK8J6QP2KS8J9HPUWSoW1jXom
ZcN9IvUlyoW1h2Jm6bBGUv9hejiXqx91XrjXoBh4eVh7qH9yVbh/pL7H1eF+
k/obZcKaX1qsfFifKw6XDOsi9WqWJuvuq+HLwv0s9VXmhutj9ffGhGsa9Y4G
hDWz7uGrnLuecxsVdc3+MPyS9nuy7pPGHxuujdRT6h/WhK2wDwrrFu2pmeE6
Rv29GeG6RH25Y8laW/5zwjW6eozTwnWMelPzwnW/+oSXhnWL+jnvJOsgrZmD
ybpJ++tQslbS/podru/VhzyMfUvB+3FJcp/hKnhRcv+hDLwBng1XgX9RnOPz
14JzxO95nlD/54+Ce0ATwz1E9TPl/28+3+bHX/Jzfyg4zn6dH//MY+6Puc83
+fi/8jkh9/mNz3t81obrNunfdeE6T/r30XBdJe35Z36O/FeFazjptSO6T9hu
5nmtDtd50m6a/z/5FFf+CPcZ1Rt8LFzPSSfuzTxf9Wn+yK+5eH4/fsnn/lv+
uz/k48nn+/wj/orPWO5ni4Jj5u/5deoa14R1pvT7E+F8oNj+Ze6jXHw8cz/5
XeWWPHcfyzy3o/rNIu5LKd7+Ko3AM3sN7qIeYFH37T5k7M5a99hPyWuYL/Ix
j+bX2CV/1t/mz0J1i47qd00N6xD1nDeE61fp+pXh+ljafFdY40m3buR653Hu
DYrJYZ0pTbo7XN9Lq27CZz4+N6p/As+Fq8HPJPd8boKfTe4R1VTchhfrOcLb
wnldWmxruK5V/bMteW/Wxudx+H74evgxeA5cFX46ub9UA96arNNrwduT82kd
+MXkfl1deFO4hlat9VQ4f6veWB+u9dXr2Jycc6vj/3JY30o/LglrG/UHFoX1
j3o+i8P6R32eh8K9IfUYF0aueZR3wnpPvZEVYe2h/skjYe2n/snysMZTf2NZ
WPup77E0rPfUi3gxrM+lSbeH6yTp2ZfCulcaVvpzX77Od4Q1s3TrnrBGlbad
FX7PofcXj4e1jfonG8N1v+qcc8N9c9W0t4f7OKox7g3rSb0vuD/zs97Eb07N
nNfWS8OGeyXSLI3DPTvlzYbhvp7ymmpqravN+PcM10DKZdXCPVxphNfCelsa
X+v/q3zNVw730KU1bgz3lKV9qobrbGmoOZnXzFPqsYR7soqBncLz1nroGu5R
qsboFu5RqvaYn3k9Pyedi3165rXaAZ6VeY3dFu57Ko/cGq7VVJ90CZ+vGmB2
5rX6ZBGfpzi8Ufo9PD+tT42tGuMxaefwOVrzlcLvFaSt2oX7rdo714XfT0iL
3RTutSnmHw/rAWm3D8J1v3op74dremnbo+GaXvr07XC9q5r/zvB7Ar2zOBbW
GNKDh8L1sXo1+8N9FtXz74TrY/Vz9oX7IOr5HAzX1tK5r4d7RtII74X1g7Tw
4XANrb7Qu2ENoP5Pg3AvWHVR3XAvWPXVyHDfX739euH+smqt+uE+smqn2uF+
ruq6muH+r2qDm8P9X9V4B8K1uLTJuHCPQ++Y3grX69JBjcK9ZtV7tcI9ZdWZ
NcJ9cOXTZuG+v2LRr3lsV4x/M1zfS3+9Gu5HqF93dvj9n7TqOeH3UtKMp4Xf
BUrbtg733BVzioXfO0r/tgn33BXf9oZ7JeorVgy/l5IGPz38/lKat0L4vYs0
foTfHUovFw+/n1Ov8trweyb1BFqF+/6K25PCvSe9fzwr/H5O2vzM8Ps5afP7
wj1xvQccH+4x6X1i8/C7DcX8e8J9Ir3vaxp+/6FYPSGsbfT+bkq4L6Z3ly3C
7yGUX9qG44jyxeRwH03vQP8fqKiXMw==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmfAVEWyhmd1Svs4nzlnVFRUkGQgSBIQJCo5SxQUDARFQAQEAcmgEiQj
kkQkKEElmgAjBgTTuoY1313v3rQ3v8++58eBfrpnzsyc7qp6q+q7pPd9be49
plAo9NQ/Rf3/dKlQeEP/fy94t6xQmCfeJf6j+KB4vni3+Gvx2+LTskKhqvg2
8SXiP6dC4RXxy1Eo3COeq9fvFH+l9QPicrpaalxRc0312qe0/qrGX2puv9Yu
09VG42qaa6X1i8UtxNeIm4hbZ77/Z5rrX+bP5LOraK6F1ttq/aDGP2lukNZO
z3yv28WXihfo8/aI/yR+R3yG1qsX/Jl89h/0vQ/p4plU0v1aaf1ljY9q/U6t
L9f73xH/Jv5YvFD8pvjP4vfE5+n1DXie4qvFT2h9R/7+N8XP6Vqm8VjNPaf7
z9H6do2PaO4NrXXW+18Xf8f99T3OF98s7sUz0Prjev1a8QHxq2X+Tfw29qCl
7rdT/K74ee4pnqjXr9L4Tc3t0Npk8RrxfvEr4id1DdW4reYe0euXaf1tjX/V
3EdaWyI+kD/PQ+JnxR+IfxcfEa8Uvy/+q/hT8SLxW+IfxO+LV4jfFf+T+BPx
HfqM68TV9dsqic/S76sp7qz1K8RHdX2ktQs1V0uvXaz379f4R61/oLUL9PqG
4t6cIfHZ4lriLuIrxc/o9e+J/yI+zH7pelTj3pqbrvuN1/oSjXdrbqvWHhMv
E+8VbxdfpfuNFi8S1+HZiveJvxHfLT5T100aX6C5mrrfaL1/psYbNbdRa1fq
9aOwI3FtzrL4NfG34oHi/9V7ThdfIS4TN+A75udhEWviGuLzxDeKJ+n+qzV+
S3Mva+2UzLaDTWAbF+i6VeMKmmuk158mvkF8rvgG8Uniq8VniKuKx+h+8zTe
prnNWjtZV0WNz9RcNa2fJa4vLieuLT6b74hti+uIzxM3EpcX1xefK26I7Yjr
ietxZsSP8AzEY/V58zXerrktWjtV13Uan6O567U+UuuTNV7DmdXaiboqFP2M
qmh9lNYf13it5jZo7RHxLPEm8SZsX89jb27Pd4nX6pqt8eD8edYVLy56TxeI
G3FmxePFS8XlxW2L9gGtxReJm2O74lvELXT/LRp/pLm+7D02X/Qez9N6LXyK
eIR4rnicvt8CjXdo7kWtXairmcZXaa6x1v+i62ONXwvb9xlar6X18zVXI/kM
c5axifbiCbrfUo33aG4b5y+z/fCd+e636TWXi8vrXpeX+cxx9kZq7imttdTr
X9T4Y83109otulZp/Jjmlmu9MTYtniBeJm6IDYkfFS9JPqOc1dPElcUjSj6r
nNn1WrsZG9d4nOYWa/1TXevxbfo+A3J/eqnWT9Fch8w2hW09LJ6fbPPYfg1x
O/Hwkp8lz3Sd1kq6ymt8au6PPxMf1j2/Fv+X+By+A75dXBffos+YqvE6zd2q
tX9JjgcH9J77xd10/xbiQVqfKe4qbiq+SzyDZy9uIh4gni7uLm4pvkc8q8y/
6fOiYxC/tb3W6+f+fjL+ouTfwm+awP6IbxR34syJO4obifuJp+DPdfUteu4+
ni97hC8kZomH6fX9NZ6sudXYjq4RGnfS3DCtN9P6tcRKzrjWOokbi+8UTxU3
FV9JrOXMiv8neS95pjzbJiV/VhPODLYtvhhbFg8XD9Z1rcZ6W+E6/XO9eKS4
s/gB8a0l+x580MNaG6arisZna+5m7Kfk2EyMHoNv0jVW456ae1jrzbVeGdvD
Z3AWxLeI+4unlVlD/Fz0HqItGpbsO/AhD2qtXsnfrap4CP5WXEfcnTPOsxW3
Fz8onifuJ+4gHi6eL+4jbsdvEc9lf8VdxaPEC8W9S46Nw8RPie8Sd+O7ixeJ
+5e8F+zJ0+LW4hvEHbEhzmbJz6Ka+AHxneKO4ofEC/C1JdsGNjJU3Ep8PbaC
TfGsdLUveq6nfmgdne+5Gm8lZmvtbr2+u3i0eDGxXHyneJJ4FfFW3JqzJZ4j
7im+TXy/+AlxD3Er8b3i2eJ24nriO8ST8I3iuuIe4oniIeJ+4oniZ9mfkveS
PV0mHiS+QzxGvFR8v7iPeIL4GXw7Nld0zO6g3zNY6301fkxzK7U2UNxD/Ih4
ifi+kmP3ePEK8Vu6vihaM/6g99fAhsQD+AzxDl0zNJ4ue+/EedPzmi5er9c0
F9+Yef15cQtxZZ4hvgKb5HxrfRr+S3PNOPtl9g34iL5ar4ZNiG/HJ4jXEVP5
vvq8lmXWfPgCfEI3rVXhN3EvbJLvq/vPzuNXK61VLfNesCeDtH4VPkpcmzMk
/lD8S9Ga7F+xd71/k8aHNNebWCXeLP5Q3Ef8kq5dRWucA3r91JK14Hua26W1
WeKt4sPi18QzxS+JPxHvK7NPPQSHfW0t3f8J8Ra+o/gFrqI1z8t67XS9/wWN
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
wr1Z9Ba1xpphf0rNlVzn2nAt9v8BvWHMVg==
          "]], Polygon3DBox[CompressedData["
1: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
32wZe5N9wy6wf4Z5leVijcNagDVgfwLq/v16
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
8ZjEHNkH8TvdH+fm28S2Xxyd+HfpvpZxX1wpHoLjLxNzvnsk5sfFjbeIvP2U
0nzdxMScXTP6P9F70d+itL2Q3fhAeyrGLK8iP476+SvF5+CVyBW5v8MvuTm3
cYnj3aUcv6Z1VO+4dWziOVK8qri1U7RdsmFaW90ibhblM7F/Ye54943cvI74
02eR0+Oa19pXbKkYU3zc8dFOag7/zG0/n5fe5bsfqznn/TbJ7YfLH1/B8dH0
n1mapxZfLU6+kXgT5PX0h9J2QTHmCPqeSszDrqsYDHmV7EDi39SvXMCIaHdk
016N86ZvoDyFdId4ac2X/P9dcu+R6zPHrIr5m8f1ckVcw3q/G+I7rp07vjuE
8SfTt6rWeayLc3Md4pc65o7RjpMflDvW6wNeP3eMdnzmedR8Kg/SIXe8diz9
7XPHm8dk5rrFcysfNiN+R33PHeKa0ruIdxP/Jo5OelB75XTmpGXu+PRgvVfu
uO9w+Wi5Y9VDwS1yx7kHgdfKHdsemDlXqL0ifqQ132IK92olvqt0zN4kxvjS
YZrjN/UstMsScwLiNddDD9xV2kYoj6q4/j9uMnhNaG0or7Yv7Vvwg9z3jtI2
Qj5Co9y8we6ZY2TxJOPpH1DYHj3J8/wjXV9rvnfL4PjnCXFlmXO1vzVwrke8
rnI6zXPHuQfI98wd5+4vm5g4NyP/bf888ieZz9V6FGf0b2mfWZyz9K34bsUD
uvb18frSK9Kn7aJuGxz1m3gJxZzKPcm3uSaxf6M1Jl2p2EbxqMYMj/tU15c+
F7esdXep/Li4PsVHKY8sv/RWZF7x3MtG1LDXbtAeYD7qK76XeKdRyEviHtEe
vTTu0xvi/hU3pJyDdIvyDp/nzhUoDya+6EL6BiJr0CkXJea49L7KJct2KG92
QZyHkvveC66tWBdeGPVhx7h+F8R5uyDObW298596ly/iGOmdlVHXKccnDlx8
z5O818LSfJp4tVX0nZ043rm5tI+tPORaFfcvKu3fKj+nfNlH8kPAH8qXSKxj
lUc8M3jNTanYlxA3cg/ydPpDbj7nctbIOnXeD82Q73E8OuqrvxnzEmMfLZ1j
Ei+6QcXzKv12GWPXrvM+Uf76/Dg/c0pzcqM595ngnJP4/PUq9iPaIfNgH0tc
6CPBeVPlEa7kmq3rrCu7gpuD35FeYz7XBGfIK+hvVeec2yXgFnW2N8qdK4c+
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
pcG5VdXD3FqYz9+T66yuOkerOqK/qs53iruuCc7RqtZoQdU5M9UP/Fl1Lk31
RbcV5vz30poszPnvUTp2rI3x40myD6n57l6c8yu4a8UcoPyd1ch9pdtoX3Hc
WPojNad8vvys1LX161asN+Unyh/5Pvok6heH2bliX1fcqfyrzqm5UOnnnhy/
n9pHFUc9PjVPrToQ1X/8jpybOE5TjKYaS+VeZ+axLjexj6FaTeUElRtUbad0
p2zW1oz5gHO7VMzp610X5d6X38a92S/1veXvnVQ4H7pZ6ZyBcgebg88qnAPd
Cnxm4dzolvJhCudAtwCfXDh/2lU+UuEc9A6KAQvnOnvIlyucv94ePLBwLrWn
/ITC+dNtwdumjhsVM0o3yC7+px9S+w2ym4pZJ8U5Ob9wjnUb+TmFc6+95VMV
zr/3kp8DXh+8nXyYwrUHW4PbBdf7ynZoDw3Q2svM5Sr2kn+1JfcZmZrDqVFc
h5zLfE6Xvk/tQzdBnpM6Vm/ONVtx3s+KJQvng+ZVzDWIcxCHXTL2vNS56pbB
NaCqJStiDKVYqj51XK0YWfV7qgm9KpibEEfRoeJYcGxqW/5j1Tyg+EBx6bID
iunEf+ySmgMZI18+Pqf8mmdTc9gNI3chDuN16eP4bFrjL8Z13lv3Sc2h7Bhc
n6E5FMdzVGqep750jlI6eefgOgPNf6/gGhHVd20TXOugdbV1cK2G1swOwbUd
Wg+9g2sjtGba8kxvpdbnewXn5qUn9wnOx0tPFqVrDJSr2i041661tFVw3Yl0
2t7BuXzpzF2D8/1aJ7sH59G1NnYJrgnQWtozOMevNbxHcM5e63a/1HpBOmHv
1LpA8/N96fzHJvqOFfOP0ifym7pE30mxZt/U8aY4oeWJeaFRer/E32Cj4NpQ
1a8+nJoL0FpsUnFuZSPFX6ljM+kpcWAPpubBOiB3Tp3jyev9PMohdqfvidQx
m3JAqo0Wp6R5fSx1TuOh1DGP4p1WqeNM2VHFgv2iftC76ZqKr7cED6N/WGl/
U3pNOm374Nog6YoesumJ7bK4SvGP4qAU6+u/SKo7vDiYo9d+kV8u/1y5IcU8
in30fx/F/frvj/7zo5hcsbly8dpzY+J6/oXxZzNmuvzJGGeJ2xxT+tmVh9K+
VD2n6jq1/16P6/yuwnntfeR7pI7bFbMrzle8r7zM74VzuL/S93PVNXyqwWsW
v7W++Rac91TqvEVz5Gup+ev5nHsF5/7CmO2C66ikP/VNBsXvcmRwXlw1ZocH
57D1PJsE5wxUg901uE5L/JJyi/IfX6Bv2+A6J+nhnsE1W9LhmwbnuVUX3Sq4
fmIOeGLh+tKfwEcE585Va9ckxnfqbxZjumngdYLrMGaDuwXXeIm/2iw4f6Da
7DWD89ya/8mFdelUcL/gmqf3Kv7fh/KK4l6axjhRY9oE115ITz5XuA5QvtPz
heth5P+sEeNl1QCvHZxrnwVuHVxLIZ38feHaCT3zosw1sVsr7xOca9e3+042
PzVns0Vw3Zi4x7WCc+f6RkurPl/PPCL1d9U3XTeYT5dPrlpc1fhfR9+sqv9D
ov+VHBpcPyF/74XCtT3yCRvGOFr10scE1yWoVvC44LoK1RkeFVyjoPrMA4Jr
ieTv9Qmuh1BdYjXG6arNfrFwDZh80UqM91W/fXxwzZnqD5cw5tZaz9UJwXU/
qr9tFMzzq156aeE6BK2N/YPrluTTdgmus1HN/+bBdYHiDw8KrkWTT9U3uP5M
9aUHB9efyX/rHlz/J6544+A6IdXh9wiu5xPPeXRwDYfqJ0cXrlmSv3picF2d
amgPDK6vkp+8X3BdnfzMeXyPcalt6iHB9Svy90LkJVTTvrhwLYTW7U9V/0dR
/0n8P8TsiO8=
          "]], Polygon3DBox[CompressedData["
1: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
a/WbDbey5sH6OGMCudCGZWKFfzh4Kz5R39g7MFzPmMvY6+8q3FPNQe3BmhX5
qDWo1hvJceW68zZ8/cQq78otTfxpbCBXllNan2ZO3Nz4ieBHynBJubM+1vpw
fdTWzfP/sAofN/8lh5XLyknlptZ8GM/pk/XN3kNjf2tMrDUxHvvO96GJpcwP
Ww9nTKXvP6FMrPWrXK6T2gDr4X6m3d/J8a6gP1GdOhnrZWr6PbSz6D/QCh+X
g8vF5fzyd32uvnfRhg/9XIf7mXs8o/E31llYbyH//r4Ot5PTye22qxLrqwmo
DWxUpZ5tDdcYfXcVbUZNQG1g4yr1bWu6JoE3rVJPtrZrCHjDKtxFf7O9a3WV
eq+1jPH6w0nVyrcqw1V3qKKVqQGpBe1VRStQU1Nb26PKWuB8Vrvbs4rWpkan
Vrd3lbmhxnB4M7+MfUe0wt/3qcKt1RDUEuTYcm81CLn3jlW0QTU7tbvNqtQT
riMH7c+a69o7dpmYYtsq3EN/q7ZyqDFEKxqDWoPz39qFf2pq6R9SRXtQs1C7
6BuY+ey8VrsxRvB61bD+0bIYf3crGqha6IHN/FHzUvs6rAoXlZNav3pklVjB
OehcPAL8VCtrpmvn5lVilXXl2MYGVea2Go5azpZVtDY1WbXZrapoO2pwanEH
NO+v81WtzJjF401eJpYxRjH2+XeZ2MUYaLj/XyY22qnK/VaDVYvduUr+TF+k
lvtTHS4ppzR2eLiOtqyGpJb0SB0tyRyMuZjH6+S6zEGZi3qwjvashq6W/gB4
uVY0abXpJ+rkqsyhmUt7qI7Wroatlv1YndyAOTRzacPqaOFq7mrvV9fRKvWP
5lperpOrMUdjrub6Olq8OQVzC9eBJ2lFo1erv8kYqRVNX23/xjq5FHMu5l6e
qpPLM+dn7u/mOtq/mrza/LV1uLcc3FxZu4l/jKGMpZ6vkyszp2Ru6ck6uUJz
hOYK76kTe5jzMvd1b53clxqkWuSddXJn5rzMfd1XR5tUc1R7vKtOLswcmbmy
H+rEgsaMxo531Mm1mYMzF3c7eIFWcnDm4obXiY3MAZoLvLVOLlCNU63zuTq5
T3N+5v6eqZOrNIdpLvPZOrlMc6TmSp8Gr9NKTtPc5kt1ckXm0MylvVAnt2bO
zdzbbXW0VHOc5jrvr6N1qnmqvRrv6yvGlNF6ji7DdfUZfp/geq92bn53pzI1
an4rY02ZtWvflvlW4lF8+ER9yZ95bV6j+TRrKK39tubL2kprAq29t6bKWkFr
3PzWxxoqa9+sybK225pDa7WsUbUW3Jora1etAfNbA2s0rQ2zJs3adfO31qpZ
I+q1es3m76xZ9NsBa6asZbQG0Pye+T7zrda8+S2FNW7WwllT5rcL1jBaa2ZN
oLXg5gOtFbTGy9p7a/Ks/bKm1bninDGfZs2i39KYA7eW0TXEtcQ14Ylu1gzX
DteYZ7rxsfpa15CXusm3+zzMf/g9kD5L36VPfqUb/j9xKzkKtVfrneXXahLW
qxjzmHtQUzUWsv7ctdY19P0y3zCol6jhqOXID1xr3+mkls6aNmu1zbdZ6+Ya
5lomh34KXDFmEcbu2Un9rxqU+3/Q8LU+ti1k7ruT+tHby/hDY2q/B7Cm2W+R
/ObGWmfXf2s7p2D8VH2Jl33/Pmr44u1VtOovGv6gz9f3m99UL7Dm6+cmH2j+
V21YLuj3R981HEAuYD2S/FaOI9fZt+GL5p+MxfxmTv7q9aitDWv4x49lYnnr
U54oo4WqpTzcSe3isDLcwznwjXyxijZrTmisKt+neP7WT48uwz+tTb204Tuf
lNFGjVmMXazx9Fsk8yHWflpz6Ldk1qxai6heK/cb2fDDoi/HPpDzma0vNWDW
gpmvt9Z1YF/OfRnzCfTbfcklTT2Aa+4LH7M2cU7sM/elptW1xjXHeoAO2w7C
NvGA1D8Zo+sP5P7G7taU+m2LNevWmv7zTRf2IZ1862WNot+qWV9g7aI1n34b
ZY2vtaC9jCkY+3079fHWFLxorUJfag3klz7L6TupbbYGUl+sTzYf7PcB8l/1
8rvK1HQYqxqzWm/gN1R+iyjnsp5kjzL5K/ODz9LfvIwWODX4sjI1n+rD1vhb
7/Z0lTpO55j5JnOK7us3e+ZXrf+R65jjNddrjsRcpDkDcwfWk1o7Z77bvPdL
ZWJZc7bmbq0nM3djjPFWGc1F7UWNXK35wjLan/HFuVzHiDLa+Om0/YvkZ40N
1fNfLaNZeP/V4NWaHeNYc6ZzlNFi1YZ8B41/2nKIVnIO5h783shaBTnNCUXq
P80lH9xwpl2rxBLmWM21mqPVV8lpzE/vUiZXfVDDoXapcq/M6Zrb/bNOrtmc
6HlN/Onc3KMVPeX3OlqoOWlz0+YovDbPUf3POMl4yRjW7w1bAxMbmNMwt6FG
4P09tUyuxu/31A7VEM/hmC9hn6sdn2Q9hjkW3x2/sVJffatKLkqOodZqDZPf
xli/Ym2TMZaxljG5+p73wfuxf/M+GQMYC8j5X+jm+yBjoYObZ2oMYCxgDPFc
N9/k+m2uMfVOzfthLaHneE2Zb3T8Vsd6KL+NvLpM3e01jT+xvsq6a9/R3Yo8
R+/V8s188BtOuZUcy/yq8az1EKfS3i7T7J/SvH9+32XsukPzDuu//ZbLbzyv
beJF/at+Vq3L++79P6R5//xmSO4hB7Fe6P8Ajcvh3g==
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncTdUaAODj8/kO5/uOyhRljIhEGjUrKUXSoOGWIbooU1KhSblFcou4
ubdRw5UpIRFJZqVClAbzPIRMkQzpeX/bH+/v7PfZ795r7b3XXnudKm273do1
J5VK7RdFxMT8VOqHvFSqQGTFloJU6kM23/YxBX+J9awq+82BswqnUov9lpEP
y7BCqdTsNBe56rqxe+3foW6gqKFulJjifNuca7tYrW6qukGOGSXOVf+d/DR1
d8b5xWpWSX4Wf9exrdUd0d+WxVKpvKKpVOncVKqiutHqRto3Wd2Lfh9T+54+
TZHnqjtqf83otzhkfy3nLBXnFxtZZXlK3VLbG1hpsUjdB9HvuB/6u1WsLEiu
Ja4pK+apmZTVh/ykr23YElFXXk60sN1HrLKvgry7+l6217L6oqg2c8Q+29tF
cfteUlNMbWX5k+JrVkq+l1eTDxPrXdseeWG+3u8cMZDlyBe75nMc01u/+/Hx
8lriffkq13DMpbZx//5h31rHXOt8k0W+fpTPT/raOq5f/OS4zup2qxsjf12k
4z7xeur6OudQ+6fLD2SSvjZSM1XUdq7jbK3968SrMeDiOlhJ2wMcu5DvkZ/H
tzqmk3jNvox8qP3DbJdlg8V1arerrcFG2J4rtsk/E0Nsj04nfYq+HbU93/ZV
jntCFNbnF/gUtifaEDW1UV0MsF1HfG7fMjVfOrab7ZLxTPz2zEtq45iw2DdA
XVFjYavaLeJ99ydPzYroj7yc9hrHeVk10d92PTHTsT9mkvsa97esut3xvJ2r
wHae8Xw9j5dzAZ+nbrjfIfrwlTbmy+8Uf8rridvYZM+yiOO/Sid9HxF9iXdS
u1fLX1Y3l5Vie1kT9gZ7Xbxi7O5jTdmb8qXqqqjbz25ib7Fl7Ay2izVgL7E5
rCTbwxqywWw+K8N2s2vYIDaPlWb9xN2sryjk2kbJt6urm07GaYzXRex31oy9
zb53bNUYV+xmNpz9wKqxg6w5e4ctZ2ey8TH25aXFxWyA+zKJ/SSvKK5iQ9hU
tlZeXTRmb7CP2CJ5KXERe5FNYEvkZUR9NpB9zH6UVxBXslfYQ+5hN7HKvpP1
qbvtZXypWMmKs67ZZI5d7rjy4nRxJ9vEasR++WHne8d1rGenszuiJtpXtznm
wBiX8rPcq4XqBou2rAFrG32Rb1N3NnuEDWeH9GErq8V6sLfZQbaF1WQPs7fY
H2wHu4D1YePYcTaSjZcfNG+UZZ3ZbfHsWBXRkI1gNdl78hXqjnrNW7Nb2QZ2
mrhC3XB2O/tVfoa4ln0QY1cbG7X7nFjNnosadr78aXUfshTrKf/T9mN+2/J2
ecm9Kp9OtsOecK92skvZ8/LJ6os69t+2B4r/8FNiXvC7IeZYvx34y+p26ctG
VoV1ZIPYTvajWC5W23dK3DNtrIvvh+171D2jboP9K8QvYq19JeMZqPtZ/pNY
w0rEM8gmzziede/4FsS4ljcTK5yrhLjAvmGO+cQxP8sriQZsKJsc87O8qmjE
XmNfsB3y88TtbBT7POZTeR1xM3uPLWGFtHcJu1Tk6ssMts12XdFc3fvq5rDd
8R6Iu9hYNovtir6JO9hoNjvWAvILY5zG94F9y47FsxXt2TQ2k+2Uny9asJFs
Ltt/oh/Rn3b6spAdtn115Oo+Vfc1OyK/Rtwf33O2gB2MMSVasYnsM7ZZXlvc
FO9RsWSuuzGdPPd4/mdrYz47YPty0VLdBHXz2O/yy8S9bDz7kv0R73isOdjH
7Bt2NMa8+CebeuI69slrxfnFoZiH2aGYb0QbdZPULWJ/xTMTHdhn7FO2Rn6m
uJ69zhbHN1N+nejIpsc9jbbFz/blu55O2WRttuDEWi3WbM3YOPal7eLxPB3b
1zFj2Ux5Xswb7HE2jW060d/odyvHjmFf2C4iaqh7olgyn52kvcbsBnFKNlnD
fZqXrAdjXdiQTYm1D6sW/Xbs/xw7mk2VH1dTmfVg09mWmOujv+xd9gNLa6MZ
68bmsK/i/sc7Z1/ReBezSZ83npg3Y/78zX1eoGZ+vJ/2FVP3gLrFca/jPWQF
rDP7LsZ+vJ8sy7qE2S5s+0bn6qTdL068Hznp5Frjmtur+57lsZvkXWONG/M6
y2VNWGc2ky1jRVhT1oXNirErFsb7b1/GvgedryDeI9vjRH3zUDa+s979X+L+
xjvi2Fcdc0t8B+TlYqyyt9lTseZy3EPsDXaMPcqqs/tYf7af9Wa1oz02hB1m
Hdmp7Fb2GNvMHo91YownNpQdYQ+wsuw21pNtYY+wM1kb1o/tYw+ycux21ott
ZZ1i7c5asN5sG+vMKrC7Ym5mv7IOrAy7hT3KNrGWmeR5Fc8mzyqeWbtMMo+W
YitjPIr7MskcXCKbzKsxv7bNJHNryWwy/8Y83J6VZs218Yg2NrL72Y6YR/2u
jjlZ3JNJnk1BNnnH4l1rnUm+2SfH848xKlplkrFzUjb5rsf3/d5M8j5ms8mY
i7HXg1VjrbX7vLb2sodZVdaKPRfrdtadncFasn+x3fEdzCTryMV8icgzxjez
D1gd+YxY77OJ2ithrVjCOrFzTlIXa9t1MXep+T36GXM9f832GjE0/n+oyWFv
xrpOLFZfkQ2M/2ryA+lk3fmbPK1ulXxlOmk/zUppM1ebK+Ttc5L/Pn9o55YY
a+nkP+Ba19FVbaVYq0RfYl6Lb3cmGbMxdnvEWlPeJpOsl2JeWX7iO9uFVYx3
VDypfkeMNZG23SbGuTiszZGZZB0Z68lno4/yCZlkzRNrn/5sovxJMTrmM9Yn
1sbyXuJN1j3GX6w15TMzyZon1j7D2Cz555lk7RFrkFfj/stvFivlJeO7Z99/
439UJpl/8rPJ+x7v/dPxnyadtBFt/VUs+S85Oi/57xv/gS9WX1vdCLZOftwy
p62689lHbF+R5Lrj+i+M62MrWT7rwi5j09guVpI9ys5m/2dr4j+7893Hzokx
xDbEH3117VgdNpJtYoXY/axeXG/MrawI68jOi/vC9rA89gA7l41lO1ku68Au
j/89bDcrFWs0dgn7hG1kJ8X9ZnfEfxBWUzRlH7EW8T8ivk+iCRvHmsd4lpeN
7zJ7i13KJss3O9/J7GF2F0vFXMrvYTNYfTZJvl5d8Rhz7O5M8i3JZJNvRnw7
LmIT1a1WV6CuK7uYfczWsizrxvqyGxz7Ip/NKsvrijHyX9UVjvdB3ZUxZth+
Vob1Yteyeewoq8SeZQ3ZXHaEVWTPsKvZbPYnKx9jjl3D5rDDrEKMzZjv2GXG
/YRYe8Z6OL5j8SzZdvkL4jh7hl1h+ynHj3VsgfxZ0Shq2DRWTt5HXB7vGhvD
8uM4MV2+V7ulWU/tNmCzYn3DTmdPsevZN6xwrGFYf3YD+05eNNYX7CXWmH0r
zxXV2QvsKjZDfsD5To21MGvEFrJCoip7PtbAnlcV807zwsl/95jXmqr7Xk2+
qKNusLob2VJ5MVGbvcyasGXyTKw52CB2HftanhPrFdaP/Q1mBYl1
          "]], 
         Polygon3DBox[{{2795, 783, 774, 2053, 1878, 3064}, {2526, 2525, 3069, 
          1896, 1897, 3070}, {2524, 2523, 3067, 1893, 1894, 3068}, {2860, 952,
           826, 2058, 1929, 3072}}]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0tkqRlEYBuBlnocrIEmSKEkS/wXod+RInDkRB5yJY4kLEBcgLkBcgH4X
IPM8JMl4YJ55ltR+97NWu/Wtb+29K3qHOgfTQghj8ixxfC9nUp8bQinbWM4k
69nNBPvZwRH2cIIDnOYo5zjJRc4wxXmucYmnXIn18kK44Kusy6PcyENmCBtx
zk0+cSv2yW2+cCeu4y7f+C57xh/c5ycP+MVDfvOIPzxmyArhBNu8jDViX3Ev
uY3r9bjGO6Z4zEWuco7LnOYCJzjLEU6xn+Ps5jCT7GMbu1jHdpbFuXdwHs8k
JfHsci0JfRazlUVsYSGbWcAm5rORSoQG5sZvxzrJMa5lNmsy/44bqukKVW4Z
rGQ6dzy8+v8PfgGikUz7
       "]]}, 
     {GrayLevel[0], 
      Line3DBox[{646, 250, 628, 486, 2398, 265, 2412, 280, 2427, 295, 2442, 
       310, 2457, 325, 2472, 340, 2487, 355, 2503, 2504, 370, 2530, 384, 2541,
        398, 2551, 413, 2560, 428, 2574, 442, 2755, 540, 601, 906}], 
      Line3DBox[{1498, 251, 1954, 545, 646}], Line3DBox[{1500, 252, 1498}], 
      Line3DBox[{1502, 253, 1500}], Line3DBox[{1504, 254, 1502}], 
      Line3DBox[{1506, 255, 1504}], Line3DBox[{1508, 256, 1506}], 
      Line3DBox[{1510, 257, 1508}], Line3DBox[{1514, 258, 1511, 1510}], 
      Line3DBox[{1516, 259, 1514}], Line3DBox[{1518, 260, 1516}], 
      Line3DBox[{1520, 261, 1518}], Line3DBox[{1522, 262, 1520}], 
      Line3DBox[{1524, 263, 1522}], Line3DBox[{647, 264, 640, 546, 1524}], 
      Line3DBox[{2425, 279, 2703, 488, 647}], Line3DBox[{2440, 294, 2425}], 
      Line3DBox[{2455, 309, 2440}], Line3DBox[{2470, 324, 2455}], 
      Line3DBox[{2485, 339, 2470}], Line3DBox[{2500, 354, 2485}], 
      Line3DBox[{2528, 369, 547, 2500}], 
      Line3DBox[{2549, 397, 2717, 503, 652, 911}], 
      Line3DBox[{2558, 412, 2549}], Line3DBox[{2572, 427, 2558}], 
      Line3DBox[{2585, 441, 2572}], 
      Line3DBox[{1683, 458, 541, 1684, 459, 627, 1685, 460, 1686, 461, 1687, 
       462, 1688, 463, 1689, 464, 1690, 1691, 465, 1692, 466, 1693, 467, 1694,
        468, 1695, 469, 1696, 470, 1953, 544, 663, 471, 645, 566, 2599, 456, 
       2585}], Line3DBox[{664, 496, 648, 2528}], 
      Line3DBox[{591, 539, 662, 1683}], Line3DBox[{664, 715, 2837, 838}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{2094, 2390, 1281, 2093, 3083, 2301, 2095, 3084, 2302, 2096, 
       3085, 2303, 2097, 3086, 2304, 2098, 3087, 2305, 2099, 3088, 2878, 3185,
        2100, 2879, 3186, 2101, 3089, 2306, 2102, 3090, 2307, 2103, 3091, 
       2308, 2104, 3092, 2309, 2105, 3093, 2310, 2106, 3289, 2391, 2311, 
       2392}], Line3DBox[{2108, 2880, 3187, 2107, 3094, 2312, 2109, 3095, 
       2313, 2110, 3096, 2314, 2111, 3097, 2315, 2112, 3098, 2316, 2113, 3099,
        2881, 3188, 2114, 2882, 3189, 2115, 2883, 3190, 2116, 3100, 2317, 
       2117, 3101, 2318, 2118, 3102, 2319, 2119, 3103, 2320, 2120, 3104, 2321,
        2121}], 
      Line3DBox[{2123, 2884, 3191, 2122, 2885, 3192, 2124, 3105, 2322, 2125, 
       3106, 2323, 2126, 3107, 2324, 2127, 3108, 2325, 2128, 3109, 2886, 3193,
        2129, 2887, 3194, 2130, 2888, 3195, 2131, 2889, 3196, 2132, 3110, 
       2326, 2133, 3111, 2327, 2134, 3112, 2328, 2135, 3113, 2329, 2136}], 
      Line3DBox[{2138, 2890, 3197, 2137, 2891, 3198, 2139, 2892, 3199, 2140, 
       3114, 2330, 2141, 3115, 2331, 2142, 3116, 2332, 2143, 3117, 2893, 3200,
        2144, 2894, 3201, 2145, 2895, 3202, 2146, 2896, 3203, 2147, 2897, 
       3204, 2148, 3118, 2333, 2149, 3119, 2334, 2150, 3120, 2335, 2151}], 
      Line3DBox[{2153, 2898, 3205, 2152, 2899, 3206, 2154, 2900, 3207, 2155, 
       2901, 3208, 2156, 3121, 2336, 2157, 3122, 2337, 2158, 3123, 2902, 3209,
        2159, 2903, 3210, 2160, 2904, 3211, 2161, 2905, 3212, 2162, 2906, 
       3213, 2163, 2907, 3214, 2164, 3124, 2338, 2165, 3125, 2339, 2166}], 
      Line3DBox[{2168, 2908, 3215, 2167, 2909, 3216, 2169, 2910, 3217, 2170, 
       2911, 3218, 2171, 2912, 3219, 2172, 3126, 2340, 2173, 3127, 2913, 3220,
        2174, 2914, 3221, 2175, 2915, 3222, 2176, 2916, 3223, 2177, 2917, 
       3224, 2178, 2918, 3225, 2179, 2919, 3226, 2180, 3128, 2341, 2181}], 
      Line3DBox[{106, 1162, 107, 1163, 108, 1164, 109, 1165, 110, 1166, 111, 
       1167, 112, 1168, 1169, 113, 1170, 114, 1171, 115, 1172, 116, 1173, 117,
        1174, 118, 1175, 119, 1176, 120}], 
      Line3DBox[{2183, 2920, 3227, 2182, 2921, 3228, 2184, 2922, 3229, 2185, 
       2923, 3230, 2186, 2924, 3231, 2187, 2925, 3232, 2188, 3129, 2926, 3233,
        2189, 2927, 3234, 2190, 2928, 3235, 2191, 2929, 3236, 2192, 2930, 
       3237, 2193, 2931, 3238, 2194, 2932, 3239, 2195, 2933, 3240, 2196}], 
      Line3DBox[{2198, 3130, 2342, 2197, 3131, 2343, 2199, 3132, 2344, 2200, 
       3133, 2345, 2201, 3134, 2346, 2202, 3135, 2347, 2203, 3136, 2934, 3241,
        2204, 3137, 2348, 2205, 3138, 2349, 2206, 3139, 2350, 2207, 3140, 
       2351, 2208, 3141, 2352, 2209, 3142, 2353, 2210, 3143, 2354, 2211}], 
      Line3DBox[{2213, 2935, 3242, 2212, 3144, 2355, 2214, 3145, 2356, 2215, 
       3146, 2357, 2216, 3147, 2358, 2217, 3148, 2359, 2218, 3149, 2936, 3243,
        2219, 2937, 3244, 2220, 3150, 2360, 2221, 3151, 2361, 2222, 3152, 
       2362, 2223, 3153, 2363, 2224, 3154, 2364, 2225, 3155, 2365, 2226}], 
      Line3DBox[{2228, 2938, 3245, 2227, 2939, 3246, 2229, 3156, 2366, 2230, 
       3157, 2367, 2231, 3158, 2368, 2232, 3159, 2369, 2233, 3160, 2940, 3247,
        2234, 2941, 3248, 2235, 2942, 3249, 2236, 3161, 2370, 2237, 3162, 
       2371, 2238, 3163, 2372, 2239, 3164, 2373, 2240, 3165, 2374, 2241}], 
      Line3DBox[{2243, 2943, 3250, 2242, 2944, 3251, 2244, 2945, 3252, 2245, 
       3166, 2375, 2246, 3167, 2376, 2247, 3168, 2377, 2248, 3169, 2946, 3253,
        2249, 2947, 3254, 2250, 2948, 3255, 2251, 2949, 3256, 2252, 3170, 
       2378, 2253, 3171, 2379, 2254, 3172, 2380, 2255, 3173, 2381, 2256}], 
      Line3DBox[{2258, 2950, 3257, 2257, 2951, 3258, 2259, 2952, 3259, 2260, 
       2953, 3260, 2261, 3174, 2382, 2262, 3175, 2383, 2263, 3176, 2954, 3261,
        2264, 2955, 3262, 2265, 2956, 3263, 2266, 2957, 3264, 2267, 2958, 
       3265, 2268, 3177, 2384, 2269, 3178, 2385, 2270, 3179, 2386, 2271}], 
      Line3DBox[{2273, 2959, 3266, 2272, 2960, 3267, 2274, 2961, 3268, 2275, 
       2962, 3269, 2276, 2963, 3270, 2277, 3180, 2387, 2278, 3181, 2964, 3271,
        2279, 2965, 3272, 2280, 2966, 3273, 2281, 2967, 3274, 2282, 2968, 
       3275, 2283, 2969, 3276, 2284, 3182, 2388, 2285, 3183, 2389, 2286}], 
      Line3DBox[{2300, 2396, 2395, 3290, 2299, 3288, 2981, 2298, 3287, 2980, 
       2297, 3286, 2979, 2296, 3285, 2978, 2295, 3284, 2977, 2294, 3283, 2976,
        2293, 3282, 2975, 3184, 2292, 3281, 2974, 2291, 3280, 2973, 2290, 
       3279, 2972, 2289, 3278, 2971, 2288, 3277, 2970, 2287, 1492, 2393, 
       2394}], Line3DBox[{2398, 2702, 3477, 2600, 2397, 3377, 2601, 2399, 
       3378, 2602, 2400, 3379, 2603, 2401, 3380, 2604, 2402, 3381, 2605, 2403,
        3382, 2606, 2404, 3383, 2982, 3291, 2405, 3384, 2607, 2406, 3385, 
       2608, 2407, 3386, 2609, 2408, 3387, 2610, 2409, 3388, 2611, 2410, 3066,
        3478, 2612, 2703}], 
      Line3DBox[{2412, 2983, 3292, 2411, 3389, 2613, 2413, 3390, 2614, 2414, 
       3391, 2615, 2415, 3392, 2616, 2416, 3393, 2617, 2417, 3394, 2618, 2418,
        3395, 2984, 3293, 2419, 2985, 3294, 2420, 3396, 2619, 2421, 3397, 
       2620, 2422, 3398, 2621, 2423, 3399, 2622, 2424, 3400, 2623, 2425}], 
      Line3DBox[{2427, 2986, 3295, 2426, 2987, 3296, 2428, 3401, 2624, 2429, 
       3402, 2625, 2430, 3403, 2626, 2431, 3404, 2627, 2432, 3405, 2628, 2433,
        3406, 2988, 3297, 2434, 2989, 3298, 2435, 1736, 2436, 3407, 2629, 
       2437, 3408, 2630, 2438, 3409, 2631, 2439, 3410, 2632, 2440}], 
      Line3DBox[{2442, 2990, 3299, 2441, 2991, 3300, 2443, 2992, 3301, 2444, 
       3411, 2633, 2445, 3412, 2634, 2446, 3413, 2635, 2447, 3414, 2636, 2448,
        3415, 2993, 3302, 2449, 2994, 3303, 2450, 2995, 3304, 2451, 2996, 
       3305, 2452, 3416, 2637, 2453, 3417, 2638, 2454, 3418, 2639, 2455}], 
      Line3DBox[{2457, 2997, 3306, 2456, 2998, 3307, 2458, 2999, 3308, 2459, 
       3000, 3309, 2460, 3419, 2640, 2461, 3420, 2641, 2462, 3421, 2642, 2463,
        3422, 3001, 3310, 2464, 3002, 3311, 2465, 3003, 3312, 2466, 3004, 
       3313, 2467, 3005, 3314, 2468, 3423, 2643, 2469, 3424, 2644, 2470}], 
      Line3DBox[{2472, 3006, 3315, 2471, 3007, 3316, 2473, 3008, 3317, 2474, 
       3009, 3318, 2475, 3010, 3319, 2476, 3425, 2645, 2477, 3426, 2646, 2478,
        3427, 3011, 3320, 2479, 3012, 3321, 2480, 3013, 3322, 2481, 3014, 
       3323, 2482, 3015, 3324, 2483, 3016, 3325, 2484, 3428, 2647, 2485}], 
      Line3DBox[{2487, 3017, 3326, 2486, 3018, 3327, 2488, 3019, 3328, 2489, 
       3020, 3329, 2490, 3021, 3330, 2491, 3022, 3331, 2492, 3429, 2648, 2493,
        3430, 3023, 3332, 2494, 3024, 3333, 2495, 3025, 3334, 2496, 3026, 
       3335, 2497, 3027, 3336, 2498, 3028, 3337, 2499, 3431, 2704, 2705, 
       2500}], Line3DBox[{2504, 3432, 2649, 2502, 3433, 2650, 2506, 3434, 
       2651, 2508, 3435, 2652, 2510, 3436, 2653, 2512, 3437, 2654, 2514, 3438,
        2655, 2516, 3440, 3441, 2656, 2518, 3442, 2657, 2520, 3443, 2658, 
       2522, 3444, 2659, 2524, 3068, 3480, 2708, 2660, 2526, 3070, 3491, 2758,
        2661, 2710, 3076, 3493, 2790, 2786, 2804, 2817, 2826, 2866, 2850, 
       2837}], Line3DBox[{2528, 2781, 2782, 2706, 3475, 3063, 2527, 2709, 
       3481, 3069, 2525, 2707, 3479, 3067, 2523, 3348, 3039, 2521, 3347, 3038,
        2519, 3346, 3037, 2517, 3345, 3036, 3439, 2515, 3344, 3035, 2513, 
       3343, 3034, 2511, 3342, 3033, 2509, 3341, 3032, 2507, 3340, 3031, 2505,
        3339, 3030, 2501, 3338, 3029, 2503}], 
      Line3DBox[{2530, 3040, 3349, 2529, 3445, 2662, 2531, 3446, 2663, 2532, 
       3447, 2664, 2533, 3448, 2665, 2534, 3449, 2666, 2535, 3450, 2667, 2536,
        3451, 3041, 3350, 2537, 3452, 2668, 2538, 2711, 2712, 3482, 2669, 
       2539, 2713, 2759, 3483, 2670, 2714, 2818, 2819, 3498, 2791, 2827, 2838,
        2851, 2834, 2859, 2777, 2862, 2778, 3504, 2867}], 
      Line3DBox[{2541, 3042, 3351, 2540, 3043, 3352, 2542, 3453, 2673, 2543, 
       3454, 2674, 2544, 3455, 2675, 2545, 3456, 2676, 2546, 3457, 2677, 2547,
        3458, 2719, 2720, 3044, 3353, 2548, 2721, 2761, 3045, 3484, 2722, 
       2820, 2691, 2794, 3476, 2828, 2829, 2774, 2852, 2715, 2871}], 
      Line3DBox[{2549, 2680, 2718, 3460, 2811, 2679, 2716, 3459, 2724, 2678, 
       2762, 3494, 3064, 2795, 2856, 2788, 2876}], 
      Line3DBox[{2551, 3046, 3354, 2550, 3047, 3355, 2552, 3048, 3356, 2553, 
       3461, 2681, 2554, 3462, 2682, 2555, 3463, 2726, 2727, 2683, 2822, 3080,
        3464, 2729, 2763, 2783, 2784, 2730, 3499, 2821, 2692, 2835, 2830, 
       3501, 3081, 2775, 2844, 2845, 2841, 2864, 2873}], 
      Line3DBox[{2558, 2686, 3467, 2557, 2685, 3466, 2556, 2684, 2725, 3465, 
       2813, 1840, 2723, 2733, 3485, 3049, 2765, 2693, 2796, 2789, 3075, 
       3082}], Line3DBox[{2560, 3050, 3357, 2559, 3051, 3358, 2561, 2736, 
       2737, 3359, 2562, 2739, 3486, 3071, 2563, 3500, 2741, 2742, 2564, 3487,
        2694, 2728, 2695, 2797, 2565, 3078, 3505, 2861, 2874}], 
      Line3DBox[{2572, 2688, 3469, 2571, 2687, 3468, 2570, 1851, 2569, 3363, 
       3052, 2568, 3362, 2735, 2766, 2734, 2567, 3079, 3361, 2732, 2764, 2731,
        2808, 2566, 3077, 3360, 2697, 2857, 2696, 2831, 3508, 2863, 2846, 
       2847, 2842, 2868}], 
      Line3DBox[{2574, 2748, 2749, 3364, 2573, 2751, 2752, 3365, 2575, 2698, 
       2738, 3492, 3065, 2776, 2576, 2779, 2843, 2740, 2767, 3496, 3072, 2860,
        2805, 2836, 2825, 2865, 2875}], 
      Line3DBox[{2585, 2689, 3471, 2584, 1860, 2583, 3370, 3056, 2582, 3369, 
       3055, 2581, 3368, 3054, 2580, 3367, 3053, 2579, 3366, 2747, 2769, 2746,
        3470, 2578, 2745, 2768, 2744, 3489, 2577, 2799, 2700, 2798, 2699, 
       3502, 2832, 2840, 2780, 2743, 2872}], 
      Line3DBox[{2599, 2757, 2756, 3474, 2598, 3376, 3062, 2597, 3375, 3061, 
       2596, 3374, 3060, 2595, 3373, 3059, 2594, 3372, 3058, 2593, 3371, 3057,
        3473, 2592, 2690, 3472, 2591, 2754, 2773, 3490, 3074, 2590, 2753, 
       2772, 3488, 3073, 2589, 2814, 2816, 2815, 3497, 2771, 2810, 2824, 2809,
        2588, 2802, 2839, 2803, 3503, 2848, 2858, 2833, 2877}], 
      Line3DBox[{2717, 2672, 2760, 2793, 2792, 3507, 2855, 2671, 2812, 2787, 
       2870}], Line3DBox[{2755, 2701, 2750, 2801, 2800, 3495, 2586, 2806, 
       2823, 2807, 2770, 2854, 3506, 2785, 2853, 2849, 2587, 2869}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1059, 1282, 3083, 1060, 1296, 3094, 1088, 3192, 1311, 1103, 
       3198, 1326, 1118, 3206, 1341, 1133, 3216, 1356, 1148, 3228, 1371, 1163,
        1386, 3131, 1178, 1401, 3144, 1193, 3246, 1416, 1208, 3251, 1431, 
       1223, 3258, 1446, 1238, 3267, 1461, 1253, 3277, 1476, 1268}], 
      Line3DBox[{1061, 1283, 3084, 1062, 1297, 3095, 1089, 1312, 3105, 1104, 
       3199, 1327, 1119, 3207, 1342, 1134, 3217, 1357, 1149, 3229, 1372, 1164,
        1387, 3132, 1179, 1402, 3145, 1194, 1417, 3156, 1209, 3252, 1432, 
       1224, 3259, 1447, 1239, 3268, 1462, 1254, 3278, 1477, 1269}], 
      Line3DBox[{1063, 1284, 3085, 1064, 1298, 3096, 1090, 1313, 3106, 1105, 
       1328, 3114, 1120, 3208, 1343, 1135, 3218, 1358, 1150, 3230, 1373, 1165,
        1388, 3133, 1180, 1403, 3146, 1195, 1418, 3157, 1210, 1433, 3166, 
       1225, 3260, 1448, 1240, 3269, 1463, 1255, 3279, 1478, 1270}], 
      Line3DBox[{1065, 1285, 3086, 1066, 1299, 3097, 1091, 1314, 3107, 1106, 
       1329, 3115, 1121, 1344, 3121, 1136, 3219, 1359, 1151, 3231, 1374, 1166,
        1389, 3134, 1181, 1404, 3147, 1196, 1419, 3158, 1211, 1434, 3167, 
       1226, 1449, 3174, 1241, 3270, 1464, 1256, 3280, 1479, 1271}], 
      Line3DBox[{1067, 1286, 3087, 1068, 1300, 3098, 1092, 1315, 3108, 1107, 
       1330, 3116, 1122, 1345, 3122, 1137, 1360, 3126, 1152, 3232, 1375, 1167,
        1390, 3135, 1182, 1405, 3148, 1197, 1420, 3159, 1212, 1435, 3168, 
       1227, 1450, 3175, 1242, 1465, 3180, 1257, 3281, 1480, 1272}], 
      Line3DBox[{1069, 1287, 3088, 1071, 1301, 3099, 1093, 1316, 3109, 1108, 
       1331, 3117, 1123, 1346, 3123, 1138, 1361, 3127, 1153, 1376, 3129, 1168,
        1391, 3136, 1183, 1406, 3149, 1198, 1421, 3160, 1213, 1436, 3169, 
       1228, 1451, 3176, 1243, 1466, 3181, 1258, 1481, 3184, 1273}], 
      Line3DBox[{1073, 3186, 1289, 1074, 3189, 1303, 1095, 3194, 1318, 1110, 
       3201, 1333, 1125, 3210, 1348, 1140, 3221, 1363, 1155, 3234, 1378, 1170,
        1393, 3137, 1185, 3244, 1408, 1200, 3248, 1423, 1215, 3254, 1438, 
       1230, 3262, 1453, 1245, 3272, 1468, 1260, 3283, 1483, 1275}], 
      Line3DBox[{1075, 1290, 3089, 1076, 3190, 1304, 1096, 3195, 1319, 1111, 
       3202, 1334, 1126, 3211, 1349, 1141, 3222, 1364, 1156, 3235, 1379, 1171,
        1394, 3138, 1186, 1409, 3150, 1201, 3249, 1424, 1216, 3255, 1439, 
       1231, 3263, 1454, 1246, 3273, 1469, 1261, 3284, 1484, 1276}], 
      Line3DBox[{1077, 1291, 3090, 1078, 1305, 3100, 1097, 3196, 1320, 1112, 
       3203, 1335, 1127, 3212, 1350, 1142, 3223, 1365, 1157, 3236, 1380, 1172,
        1395, 3139, 1187, 1410, 3151, 1202, 1425, 3161, 1217, 3256, 1440, 
       1232, 3264, 1455, 1247, 3274, 1470, 1262, 3285, 1485, 1277}], 
      Line3DBox[{1079, 1292, 3091, 1080, 1306, 3101, 1098, 1321, 3110, 1113, 
       3204, 1336, 1128, 3213, 1351, 1143, 3224, 1366, 1158, 3237, 1381, 1173,
        1396, 3140, 1188, 1411, 3152, 1203, 1426, 3162, 1218, 1441, 3170, 
       1233, 3265, 1456, 1248, 3275, 1471, 1263, 3286, 1486, 1278}], 
      Line3DBox[{1081, 1293, 3092, 1082, 1307, 3102, 1099, 1322, 3111, 1114, 
       1337, 3118, 1129, 3214, 1352, 1144, 3225, 1367, 1159, 3238, 1382, 1174,
        1397, 3141, 1189, 1412, 3153, 1204, 1427, 3163, 1219, 1442, 3171, 
       1234, 1457, 3177, 1249, 3276, 1472, 1264, 3287, 1487, 1279}], 
      Line3DBox[{1083, 1294, 3093, 1084, 1308, 3103, 1100, 1323, 3112, 1115, 
       1338, 3119, 1130, 1353, 3124, 1145, 3226, 1368, 1160, 3239, 1383, 1175,
        1398, 3142, 1190, 1413, 3154, 1205, 1428, 3164, 1220, 1443, 3172, 
       1235, 1458, 3178, 1250, 1473, 3182, 1265, 3288, 1488, 1280}], 
      Line3DBox[{1085, 1490, 3289, 1491, 1086, 1309, 3104, 1101, 1324, 3113, 
       1116, 1339, 3120, 1131, 1354, 3125, 1146, 1369, 3128, 1161, 3240, 1384,
        1176, 1399, 3143, 1191, 1414, 3155, 1206, 1429, 3165, 1221, 1444, 
       3173, 1236, 1459, 3179, 1251, 1474, 3183, 1266, 1493, 3290, 1494, 
       1495}], Line3DBox[{1267, 1475, 1492, 1252, 1460, 3266, 1237, 1445, 
       3257, 1222, 1430, 3250, 1207, 1415, 3245, 1192, 1400, 3242, 1177, 3130,
        1385, 1162, 1370, 3227, 1147, 1355, 3215, 1132, 1340, 3205, 1117, 
       1325, 3197, 1102, 1310, 3191, 1087, 1295, 3187, 1058, 1281, 1489, 
       1496}], Line3DBox[{1274, 1482, 3282, 1259, 1467, 3271, 1244, 1452, 
       3261, 1229, 1437, 3253, 1214, 1422, 3247, 1199, 1407, 3243, 1184, 1392,
        3241, 1169, 1377, 3233, 1154, 1362, 3220, 1139, 1347, 3209, 1124, 
       1332, 3200, 1109, 1317, 3193, 1094, 1302, 3188, 1072, 1288, 3185, 
       1070}], Line3DBox[{1498, 1698, 3377, 1499, 1712, 3389, 1527, 3296, 
       1727, 1542, 3300, 1742, 1557, 3307, 1757, 1572, 3316, 1772, 1587, 3327,
        1787, 1602, 3339, 1801, 3433, 1616, 1813, 3445, 1628, 3352, 1825, 
       1640, 3355, 1834, 1651, 3358, 1844, 1663, 1942, 3365, 1943, 599, 600, 
       3506, 2067}], 
      Line3DBox[{1500, 1699, 3378, 1501, 1713, 3390, 1528, 1728, 3401, 1543, 
       3301, 1743, 1558, 3308, 1758, 1573, 3317, 1773, 1588, 3328, 1788, 1603,
        3340, 1802, 3434, 1617, 1814, 3446, 1629, 1826, 3453, 1641, 3356, 
       1835, 1652, 1927, 3359, 1845, 1664, 1975, 3492, 1883, 1968, 2032, 2033,
        2070}], 
      Line3DBox[{1502, 1700, 3379, 1503, 1714, 3391, 1529, 1729, 3402, 1544, 
       1744, 3411, 1559, 3309, 1759, 1574, 3318, 1774, 1589, 3329, 1789, 1604,
        3341, 1803, 3435, 1618, 1815, 3447, 1630, 1827, 3454, 1642, 1836, 
       3461, 1653, 3486, 1928, 2025, 1846, 1665, 2002, 3496, 1929, 2058, 2062,
        2075}], 
      Line3DBox[{1504, 1701, 3380, 1505, 1715, 3392, 1530, 1730, 3403, 1545, 
       1745, 3412, 1560, 1760, 3419, 1575, 3319, 1775, 1590, 3330, 1790, 1605,
        3342, 1804, 3436, 1619, 1816, 3448, 1631, 1828, 3455, 1643, 1837, 
       3462, 1654, 1930, 3500, 2026, 1931, 2027, 1959, 2054, 2092}], 
      Line3DBox[{1506, 1702, 3381, 1507, 1716, 3393, 1531, 1731, 3404, 1546, 
       1746, 3413, 1561, 1761, 3420, 1576, 1776, 3425, 1591, 3331, 1791, 1606,
        3343, 1805, 3437, 1620, 1817, 3449, 1632, 1829, 3456, 1644, 1920, 
       3463, 1921, 1922, 1881, 3487, 1932, 1882, 2059, 2020, 2078}], 
      Line3DBox[{1508, 1703, 3382, 1509, 1717, 3394, 1532, 1732, 3405, 1547, 
       1747, 3414, 1562, 1762, 3421, 1577, 1777, 3426, 1592, 1792, 3429, 1607,
        3344, 1806, 3438, 1621, 1818, 3450, 1633, 1830, 3457, 1645, 1923, 
       2021, 3464, 2023, 2022, 2024, 1998, 1999, 3505, 2066}], 
      Line3DBox[{1510, 1704, 3383, 1512, 1718, 3395, 1533, 1733, 3406, 1548, 
       1748, 3415, 1563, 1763, 3422, 1578, 1778, 3427, 1593, 1793, 3430, 1608,
        1807, 3439, 3440, 1622, 1819, 3451, 1634, 1910, 3458, 1912, 1913, 
       1879, 1924, 2019, 3499, 2018, 2044, 2051, 2061, 2071}], 
      Line3DBox[{1514, 1706, 3384, 1515, 3294, 1720, 1535, 3298, 1735, 1550, 
       3303, 1750, 1565, 3311, 1765, 1580, 3321, 1780, 1595, 3333, 1795, 1610,
        3346, 1809, 3442, 1624, 1821, 3452, 1636, 1914, 1915, 3484, 1832, 
       1647, 1996, 2048, 1997, 2085}], 
      Line3DBox[{1516, 1707, 3385, 1517, 1721, 3396, 1536, 1736, 1551, 3304, 
       1751, 1566, 3312, 1766, 1581, 3322, 1781, 1596, 3334, 1796, 1611, 3347,
        1810, 3443, 1625, 1901, 1822, 3482, 1637, 1970, 1876, 1965, 2029, 
       3476, 2030, 2069}], 
      Line3DBox[{1518, 1708, 3386, 1519, 1722, 3397, 1537, 1737, 3407, 1552, 
       3305, 1752, 1567, 3313, 1767, 1582, 3323, 1782, 1597, 3335, 1797, 1612,
        3348, 1811, 3444, 1626, 1902, 1903, 1823, 3483, 1638, 1995, 1905, 
       2056, 2057, 2074}], 
      Line3DBox[{1520, 1709, 3387, 1521, 1723, 3398, 1538, 1738, 3408, 1553, 
       1753, 3416, 1568, 3314, 1768, 1583, 3324, 1783, 1598, 3336, 1798, 1613,
        3479, 1893, 1894, 3480, 1895, 1874, 1904, 1875, 3498, 2017, 1986, 
       2035, 2076}], 
      Line3DBox[{1522, 1710, 3388, 1523, 1724, 3399, 1539, 1739, 3409, 1554, 
       1754, 3417, 1569, 1769, 3423, 1584, 3325, 1784, 1599, 3337, 1799, 1614,
        3481, 1896, 1897, 3491, 1955, 1977, 1899, 1964, 1900, 2055, 3504, 
       1978, 2073}], 
      Line3DBox[{1524, 1888, 1889, 3478, 1525, 1725, 3400, 1540, 1740, 3410, 
       1555, 1755, 3418, 1570, 1770, 3424, 1585, 1785, 3428, 1600, 1890, 3431,
        1891, 1892, 3475, 1873, 1898, 1985, 1984, 3493, 1979, 2034, 2047, 
       2080}], Line3DBox[{1683, 1862, 2042, 2083}], 
      Line3DBox[{1684, 576, 730, 2091}], 
      Line3DBox[{1685, 1863, 1950, 1886, 2046, 3503, 739, 2082}], 
      Line3DBox[{1686, 1864, 2013, 1944, 3497, 2015, 2016, 1982, 2038, 2041, 
       2089}], Line3DBox[{1687, 1946, 2014, 1945, 3488, 1962, 2003, 1934, 
       2049, 1933, 2050, 2087}], 
      Line3DBox[{1688, 1949, 1948, 3490, 1963, 1976, 1885, 1969, 3502, 1884, 
       2037, 1990, 2060, 2090}], 
      Line3DBox[{1689, 3472, 1865, 1674, 1936, 1947, 3489, 1935, 1960, 2000, 
       2045, 2001, 2077}], 
      Line3DBox[{1691, 1867, 3371, 1676, 1855, 3366, 1939, 1666, 1847, 1937, 
       3360, 1992, 1991, 1655, 2086}], 
      Line3DBox[{1692, 1868, 3372, 1677, 1856, 3367, 1667, 1848, 2010, 3361, 
       2012, 2011, 1656, 1838, 1981, 2065}], 
      Line3DBox[{1693, 1869, 3373, 1678, 1857, 3368, 1668, 1849, 3362, 1926, 
       1657, 1839, 3485, 1925, 1880, 2043, 2064}], 
      Line3DBox[{1694, 1870, 3374, 1679, 1858, 3369, 1669, 1850, 3363, 1658, 
       1840, 2006, 1916, 2008, 2009, 1980, 2052, 2040, 2063}], 
      Line3DBox[{1695, 1871, 3375, 1680, 1859, 3370, 1670, 1851, 1659, 1919, 
       3465, 2007, 1918, 1958, 1989, 3494, 1878, 2053, 1877, 2088}], 
      Line3DBox[{1696, 1872, 3376, 1681, 1860, 1671, 3468, 1852, 1660, 3466, 
       1841, 1648, 1907, 3459, 1917, 1906, 2004, 1956, 2039, 2079}], 
      Line3DBox[{1953, 1952, 3474, 1951, 1682, 3471, 1861, 1672, 3469, 1853, 
       1661, 3467, 1842, 1649, 1909, 3460, 2005, 1908, 1957, 1987, 3507, 1988,
        2068}], 
      Line3DBox[{1954, 1887, 1697, 3477, 1497, 3292, 1711, 1526, 3295, 1726, 
       1541, 3299, 1741, 1556, 3306, 1756, 1571, 3315, 1771, 1586, 3326, 1786,
        1601, 3338, 1800, 3432, 1615, 3349, 1812, 1627, 3351, 1824, 1639, 
       3354, 1833, 1650, 3357, 1843, 1662, 1941, 3364, 2028, 1854, 1673, 1993,
        3495, 1994, 1983, 2084}], 
      Line3DBox[{2072, 2031, 3501, 1966, 1972, 1971, 1646, 1831, 3353, 1911, 
       1635, 1820, 3350, 1623, 3441, 1808, 3345, 1609, 1794, 3332, 1594, 1779,
        3320, 1579, 1764, 3310, 1564, 1749, 3302, 1549, 1734, 3297, 1534, 
       1719, 3293, 1513, 1705, 3291, 1511}], 
      Line3DBox[{2081, 3508, 2036, 1967, 1974, 1973, 1961, 1938, 3470, 1940, 
       1675, 1866, 3473, 1690}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Q/xc89+Dj3M64DI6EpzCYMF12uTpJWIc2D0Mpr2ntmNyRNwHFxE2Kk5NHHmo
w8EkbX692e827ItYEuijwYbWsiKFYnsOssy3Fa+Ub0NusjerzJINfc7ZIxKn
ODii8jzh3jIKrF6U9u7wIe6jurLz5B0O7j8d9b8AMuyoXmbSkWwsz0jlTZ3J
wrOve39H1dIRx1z2efZhFnRM78Zd6GOi/lD9GvdFDMQ0Pj5Kt/jP9xg61+wy
ZGFVa3vuo2N0dOuVis69zYJsbK7l0T0sLLom+jtWno6d93Qvs4nn5Z5awN0Q
zsJQls6EyqM0NPbYVrmzWVD/IHxW8pwFlzLDW4pZXUj0ln50Q4yN/vhYTVo9
Cx0BBidmCzpR9yzooLMuG7P1Ki9Gf2cBeTOW5y3sxJLMs2I5O9i4wX9yuFqB
Dc/wfQ6THKjonvjjd/wZNn6K3NUNWsOGSt/EOGFYB3gVDtZfHrBBF+W9it/D
xunUZ50h6e14257w5NUHNlw2ng6ecZ6NxGlqlwob2yAmbudSSbynHNYsOjmJ
jZWb5xx78Y2CcK0Ph5dO48Bm/8IWahkb09eELdsuQ0GquVtS1RIO5B7qa8wg
/t1Om6lTyzTI6CiuPxtrycHqfZs7A84yYUb1yU2IpSN47lXZbG027iUt3le+
k4l4W7kVSd10uG5obS2byobClVVJw4+YiDL0ffbQmI7Vv2tGfYjnney/6sv6
MibO1zT+2VpKw+2bIQPsQDZmLe2J38BjYt9QbdFecRrUvwxyZB6zYZJrI/lt
OgtpsTYmfjZdEAspsOQQc2LKntxdFlosLDb9U3j0eicWXSUZOAjYIKvprjDY
yoLpvFw5709UHLe/4eQoywG5cQv/tT8LGTfSBTsmU6HBnj7YsYqDPVL7grNu
EPWTv69Gz6AD8pvqRMi7OGhTCEpVzyTqvdjOaKpnO/askZ1rHMxBQEFN0+QG
Fi60mdGbY9pgdM7q8tAjDpwvjeis/cJCUpzig6Q8Cvb3q+2YWsqB1ZzMdx+l
2LBp/fYsqIuMJszabs/mIPZNmfENLTYeGt5K9R5txdvp6hqkKVxkBAS0pfIY
qAi6wVa1pEPzZZqWrJB4LpWh4M/lDFRXdZ2RfUCH0e1X0WRiHRTXQl9nGhP3
Vr+YUMqnIXRYT23GLA5SJkVJntFgwiavIumeIQ1WSyTDqw0JXaK0+HqIBRPp
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
bva145zfnYplaUzM8VL79IPHQ4LuUf1lCu3IW554+meNOF9MK/z6UJmPKVs2
Pc/SpuCZkt877W4mrDxUJvpa8HFoR1SD3CIyZp/fwTmvwEL+j8aQebv5eKMw
XGe3lIT4BbfUTPVZeGgX6KF0ng8Nc1+PIgsihNemq2auY0nkjpZ3hoTMm8pF
zAa13ZxTDHiMXvzy2GkmdEobpHVtuBC5/Vy5TLz+F22dltYmbv+XdKXnNUFc
xAavSdMP7UDS7dBxggYmKgRehrJ3uMi7FLNWmErHEie77Q/6mEg8PiqhspKL
5srAh5lin7/ms3HUoCoL0ecnJp8Q+9Zfzg2x703b4ZGeM2FUFAubl7s8vB/M
g6PZGU/vDRR8k5+4cG4qC+bJ7BzhDR56txDOjt1FxgnpvJW3xb5fONMmbkOR
uD9ttim/2UdCEd35mD1P7HuuE2Iyxf2ck7AiP+oQEe8e7KzSlWVL5H8WtRld
iUrjYL/K48mN0xkI3E+OZbixQLDwWK/WyoHZ5dmPx4d1wF7rbUt2NAtjzjjG
2//kYJIDs+hpGh3zO27pLkpjwe1XRKXCPC5mapN1TojXh5mvf2WtamBhq/Lp
bMdqLjpflExcu4cCHYzSOuXGRiNFcJnZw8Upm8eqvEgydlsHaeRHivPM4q0v
L08R52dztGn54nhr5GnuY3yfjX7abb3t5jy8055B+XCPCNz5uIRcLJmrOSXE
dnSRCQdOnXuulorHs3LBvfn3xPnM8Kexxx+5cnBptN+GvGt0UA40kS7sYmNW
3yHNmac5GHVpzPdJtTSoPj3XMvUsG9OWj7my0oqLX+QEwytxZFx/snwJeRkH
C5mazG+7uZi+f8u4jakkhGxZbV7vwgGZWfeCEsOFUstbw+g8IpTcZBN6j3Mk
8idPPLnjNz+PjeLH40+S/emw2mU/ja/GwawJw690aGw4/Ei6ujqFhoVHx3XG
WHIwc3yjV9VzDjjXutJP3iPhgOujlSJxHrpi31dyFIEDV8O9Fqn5RLH/nF++
XJx3S+Iulk84OX27CRs1P9W50rto2H7B4n7qFw4CtHrXkKZwkP0kamPYEyKO
Sz+xieyWzA/8w+VL/83lc/7N5Tv3Xq1ZnczArXEKolFH6Xjb0Wh8/RwP0ljx
ZU4fA8rne17YEWnwe5OVsDuTh9WfUvI+KzAR9Hxqxb3FNOQ8jo+gNfBwOtWq
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
1/nEcsD+UX1vvh0HjerjrH1N23GC22oYncmBw65zJQp7ObAeo//R342Cl9Sg
KTIEyfd+7rJiKVt7sfDshJLju1YGnhjFb72qzME7vZQUwRkW+o+pUBHBALuw
P+OQGQfKv44cckljwcsjcWrtHAYCJhSnaXlwUNXg8Sq+jgXZpx835lzrwMGx
+y9GneGgaKmtTkQPCw11JjkfaHRo70/Rvy5+TtJTf52dt52NiGlTZMfcpmLd
IYeWGA0u/I9bvjx7mA1OVL3FcFM7mo122nSBi+0HNhrvvsHGReHYTO7odiyk
jw99783F5eoFL17lsbEusd2h0piC1I7DPV/PclEpcI4PJLGxc2Wo80N3MhZr
3v4Slyb5/s2l7JUqJTVM3FW3//UjkQGL1urryXUcVAiiskM/MhGsdD2bCAZU
PSLjmsT9lqDJPNI3ngXzO+qEkpYOvFoxeV+lGheLrLZ0/M85Mg5P29dgdgde
7tJYeciSC2G4/jjj9eLxG0082BNMh3B17LMWcfu3JMyrYwayoOPJOPfzDQ35
Ha3SH2LFn688810/nYXE9SkD31dSgWneW240cUGMmnUrp4qF8qVxOV0R7fj6
Zvx8mwHxfKs/bV3FY+FC5MEjs99QcErpW563Gg9JYcahO0ezkbCo6trTHjIu
Bfe+EZrzgCi7o546bGzNj1weN5OMb22m6a2uPFzpytnfvIKN+c3XIsu2kBCW
79g6PkJyPcWfuox1I+oy/tRTWI2op/hTN3FrRN3En/qIoBH1EX/qIFRG1EGk
j6h3yP5d7yDp3sw/9QuPRtQv/KlTkB9Rp/CnHkFuRD2CF6ysUw0ZcBjvB/WF
dNiuJu6aMJ0PhscY1qJ6Bm5Qqc921ZPx3qagUeM7H+QgnXp/hw5cs2+691GN
hhkhCWNjG/kwWuFu43S8Aw8uttDUz1FBdrz0s07IR+KR8W90xd+vpB+hmCPO
40tu3pwwdEeAJ+se5u+xZiBnMdu10p0E17T5lNw8Aa49bX5B2UlHTXLhLA1q
OxStGJHJxwVQ3OZxL+s4HfKVmdoy29sx5XTf4Q/XBZgTclVXP5mOW/1r5i1s
oMB74SN2cbbg3/0p+RH7U15+Dqf9jtAgP7vdri2Mgidb49y7ZnbCpMBQzu8K
DdOap7u3fiPjsDpj+VvzTvhdWdfh4tUK09C8KwZO1Tg6Q7l5croQA68mc+rM
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
/l8GEnGO
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{394.8057558814951, 177.23493407016514`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.017363719177131313`, 
   0.7557927412960532}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.1028215881236796`, 1.269553347433989, 0.4590560862170114},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6187610228602204`*^9, 3.61876129579722*^9, 3.6187613294612207`*^9, {
   3.6187614373592205`*^9, 3.6187614429392204`*^9}, 3.61876162955622*^9, 
   3.6187616904582205`*^9, {3.618761720838011*^9, 3.618761726371956*^9}, 
   3.6187617796914225`*^9, 3.618762092552224*^9, 3.6187621362322245`*^9, {
   3.618762217580224*^9, 3.6187622261402245`*^9}, 
   3.618762278854224*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res3$3$1", "=", 
   RowBox[{"res2$2$1", "[", 
    RowBox[{"toOrder", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res3$3$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys3$3$1", "=", 
      RowBox[{"CreatePolynomials", "[", 
       RowBox[{"lucaMod", ",", "res3$3$1"}], "]"}]}]}], "]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}, {
  3.618762309565224*^9, 3.618762314995224*^9}, {3.618762413703224*^9, 
  3.6187624231432242`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"orig\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.1471492596824353`"}], "+", 
      RowBox[{"0.2770577076390623`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.024258502872913805`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0010423891503293413`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.11962453768629808`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.039630476220604324`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.005892266167293024`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.0009558570880973749`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.004694607803947621`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.0029384169723829807`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.000141452457215213`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.004687135585776465`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.00042706781764281266`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.0009934537128081008`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.0016080988577581307`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.0010824812038176296`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.22786455304602282`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.09930037305087391`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.012649146626688361`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.009429112348483452`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.039121075036839134`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.014567590436685414`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.022952507747422808`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.011312139550152155`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0014939157847387253`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.011932405488588468`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.00543929200318008`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.002548127457743953`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0010562701411890362`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.00021436093287176391`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0005440466782970434`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0020249242464461183`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"0.07999999999999999`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.1523809708335952`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"0.05584773429278568`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.050860216419803164`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.015518586674650524`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.00043817105813034413`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.020647416207359288`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.02479382895142853`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.0028804641434372696`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.0005808957113408915`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.0026914455696159735`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0015462683117957812`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0001946531362682968`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0036597363741514622`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0003780077564239674`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.0007648684505594914`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.0010621633600262628`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.0008717156797077643`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.04265672715881227`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.05707191813464117`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.010576849233022849`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.006772929924521847`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.017119295762559137`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.012741804424492185`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.013010900711452868`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.01006757112816061`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0003127502217797732`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.005424219646253763`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.005549905639238979`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0020230804662840166`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.001080110683885813`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0000736848987939212`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0007306341640374891`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0016503204172598678`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"0.20299699397522097`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.22619749121925908`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.039777089547564336`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.0014805602084596754`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.09897712147893876`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.06442430517203286`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.00877273031073027`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.001536752799438251`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.007386053373563634`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.004484685284178711`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.000053200679053171195`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.008346871959927844`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0008050755740668127`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.0017583221633675837`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.0026702622177844004`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.0019541968835254148`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.18520782588721058`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.1563722911855151`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.02322599585971118`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.016202042273005285`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.05624037079939831`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.02730939486117757`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.03596340845887562`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.02137971067831279`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0011811655629589493`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.017356625134842266`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.010989197642419084`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.004571207924027993`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0021363808250748533`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.00014067603407787223`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0012746808423345479`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.003675244663706016`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"0.270875144999171`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.15542911986783123`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.020843496321785164`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.0017583159250621754`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.12146219430209532`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.03615841391187094`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.008416377285742701`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.0009366739091569216`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.005209949688693235`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0037828975507790004`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.0011972864963048114`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"0.0015324619405156909`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}], "-", 
      RowBox[{"0.00002844689117989746`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.00036564802481887774`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.0012555805550514036`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "+", 
      RowBox[{"0.0002539064343968408`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}]}], "-", 
      RowBox[{"0.24394022130433002`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.10966349115604036`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0014935038502529945`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.005306321724171667`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.06344473413252727`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.00039572212073847796`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.02603006697336245`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0009607340630063397`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.25`", " ", 
          RowBox[{"(", 
           RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}],
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.006068981890687293`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.018586981207939286`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0031369538381476095`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.000706760985908838`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"0.0006180773747228833`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0009795190321490446`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0009759548143023308`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.0004007914239315899`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3.`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"6.562499205311084`", " ", 
          RowBox[{"(", 
           RowBox[{
           "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
           ")"}]}]}], ")"}]}]}]}], "}"}]}],
  SequenceForm[
  "orig", {-0.1471492596824353 + 
    0.2770577076390623 (-1. + 2. (0.5 + $CellContext`qq)) - 
    0.024258502872913805` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) + 
    0.0010423891503293413` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) + 
    0.11962453768629808` (-1. + 6.25 (0.16 + $CellContext`ru)) - 
    0.039630476220604324` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.25 (0.16 + $CellContext`ru)) - 
    0.005892266167293024 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) + 
    0.0009558570880973749 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      6.25 (0.16 + $CellContext`ru)) - 
    0.004694607803947621 (-1. + 2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
    0.0029384169723829807` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.000141452457215213 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
    0.004687135585776465 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
    0.00042706781764281266` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
    0.0009934537128081008 (-1. + 
      2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
    0.0016080988577581307` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.0010824812038176296` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
    0.22786455304602282` (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.09930037305087391 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.012649146626688361` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.009429112348483452 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.039121075036839134` (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.014567590436685414` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.022952507747422808` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.011312139550152155` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0014939157847387253` (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.011932405488588468` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.00543929200318008 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.002548127457743953 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0010562701411890362` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.00021436093287176391` (-1. + 
     2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0005440466782970434 (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0020249242464461183` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.07999999999999999 (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.1523809708335952 (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.05584773429278568 + 
    0.050860216419803164` (-1. + 2. (0.5 + $CellContext`qq)) + 
    0.015518586674650524` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
    0.00043817105813034413` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) + 
    0.020647416207359288` (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.02479382895142853 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) + 
    0.0028804641434372696` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.25 (0.16 + $CellContext`ru)) - 
    0.0005808957113408915 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.25 (0.16 + $CellContext`ru)) + 
    0.0026914455696159735` (-1. + 2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.0015462683117957812` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.0001946531362682968 (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.0036597363741514622` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.0003780077564239674 ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.0007648684505594914 (-1. + 
     2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.0010621633600262628` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
    0.0008717156797077643 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
    0.04265672715881227 (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.05707191813464117 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.010576849233022849` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.006772929924521847 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.017119295762559137` (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.012741804424492185` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.013010900711452868` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.01006757112816061 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0003127502217797732 (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.005424219646253763 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.005549905639238979 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0020230804662840166` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.001080110683885813 ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0000736848987939212 (-1. + 
     2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0007306341640374891 (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0016503204172598678` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.20299699397522097` - 
    0.22619749121925908` (-1. + 2. (0.5 + $CellContext`qq)) + 
    0.039777089547564336` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
    0.0014805602084596754` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) - 
    0.09897712147893876 (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.06442430517203286 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) + 
    0.00877273031073027 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.25 (0.16 + $CellContext`ru)) - 
    0.001536752799438251 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.25 (0.16 + $CellContext`ru)) + 
    0.007386053373563634 (-1. + 2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.004484685284178711 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.000053200679053171195` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.008346871959927844 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.0008050755740668127 ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.0017583221633675837` (-1. + 
     2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.0026702622177844004` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
    0.0019541968835254148` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.18520782588721058` (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.1563722911855151 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.02322599585971118 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.016202042273005285` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.05624037079939831 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.02730939486117757 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.03596340845887562 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.02137971067831279 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0011811655629589493` (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.017356625134842266` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.010989197642419084` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.004571207924027993 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0021363808250748533` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.00014067603407787223` (-1. + 
      2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0012746808423345479` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.003675244663706016 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
    0.270875144999171 - 
    0.15542911986783123` (-1. + 2. (0.5 + $CellContext`qq)) + 
    0.020843496321785164` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
    0.0017583159250621754` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) - 
    0.12146219430209532` (-1. + 6.25 (0.16 + $CellContext`ru)) + 
    0.03615841391187094 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.25 (0.16 + $CellContext`ru)) + 
    0.008416377285742701 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.25 (0.16 + $CellContext`ru)) - 
    0.0009366739091569216 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.25 (0.16 + $CellContext`ru)) + 
    0.005209949688693235 (-1. + 2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.0037828975507790004` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
    0.0011972864963048114` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
    0.0015324619405156909` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
    0.00002844689117989746 ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.00036564802481887774` (-1. + 
     2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.0012555805550514036` (-1. + 
     2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
    0.0002539064343968408 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
    0.24394022130433002` (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.10966349115604036` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0014935038502529945` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.005306321724171667 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
     4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.06344473413252727 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.00039572212073847796` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.02603006697336245 (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
     6.25 (0.16 + $CellContext`ru)) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0009607340630063397 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      6.25 (0.16 + $CellContext`ru)) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.006068981890687293 (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.018586981207939286` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
     2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0031369538381476095` (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.000706760985908838 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
      2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
    0.0006180773747228833 ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
     4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
     6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0009795190321490446 (-1. + 
      2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0009759548143023308 (-1. + 
      2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
    0.0004007914239315899 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
      4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
      6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock))}],
  Editable->False]], "Print",
 CellChangeTimes->{3.618762438483224*^9}],

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.618762438483224*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"cnstrPolys=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z2", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"eqvdIf", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1471492596824353`"}], "+", 
          RowBox[{"0.2770577076390623`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"0.024258502872913805`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}]}], "+", 
          RowBox[{"0.0010423891503293413`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}]}], "+", 
          RowBox[{"0.11962453768629808`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"0.039630476220604324`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"0.005892266167293024`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{"0.0009558570880973749`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"0.004694607803947621`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}]}], "-", 
          RowBox[{"0.0029384169723829807`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}]}], "+", 
          RowBox[{"0.000141452457215213`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}]}], "-", 
          RowBox[{"0.004687135585776465`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}]}], "-", 
          RowBox[{"0.00042706781764281266`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}]}], "+", 
          RowBox[{"0.0009934537128081008`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}]}], "+", 
          RowBox[{"0.0016080988577581307`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}]}], "-", 
          RowBox[{"0.0010824812038176296`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}]}], "+", 
          RowBox[{"0.22786455304602282`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.09930037305087391`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.012649146626688361`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.009429112348483452`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.039121075036839134`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.014567590436685414`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.022952507747422808`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.011312139550152155`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.25`", " ", 
              RowBox[{"(", 
               RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.0014939157847387253`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.011932405488588468`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.00543929200318008`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.002548127457743953`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.0010562701411890362`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.00021436093287176391`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              RowBox[{"(", 
               RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"0.0005440466782970434`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"2.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"0.0020249242464461183`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}],
                 ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3.`"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"4.`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"6.25`", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                   ")"}]}]}], ")"}], "3"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", 
             RowBox[{"6.562499205311084`", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
               ")"}]}]}], ")"}]}]}], "\[GreaterEqual]", 
         FractionBox["1", "50"]}], ",", 
        RowBox[{"0.20299699397522097`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.22619749121925908`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.039777089547564336`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}]}], "-", 
         RowBox[{"0.0014805602084596754`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.09897712147893876`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.06442430517203286`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.00877273031073027`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"0.001536752799438251`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.007386053373563634`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"0.004484685284178711`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"0.000053200679053171195`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"0.008346871959927844`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"0.0008050755740668127`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.0017583221633675837`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.0026702622177844004`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "+", 
         RowBox[{"0.0019541968835254148`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.18520782588721058`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.1563722911855151`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.02322599585971118`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.016202042273005285`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.05624037079939831`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.02730939486117757`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.03596340845887562`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.02137971067831279`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.0011811655629589493`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.017356625134842266`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.010989197642419084`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.004571207924027993`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.0021363808250748533`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.00014067603407787223`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.0012746808423345479`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.003675244663706016`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}]}], ",", 
        RowBox[{"0.1671492596824353`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.2770577076390623`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.024258502872913805`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}]}], "-", 
         RowBox[{"0.0010423891503293413`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.11962453768629808`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.039630476220604324`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.005892266167293024`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"0.0009558570880973749`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"0.004694607803947621`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"0.0029384169723829807`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "-", 
         RowBox[{"0.000141452457215213`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"0.004687135585776465`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}]}], "+", 
         RowBox[{"0.00042706781764281266`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.0009934537128081008`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.0016080988577581307`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "+", 
         RowBox[{"0.0010824812038176296`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}]}], "-", 
         RowBox[{"0.22786455304602282`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.09930037305087391`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.012649146626688361`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.009429112348483452`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.039121075036839134`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.014567590436685414`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.022952507747422808`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.011312139550152155`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.25`", " ", 
             RowBox[{"(", 
              RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.0014939157847387253`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.011932405488588468`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.00543929200318008`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.002548127457743953`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.0010562701411890362`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.00021436093287176391`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.0005440466782970434`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"2.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.0020249242464461183`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
               ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3.`"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"4.`", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                RowBox[{"6.25`", " ", 
                 RowBox[{"(", 
                  RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}],
                ")"}], "3"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.`"}], "+", 
            RowBox[{"6.562499205311084`", " ", 
             RowBox[{"(", 
              RowBox[{
              "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
              ")"}]}]}], ")"}]}]}]}], "]"}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "ProjectionInterface`Private`subPos"}],
  SequenceForm["cnstrPolys=", {{
     $CellContext`z2[$CellContext`t]}, {
     $CellContext`eqvdIf[-0.1471492596824353 + 
       0.2770577076390623 (-1. + 2. (0.5 + $CellContext`qq)) - 
       0.024258502872913805` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) + 
       0.0010423891503293413` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
         4. (-1. + 2. (0.5 + $CellContext`qq))^3) + 
       0.11962453768629808` (-1. + 6.25 (0.16 + $CellContext`ru)) - 
       0.039630476220604324` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) - 
       0.005892266167293024 (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
       0.0009558570880973749 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
         4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
         6.25 (0.16 + $CellContext`ru)) - 
       0.004694607803947621 (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
       0.0029384169723829807` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
       0.000141452457215213 (-1. + 
         2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
         2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
       0.004687135585776465 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
       0.00042706781764281266` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
       0.0009934537128081008 (-1. + 
         2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
           6.25 (0.16 + $CellContext`ru)) + 
         4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
       0.0016080988577581307` (-1. + 
         2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
           6.25 (0.16 + $CellContext`ru)) + 
         4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
       0.0010824812038176296` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
       0.22786455304602282` (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.09930037305087391 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.012649146626688361` (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.009429112348483452 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
         4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.039121075036839134` (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.014567590436685414` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.022952507747422808` (-1. + 
         2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
         6.25 (0.16 + $CellContext`ru)) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.011312139550152155` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
         4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
         6.25 (0.16 + $CellContext`ru)) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.0014939157847387253` (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.011932405488588468` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
         2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.00543929200318008 (-1. + 
         2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
         2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.002548127457743953 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.0010562701411890362` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.00021436093287176391` (-1. + 
        2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
       0.0005440466782970434 (-1. + 
         2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
           6.25 (0.16 + $CellContext`ru)) + 
         4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
         6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
       0.0020249242464461183` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) >= 
      Rational[1, 50], 0.20299699397522097` - 
      0.22619749121925908` (-1. + 2. (0.5 + $CellContext`qq)) + 
      0.039777089547564336` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
      0.0014805602084596754` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) - 
      0.09897712147893876 (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      0.06442430517203286 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      0.00877273031073027 (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.25 (0.16 + $CellContext`ru)) - 
      0.001536752799438251 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
      0.007386053373563634 (-1. + 2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
      0.004484685284178711 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
      0.000053200679053171195` (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
      0.008346871959927844 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
      0.0008050755740668127 ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
      0.0017583221633675837` (-1. + 
       2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
         6.25 (0.16 + $CellContext`ru)) + 
       4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
      0.0026702622177844004` (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
         6.25 (0.16 + $CellContext`ru)) + 
       4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
      0.0019541968835254148` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
      0.18520782588721058` (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.1563722911855151 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.02322599585971118 (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.016202042273005285` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.05624037079939831 (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.02730939486117757 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.03596340845887562 (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.02137971067831279 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.0011811655629589493` (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.017356625134842266` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
       2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.010989197642419084` (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.004571207924027993 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.0021363808250748533` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.00014067603407787223` (-1. + 
        2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.0012746808423345479` (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
         6.25 (0.16 + $CellContext`ru)) + 
       4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.003675244663706016 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)), 
      0.1671492596824353 - 
      0.2770577076390623 (-1. + 2. (0.5 + $CellContext`qq)) + 
      0.024258502872913805` (-1. + 2. (-1. + 2. (0.5 + $CellContext`qq))^2) - 
      0.0010423891503293413` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) - 
      0.11962453768629808` (-1. + 6.25 (0.16 + $CellContext`ru)) + 
      0.039630476220604324` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) + 
      0.005892266167293024 (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.25 (0.16 + $CellContext`ru)) - 
      0.0009558570880973749 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
       6.25 (0.16 + $CellContext`ru)) + 
      0.004694607803947621 (-1. + 2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
      0.0029384169723829807` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) - 
      0.000141452457215213 (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
      0.004687135585776465 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) + 
      0.00042706781764281266` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
      0.0009934537128081008 (-1. + 
       2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
         6.25 (0.16 + $CellContext`ru)) + 
       4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
      0.0016080988577581307` (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
         6.25 (0.16 + $CellContext`ru)) + 
       4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) + 
      0.0010824812038176296` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) - 
      0.22786455304602282` (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.09930037305087391 (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.012649146626688361` (-1. + 
        2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.009429112348483452 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.039121075036839134` (-1. + 6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.014567590436685414` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
        6.25 (0.16 + $CellContext`ru)) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.022952507747422808` (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.011312139550152155` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
       4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
       6.25 (0.16 + $CellContext`ru)) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.0014939157847387253` (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.011932405488588468` (-1. + 2. (0.5 + $CellContext`qq)) (-1. + 
       2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.00543929200318008 (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) (-1. + 
       2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.002548127457743953 ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) (-1. + 
        2. (-1. + 6.25 (0.16 + $CellContext`ru))^2) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.0010562701411890362` ((-3.) (-1. + 6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.00021436093287176391` (-1. + 
        2. (0.5 + $CellContext`qq)) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) - 
      0.0005440466782970434 (-1. + 
       2. (-1. + 2. (0.5 + $CellContext`qq))^2) ((-3.) (-1. + 
         6.25 (0.16 + $CellContext`ru)) + 
       4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
       6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock)) + 
      0.0020249242464461183` ((-3.) (-1. + 2. (0.5 + $CellContext`qq)) + 
        4. (-1. + 2. (0.5 + $CellContext`qq))^3) ((-3.) (-1. + 
          6.25 (0.16 + $CellContext`ru)) + 
        4. (-1. + 6.25 (0.16 + $CellContext`ru))^3) (-1. + 
        6.562499205311084 (0.1523809708335952 + $CellContext`uu$Shock))]}}, 
   ProjectionInterface`Private`subPos],
  Editable->False]], "Print",
 CellChangeTimes->{3.6187624385832243`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.1471492596824353`"}], "+", 
    RowBox[{"0.2770577076390623`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.024258502872913805`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.0010423891503293413`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.11962453768629808`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.039630476220604324`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.005892266167293024`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.0009558570880973749`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.004694607803947621`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.0029384169723829807`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.000141452457215213`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.004687135585776465`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.00042706781764281266`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.0009934537128081008`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.0016080988577581307`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "-", 
    RowBox[{"0.0010824812038176296`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.22786455304602282`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.09930037305087391`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.012649146626688361`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.009429112348483452`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.039121075036839134`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.014567590436685414`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.022952507747422808`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.011312139550152155`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0014939157847387253`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.011932405488588468`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.00543929200318008`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.002548127457743953`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0010562701411890362`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.00021436093287176391`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0005440466782970434`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0020249242464461183`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.07999999999999999`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.1523809708335952`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"0.05584773429278568`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.050860216419803164`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.015518586674650524`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.00043817105813034413`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.020647416207359288`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.02479382895142853`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.0028804641434372696`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.0005808957113408915`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.0026914455696159735`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.0015462683117957812`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.0001946531362682968`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.0036597363741514622`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.0003780077564239674`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "-", 
    RowBox[{"0.0007648684505594914`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "-", 
    RowBox[{"0.0010621633600262628`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.0008717156797077643`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.04265672715881227`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.05707191813464117`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.010576849233022849`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.006772929924521847`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.017119295762559137`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.012741804424492185`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.013010900711452868`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.01006757112816061`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0003127502217797732`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.005424219646253763`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.005549905639238979`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0020230804662840166`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.001080110683885813`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0000736848987939212`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0007306341640374891`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0016503204172598678`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"753.7121932779542`", " ", 
           RowBox[{"(", 
            RowBox[{"0.00020682569968144077`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.0005338904738246067`", " ", "qq"}], "+", 
             RowBox[{"0.00042163456261201047`", " ", 
              SuperscriptBox["qq", "2"]}], "-", 
             RowBox[{"0.00041723861202339264`", " ", 
              SuperscriptBox["qq", "3"]}], "-", 
             RowBox[{"0.000979948531906344`", " ", "ru"}], "+", 
             RowBox[{"0.0015240781367173862`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"0.0011133903042679079`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru"}], "-", 
             RowBox[{"0.0019634400281715396`", " ", 
              SuperscriptBox["qq", "3"], " ", "ru"}], "+", 
             RowBox[{"0.0007600767532592688`", " ", 
              SuperscriptBox["ru", "2"]}], "-", 
             RowBox[{"0.004261393386240179`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.00004411554530333822`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.027685872785295655`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.004502891942870696`", " ", 
              SuperscriptBox["ru", "3"]}], "-", 
             RowBox[{"0.019748380711475232`", " ", "qq", " ", 
              SuperscriptBox["ru", "3"]}], "-", 
             RowBox[{"0.027678235488950553`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "3"]}], "+", 
             RowBox[{"0.08102383529789639`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "3"]}], "-", 
             RowBox[{"0.0019207793125138924`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.004110505847820118`", " ", "qq", " ", "uu$Shock"}], 
             "+", 
             RowBox[{"0.002383267057848857`", " ", 
              SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.005787861801916657`", " ", 
              SuperscriptBox["qq", "3"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.004460687750425237`", " ", "ru", " ", "uu$Shock"}], 
             "+", 
             RowBox[{
             "0.013506986568028232`", " ", "qq", " ", "ru", " ", "uu$Shock"}],
              "-", 
             RowBox[{"0.013991717612383832`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{"0.05643021481873975`", " ", 
              SuperscriptBox["qq", "3"], " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"0.008278607493511584`", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.04226963338489125`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.059801175964910476`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.09950266373653638`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.029003695497936084`", " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.18510770970795692`", " ", "qq", " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.08670720992552879`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"0.02909456313407664`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.5256151008062557`", " ", "qq"}], "-", 
            RowBox[{"0.19519964264103215`", " ", 
             SuperscriptBox["qq", "2"]}], "+", 
            RowBox[{"0.1833447915553858`", " ", 
             SuperscriptBox["qq", "3"]}], "+", 
            RowBox[{"0.822639399248712`", " ", "ru"}], "-", 
            RowBox[{"0.6902592432209926`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"0.5358281370283708`", " ", 
             SuperscriptBox["qq", "2"], " ", "ru"}], "+", 
            RowBox[{"0.8406601399100527`", " ", 
             SuperscriptBox["qq", "3"], " ", "ru"}], "-", 
            RowBox[{"0.37781720790334644`", " ", 
             SuperscriptBox["ru", "2"]}], "+", 
            RowBox[{"1.7379671538978774`", " ", "qq", " ", 
             SuperscriptBox["ru", "2"]}], "+", 
            RowBox[{"0.08840778575950813`", " ", 
             SuperscriptBox["qq", "2"], " ", 
             SuperscriptBox["ru", "2"]}], "-", 
            RowBox[{"11.717838964441162`", " ", 
             SuperscriptBox["qq", "3"], " ", 
             SuperscriptBox["ru", "2"]}], "-", 
            RowBox[{"1.9874674564462338`", " ", 
             SuperscriptBox["ru", "3"]}], "+", 
            RowBox[{"8.283002586447246`", " ", "qq", " ", 
             SuperscriptBox["ru", "3"]}], "+", 
            RowBox[{"12.563272326235396`", " ", 
             SuperscriptBox["qq", "2"], " ", 
             SuperscriptBox["ru", "3"]}], "-", 
            RowBox[{"33.82753761930093`", " ", 
             SuperscriptBox["qq", "3"], " ", 
             SuperscriptBox["ru", "3"]}], "+", 
            RowBox[{"1.6238701335670698`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.9315338018006571`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"0.9496429130706397`", " ", 
             SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "+", 
            RowBox[{"2.515220054726004`", " ", 
             SuperscriptBox["qq", "3"], " ", "uu$Shock"}], "-", 
            RowBox[{"2.3490725257760046`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "5.421054556962103`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "+", 
            RowBox[{"6.9957448085214615`", " ", 
             SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{"22.820319616519`", " ", 
             SuperscriptBox["qq", "3"], " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{"3.5546227030057644`", " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
            RowBox[{"20.07385231027181`", " ", "qq", " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
            RowBox[{"22.309593405202634`", " ", 
             SuperscriptBox["qq", "2"], " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
            RowBox[{"41.80521104119011`", " ", 
             SuperscriptBox["qq", "3"], " ", 
             SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
            RowBox[{"10.255935406370469`", " ", 
             SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "+", 
            RowBox[{"75.11513246627482`", " ", "qq", " ", 
             SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "+", 
            RowBox[{"27.89301479669127`", " ", 
             SuperscriptBox["qq", "2"], " ", 
             SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "-", 
            RowBox[{"415.2676174411812`", " ", 
             SuperscriptBox["qq", "3"], " ", 
             SuperscriptBox["ru", "3"], " ", "uu$Shock"}]}], 
           "\[GreaterEqual]", "0.1671492596824353`"}]},
         {
          RowBox[{"415.2676174411812`", " ", 
           RowBox[{"(", 
            RowBox[{"0.00033244753684149914`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.001265726193737474`", " ", "qq"}], "+", 
             RowBox[{"0.00047005746280874013`", " ", 
              SuperscriptBox["qq", "2"]}], "-", 
             RowBox[{"0.0004415099657544448`", " ", 
              SuperscriptBox["qq", "3"]}], "-", 
             RowBox[{"0.001980986151334642`", " ", "ru"}], "+", 
             RowBox[{"0.0016622033942214661`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"0.0012903200599412642`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru"}], "-", 
             RowBox[{"0.002024381638737156`", " ", 
              SuperscriptBox["qq", "3"], " ", "ru"}], "+", 
             RowBox[{"0.0009098162053458472`", " ", 
              SuperscriptBox["ru", "2"]}], "-", 
             RowBox[{"0.0041851738033583715`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "-", 
             RowBox[{"0.0002128935222646641`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.028217560128200668`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.004785991907321645`", " ", 
              SuperscriptBox["ru", "3"]}], "-", 
             RowBox[{"0.01994617985742762`", " ", "qq", " ", 
              SuperscriptBox["ru", "3"]}], "-", 
             RowBox[{"0.030253436094170926`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "3"]}], "+", 
             RowBox[{"0.08145960869220024`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "3"]}], "-", 
             RowBox[{"0.003910418403373521`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.004651298874933924`", " ", "qq", " ", "uu$Shock"}], 
             "+", 
             RowBox[{"0.0022868214933834756`", " ", 
              SuperscriptBox["qq", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.006056865378101055`", " ", 
              SuperscriptBox["qq", "3"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.005656767894040592`", " ", "ru", " ", "uu$Shock"}], 
             "+", 
             RowBox[{
             "0.01305436381089827`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
             "-", 
             RowBox[{"0.016846352845011674`", " ", 
              SuperscriptBox["qq", "2"], " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{"0.05495328472066881`", " ", 
              SuperscriptBox["qq", "3"], " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"0.008559836003849358`", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.04833955614927062`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.053723412248398064`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.10067052976292194`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"0.02469717111477667`", " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.18088367431374341`", " ", "qq", " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "-", 
             RowBox[{"0.06716876930728184`", " ", 
              SuperscriptBox["qq", "2"], " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["qq", "3"], " ", 
              SuperscriptBox["ru", "3"], " ", "uu$Shock"}]}], ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0.270875144999171`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.15542911986783123`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.020843496321785164`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.0017583159250621754`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "-", 
    RowBox[{"0.12146219430209532`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.03615841391187094`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.008416377285742701`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.0009366739091569216`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.005209949688693235`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.0037828975507790004`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.0011972864963048114`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{"0.0015324619405156909`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}]}], "-", 
    RowBox[{"0.00002844689117989746`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "-", 
    RowBox[{"0.00036564802481887774`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "-", 
    RowBox[{"0.0012555805550514036`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "+", 
    RowBox[{"0.0002539064343968408`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}]}], "-", 
    RowBox[{"0.24394022130433002`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.10966349115604036`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0014935038502529945`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.005306321724171667`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.06344473413252727`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.00039572212073847796`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.02603006697336245`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0009607340630063397`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.006068981890687293`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.018586981207939286`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0031369538381476095`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.000706760985908838`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.0006180773747228833`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0009795190321490446`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0009759548143023308`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.0004007914239315899`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"2.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"2.`", " ", 
            RowBox[{"(", 
             RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.`"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"6.25`", " ", 
           RowBox[{"(", 
            RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", 
           RowBox[{"6.25`", " ", 
            RowBox[{"(", 
             RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
          ")"}], "3"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.618762334389224*^9, 3.618762438743224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res3$3$1", "[", 
  RowBox[{"isConvergedQ", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.618762110462224*^9, {3.618762361099224*^9, 3.6187623653692245`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6187621108922243`*^9, 3.6187621289122243`*^9}, 
   3.618762174796224*^9, 3.6187622782342243`*^9, 3.6187623778792243`*^9, 
   3.6187624484772243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["pol"], "Input",
 CellChangeTimes->{{3.618762407663224*^9, 3.618762409183224*^9}}],

Cell[BoxData["pol"], "Output",
 CellChangeTimes->{3.6187624485572243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", 
          RowBox[{"polys3$3$1", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/UZI2X/m11eOZxj2BoHoPzMlCkG01un8KhAdzLCq
DUQHea7uANEc+417QfR+/4qpIJrBfjXvLCBdsTVaGESzndZaAKL3bCsB03Vi
tf9BtImiCcNsIH1k8vqbu4C0XnPOHRB9WE6w8g2QXhO8phpEW3FOew+i80R4
P4LonruOLG+BdBNDEzuINhCa42n7DUTfAdNfjb74gmhbEXE/EM1nrhUNoicr
ucSA6AjniCoQnfJxVT2ILtMKbQPR/ksTwbTvgfdrQPSUhUVrQXSLp+I+EP1q
vTqY1nrqeAFEK/CtA9MAJV2nsg==
  "]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0nQdUU8sWQMEGKoq9IqJYUBRU7KjHLjYQxQ6ohC5FsSGCVEUEVEA6Kr2F
0Hu7EJp0CL2j2BsgVlT8/NzM8N69L66/luvvN+tmsufMzJmTmJmnYXxYa5iA
gEDdOAGB4YN/+8p7TXtmlk/MazuY8PdvB3FjSvSeZ2YP4WzBFOuXzrk0vu/x
/IaabVk0Xhs3O6pVJ4XG1bnPiaPxam77MBov43JPGhfg/rHbROWdZHug8hby
+TTOIPtD441k/2lckXy/NK5B+qFxnk9+nNC+HOudbNhC80zlyDOVI89UjjxT
OfJM5cgzlSPPVI48UznyTOXIM5Ujz1SOPFM58kzlyDMfTkSOnWxl2FJP80zl
yDOVI89UjjxTOfJM5cgzlSPPVI48UznyTOXIM5Ujz1SOPFM58kzlyDMfTnwK
vKK9YC+H5pnKkWcqR56pHHmmcuSZypFnKkeeqRx5pnLkmcqRZypHnqkceaZy
5JnKkWc+nNDixnkpzTOVI89UjjxTOfJM5cgzlSPPVI48UznyTOXIM5Ujz1SO
PFM58kzlyDOVI898OC9+2Hzimc0nntl84pnNJ57ZfOKZzSee2Xzimc0nntl8
4pnNJ57ZfOKZzSee2Xzimc0nnmmc977i+XiO5+M5no/neD6e4/l4jufjOZ6P
53g+nuP5eI7n4zmej+d4Pp7j+XiO5+OZxgkB3h+qZypHnqkceaZy5JnKkWcq
R56pHHmmcuSZypFnKkeeqRx5pnLkmcqRZypHnvlwFD/AJ56BTzwDn3gGPvEM
fOIZ+MQz8Iln4BPPwCeegU88A594Bj7xDHziGfjEM5Wj9ZCPZzYfz2w+ntl8
PLP5eGbz8czm45nNxzObj2c2H89sPp7ZfDyz+Xhm8/FM42h/p3mmckq+QfNM
5ZR8g+aZyin5Bs0zlVPyDZpnKqfkGzTPVE7JN2ieqZySb/CJZw6feObwiWcO
n3jm8IlnDp945vCJZw6feObwiWcOn3jm8IlnDp945vCJZw6feObwiWcaR+cv
mmcqp5wHaZ6pnHIepHmmcsp5kOaZyinnQZpnKqecB2meqZxyHqR5pnLKeZDm
mXcep3mmckp9g+aZyin1DZpnKqfUN2ieqZxS36B5pnJKfYPmmcop9Q2aZyqn
1Ddonnn1JZpnKqfU62ieqZxSr6N5pnJKvY7mmcop9TqaZyqn1OtonqmcUq+j
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
RlLR2JADsiLxN/c+14BsXp0tx1Z3jUErB+JWfDNav0UDEhY6s/WeZRMGm657
mfu1wKl71j0lxwZ9vjn3oPa4D/HdpDdf/28NxM73j0/ewACbqtquAcF8sLl2
dac8MxquaFbvWLohHGa5vgk26MuFfc0gHZuXCLJKOQZ2CuHwao235aIZqRAE
09w9VfNg+JyLCm/PREJCZl6tTVY4pFioWfqblsH9Y69v6Aux4NRDg7U7HGOJ
jVfGBZqHNMC53l8dOydEgdQ9Lb0BOX/iyNjtZjoz60AosfaLugwLbntN/mTa
lwXBm/68bvLKgsKKnvPWQhHA7v+w1u2CN9T+XeyXoFUF9sIjN/mwWbBxiUaW
dUMyETTquuVJ9yaYt7Nqta4uE+yiN9p6nMmHTW8sFB+uCIfizdPqlW3OgL6X
g4/EnBSQHLjaazMnH06LZ940C44Ex+N71v3KDYUtlx6J71hTDqLZZlcZsiw4
X+TwahaLDQvq9v1+vDgWxJy17V+nM2CM+eKrFfPiCPkLOxo7ZBtgheCP8eqj
NUFY/43AgEcIIThJdU3nnjpYe7vKOCWcAUuP6R8ZWesM9ZtbP9/3rwIRi2Ef
O7oYYLAi88cwuzTCvY4xO62oCQ7NkZGfO5iHoM/HqfdNoO8bUH9HDnFqe/T5
O7U94tT2N3j7PrU94tT2qbzvY1DbI05tb8ar41HbI05tT36P6CGf+1nO0u5n
Qe3/+56Rs7R7Rix4f1Ofgzi1vTnve93U9ohT25P7bDStPeL//fxEPs9PpN8/
Qo4j/f4XHv/v/mTz6U82rT0vDmntEefTnnb/CIpPKkdxSOUo3qgcxRWVo/ih
chQP/30fylnafSho3KkcjS+Vo3H87/aJ9HtMeOPy38/JpnHkmQ+n3T+CPFM5
8kzlyDOVI89UjjxTOfL83/ehnKXdh4I8UznyTOXI83+3T6TfY8Lz/N/PyaZx
5JkPp90/gjxTOfJM5cgzlSPPVI48Uzny/N/3oZyl3YeCPFM58kzlyPN/t0+k
32PC8/zfz8mmceSZD6fdP/LveGbziWc2n3hm84lnNp94ZvOJZ+p9KGdp96H8
O57ZfOKZzSeeqe0Tafzf8Ux9TjaN/zueaZx2/8i/Pcfz8RzPx3M8H8/xfDzH
8/FMvQ/lLO0+lH97jufjOZ6PZ2r7RBr/t2fqc7Jp/N+eaZx2/wjyTOXIM5Uj
z1SOPFM58kzlyDOVI89UbvGv/z7EkWcqR57/u30i/R4Tnuf/fk42jSPPfDjt
/hFKPAOfeAY+8Qx84hn4xDPwiWfgE8/AJ56BTzwDn3gGPvEMfOIZ+MQz8Iln
KqfdP0JZn/l4ZvPxzObjmc3HM5uPZ+p9KGdp96FQ1mc+ntl8PFPbJ9I4ZX3m
45nNxzON0+4foeQbNM9UTsk3aJ6pnJJv0Dz/930oZ2n3oVDyDZpnKqfkGzTP
tHtM/p1v0DxTOSXf4BPPHD7xzOETzxw+8czhE88cPvHM4RPP1PtQztLuQ6Hk
z3zimcMnnqntE2mckj/ziWcOn3imcdr9I5TzIM0zlSPPVE45D9I8UznlPEjz
TOWU8yDNM5VTzoM0z7R7TP59HqR5pnLKeZDmmXp/B6UuRPNM5cgzlVPqOTTP
VE6pw9A8Uzml3kLzTOWU+gnNM+0ek3/XQ2ieqZxS36B5pt6/QKnL0Tz/930N
iTROqafRPFM5pT5G80zllHoXzTOVU+pXNM+0+y/+XY+ieabyf+fJrbTzSKbu
o5l7XYc48mlavVHOdcHQ/SbI5+qNjQf+ee8J8tnDXZeG7tdAPpnceTTEkU8d
7rjT6426fOqHktz3Ra8Tdux6X6bwj/4jnz7Rd165/KP/yOex6YsE/nWfC8/n
RKu8mf/sP/JZ/uas3D/7j3zu8tR4lWzYQPMpyH0fjTSfWVzPjTSf17mem2g+
Sc9NNJ+k52aazyiu52aazyg+9TfSfwPNJ+m5geaT9NxI80l6bqL5JD030XxO
4npupvqECq5nGiccZArKDFvo9TfSfw3NM+m/luaZ9F9L80zGeR3NM+m/juaZ
9E+vc/bwqb+R8U+vv5H+a2ieSf81NM/tXP+1NM+k/zqaZ9J/Hc0z6Z9e5/Rx
VNLe61pG8zxJ7a53S3I5zfNd7rhU0DyT/qtonkn/VTTPpP9qmmfSfzXNsy6f
+lsn108ZzfNxrodymmcy3iponnel+2r//VtJ80z6r6J5Jv1X0zyT/mmckEyf
IpdimEfz7Mv1n0/zPJnrv4Dm2ZHrv5DmeRjX01OaZ3KdKaZ57uXGbQnNcy+f
+hvpP4/mmfSfT/NM+i+geSb9F9I8k/6LaJ4zHeu9Xf7Rf+R5jdrEcsl/9B95
PlGd8HevayLNs8LlJdpGLck0z+unPylzXZBG8yzFHa8Mmudp3HHJonkm/efQ
PJtx/efSPH/hU3/r4vpMpHnmcL0l0zzncP2k0TxHyxwQSP5H/5Fnv+pc7eZ/
9B95dry8rnzgL0HznM19fi7Ns8ql3uJle21onvV3VQ4s3utK87yoOsQrzdCX
5vmSzBbvhXsDaZ4PcccrlOZ5OXdcmDTPI7leY2meyb+9Mqmew6ez5CT/0X/k
+QGXu9I8KwTZlif+o//IsxW3fSDNs6qal4DBP/qPPG/kPodJ8zznrZHPn78x
NM9CJKflw4vJ59Dy4b3k69LyYT2yn7R8eDr5vmj5sDrpgZYP7yK90fLhN3zq
b595v6tA9TyFHEdaPryeHHdaPqxKxgktHxYk44qWD+8k45CaD8MfE27c0vLk
NDLOaZ5tyHlB8+xKziOa50By3tE8J5LzlOa5kJzXNM8N5DpA8/yeT/3tMrnO
0Dyj36mgeh5DrmM0z2LkukfzLEOukzTPQK6rNM+K5DpM87yCXLdpnlPJdZ7m
eSu5L9A8PyX3EZpnZXLfoXluJvcpmmcNcl+jedbgU397R+6bNM+XyH2W5pn8
949FNM+3yH2c5nk8ue/TPHuQeQLNsziZV9A8HyHzEJpnTzJvoXluJfMcmmcg
8yKaZ9J/Bc0z6b+c5rmJzNNonj/wqb+tJPNAmucrZN5I85xO5pk0z+jfn1I9
k/4raJ5J/+U0z+5knkzzLErm1TTPpP86mmfSfx3NcwuZ59M8S5DnAppnTfIc
QfMcTp47aJ7D+dTfPpLnGppn0n8dzTPpv47mmfRfS/M8wPVfQ/O8nTzH0Tzf
Js99NM+l5DmR5pn030zzTPpvonkm/TfRPJPx30jzTPpvoHkm/TfQPGvyqb9F
kOd0mmfSfzPNM+m/ieb5Klk3oHkm/TfSPA/wfieH6pn0T+OEvfLAgWRDev2t
hKyH0DyT/ttpnkn/bTTPpP82mmfSfyvNM+mfXueU4FN/I/3T629k/LfTPJP+
22meSf9tNM+k/zaaZ9J/Kz+ftHzPgQ8nx4v+vS9eHY82jrz2NO5AGUfK981o
/eTzPTR8/+m3nV9GD7g+o3zO3kls8co4VRjyHHPUvjBu8Rzvvk7K5++dhInE
W6Xa8c+H9h1e+46uCdYzVDpx/KD2dVkXzZJMn2GO74ctCX+roddB+by+k7ig
fPPM1+edQ/Oa1z7EcrnxKul2yuf4ncSBzHV2cw92DsUhrz38+jFhzKdWyuf7
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
f1BcW/xd0Y49RPsjcTxPROWvQPNUHq/P/2t3hXglPm+P9rnx49N2Gk+4AfJx
FQ035v5QRZ/wwPwgPySU3nixb3CxO2G38+DjiFWHAq3cCd37AGqh8SDi5Yg3
Q8SniP8R37VEuPz8QCbMRHZYfu43CnIIPXASjc/wT/mRHk7HMC6O20sy3BNG
o/V9DNr/irheuFD/ZdOFcwgin0bIjj0m7GowGp/NM1cO+cfiFLF/z4Y6CJf7
JXj4VjLn4V0bf2yvxH1Z+EuLl1mTfXG/FCG/jfeWb4cMPu3BeDDSb3ujLRL7
pJwFuT2JhV9OzXfOfi7to8Vx/sd18kHXVEnn5yP98C90LDR+JOU7iPP0fLN5
owZmHCf24w8hcYaBqutYX+J8y9/94xqDtUM7+mBc3OdOGW3l16uRH7ZLYr6A
p/X78B5dT2P74478Od0u1kl1Ct+PcZTXDF2QbhT1TxtUn9r5VY+mXrQn4jtp
MPL7hXN1jh7EPIvrSMmIolkxy52kPA7ULyfROiWOwx9ovduP1juxfLEfT20L
uroo2AvjwWjfnd51rbnW4hYRJ82EZs8Mmpz4dBPzI9qHonrN1W+L3XA9RTvP
/6pbN+CbO6EH8kFvVtb4ZVO8MS7awzKLgC32CRL/65G/pbpXX72dwxwwLvpV
TLzTTi397ox5FnX7rh9eK67WdsN4MdL5nw8IOl8cD6K9XZFmvHb1CU/cXnG8
GTwqaTB2glR/kbfyvUuvB/e/icfzUKT/n05tZZD8wQuP5ww0Pn/0Nt90hPfB
9cHvgDsJ40Sc7+I74HfQe/Ryf1QOLEbvzov9Lvq1qqH35cVykP8frAh7YojK
N1oulC+2Vywn2+l719//e08T1V/0f3b9vOqVdsl2bD9F/1LKDp82v5KPYNwR
zaOHFsK75yIu+qkGo/fQRd5EHk5VD/p1obs37t9S/0/ZZQcyocoG9wkWxqvx
vBPfxTZye33wZ6QNHudiv7xF75KLvInj0wKtL6Kd/PB+ZOyhCw/hbmxeyT/X
VuL+Fb93n2Vo5zL8EK7n5g8nurwID4XCnz7tjFK9cfmhyE7+zhDspNxf/Qim
Twr2iem2EY83dL8EXBtisjL283Yizp4BBmVGv48sO4j7V/Qr5hgL/YvzpBBv
Vmj8yP08PNxEPIjtFde1MzPl64KY1zYOjSux3+9Ny0r+5KuCuA2L59a0XInr
ue3S5v0jevEQU9N2nuPhAFz+ziG1W/3TMA1WdMsOODIvAPeXMrz8YM1JBfDn
0K3GZRp/zKfyXMpAq75BcN48x6JuqIV0X1aV8Wa+/VPgQv9/f33cLfkzyXdA
8Ln0WfFmvxffg019Q6zL30j7x+NJ5oWt7DOgTurKfj0yAzA/W4j3ecXfnVB7
0Nf8EDV8t3FvOcFmpXQP4YJJqlFTcuB94Lw5PwdJ5zbboHdtOqJ3bUQ+yfdo
xHGl3vwhfPzuPHiVYhI0Ybofrmec/cS3b4rTwfReCD91oAXmrUqptthu/2N4
sbPt5EONVuN+yX3apfHUHrFQnNLiQoTCF9ezyfOdR2r6ZsOu3UcOjZhqgfnp
mvLOo4F9BNTqdv+bibWFFG/9uvZ6bJYG1B1XT9PXBGB86NDyqnadNbBvzha7
x6ctMG+xxLuWYrteXb7uYPgoF8IOj/rUPHSldH8F8S6nyJsfehd4FXoXWORN
fP/XEr3/K463ps516xWfyYQt+0bY2142x+OHb2JbpVVeCGw0HPBp+2QfPA5d
AuJDX914CNH2Nt27dbOA5QlNrZ+fpe/vujrM2eDp3ngKn3KtY07m6GgK5wMN
/f/3bh2JL60oP5DC0yu+96bwhxX4JQoX/j46nMSfCN8DiecL5VO4hVAfCtcK
9afwGUJ7Kdxc4I3C5XxqGXxqGXxqGXxqGXxqGXxqGXxqGXxqGXxqGXxqGXxq
GXxqGXxqGXxSvFG4nGeewTPP4Jln8MwzeOYZPPMMnnkGzzyDZ57BM8/gmWfw
zDN45hk8U7xRuJxnDYNnDYNnDYNnDYNnDYNnDYNnDYNnDYNnDYNnDYNnDYNn
DYNnDYNnijcKl/OsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCs
ZvCsZvBM8Ubhcp5VDJ5VDJ5VDJ5VDJ5VDJ5VDJ5VDJ5VDJ5VDJ5VDJ5VDJ5V
DJ5VDJ4p3ihczrOSwbOSwbOSwbOSwbOSwbOSwTN5f5fIs5LBs5LBs5LBs5LB
s5LBs5LBM8UbhRM8A4NnYPAMDJ6BwTMweAYGz8DgGRg8A4NnYPAMDJ6BwTMw
eCZ5o3DCbjB4VjF4VjF4VjF4VjF4VjF4VjF4VjF4VjF4VjF4VjF4VjF4VjF4
pnijcGIdZPCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvCsZvBM
8UbhhK5j8Kxh8Kxh8Kxh8Kxh8Kxh8Kxh8Kxh8Kxh8Kxh8Kxh8Kxh8Kxh8Ezx
RuHEPoXBM8/gmWfwzDN45hk88wyeeQbPPINnnsEzz+CZZ/DMM3jmGTxTvFE4
se9m8Kxl8Kxl8Kxl8Kxl8Kxl8Kxl8Kxl8Kxl8Kxl8Kxl8Kxl8Kxl8EzxRuGE
v4jBp47Bp47Bp47Bp47Bp47Bp47Bp47Bp47Bp47Bp47Bp47Bp47BZ6Xvw9c1
bvKL9qe9STF/aWh0l8J3Fiy+97/z9CT+p+hWx8UFPhTe1WDw5dx5Vyg84NDZ
AUs/iPFwCZ/mnzr+ZoaSwmOc+S2u/mEUPuhY/tULtvcoPHvw1qLxJrR/TP/O
592j28RT+N22lfNMJT/PmL4HVf97X5vEH463crKoFkzht4Oe8Np5vhR+NNjr
Fz/alcK/jAvauKa52F4JX98n4tLSD6EU/qSNKnb+gygK736saNfNDBWFr/yx
up47F0fhl5F/WMAlf4tRgOMmdy6Yws2smx83feBH4Vt8avdZ29yNwpukuN5v
N1Csv4SfDPN8ZaAfReGH0+fXqblTReERE3Ov65nHUbjg9xbzfCU/Rq1ZM4bw
owMovK3VqKL/vX9N4n1nntTXzosEEufbqF3XNFdReIMLU/tZVIuj8NC2lfOL
pf1+SsU48aDw2fwOc4ftHJC4xZPoxLibsRRuVfGvmKcs7XPv9jBZ9L84IonX
3eNeevQNvS9zqz5S2fgXvf/q3nLQMWm+S3hIRflBFH7w8Jyli/B8l/DOFXxe
oXBbmb2U8F5FxeWSHZDw+kvLvSU7IOE2UxSZkh2Q8G8Da/6W7ICEhzc63nSC
Cb3Pen+8jq9kByT868aFJyU7IO0LrCvae5fC61aMh2AK717Bgy+FH35btiMT
24FK5Qv9CyQeVvY4TbIPlcqv4C2Uwm88emNsiu1DpXpW8Kmi8PH8/hGSfZDw
nJeWgyT7IOn2FRX2JJjCtRV2yY/CSyvsmxuFc20r571KeNa+5Pbtsd2otM9a
q5naHNuNSvsI3w3DJLsh4Vfav9NIdkPC75rbPH8i2Q2MH6volwAKv9LkVdtK
dgPjhwT7Q+ntz4rQbZXsCcZDK/pRReHvNq5YWcmeYLxfVM8ukj2RdObEZ+3S
zbE9kfBrRB6HiDe1dYuX7IyEj4vI/CrZGQn/ojQ98gTbGUl3RRN5E3gdqT7h
tGR/JByts9S6Xyo7T0jF+1jrNaW7iPggMMon60Ph4w918ascfyy1flQeFSje
wynVf4lvh8mpq59BW350G75S/LHj2hO1nH4+gaBb/Ysrxx+HDY35eGbiE5hQ
Ub4Uf4x/6Po+oFMhhFR8L8UfbUPrBU2LfgzhFbgUfzSou+eWmakO1Xv3PRFP
vnXGdNyHPPATvse8fbX8MHi9XS7cFsqX8H6zNf17aWGsUB+MG2nnu9RJz4Y7
Qv0xnjbwVus5VllgKLQX43N7fNFs7cDDOIE3jNdyKhqseZRB8KnlTAYNnZ8I
Twg+tVzXWru22JY9IfjUcqP/LA82alBI8KnlBm/OSnG88pjgU8udXf+Fu9JZ
R/Cp5U67Fq/4GZxH8Knl9oYkHto9LpfgU8t5LuZKHuXmEHxquZnwcUPczmyC
Ty2XWPeItkmrLIJPLTfL0umXtTqT4FPLDdSf7ptmk0HwqeVi3VIDIqekE3xq
ueEPhubU6CjaAyn+mG215c3LpmkEzzyXWN8VwrweEzzzXPWoOjEq/UKCZ557
0QJa/+mnI3jmubcP/S3H3s8jeOY581buU7pPzCV45jnNh7zkpek5BM88pxrb
RM92WTbBM8+FK2rWmfyZJ3jmuVEtt32b6ZhJ8MxzTw/oF48ZnkHwzHPG7a4V
JX/WEDzzXPv8AMNWBx4RPPPcsuDSj2sHpxI885y+z/a9mvYPCJ55bsKV8EK3
YckEzxruacRjbl1OHsGzhuv3qPGvEcN0BM8azi2y46smG3IJnjXcf1/fBq8u
zyF41nATnScuPnMsm+BZwxnHjmh1p3EWwbOGq+6S173cI5PgWcOZT+v24MJf
3uQ8a7io8v79/As1BM8arqFTo5GZ7R8RPGu4MynLzv/n8ZDgWcM9e7Je93tG
CsGzhqvXabL9gq5qgmcN97tIv+OsgYkEzxpOuV5bZ+iheIJnNXdqyo9BrQ20
BM9qrsGrQcW1N+cSPKu5Qusj4RHB2QTPau7Sor1HBk3NInhWc8PdTt57XZhJ
8Kzm5rVdfKTrzgyCZzW3wc352/gG6QTPaq5+cc4ekyWPCJ7V3OroX09Lgh4S
PKu5dxZl65cZpxA8q7l7m5qZjrybRPCs5nQ7bhf33plA8KzmzOs3W1CwIo7g
+S/+yOXDp6MxBM9qjvfo+3xACkfwrOKuXIoMGWORRfCs4lI8AxJu3c4meFZx
+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
fXKb8X0IhRP+BEZ7dYz26hjt1THaWymeKLNLTF3E4EHH4EHH4IH8PoTCCT8S
Q+/pyHHC0mnU96SuE+OepK77/iK37mHTJ5R+C1ZdWd/fPZvSb2Lck9RvIwqu
7tmb+ZjSb9HLA7rFOegonZa9LbB+zv1MSqeNqWrMax0zKD22fdnnMPtq+ZQe
e/LvkHfTk3IpPda+3yLl0WNaSncVnC7vpqqbTumuFiMn9XJIeUTprm5Vxg7d
ejGV0l1i3JPUXdNf95n1ZrSW0l2jVqa4+NbPoXTX+q1fNi3ms4jxrOam9PDe
0MiZp/TVtthNowbUTqX0VYvXbxo8T06h9NVv+0G913ioKX3V+dWQN88uJ1L6
6iyKe5L6yqZ5csLgs1mUviq0XPLTfSVP6atuddvHPR2YSekrrzmJ2/+rnkHp
K2fv6mtjMzWUjgpwWOrecYqa0lHn3t22L2uVSOmooT2PLS7Ui6d01AD9aRGP
qsdSOqr+sk1mkV1UlI5yRnFPUkc9ONTL2agkg9JRUWbvchSp6ZSOins3ec0v
fw3Bg5Lb/GLYj/AmjygdlT/mouf9lIeUjtq2znzIBZsUSi9N6jl12LX0OEov
ne1Xv6xOaAyll+5vvdOkykKO0ksZFnxKLasoSi95d671btCDcEovOXgkL7ls
FkLwo1A8jcqe+O88DcGPQnGzz/ePhvZpBD8KxYg2id27Wj4k+FEonMaNzIwe
n0Lwo1DEBtrbJBmqCX4UiuxNLzN6f0wg9r8KxbNj25Y8fRBH8KZQjLHde/lH
T47gTaHoO7B6w/S2UQRvf8vpFFa7qHc4wZtCsXPdy6gaa4IpHbjMZmYv46eJ
lN47vKjtzB/t7lB6r5nf6NdWI2Ipvfc04PyCTdtVlE4L2zo4v/RCFKXTNr/b
fNO99V1Kp/V4nbRDE0T2Fw/jIx22vTcIpnSUYbsGzp1H3qF01ByUl0rqoiYo
3kTqooOzco7n7POgdFEdlFdL6iKf6Ta7xpVfpnSRma+7WekvL0oXbUf5a6Ru
8eoZl5Ln6kLplvbVAi8Z3b1E6ZYXDkmDPzY8T+mWxcvv2c1oe5bSLbP3O0dM
gKOUrogPPLi1jZszpR8ucrtyR5Ueo/TD7jmNxv778RClH/i+rlETluyi9IOu
yLlqVWtLKr5me809Tr/bUyq+VutFVqb7qSekXuKmNZlQr1ZuIRVfa120dKa9
awEVX3tad3RdPYvHVHztx5JBebbdxHvOJf+SeM85GXdLOTL3nZutloq7/ef6
2Kr3/Bwq7pY+Mu/8n07ZVNwtfeCFx4PKeSruNsvU9N3vtEwq7ibeB0XG3dxq
RTS1Mi4g9TN38MytsEmFOirudvlnldZ+V/KpuFujfsnfzv+bR8XdatepUaXc
IJfgR8t5oHvLyXicvn1R09aTeSoet9DcbrtF10wqHtepKrchVT+Disc5Td0f
OLMqeY+ElnvYLPVb4V97QMbjxHuiiP0RN7fcON5eL4+Kx1UbZ1qeG6ml4nF+
x67OebIjh4rHVanaNqxH32yCB54LQ/eKk3G6HSvXnfYz01BxugVDWhgevJVG
xem272t7ujD8IRWnu95icD/7lylEu6T7o8g4Xd0GD6PCf2RRcbrBV6deyQjn
qThd/gmPZXusMol2Sfd4k/G7xAFdjK4dS6bid5uG71c9vpNExe9azT9Y9KBK
IhW/E++VIuN3o+pazjZtk0HF7+zzIy0GFmmIeqq5eugebDKupx+9eWPE21gq
rhdyfuiix7NjqLieeN8UGdfrs0t/9q6ih8Tvqriq6F5oMt5n0mBnwfygCCre
J95DJS9Hya1B9x6z7ksh44NT0b1VZHwwK6Ru1pbQZCo+OK5tzfbWQUmkfoOz
j2OzD/olUPFB7xr9Bp53j6Pig3YBU/e9vBxDxQdXP6ySOLkLR7SLvL9X8jt1
RPf3kvHEX+ieKzKemHHn7GrjhcFUPLHcfs4/P9veoeKJOf80mvkp1puKA/qj
+6nIOKDRtjtxJm3iSJ0Pgee1BxMHxFBxwMl3PrtbXr1PxQGdJ+xNjHwYScUB
S8Idw7vrhZPjB7To/lsyPmiM7q0i43Rt0L1SxD4L5hsszgmJjaDidD1dznzP
NAmj4nRjficYprsHUXE6s7yEGe2MbxP1VEMrdG8tGXf7ZjFpkPb7dSru5mh4
aUAcf5G0VzAK3StFxt3WXdo2zOiRHxV3i83YU75isBcVd9uqdSs4PMeViq+F
Z/163bCJKxVfSzvWrqftEzq+9kIT+rFGlxNU/MstUG9n/J/jVPyrWujH28rB
28h1EN9rSsazGpU+KFi1bBQVz2qH7qGSl6MDb3TPp7wchcLyenWvr7PcKb9K
2exB6W/qAWEfdJwLum+T9LeI583kvCkUHf55cafjhTtU/H3Ovpq27xzdiN/9
+z97VrdXRvtQ8ev3Xgc7bd1L6uG/8wXdW0LGeY+ge0VIf2mS+e+Ta1t6U37O
s33dvB2auFPx0Hro3i3Sb1bWddPK9anXKD+V+7f4dTeOmVF+Jwd0/xV53uDb
RSEvnvTX9Uf3e5B+4P/q253KXeZHxd/vPFxpuHWNOxXX/obOE5Lx3G0oz5r0
e7dU2iWNve5I9jscR/czkOcBuqH7Fki/q8+IW676uQ5UPFe8b4eM5649+dnO
LMOD8md+R/cbkH773nefbW82wI0Y5xqogvLuyfMMHz6teqVdsp06JxCJzumR
5z1GoHOD8vL/9z7E90U31/pSfuPsamHNe47zpfz5+RODfWK6baT8z9VR/vL/
AYjQ+bY=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
eJ+j2D4/vBdS/F8Q3jN0xy+Ea+VeeFG4hu6p2Bjez3TCk8I1lnLWrPCepzNe
GK6/lY9mh/ctyinvh2tB7QU+CdccikufhusYxSvVyb/kXCsf5/hV+aUwpr/t
zrmO/SnnWvZbjp85DhWuP8HxGcfRwvWHC+cfC4/9ufCYPxae53uOkwqvc7zw
2GMFf1m49ofC9Ud4j+9wTvqOmVtblHeK/NzfFV7zROGxeo6Hk+tPzZOfCq+n
1/qGx2uv+wXnA4Xxzwuvo9c7os+W+b3r+Y8X7oHezweM7+FcxPlY5vr/aObH
6LEH9VnDdafqnC7JOVfz9pXwflU1w/bwnlb5blV4PzkQrw7vP5/Er4f3A4r/
S8P7xsfwh+HaUfuyD8J1p/ZN+8P1pXLKmvCedhDeF65ftXfbG95vaD/1UbiW
1T5rQ3hfrTpwbXgvPRivDO/D++Et4f38KLw5vOdXntoU7hEoV74a7gsop28L
9wKUx7eGewfKxS+H99XD8Ivh/XN/5bvw/nkAXh7eM/fF68N79aF4XXgPPwTX
zRz/uxN7T4T3Iaonfw7vr1R73JK57q3LNbdmrpPr5V0rXYwb4Bsy15y1cInM
dXV9fGPm+kp11l2Za87WuEzmWrQZLp257m2KS2WuM5vgiplr4Fa4eOaa/H7V
nJnr4er4ccWMnPsViv3P4r15x/VZ+KO84+h8vD/vnDBTczDveP8c/jDv/LBA
ayfvPf1CzWftrzP3Q9TrKJu5lm6edw5Zqvmcd75arvmed15aprmOr89ck9fA
12bO+9XweZglkauMK2Wut9vgSzPXD7fjSzLvf0vmXVeqxmiLO2bOuSPxg5lr
hkG4VeYaYDC+L3Me75b3ejpUWFM1Muf0znnvXZTHx+OamfN1l7x7GGu1/vFl
mWueO/HlmWue0vhs/DtcJu/a//e4HD4fn4qr4rMw/+VK4dMLsaIEPiNzb+w2
fCbmlLsj772CaqQK+IrMtVNZfBH+A66JL8BMx9zd+ELMFM3dk3cN9TrWC3bg
xu6CpxU5b29U3OWaZxUz8Ka869an8BY8U+sVb8YztJ7wRjxdawVvwFMUS/B6
PFdrF2/Pu3cyCe/Ek7Tm8Nq8+zFT8C78vNYrfi3vvstk/A6epzWNX8df4tNw
bdxW+yt8Budvwr0V1Xjfhnsuqq9+Cu+rtZc5Fu6bqF49HN6Tq34+FN4/q67+
Mrw/Vy/r63CPRnvhNkWeF3qtI+F+jfbFX4X38OpRHA33blQb/xLu16gWna/4
xGPf4D1PVtzF6/Bo3Acvz3sP8Theicco7uIV+GncEy/BI3EvvBSPwr3xsrx7
eFPx7rzzyNaca/Px+Am8Ku9abBP+Ne8cqBykXKSacY3yGeML8Dj8Jh6Rudeq
/uewzD1Y9VcHZ+7Nqu86QXEar8YTFVPxGjwkc29WPdihmfux6t8OyryXV19X
+w/1VOfg/pl7nuqpDs/cy1WPt1/mfql6oQMy913Vg30ic09VfdSuyb0d1SHP
JvdFlS8+xytyrle/Sl6nqmlX8L201n3Rd5382VU3tgx/zrL4hvD6VA/h43Cv
U33L68PxSPuR28NxSnv8d8O9UfVR54Vrd+27VyevkYpcsyp5jVTAK/EgXF41
BX5Ga1N71uTvsTa+MbyG1aPYnrx2auBR4Z6CegifJcdS1eGNwvfrNtwwfI9K
4hnhvbf22se5fnPO+4XvkueD9gVXh+OL9mjNw99fae2/wrlHe5Om4e/vTu3j
wvOglO5n8novh68Mxy/t6RqHv7M71BsJ54YS+IHw93073puca9RTvTYcK7Xv
+yA5v6jvek04Pmpv+GFyrlH/dmK4v6D+w7fJsUv7lGXJsaWM9gLJ81Pvs094
ftfDi5LXmt7bTeH4qP7P2HD/RX2YL8L9a/WoNyTHpapc80pyTKuCbw7HXPWj
bgnnIfW7yofzuva5lcO5UHu6KuE8rT1jmXCtoJ7VXeG8rv1j6XAdoD7S2uR4
W0n76HBeV6+pYjj3a4+5OXnNVsebkuPM3Vr7uA2+Fd8Zzq/qZX0f7oloH31H
uD5QD21dcpyvjNckx/+7cKlwvaKe2NLkNa65sTg5tmg+LE+OaVo7G5NjdTU8
Lzle6XsvHs6R6hPeGs7f6h+WDOcw9QxLhHOneozzk+Ob5vDc5BhYHC9Mjo2a
PwuS46fm/P7kWkJ72KvCuVP9h7LhOky9u0fDua0W/iU5D2q/PCT5dxbtGVVv
qw5XHB2ZvAdXLdo1nPNqcn3dcA2hGDIq+Xcl1ZNjk393UC3dKhxDtcbfSa6d
7sPDkn97Ul29MdzfVF90KOPVct57dgjHbs2xgcm/K2lf9mA4PmqtTUj+HUR1
6SPhHKz40C2cpxVDHg7nY8WWLuHco3nSM5xr6+DJyb8NqTbuHM7Nmj8TGW+Q
c00+Lvk3FNX2vcL5WJ+ldTg/Kaa1C+czzdXXk3O67vNryXlc921S8u84qqt7
hOuDexnvHc6RdfEjyf187TdHJ/+epfp8TPLvO9qzvJ1cu+qxbcO5UHO1TThH
Kt7u5prZOa/3+8L1n/owA5J/m9PeNleof9SjUH9/a+F7rx+ulTXf2ofzsdZF
1XBdrv7PPeEaUX2hWuG9gXpK1cJ1qvpINcP1pfpUO5Nrad3z/ybvK9UnqRGu
KdU3Uz2mPd9DnIcn/3apfsWu5Ppc96dTONdqfbUI51fFuurh3pB6Vh3DuVnx
Sv107TW197w33OtXD6pOuK+k3teI5N9Atff5Lbzv1Xv4NLluV4+oX/JvJeoV
KH+qVzmBe1YvXGcrzqhGUm/4V8b+DzQa9Ns=
          "]], Polygon3DBox[CompressedData["
1:eJwtmnngVWMax89wH94z986+2Mc+9n0LIaVFSmmjRPsmlTaRkIpKpd1SUZF2
bbRHRpYSKaKyJIwsCWNsY9bvZ77nj1Pnc95z7+/e97zP83y/z3uPbNujUfd9
sixrrX9K+v/Jcpat1P9fCXZXsmyCuJP4EfFL4iXiFeIvxR+L24kPFNcV3y9+
XDxNvE28XfxK0mvFMyLLXhPP1vhs8U6NvyOeI54jfl/8rriVWC/JaovHiTuL
jxNfL54svlDHtTo/Vtca68YFGl+k80907QONvaNrT/A99PfeFE/UeGfxVI2v
F88re/yv4p3iJ8QLxbvFu8TzxQvEH4vfFy8WLxfvFf9VvFC8VLxH/KH43eT7
n9Lfe0u8VTxLPF/8uvit5O/7hPgN8bbk77tAvFW8M/nzLwvP1416/9PFHfX+
U8U3iE8Vtxc/LJ4pnil+V7xD3FV8mriD+BHxrLL//nvit8VdxMeLW4mniNuL
Dxc3FT8gflBHM50fyRzrs3TQ+BGZrzHGPdzLtZYa76TxP+v8Ol2bpLFF4mXi
L8QfiQeKG4rvET8pbis+QFxHPFG8Ue9xn/gxfd9bxI1zfS/x6xrvJ24oniR+
TdxHfJV4snizuK+4kXiKeIv4Zj6b+FHxdnF/cRPx9GL93Sr+tfh34qrik8W/
Ev9WfIH4JPFt+nx1xHeKF4hP11FT53/UtZr6rM10/2M636Frt2msv+6vLb5D
/IT4FnFN8QDxPPGt4lri28Xzxf3El4lvE88VX633myF+WzxAfI34cfE74ttZ
2+L54g/EA8WXioeIV4nbi6uJB4tXituJLxMPFT8t7iS+RDxIvELclvWt73CT
+G7Nd2vxxRq/S7xc423EF4nvZP2KW4kH6PPWEw8SLxTX0Pg94jXijsSf+Hbx
EvF14reTn98Svf9d4hYanyfepfE7xVeKJ4o3inuJ6zNHOq+haz312uYan1vE
/x0aayC+X/yKuLe4m47nS14za3R/TWJCfLa4rfh2fd76Oh+sa4s01lNcRdxD
PEN8t7iZeJR4hXiIuKl4pHi5eLC4iXiEeBnxpOM5nY9kzvX+gzTeWOf36tpS
4lPHOp2P0rXVGh+q8Wt0PlrXVmnsHvHV4vvEK8U9xOeKu4kfJR51PKvze3lG
en1rjf9a51V0bbzGhomvFY8Vryb/6Vir8+HkCN1/g/gv4hGsAXF33X+Ozm/U
tekVrwHWAs/sKY0P13hLnY/TtTUau1d8nXi8+GnxOHEH8RTxC+I+4kvEfcWz
Kn7mPPu7yal6v94av1jnfXRtpsZ6iS8S9xY/XvEaZa2yRhez9jR+ns6769pj
GuugY3XJa3qJxvtqvJrOb9a12Rq7Q3yleIh4sXiUuLX4fvGz4vHijuKHxS+K
x4jbiSeJ14nvFDdgvYuXiMeK24sni58XjxBfL54gfkY8UtxKPFG8Vjxa3Fb8
kPg55lr8inhfre9vWR9an7upN8y5zp/R+Aad/1f3/63inE3uPoPvrO+3UbyM
WCZGk9cYa401OC55DbIWWaPjk9cIa4U565P8THm2rKHe4vfEH5Vcwz5PnlPm
ljXfN3nNs/bPZ06T1zxrnzU5IXlNsjZZsxPF++s7vE286vt9o7GK+H3qn/gH
cVm8k3op/l4c4u3UF/HX4l+Id1E/xT+Kn9IxvOSYGaP3/7nG39P5Rxr/TmP7
iXeId4bnK4nfId+J/y7Oxe+KPyzmm5pGbaMmdtP7lTS+jfqn8a8qronURmpg
12SN8YJ4dGbtMUz8N2JJ/FlyDBPLxPzY5BpFrbqKmE3OYR+WnIPJbdQEasPl
1LTkNcpavZQakFwDqAXUkLuTY4LYIIYGJMcQscQavz15TbI2qZGjknMsuZYc
Njw5h5HLiIERyTWb2n2CuGOyBkILUdM7JNdgajEaqb14lDjT3Lys/34Uj6Hm
heecuR9LzShZY9XSPxPEtUqu0U2SY47YI4ZGJsc0sU3M90/WVFtL1nRorYfE
LUvWBO3E++pvvMWY/uaXGvspOX5eF38qrkLN0/1H6VpDjV1AzRAfI24kPkfc
SHyo+ArxWdQQ8cHiy8Xni5uLjxZfJT63Yq1yhLi++DxqbMl6pkGyZkW7ogEf
F59KDRX/XlxDfLa4ofgQcV3xKdTIkjVDdfGZ4nrig8R1xNXE7dAS4hbii8St
i+dztbhq8bx4Ps3El5HzxWeJ24hPE1cX/0F8mbgGOV58pri1+IyKtTSaura4
Ojm9yCetxJcW+YV4QK+hadA2aJpLxf/U8arO39B8f1ZxjiRXouFnJOdAciE5
/1HxPnpeb7LWdf/einMguZCc+3ByziX3thE/Ij4gXKuoWZ312g0anyXuKV6g
8f/o2Kzzt3TfF+RPHQ+WnFOnauzfxKjO39T4Ho39S7xJvFX8ecU1idpEjp6c
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
PTQWWqpHWHvR06B3cHy419E8uZdxpviSinsE9DJOD/cOyFn0Hs4I5zJ6BvQa
Tgv3EvA4eB08DntJ9EjoHZwY7p3QA6GXcUK4N4KHwEtsyax/8Ax4BzwGvb3/
9/DCnoLeHntO7JVML/IvnhJviWZnbwuNj/aflln78/mO1/mp4f0+PCZ7Uew5
4T1ZT/QmzgnvH/E8jxAfG+5v4znZm5qd2YvicdkLZE8M78seE728s8N7T3gs
vBYejN4S2o618JmOvYWmQ9u9krmXSM+QXi0eil4iPUZ6s/TD6H/h4fBy6zP3
EvE87OXhmfFCeBi8DB6P3gieDe+GZqf3yfqlN3N4eH8SD7W7qF94q6bJvbhT
wvtdeB68JpoaL4Snw9vhAemN4qnx1nha9g7xyHhlciS5Eo+MV8YD4LXxVHhr
chK5iR7Sfjo/NNxboqel0+yQcK/rg6K+Li7yP5p+eaHHye1oULTogeFeBz1A
enknh3uD9ATYC8Xz0SugJ8DeKXue9ArwJAsL/U7tpAfBXs7coj7gyfHm7Omx
90lPTZgdHO610bPaV3xQuJe1OVmvzolivy25N9oo3IukBqD1NoRrA3t0+4sP
C+/doeF/mTmGieXf5d7Lo+fG/FDT1hfzR607PHc+o2dHvB2RO1/R0yM+D86d
H+kxko9+mzv+6CEyv7/PHa/07Mhnf8gd3/QMyWcniatm9qTk+6Ny5/+2JeeD
83PXazwQeuXI3PkTTUM++GPu/EAPlPxPjUbLj8tcuw/MXT/omVIvDsidb+hp
Uh+ooXgB5pTayp4583FSeC/9kNz5np4p+fvc3L0+PCv57szc+e//PXLxWeJG
mT0n+XNkEV/EB/qWnMBcMCfkitHJ93fS37taY2fo9Vdk9tzk79Nz10c8Nfn7
5Nz5FU9NPbuvyGfkL/QNfozPd7OuNdfYobnrEz1l8u1huesbPWLy4Z9y/1aA
HjP58rTc9RlPT304L3dvEM9M/kajpCJ/ol2q5F7brHH0IRoC77E+rC1Ozb2X
Sc+AentK7vpCz4F6yx4ne5WXh/c+yUHkovfDvXn2wN8oeQ+VvXFyNn97T9jL
di/ifUwRr/T02cvYHO71dyzuZ46YK/Y45vOsw3sfbXLfj+ZD+7XOrf3QcGi5
TuSgzN+Z735d7u+HhkPL1c0dK3wGPssVudceMUQs1c6tv9iTRL/Vya2/2ENF
X12ee++WPVP04fW54xcPh5drmTs3kaPwAuzxsh89Ibz3Sw7ltwPkXHJrK93/
VGbPh/drrGNYyWtsILkrt/6hp45eYc97acnvyV74Mbn1Ej109M6xufURPXb0
zvG59QM9JfTNcbmfHz189NKJufUHPST0zQm59Qc9KfQNa/yBktcoa589atbf
BeG969/krtfsMZD/OhTrgRgilljTM0vuObDW2+bWrmh4tHy73FoYTcv6ay9e
l1kjkw+PFp+SeY8CPXlBbn1NTwW/VDW3XqeHgr9izli/14TnkpxEbiIHoV1e
T96/nxf+fQK/WeC3C/wmYktyjifXrw2vJ3I8uX5heD9/e7L3WRT+PcBryetn
dvj3GhzbC/3BGDmf31rwmw5qAa/ZVdQT3oscw/p9LTxf5ATmZ1ux/vFUeK/F
Ya+FPuss7h7u1aNx+FvLw+uNGs5vjdCk1HY8Ed7s2XC88J35bcaMzHNBz4Hv
vjK8fuk5MLYqvB7Pzq0H6bmh/5kj+jFzw3OHBmL/BI2LNrqjqJdzivqIZ+K7
rwjHH55jW6G/qPd9inqKHkQf4IE2F/UVb0SNJ55eCq+Xc/R5WmTu+eE/8DT8
toJnitfB8/DbDD4jXuh/gLVGXg==
          "]], Polygon3DBox[CompressedData["
1:eJwt1gW0lNUaBuARGEXAolRQEAyU9CIhLd3dDYeOQ3endIN0d3d3CgKClEgZ
xBXRe+1l3uuz18xa51vrfM+8e/6Y/997Z0noWqtLkkgkclFFVe4nI5EK/umQ
LBLJp++ePBIpzIazZSyRrWMV2HS2nQ1h+1lLdoR9yTawhywnK8fasbysK8vF
yrP27B3WjaVjWVhllpJVZM+zV1l19hSrzBJ8mIs1ZW+wOqyB3Hp2jn3ALrP6
bB07y2axS6weW8s+YjPZJ6wuW8POsBnhPrA6bDU7zaazC+yw434ejd2kx9SP
qSKR1+QK+L++XFYfNZfLwN5ghVlqVp2lZ1lZVWZYpBIrwkaw5awLW88KsWFs
KevM1rJibBRbybqxjewt9h5ryXKw9iw7K8kSWE7WgZVn09g2NpjtY+XYVLaV
DWJ72QLXtoJdYZdVPyfZgRVnXfQF5drIvWlsCdaCZWft2A65i+wH9qP6t7F5
5KqzbvrCcn3lirKRbAXryjaw1sbmY61ZbtaUvSH3LmvIXmMtWaJcRdaRdVJL
HKOF3GH2hX693NdybeTyszYsD2vCyspNYVvYQLYnfB97xJKrS6yLvrgao18j
14NtlsvBSrFWLBfryLKxQqwRe50lsBJsLFvLerItrDZbxo6zyewsq8mWsKNs
IjvDKrM5bC8byY6wd9lQtiRcL1vNFru2DewWW8WusvXsOPuJHWDfsIbGbmYX
2Xx2nTViW9gnbAH7jDUzNhMrx8qqt93Tdewo+0p/V91m89hCdl4/29hTxm5g
J9jP7CB7xDayk+wXdoh9y5ayTewOW8OusRbsdVaXZWbV2DZ2nv3NPmS/sEVs
FbvGFrPzrKDr6MqmskZsNlsmtz0aO99w3sOd80K2kl3VL5I7J7eC7WT32SZ2
iy1hG9lttppdYZvYKfYrO8y+C/May8masMaqSKrYcbdFY+9LeG+usuYsM6ug
f97Ycsa+4JxfYzXZ06wKS80yshLscVaGVWcL2EE2hp1g7X1fMZbICrDWrIbc
YnaETWCnWRU2l+1jo9hRVo3NZwfY++w4q8Rmsz1sBDvMqrJ5bD8bzY6xWmwp
O8YmsY9YW+dSJBp7/8J7WDZVbN5Yzk7oT6oLbAs7y/4MZuyPxrZjRVlnlp+1
Yq1YbtaMZWN12duOW4N1D/eY9WOb5T5if7AT7Ce2lZ1jf7FT7Gc2ny1iH7M5
7GTy2PN8LBqbl8L8NNb5bWcfs//pT8v9KpfFcf/FarCXWENWmk1kG1lftoNN
N3YgW896sWVsL7vGHlcX2N9sD7uqj4bzYX+Fucn3XdB/b+x+9lt8XqvEBrD+
qqrzm80ms0PhfOV2y3VhldlAVob1YL1YHTaKVWODWFbHyMtqsZdZI9ZDrhYb
waqwgfHfsnA09iyHZ3qu4/ZktdnIcB5yA+R2syssWXj/2Z+sIyut7ylXjHVm
nVgZ1osVZ53YCNaBzWUJbCobztqzOWEuUfUddxe7zJKG9VvuD7mRrKN+nkwr
No31YQ3ZuHBfVG1j27ne6+x3/XG5iH6n3CWWJKz96HdjP2Dv63fJ7VQtjO3K
qrBB4VmW6xlfyz6Jr+9hnZ8k15vV9f9ouep4sFxnVpb1ZiVYIuvGqrLBrBzr
xbqzamwIK896s33sBksR1lv2mHNOo17Sl5R7gpWVe45lYMWSxfZlpeP3r100
dv3hPuxwfrPYELYp/pyulJvM+kRj9zjc66NyU1i/+PrWXW6x3DQ2gK2Lr1tL
WWbHzcOqsAysPpso1yu+doe9ygKWSS47K8XSs9psqlz/+DoY1tAlbAYbxDaw
3mw5G8U6sfmsNZvOJrHe8X1O2B8sZHPYzGjsNwu/3VnXMZ71iMb2omGPNE9u
HOseje2bwno5h41l3eJraEc2l01gPaOxPVfYx85nL7qOTGEfyR76rEPYc6p3
ojELnzWWe5a9yIowf5FS8fvcl60Oa7JqmCr2rI2OxvrgZ9hMNjg+l/QxdoWx
r/i+t1k1lpE1iD/jDaKxuSDMCWuNLSM3Kf779pPbKfe+XCJbyNqymfH1/GVW
OswRapqxeY2tx/rqS8kNlVstd4B9G+4pu8syymVjRVkaVoO9w+qzfqw0G8bW
GHuQfcd2s/ussdxWdoktZDfYEbkv2XPqBnsizK+qpr6HXFHWX2653A52j21k
N+P77C/Ys+qZsNa7jqPsK/+nVjflkj8ZezZmRWPrTlh/EuXWskPsP/o9cg98
3yq2nz0K7z67x0oZPyH+TIbfYzsrycbH5/bwnG5j77Fx8fcjzPdbWUU2g+1g
Q9kBlp+1YMNZZTaWrXTcXewB28xuswJybdkYVotNYflYczaMVWJj2OusIGvA
XmUtWFr2CqvIUrAKLIF9yL5m29h/43uVHNHYni7s7WaGfYncvnDv9CvlvpI7
JHeHPa2uh+lOppnaG34zuRXsS7mBcs3Y5DBfs9FsP7vJUqqrLIlxg1mCfnpY
U9g4uQGsaZhHWT02ivVljdj4MIez4awfa8wmsDpsBOvPmrCJrC4bycawLmwR
a8dmsUGsJZvGGrPxbBhrw2ax5mwSG8JasRmsKZvAhrLWbCZrxiay0awzW8Da
sBnsALvFUqlrLKnrfVm9pX9PLh2rFfY07DR7yLaz71kTtjvcY7aMfc6asj3s
M7acfcFaszPsmzCvsx/YMce9y9KoW2F5kznB7uvTqTssZVg71Jv64samZTXD
Gs8+Zb+xY+z/7KCxt9lT6lOWTOYZ9YK+kFxSVlJurtwH7BSbwg6y4+weS6tu
sxTGnWQP9OnV5ywV+wf0biQS
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
xHcWPkvuHudTc6nnan0OSr1Gis/Lj9yl4rX+FbxVxfIhOdFvyk/JdjYse5//
mNhf0F6XbMgG6azxfWz/Ts9J7A8uieuoffR7Yj+5adl7fVEcz7TU66o11Rlc
45QMDKStlNpW6T/6r3IDKzXHUafNhm8Q9+/dhf2xHfnvHNo2jHqmpuwzcwGf
mVoXyCZ1Qw8okXeH/Dt4derchNaqeVyv5ZLPqMeGcN9V8P7wBhX7rAPh/aBm
kj34XvS9KLUPMpLrceAd4FtpnCWPo7v0YWqfoG7ZMfp6Zcv1F3EeipJ1rvTe
6fBl0E9am7L3rfZsf3hWsm/bl/Y6Jc+xdP/nUf7/TqyzpK8Cvy9LfKbSnlue
eN/pHjXxPtL3X0a5ks74OrXekJ5bmFrXyT4sSW0jdBaVvD+WeX/Pi3Zh14r9
q1bwYdHvlf8rXS+dLx/4d91P76y1gH8C3QeuSL+mtv+HwD9OrZcl4wuibA+M
87+n9A/9SyXLrvTiisS6Ueu/JsqAZGRVlJMBFcus5LwTbeU4z03he6T2Ecvc
p7rks8EOtBVxPNIZ66PekH1bHmVjBPdal3ofVVLbUc3PcK7Xpt7LfZQ3Lnlv
bMP1WN2jYvu8MsrzphX7Kj0qfqbmQs8dlnpMGs/OqddS67g5/N/E/qHeQ3Kj
d6kLz0uO+/SNOnxveCP6jIJ+S2yXkmib+qa2T7JN+v2c2KcJv9cv2R4dnnrN
tF7yG+Q//Hd2y51n2ZN9NDZ37HoPxTtz52L20pkyd9x4EHhc7rjxvuBbc8fD
FQO+LXfccqhi77ljj/uBrwF3Au8Dvil3fHKIzkS5Y5j7g2/MHdscrD6p50Vz
cnXu3O7ehedUc6v9KBlpFW2o7G2T+I6ygY2jHdS8to730XlR9xXWvmkZbZZs
b/OS7a9kp17J8nNz6vXWWu/B8z5MbLu1/1rEtZPNbxp9gO3BP6f2hS/PnXfe
nTGfkTuevw14V36/LPWaiteN63tu7lx2/8L2//zUPoBsyw/Rvpwo3Zb6TCyd
+lPUq7JXv0SbNTp3frwf99mgbD3eCJ7w+3ep4xKS/W+i/F+aOw++a+F8jPIy
O4EvyZ2jHwg+PXceYWvw2blzAduDz8yds9gWPKPGsdiz0SGn5c5ZbKWzWOq9
rX09XvIZ9dvFufP+u9DnvNy5/h0VK8pdA7Az+LLcOe7dwKNy5+53KGznZeNl
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

          "]], Polygon3DBox[CompressedData["
1:eJwtm3XcFcUXxt+9yzv7vrP3AqJ0SIcJghJioYItYiMY2IoKCgbqT7G7u7sD
C8EGFZVQFLBAARWDELCR+j1fn/1jPnfOzOzs7uzMOed5zrlthp026NRSVVXV
9LSqqo5+59RWVY1IqqpaZVVVXSpVVbMlnya5peTOkl9R+Z/q56utebmq6lP1
D1e9mdo6qO8llbNVX6y2XaLG1FRV9dDcx6tsoPpa3exPlXkq41U+0vjfNP5y
1VtqvmmS/5F8m+S2un6W5j9Vc7VQWyf1faDSQPOMUX+eV1VNkfyN+o6QHCTP
1PiTNb6p2tozt+SLJG8qeWvJv2jOXiXfk3s3lTxB/ftI7if5Y40/UXIjye0k
v8caqL6nrmmk59tT8sOhqupdjemma5eo7yXVj1f/UtU/0/WnsDaqd9TYi/V7
nuQnWWQ99yXF2v2tcqnq/2r8lap3V30b7q9So3HvafxKzT9D/Seov6H626pv
muTjJG8oubXkjhrzvuSDJA+Q/JT6+0v+Xc8YJX+i0kbzddH6N9f6zJCcSH5G
87eXfLjaP1W5UvIXKptqvoUlrzFrvUbz3aj5ttH8PSVPl3y85I0kt5HcQePf
k3yg5P7sDc11Q+q5pqvckPn9uB/3vUnyVZITyTervk7z3SS5p+q9dP2J+h2p
vhEqP6keNP8D6t9e9d6sjeQHJe8guY/kWSqbad6ndM9+ep+m2sRLVT9M11+g
cSNVX6GySPL3Kk9rXdrpd5H6hrDHNd9rqg9W/VnN1UNzfa/x/2M/qv4u31f1
LdS2Cd9P158u+QPJHSVfpP4LSj4/nSWfIflzzddBbRN5F5WBqu/KGNWfU5mU
eH+zzzfU/cepXtK12+v+zSU/rf791Pe05IWSu5e8B9mLzPc966G2Oaq/q/5b
VP9b9R3U31nyB+o/RPLukkdpfddr672p595f8i36ra/x9VR2Z89pzQ5Q/T7V
31f/rcHnYwOVPdQ2RtdXa7731H6o+p9XeUH1T9XWVfc6V/WrE3+znzV+y+j3
O5J31din9fsO+kT9L6l+v9qu5XyrraSxzVSeUn2g2p5S3/m6X1PJUzTvGp23
Zvqey7S2h+v6a9T+o/oXqVyrsdcVZbjGnlP0oZuWq/41Z5K1Uumra9/UHFtq
jR/V/b5S33FqH6dr70Rf6for1LZK1z+o/p9Vn6C2F5lf49ZK/lZlOOvNntPv
Hqw5788+UNlP8nLWUW0/auzpGvOCxl6u338k/6Axm+v+qd5nueo7a+wPKvU1
/jn178ZzavyT+m3IWmrMFhr/q+TNJL+tUi15PftGZb7KBM6U5jsp9Zl9U+UQ
fc+FkheovrXqo3X9F5q/o+TX2FO63x+St1b9Vd1vjH6XSl6mcq7qj0evH+uI
ru+g+cdovrOLe+6oOf/Wbxc9y2fqj1qnTUrW92fpmsd0/a+qn6f6y+p/QvIK
yRdIHi/5Wa3xbpL/1HXlYr+NS6z/0cnPqX93yX+pvaL+CyTnkj+UPIT9qzGp
xm6lcqnaLlN/A/XPVH1YsX+i5A8kHyZ5rOSK5KmSD5d8oeSy5I8kD5V8n+RN
JP8keaTka/R7q+Y+TqWf7nWR+uuqf5raj1D/FZI3kvyZ5GMkXy+5ueQvJZ8g
+QbJLSR/JflEyTdKbsl+lHyS5KskN5I8W/Jxkk/RPUbrXhWVB1Wv1Xo9pP4d
Vd9W/RtrvR9X33rOkeQF+j1K8jCVhehWzddQ42dpvmPVv1GN9dzuKjOxq+rf
UP2fqv/oivfKapWlJe+Z69TfTP1fqP949b9d8T5hv2yjZ7lY/fXUP139RxbP
Oz+xDlzMmVX7PaqfpHKY5Ac1fnP1L1b7KI1/TPJWkldIPrPQ7/P4/on1Bfr0
rsRrwHx3aHx7yd+p/TTsj9oeUt8olV84G3r2Valty4kqt2l8W41foPGnoFv0
u43ad1PZGX2j/k25F3pb/dXaz//o+gbqX6LyuvoPUn+qsRup/3HJ3SWv1Piz
JD8geTPJv0g+g37GlfwN5qv+Ou+IHpf8idbrJo1vpfFzNf5k9W2u7zdZfa31
XeZwHtTfQ/2/qf9syW/QVsy5ka6/Xf3t1L9Q/aeqbx9d/7P6mur62ZL76Le3
nv8d/B3VL+a7lOz/bKd57tT1HXT992ofofHPSB4g+Q/JOfeTfLDkOqyl5Hf0
21XXDlL5XPVleobtVL9f4yepv320r3OA+nat2N85S/3bqryHzVB5O7GNwx49
rPm3l7xU1weNf1Hy3pJXS64rOdUz76CxX6P7VN9JbQ/puic0ponu9ZLG76P6
Go2vp75HJO+AfpKcSX5U8o6Sf5VcI3mCylxdv7nmm6vrO6lMUf/BatsNfaC1
ul7lc/VPVZmMT5R5f/wV7YPhiw3lmTK/M+/OO20s+zNV9ztW9Qbq27jYzztJ
Xq4xtZKHau6ZKpeWfA/0SW9skfqr1d9O++2c1PsXn/dQ1Weo3K/6sehorcFf
qZ8tV32S7nN3Yn8Tmz9Z8w2VnKveFH9U8hGSK5KbS54keYjkKLmJ5J6a41TN
952ub6X6FPUfpf566m9Z8Te8Xc/2SuJv+6H6j1F9A/W3Ut/LkveVvBY/AX9f
8kDJ6yRvIPktyYdKDhrfWPJEyQdiyzkD6I6K9Rj6bIrmH6/+/dS/Xtc3UN+b
kg+RXK0xjSSfmdnedtH4N1SfiA+cWb8v0PX3q/yUWCehm+7UPOMl11X/3thj
zXe45LLqzdTfEp9CfeMk7yx5efR+m1XYbs4R5+li/Gu1navrg65/X/MOVv/7
ko9kfvW1qNh+cv/O6IpiTuZuyn7Hl1Bpr/qrantLfSsyz82Zukhzttf97tP3
mJZYP9aUrT9ZI9aKM9JO47ZMfHY4I1sFnyHOTtD+aanrZ3MPlY3xCSTfrfKt
5piqUlL7s5LbqW9P6YvGdezz4/t/lxmbLFB/W7Xtqv6TJX+ssqXqg1S6q6+Z
+mZq/Ka5/QhsA1iANftMc1yXeC175PZl8ad75j5PPEM/yW31bhdGj91C8u+q
/665X1GZIvlHzoDqr6u8r/pBKmt1zfpq7S3wkN53Oz1HZz3/RPU1Vn13jX1b
5QTJ00re2zen9p3Y41vpGT7V71i1Hax6PV27F/2abwY6UfVrU1/7rspq3W+t
7lfCX9H91uoZ9y8Zc4G9uum3UeprsZHzMvueH6jUort0jxvV31332UL1BJur
79Va892CrdOYI9QPqP4RnaH5nwcfYcNVb6vrxqee7yf2ieRNJT+q+lvYAM15
HWupspPqc9S3v8qd7Bm1vaz6Y6ntbeuSMcHJus83ibHCpNQ+Kb4oa/BxtK3b
pbh/Xz3fceydkvH4X5nxAz4Pvs/oaNwEfkpy+8zjUtva7wuMsGGN1x7sMC0a
T+yrco/qraP9uSuYPze23CO1TwvGfCE1BwD2B+POlbxLah/95ZIx1hOS+5SM
vfbKPRc2dO/c+w/f9g3Gqv6hxuyo+mv4IJkx83vF/F3U31DyI4kxzjrVD2Q+
9qTk7qp3Un0zled5f/ak2vaW/AnfRvWtVB+Iji8ZU6zR736p9xx+y1f48ipb
lzwHGBusPUtlN9V7q6xPrHP6qH6W2m9N7Xss5n7sTb5ZyZiUb/6v6p1T7wXW
sAP7I/Xa4nP/ju4t2Re/U+1Hq8wteR0OUNuA1Drh1eJ7cG17lfq517C19tyI
1GsLVj499dnkm++b+11556G53+cByeVCnzAntg6bx71mFzq1nuRD+d6Sf8is
Y9A1fVXe0Hs15yzC12hci9T+4+slz8nc3BPd1VZ9D6fGaBeqbYDafkm9BqwF
ff1VPip5zF2qH6vyTck6CAy+j+TfEmPzVnrX4ZLHluwztVH9odRrfZ7kF1Nj
ezD+i4kx/Zri2+Kb8vzLsBUq2+fGomekPrvohffxp/V7beIzv7HkB1LPdU6x
nhem1sm8H77nDql1H+cS/3Db1N+Eb9Nf5TK1d5R8mOoXqO86lTkl78msxmeh
t0qTGuvWXqnxIToWzmtgsE8AF3ZIam4CjoI5VqreL7XuOLjY4zz76mLv16/j
Pc9eH17YiLLaJqf+nl3K9t/hZrAXJfU9or47WC+Nfzz1N+TbodPu1H6pknwg
eiC3zkR3Midzv6X2uql9IXQ+exQsiA5h79bmxp5g0MGqt9B1ldT454XEtpVv
yrfExj7Ns6S2+ewBfKKdgn1QfCX86TPVP5p1U72J5tsktW79rGTds31qW4EO
4oxwVtiD7EVsUYPUNhWbBFfUNPVawRktUr15av6KPcezDEvt7/JMA3NjAb5j
Z63lT3rHnug2lds43ypNSuaG4ELhCnZKbfvhDPCJ8I0uUnlW9Vv1Tl3hJ/SO
JY3vlNu3/LLQb3xf9g3fv4K+rPhcsDbzdP10+Bx8HfUvjfYXB6mvPti3Yg5w
mepvJvYHvscHKHmPToq2efgu3wTbwkXR+OvSQv/Az8Lzwfe1K5tfHazxjfGT
wCfR/jc6phnnO5qPgJe4FPwfzftw1qpz+wjY2o+DfYf//JXEe2Qz1cepv6/k
Veo/t2I+oY/kv+GIKuYL2kj+RPI6XV8v91qiz/ElOufmenYq7MeZuv+FideU
tWXN8G2WZ15LMB/YDw4PLg8fD9vcJLXvd5rkBYn9t4rk+RrTjW+n8ko0B/1o
Zl0AN/28nm9bjf9HzzcGLAKPkljfPwOXozEtOVe8L1woHIraV2nMc3AHkq+W
fC8YD9uHzwwuAyNgCyTfk9km5tE+IzoU3Ykf9zj4QL9P4lPDvcJhSL4djAw+
jX4fMCvYFR8K3+2dYN+KPd2XM1nHe/2+YN2Pvzwocxt92xZ4+Bnwn8ZM1hzt
NPdZBRe3RuWazJgILmaD1FgJe7NNjc8wZxmdhG7qUFPYnmhbjE8DNwqegj+t
5nxlXjPW7i6VxrkxQLvU9gs7NrVinhK+ckP1jw3mKmsk363293R9WfWbVRqp
/rbatlR9tcZcBQbIvD/4Hldk9r/w/XoV3/cPlQElYxywzoXwTeApdIXaFkfr
ndvZk6rfUWA17rlXZjzVT3KV6ufjr+bWW+ivWzS+TbTtubZ4/jcrxujwxb+q
7y9df6b6t1Tbber7R/LZkrvBvUj+W/JZkrvyzSXfK7mX5EV6jjoVxyvGSO6h
/rskn5D57HKGL1N9RHT/KRp/vfrP0Ph1etw3JA+qOB5zhvo309ibJf8peTR4
QfKtkv+QPEry5vilFe/3txJzEnATd6u/p+QfNF9asc5Cd+EzN9T7vpSaI4Ub
BWN8K/mq1P4hPtKbGp/pdx/WW/WuNfZJ8RlbqD5R9edS7zn20YpoPM43+1P1
lcRDVB+iUtL95mvs1al9mf98kNz8/IjMsQm42GtS+6v4rfALL2Y+w7wPeKl/
YRvAV/jk+OaPJo6d3a227xJjWrDt27r/nuxHzXFhxfzT1cHnu1XZGPTx4BgA
2PQaje+s+hy1rVd/69yxqKdU2uTml7FbT7A2mb8nth9/DL/sj8x7Cf8If3yi
5qxTss5B98AfdtH4zzV/leQsN9cBZ3erxo4q+ODHeP7chTqcZivV6+iZ1iWO
Dc0o+IU9JGea/wL8Tck7089zSm6bm+t5GnsC/tL8l6l/W/Xfp/4q/FPJfdCB
FXOmvBfvB5dKvOli9feCZ6n4jPB+T2U++2Mz+5X4r4tY48zPyjOvU329rr9E
/b1Vv6fid+Rd10p+THJF8j3q7889K+Zzb8aeoIMrtgcPl8z3oUPB5wsTc2rE
D+tG6+4B6OBif4ON/s1sq8FgYLG70TmqT1GZmzgeAceBPgbbTtL3OEjjR0pe
o2V5TfLAijmdHsEcGlwPHOC2wZw83CCcW/dgzg0u7h3dP5aM+cB+X2XGUtiP
yQWH0zeYs4fbgRPaLvgb8i3hVPsEc5BwrWuisSKYGGwMJ7RNsE5Dt/0b7Qs9
Lvm3aM5p62DODS4Kjql3cIwT7umLzNwlGOujzBznpsE6C+6TGOgmwTqD2Cgx
h82COTpiEZtIPjiYA/tC8ufwxSX7II9Ex4D3DvZZ8F2Iwe4VzIERm4WD2yWY
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
          "]], Polygon3DBox[CompressedData["
1:eJwt2Hm8TtUex/HnOJzneJxjHgslUwkZEyoKUUpmKpEhDYoGaaCrGRVRvW6p
JA3XVbpKShkiUcgUSkSDqaKBzPN9/167P76vZ/8+6/tbe+21117DU6XfkM6D
C6RSqWNUiNYWSaX+yEmlGtLFWanUG4VTqRJ5qVTfdCr1OvYGtc9PpTbyHXN9
CbWkEdgonunZqdREaqnSL8UrMqnUFPU8yfOmeKV4vdy/xI0jV9lb7pHJ5Zfz
kdxmlCP+mb8fli9+hcpjZbRlIP4w7ZW7R+4W9Z1SVxvqiH2INXWfT8R7PNRx
z3UnNhkbKm8avozvNfHXcn8XN6D6dI/n2IAdcN2c2vJNl/s9dkLcijpgH2Cb
sOPiS+kqbCa2GTspbk1XY7OwpdhK8UltOUUnPMM32D6sabSb7x2+FH6u9t2J
PYztw9bx/SluRC2wN7Fvsf3iZnQZ9ja2zLO85npMvCN1LBf/xVfBdR+sNz3m
2ergq/h64zPpDPfcKv9nOspfDXuKr6C+nqPvF+v302gnPg4fS8f5aoqfcb1d
3jY6hlXHnsb2u67seoB7DnGv9cp/wApg7bCu2BxsH1YJ648NxtZhv4mHum/p
gp7ZfU/XjjXa/Da+n5op2yXeJjcj7hj9HP3lvquw7a5r0fnqe0V9e7HT+fpi
t2FfYyuwLeKqdFZwuSuxH1xXo/P4nudbg+0U16YLsElYce3ZpA1btG0MlRP/
EGOQDvOf5V5j1PedeAMdxM7ERmGbxBvpAHYG9gRWTv/PU19jddVW1zqskN8F
WCV9MAivJN4cY5AOya0idzTfT+If6QhWFXsSy+XtIneTvNlUUfyj8mzll3uO
bp7jEzm7oq/ppLJzlE2Q+7d+naq8lXg1naVtv/L8Qif4zsbG8z2qnol8p2vf
n+5xhnusl/su9pyyGXzfiLfLKeK6E9ZL2WdxT6wE1gPrjy3DikV+PK+6NlBR
8e98pfmu5RvI9xXfamyH+Fxqgr2MleLNyC2sLUPkVhZPk5fjehdti7GE7ZJb
Eu8pd4DcpXL/xirGHIPdjq3F/sDKYNdhN2ErsPL64S7sE6oe78qz7eYrJb6G
70a+5f+Mq83iUlSasvTVn1hZvl7im/lW8i3HvhGfTjWxsdhX2LfiinQ29jS2
FcuReyXWE5uP3ZFJvr36+cl7iffzBd8CnuMxt9Ax7d2B5fF1xq+Xu4hvJ5aP
dYn5APscu1jfDNVPc2ipZysj/omvIN8VfN355sb8gBXC2mM9sHnYHuw07AZs
ELYm5iFstbgMnYk9jhXRni58/8ZeiPku2s5XFOsq7sO3OJ4FK4Z1w27AlmC/
0246payWsmflTtQHPyvfGmNUe2up/wVssPglSnuO+eL7qI74ppjX+Q+opwrv
bOzjGKNYI577qa74Zr5h2EG+NtiX4r36swg2Ersy1gusULxfbDR2BbZCfIyv
OPYY1h5bg2XHWMBGYZdjX4mP8BXDHsUuxOZhB2NdMP0PjfeBfYodxbL4hmFX
YWuxdPRrzPFYC+wzcSrug92HNcfmivfLPanobqwltggrQAX57scuxRaLc0LY
cOwibL74cGwCsHuwS7DPIy+eGXsAuwxbKt7Hl4c9hN2L1dZ/A/Gh2H6sLbZM
fIAvH3sYuwE7hNWNtRWbge3HVqaTvULsGQ6Ib6S0+OLYa/At4OuLHY65mS7E
3sN6Y3vje4n1EfsvNiSTrEP1jJMdMeapH3aEpx5dxPc+dnsmmTPr5idrX6yB
t2SSeblWfjJ3xxx+M1YO6yD3OrmrsXbYcvEhz1YUewTrgK3DClPZ2O9gZxpr
s+R+mE7W3Fh7r6c98d3HHgubyncTVpynLdYF+xK7OvZJ4iJUDnsKuy2TrC91
8pN5P+b/OzPJvNwgP5nPY16Pbyy+tcl4EX3a3u9dmWSeb5iffE/xXfWMdZTv
NKrhHi9ht2aS9erc/GS9iXWnK/Y9T0k6I+Z4bDzPSdfP+L0Pvz+eyfOeEj9E
e5RtindG52nDAmwtHcok89XCnGQvFHuibrHmYb35NvN8TwVjP6G+Q64P0n/U
Vza+SfwLuXlUHvuXttTgO8FznN6K8cI3LZPsD3dg26kazwSsU8whcqcrqyh+
lq7FJmFzsVri8dQx1kTsnVjnMsk6fUfsZ6mNdtaK+Sv2seJPaSxfvnhQJlmf
a+cne4LYGzyH3YBNUd8ivnriPvS3+BxqjE3j64JtEpegytizkY/Vc7+F0R76
INpLv8a7iL1J7GP51sb6q3wxNeffLe5Fu3iqxDfH9zpfaay08qnRp1TZc12D
/RL3jLWVbzJfXuyb+F7F/ohxJL47k8zBjTzbHzx/0nXYbzHXUx25U7Ae2FZx
BaqOTcS6x5wd7yz2WNiLWGdso7g4VcImxHeINXLfRe7zSvSteCedj43lew1b
Ii6vPUddH6OXlVUQd8Q38BSNtTXGpvo6Yd+Ji8Xaio2PdQZrImcc9rr8peJu
9FN8a7Ev5HuB741YG5R3x/rF3lvc0HqzzFq5Tv7GAsleZQCexXcBX2u+j+U+
jjXHhmGjsALix6gZdg/2BJYlLqj/L8QeyUnec7zvMfRqrBvYU8reE3+USfZc
F4m3UNW85Ax2NCc5t8T5paj3Mi+TrH+xDk6kuTG3xL5em0vFnkhZc/FM/IT6
xsXYpffFw+hD5fX5plGr2PO5Tzo3OXvFGawTlkvD+CaLD/ltKc7ia6Ce22Iv
Redry5pY57E7eEran3Xmu5Tejj0j3Y9Pcs+xsb+PdxP7A/454kepaZwFsMeV
pWLcRnvknUez5NYQP4JfwHc332N8p2JtxFcpX0YjeHuJR/NNUv4E3xj+/8W4
wA/GekLtlL0rt6Tn6B/fGbYWqx/vjOaI/479labcFecAvj58M/DVfHVjXhe/
GOPEPavSXnEuX+t0MtZizP3yz9mlcDo5N8f5ubx+KhznSzk9aD5f7dgLxV4q
2k+r6PIiyVm8n9yZ8t6nGXKb4r/JKaiPD/C1LpKca3fnJOebOOfk8JWWe2Os
R+L12tlQW0Z4lrTre2Mepwp5SX7UMyM7OUvM4lsYY1L5xnTyfW4Tl+IdIJ6l
vnXqaIBdIbdb7CWzkzHyUuyZ3Lu68dMGG5mVzMUxBmMslsXfUkcl7MH49l0P
Vt9wvmPaNg67LJ28t3h/RTPJfrJrOvkvIv6TmB79h7VLJ+ePOIeU4MvDumFv
Yp/HfbF8rHusE9hirHomOc/WSCdn5Dgrx956USZZO6fj+6hkvJ8YM66X0ams
pF/ibL8qJ9nvx76/r9wn8Ut4Roqf58uIH4h1ELsFuxc75NmGx9yO3Yrdhx3G
RmD1sUGxpmJHsP5YCmuCtcJmYxe47z368/ns5N03i/OwZ+sQe2C+2Xzl49ug
j8XD0sl/PEPkDsRyxS3wK/kWYoMzydn/vPzkPB/n+vj/oHw6OV/HObuasrR7
tEwn/+fE/zq58X7iPw/taJednMU+w9ph68RX09N8p8V6KbdHrDtyl2A1+HKw
Funkf4v4/yIn5uY456lnj9xbqLH4kjhbY8NpSozL+D7k9pQ7Ve4XcmvKXauN
5xhTNeO+BZL3Ft9NfD+d6XB853z/osZyU3Fe5DuT5xmsbTqZd2P+LZZJ5rWG
6WR/E/ucibFXwS7GRsceiy8d+8tMsn9dGu+OyvK0wpbw5OYk31h8awXw85WP
wMZjJ7CK2MjYT0XfqOMvLBtrIn6QbwLfcez/PZqIzw==
          "]], 
         Polygon3DBox[{{3113, 2074, 2091, 852, 722, 2865}, {2542, 2541, 3098, 
          1916, 1917, 3099}}]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skuJVEcwOFjnudhqdMP0PbCDUIiYgp2xKZ3RNqWWFoQD0A8APEAxAO4
8QC45nmIGBO627DzHZHUr75TVcnJvyr18/dY35+0EMKUXhXXL7pUU24Ipezm
Dw6xlqNMcJKdnOUgFzjCZU5wjTPc4DxTXOIVV/mXybhfXgg3fNeW/ulBeVkh
bDOfKRZwh4XcZRH3WMx9lrBUB9ZlPGQ5j1jBY1byhFU8ZTXP+Mhbfuhc/+O9
uLfZNkMcJoR1PJt5hRdcjPNyjklOc5XjXOIw5znAGXZwgg0c4S8OsiZe2/+a
b/E94rfRvfozzcBeFrGHhexiATuYz/bMrxFDG20ZWtmiHOtmZrORXjMk6Aj1
ThmsYzqfPLz7/g8+AVOsQpY=
       "]]}, 
     {GrayLevel[0], 
      Line3DBox[{655, 250, 637, 489, 2416, 265, 2430, 280, 2445, 295, 2460, 
       310, 2475, 325, 2490, 340, 2505, 355, 2521, 2522, 370, 2547, 385, 2557,
        400, 2567, 415, 2577, 429, 2590, 444, 2878, 753, 545, 611, 925}], 
      Line3DBox[{1520, 251, 1980, 553, 655}], Line3DBox[{1522, 252, 1520}], 
      Line3DBox[{1524, 253, 1522}], Line3DBox[{1526, 254, 1524}], 
      Line3DBox[{1528, 255, 1526}], Line3DBox[{1530, 256, 1528}], 
      Line3DBox[{1532, 257, 1530}], Line3DBox[{1536, 258, 1533, 1532}], 
      Line3DBox[{1538, 259, 1536}], Line3DBox[{1540, 260, 1538}], 
      Line3DBox[{1542, 261, 1540}], Line3DBox[{1544, 262, 1542}], 
      Line3DBox[{1546, 263, 1544}], Line3DBox[{656, 264, 651, 554, 1546}], 
      Line3DBox[{2443, 279, 2722, 491, 656}], Line3DBox[{2458, 294, 2443}], 
      Line3DBox[{2473, 309, 2458}], Line3DBox[{2488, 324, 2473}], 
      Line3DBox[{2503, 339, 2488}], Line3DBox[{2518, 354, 2503}], 
      Line3DBox[{2545, 369, 555, 2518}], Line3DBox[{658, 384, 2883, 937}], 
      Line3DBox[{2565, 399, 2735, 506, 658}], Line3DBox[{2575, 414, 2565}], 
      Line3DBox[{2588, 428, 2575}], Line3DBox[{2602, 443, 2588}], 
      Line3DBox[{1706, 459, 547, 1707, 460, 1708, 461, 1709, 462, 1710, 463, 
       1711, 464, 1712, 465, 1713, 1714, 466, 1715, 467, 1716, 468, 1717, 469,
        1718, 470, 1719, 471, 1979, 552, 669, 472, 650, 551, 2615, 457, 
       2602}], Line3DBox[{702, 499, 657, 2545}], 
      Line3DBox[{599, 544, 668, 1706}], Line3DBox[{599, 779}], 
      Line3DBox[{702, 822}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{2112, 2408, 1303, 2111, 3115, 2319, 2113, 3116, 2320, 2114, 
       3117, 2321, 2115, 3118, 2322, 2116, 3119, 2323, 2117, 3120, 2910, 3217,
        2118, 2911, 3218, 2119, 3121, 2324, 2120, 3122, 2325, 2121, 3123, 
       2326, 2122, 3124, 2327, 2123, 3125, 2328, 2124, 3321, 2409, 2329, 
       2410}], Line3DBox[{2126, 2912, 3219, 2125, 3126, 2330, 2127, 3127, 
       2331, 2128, 3128, 2332, 2129, 3129, 2333, 2130, 3130, 2334, 2131, 3131,
        2913, 3220, 2132, 2914, 3221, 2133, 2915, 3222, 2134, 3132, 2335, 
       2135, 3133, 2336, 2136, 3134, 2337, 2137, 3135, 2338, 2138, 3136, 2339,
        2139}], 
      Line3DBox[{2141, 2916, 3223, 2140, 2917, 3224, 2142, 3137, 2340, 2143, 
       3138, 2341, 2144, 3139, 2342, 2145, 3140, 2343, 2146, 3141, 2918, 3225,
        2147, 2919, 3226, 2148, 2920, 3227, 2149, 2921, 3228, 2150, 3142, 
       2344, 2151, 3143, 2345, 2152, 3144, 2346, 2153, 3145, 2347, 2154}], 
      Line3DBox[{2156, 2922, 3229, 2155, 2923, 3230, 2157, 2924, 3231, 2158, 
       3146, 2348, 2159, 3147, 2349, 2160, 3148, 2350, 2161, 3149, 2925, 3232,
        2162, 2926, 3233, 2163, 2927, 3234, 2164, 2928, 3235, 2165, 2929, 
       3236, 2166, 3150, 2351, 2167, 3151, 2352, 2168, 3152, 2353, 2169}], 
      Line3DBox[{2171, 2930, 3237, 2170, 2931, 3238, 2172, 2932, 3239, 2173, 
       2933, 3240, 2174, 3153, 2354, 2175, 3154, 2355, 2176, 3155, 2934, 3241,
        2177, 2935, 3242, 2178, 2936, 3243, 2179, 2937, 3244, 2180, 2938, 
       3245, 2181, 2939, 3246, 2182, 3156, 2356, 2183, 3157, 2357, 2184}], 
      Line3DBox[{2186, 2940, 3247, 2185, 2941, 3248, 2187, 2942, 3249, 2188, 
       2943, 3250, 2189, 2944, 3251, 2190, 3158, 2358, 2191, 3159, 2945, 3252,
        2192, 2946, 3253, 2193, 2947, 3254, 2194, 2948, 3255, 2195, 2949, 
       3256, 2196, 2950, 3257, 2197, 2951, 3258, 2198, 3160, 2359, 2199}], 
      Line3DBox[{106, 1184, 107, 1185, 108, 1186, 109, 1187, 110, 1188, 111, 
       1189, 112, 1190, 1191, 113, 1192, 114, 1193, 115, 1194, 116, 1195, 117,
        1196, 118, 1197, 119, 1198, 120}], 
      Line3DBox[{2201, 2952, 3259, 2200, 2953, 3260, 2202, 2954, 3261, 2203, 
       2955, 3262, 2204, 2956, 3263, 2205, 2957, 3264, 2206, 3161, 2958, 3265,
        2207, 2959, 3266, 2208, 2960, 3267, 2209, 2961, 3268, 2210, 2962, 
       3269, 2211, 2963, 3270, 2212, 2964, 3271, 2213, 2965, 3272, 2214}], 
      Line3DBox[{2216, 3162, 2360, 2215, 3163, 2361, 2217, 3164, 2362, 2218, 
       3165, 2363, 2219, 3166, 2364, 2220, 3167, 2365, 2221, 3168, 2966, 3273,
        2222, 3169, 2366, 2223, 3170, 2367, 2224, 3171, 2368, 2225, 3172, 
       2369, 2226, 3173, 2370, 2227, 3174, 2371, 2228, 3175, 2372, 2229}], 
      Line3DBox[{2231, 2967, 3274, 2230, 3176, 2373, 2232, 3177, 2374, 2233, 
       3178, 2375, 2234, 3179, 2376, 2235, 3180, 2377, 2236, 3181, 2968, 3275,
        2237, 2969, 3276, 2238, 3182, 2378, 2239, 3183, 2379, 2240, 3184, 
       2380, 2241, 3185, 2381, 2242, 3186, 2382, 2243, 3187, 2383, 2244}], 
      Line3DBox[{2246, 2970, 3277, 2245, 2971, 3278, 2247, 3188, 2384, 2248, 
       3189, 2385, 2249, 3190, 2386, 2250, 3191, 2387, 2251, 3192, 2972, 3279,
        2252, 2973, 3280, 2253, 2974, 3281, 2254, 3193, 2388, 2255, 3194, 
       2389, 2256, 3195, 2390, 2257, 3196, 2391, 2258, 3197, 2392, 2259}], 
      Line3DBox[{2261, 2975, 3282, 2260, 2976, 3283, 2262, 2977, 3284, 2263, 
       3198, 2393, 2264, 3199, 2394, 2265, 3200, 2395, 2266, 3201, 2978, 3285,
        2267, 2979, 3286, 2268, 2980, 3287, 2269, 2981, 3288, 2270, 3202, 
       2396, 2271, 3203, 2397, 2272, 3204, 2398, 2273, 3205, 2399, 2274}], 
      Line3DBox[{2276, 2982, 3289, 2275, 2983, 3290, 2277, 2984, 3291, 2278, 
       2985, 3292, 2279, 3206, 2400, 2280, 3207, 2401, 2281, 3208, 2986, 3293,
        2282, 2987, 3294, 2283, 2988, 3295, 2284, 2989, 3296, 2285, 2990, 
       3297, 2286, 3209, 2402, 2287, 3210, 2403, 2288, 3211, 2404, 2289}], 
      Line3DBox[{2291, 2991, 3298, 2290, 2992, 3299, 2292, 2993, 3300, 2293, 
       2994, 3301, 2294, 2995, 3302, 2295, 3212, 2405, 2296, 3213, 2996, 3303,
        2297, 2997, 3304, 2298, 2998, 3305, 2299, 2999, 3306, 2300, 3000, 
       3307, 2301, 3001, 3308, 2302, 3214, 2406, 2303, 3215, 2407, 2304}], 
      Line3DBox[{2318, 2414, 2413, 3322, 2317, 3320, 3013, 2316, 3319, 3012, 
       2315, 3318, 3011, 2314, 3317, 3010, 2313, 3316, 3009, 2312, 3315, 3008,
        2311, 3314, 3007, 3216, 2310, 3313, 3006, 2309, 3312, 3005, 2308, 
       3311, 3004, 2307, 3310, 3003, 2306, 3309, 3002, 2305, 1514, 2411, 
       2412}], Line3DBox[{2416, 2721, 3506, 2616, 2415, 3407, 2617, 2417, 
       3408, 2618, 2418, 3409, 2619, 2419, 3410, 2620, 2420, 3411, 2621, 2421,
        3412, 2622, 2422, 3413, 3014, 3323, 2423, 3414, 2623, 2424, 3415, 
       2624, 2425, 3416, 2625, 2426, 3417, 2626, 2427, 3418, 2627, 2428, 3097,
        3507, 2628, 2722}], 
      Line3DBox[{2430, 3015, 3324, 2429, 3419, 2629, 2431, 3420, 2630, 2432, 
       3421, 2631, 2433, 3422, 2632, 2434, 3423, 2633, 2435, 3424, 2634, 2436,
        3425, 3016, 3325, 2437, 3017, 3326, 2438, 3426, 2635, 2439, 3427, 
       2636, 2440, 3428, 2637, 2441, 3429, 2638, 2442, 3430, 2639, 2443}], 
      Line3DBox[{2445, 3018, 3327, 2444, 3019, 3328, 2446, 3431, 2640, 2447, 
       3432, 2641, 2448, 3433, 2642, 2449, 3434, 2643, 2450, 3435, 2644, 2451,
        3436, 3020, 3329, 2452, 3021, 3330, 2453, 1759, 2454, 3437, 2645, 
       2455, 3438, 2646, 2456, 3439, 2647, 2457, 3440, 2648, 2458}], 
      Line3DBox[{2460, 3022, 3331, 2459, 3023, 3332, 2461, 3024, 3333, 2462, 
       3441, 2649, 2463, 3442, 2650, 2464, 3443, 2651, 2465, 3444, 2652, 2466,
        3445, 3025, 3334, 2467, 3026, 3335, 2468, 3027, 3336, 2469, 3028, 
       3337, 2470, 3446, 2653, 2471, 3447, 2654, 2472, 3448, 2655, 2473}], 
      Line3DBox[{2475, 3029, 3338, 2474, 3030, 3339, 2476, 3031, 3340, 2477, 
       3032, 3341, 2478, 3449, 2656, 2479, 3450, 2657, 2480, 3451, 2658, 2481,
        3452, 3033, 3342, 2482, 3034, 3343, 2483, 3035, 3344, 2484, 3036, 
       3345, 2485, 3037, 3346, 2486, 3453, 2659, 2487, 3454, 2660, 2488}], 
      Line3DBox[{2490, 3038, 3347, 2489, 3039, 3348, 2491, 3040, 3349, 2492, 
       3041, 3350, 2493, 3042, 3351, 2494, 3455, 2661, 2495, 3456, 2662, 2496,
        3457, 3043, 3352, 2497, 3044, 3353, 2498, 3045, 3354, 2499, 3046, 
       3355, 2500, 3047, 3356, 2501, 3048, 3357, 2502, 3458, 2663, 2503}], 
      Line3DBox[{2505, 3049, 3358, 2504, 3050, 3359, 2506, 3051, 3360, 2507, 
       3052, 3361, 2508, 3053, 3362, 2509, 3054, 3363, 2510, 3459, 2664, 2511,
        3460, 3055, 3364, 2512, 3056, 3365, 2513, 3057, 3366, 2514, 3058, 
       3367, 2515, 3059, 3368, 2516, 3060, 3369, 2517, 3461, 2723, 2724, 
       2518}], Line3DBox[{2522, 3462, 2665, 2520, 3463, 2666, 2524, 3464, 
       2667, 2526, 3465, 2668, 2528, 3466, 2669, 2530, 3467, 2670, 2532, 3468,
        2671, 2534, 3470, 3471, 2672, 2536, 3472, 2673, 2538, 3473, 2674, 
       2540, 3474, 2675, 2542, 3099, 3509, 2727, 2676, 2845, 2846, 2847, 3520,
        3111, 2778, 2816, 2817, 2677, 2729, 3108, 3537, 2885, 2863, 2862, 
       2879, 2908}], 
      Line3DBox[{2545, 2818, 2819, 2725, 3504, 3093, 2544, 2728, 3510, 3100, 
       2543, 2726, 3508, 3098, 2541, 3380, 3071, 2539, 3379, 3070, 2537, 3378,
        3069, 2535, 3377, 3068, 3469, 2533, 3376, 3067, 2531, 3375, 3066, 
       2529, 3374, 3065, 2527, 3373, 3064, 2525, 3372, 3063, 2523, 3371, 3062,
        2519, 3370, 3061, 2521}], 
      Line3DBox[{2547, 3072, 3381, 2546, 3475, 2679, 2548, 3476, 2680, 2549, 
       3477, 2681, 2550, 3478, 2682, 2551, 3479, 2683, 2552, 3480, 2684, 2553,
        3481, 3073, 3382, 2554, 3482, 2685, 2555, 2730, 2731, 3511, 2686, 
       2848, 2849, 2851, 2850, 2779, 3512, 2820, 2821, 2687, 2732, 2842, 2888,
        2843, 3535, 2891, 2895, 2909}], 
      Line3DBox[{2557, 3074, 3383, 2556, 3075, 3384, 2558, 3483, 2690, 2559, 
       3484, 2691, 2560, 3485, 2692, 2561, 3486, 2693, 2562, 3487, 2737, 2738,
        2694, 2563, 3488, 2739, 2782, 3076, 3533, 2852, 2853, 2741, 2783, 
       2822, 3526, 3107, 2742, 2844, 2708, 2865, 3113, 3536, 2898}], 
      Line3DBox[{2565, 2697, 2736, 3490, 2564, 2696, 2734, 3489, 2745, 2695, 
       2785, 3524, 3094, 2809, 2800, 2805, 2804, 3513, 2784, 2733, 2889, 2831,
        2866, 2903}], 
      Line3DBox[{2567, 3077, 3385, 2566, 3078, 3386, 2568, 3079, 3387, 2569, 
       3491, 2698, 2570, 3492, 2747, 2748, 2699, 2571, 3493, 2750, 2786, 2700,
        2751, 3110, 3494, 2709, 2823, 2856, 2857, 2801, 3534, 2813, 2740, 
       2884, 2873, 2874, 2872, 2894, 3540, 2905}], 
      Line3DBox[{2575, 2703, 3497, 2574, 2702, 3496, 2573, 2701, 2746, 3495, 
       2572, 1861, 2744, 2758, 3514, 3080, 2791, 2710, 2810, 2802, 3106, 3522,
        2806, 2789, 2743, 2900}], 
      Line3DBox[{2577, 3081, 3388, 2576, 2761, 2762, 3389, 2578, 2764, 2765, 
       3390, 2579, 2767, 3515, 3102, 2580, 3516, 2711, 2749, 2712, 2811, 2581,
        2814, 2870, 3525, 2752, 2787, 2753, 2886, 2907}], 
      Line3DBox[{2588, 2705, 3499, 2587, 2704, 3498, 2586, 1871, 2585, 3394, 
       3082, 2584, 3393, 2760, 2792, 2759, 2583, 3392, 2757, 2790, 2756, 2582,
        3109, 3391, 2755, 2788, 2754, 2834, 3538, 2880, 2824, 2714, 2890, 
       2713, 3114}], 
      Line3DBox[{2590, 2772, 2773, 3395, 2589, 2715, 2763, 2716, 3396, 2812, 
       2591, 2815, 2766, 2793, 3529, 3101, 2875, 2832, 2592, 2833, 2887, 2892,
        2893, 2861, 3541, 2896, 3112, 2897}], 
      Line3DBox[{2602, 2706, 3501, 2601, 1881, 2600, 3401, 3087, 2599, 3400, 
       3086, 2598, 3399, 3085, 2597, 3398, 3084, 2596, 3397, 3083, 3500, 2595,
        2771, 2795, 2770, 3531, 2594, 2838, 2769, 2794, 2768, 3530, 2835, 
       2593, 2826, 2717, 2882, 3539, 3095, 2858, 2868, 2871, 2869, 2904}], 
      Line3DBox[{2615, 2720, 2719, 3519, 2614, 2718, 3505, 3096, 2613, 2777, 
       3518, 3105, 2612, 3406, 3092, 2611, 3405, 3091, 2610, 3404, 3090, 2609,
        3403, 3089, 3503, 2608, 2707, 3502, 2607, 3402, 3088, 2606, 2776, 
       2798, 3517, 3104, 2605, 3103, 3521, 2797, 2775, 2604, 2839, 2841, 2840,
        3532, 2796, 2837, 2854, 2836, 2881, 2899}], 
      Line3DBox[{2735, 2689, 2781, 2808, 2807, 3523, 2799, 2688, 2803, 2780, 
       3528, 2830, 2829, 2864, 2902}], 
      Line3DBox[{2878, 2876, 2877, 2774, 2828, 2827, 3527, 2603, 2859, 2860, 
       2825, 2906}], Line3DBox[{2883, 2678, 2855, 2867, 2901}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1081, 1304, 3115, 1082, 1318, 3126, 1110, 3224, 1333, 1125, 
       3230, 1348, 1140, 3238, 1363, 1155, 3248, 1378, 1170, 3260, 1393, 1185,
        1408, 3163, 1200, 1423, 3176, 1215, 3278, 1438, 1230, 3283, 1453, 
       1245, 3290, 1468, 1260, 3299, 1483, 1275, 3309, 1498, 1290}], 
      Line3DBox[{1083, 1305, 3116, 1084, 1319, 3127, 1111, 1334, 3137, 1126, 
       3231, 1349, 1141, 3239, 1364, 1156, 3249, 1379, 1171, 3261, 1394, 1186,
        1409, 3164, 1201, 1424, 3177, 1216, 1439, 3188, 1231, 3284, 1454, 
       1246, 3291, 1469, 1261, 3300, 1484, 1276, 3310, 1499, 1291}], 
      Line3DBox[{1085, 1306, 3117, 1086, 1320, 3128, 1112, 1335, 3138, 1127, 
       1350, 3146, 1142, 3240, 1365, 1157, 3250, 1380, 1172, 3262, 1395, 1187,
        1410, 3165, 1202, 1425, 3178, 1217, 1440, 3189, 1232, 1455, 3198, 
       1247, 3292, 1470, 1262, 3301, 1485, 1277, 3311, 1500, 1292}], 
      Line3DBox[{1087, 1307, 3118, 1088, 1321, 3129, 1113, 1336, 3139, 1128, 
       1351, 3147, 1143, 1366, 3153, 1158, 3251, 1381, 1173, 3263, 1396, 1188,
        1411, 3166, 1203, 1426, 3179, 1218, 1441, 3190, 1233, 1456, 3199, 
       1248, 1471, 3206, 1263, 3302, 1486, 1278, 3312, 1501, 1293}], 
      Line3DBox[{1089, 1308, 3119, 1090, 1322, 3130, 1114, 1337, 3140, 1129, 
       1352, 3148, 1144, 1367, 3154, 1159, 1382, 3158, 1174, 3264, 1397, 1189,
        1412, 3167, 1204, 1427, 3180, 1219, 1442, 3191, 1234, 1457, 3200, 
       1249, 1472, 3207, 1264, 1487, 3212, 1279, 3313, 1502, 1294}], 
      Line3DBox[{1091, 1309, 3120, 1093, 1323, 3131, 1115, 1338, 3141, 1130, 
       1353, 3149, 1145, 1368, 3155, 1160, 1383, 3159, 1175, 1398, 3161, 1190,
        1413, 3168, 1205, 1428, 3181, 1220, 1443, 3192, 1235, 1458, 3201, 
       1250, 1473, 3208, 1265, 1488, 3213, 1280, 1503, 3216, 1295}], 
      Line3DBox[{1095, 3218, 1311, 1096, 3221, 1325, 1117, 3226, 1340, 1132, 
       3233, 1355, 1147, 3242, 1370, 1162, 3253, 1385, 1177, 3266, 1400, 1192,
        1415, 3169, 1207, 3276, 1430, 1222, 3280, 1445, 1237, 3286, 1460, 
       1252, 3294, 1475, 1267, 3304, 1490, 1282, 3315, 1505, 1297}], 
      Line3DBox[{1097, 1312, 3121, 1098, 3222, 1326, 1118, 3227, 1341, 1133, 
       3234, 1356, 1148, 3243, 1371, 1163, 3254, 1386, 1178, 3267, 1401, 1193,
        1416, 3170, 1208, 1431, 3182, 1223, 3281, 1446, 1238, 3287, 1461, 
       1253, 3295, 1476, 1268, 3305, 1491, 1283, 3316, 1506, 1298}], 
      Line3DBox[{1099, 1313, 3122, 1100, 1327, 3132, 1119, 3228, 1342, 1134, 
       3235, 1357, 1149, 3244, 1372, 1164, 3255, 1387, 1179, 3268, 1402, 1194,
        1417, 3171, 1209, 1432, 3183, 1224, 1447, 3193, 1239, 3288, 1462, 
       1254, 3296, 1477, 1269, 3306, 1492, 1284, 3317, 1507, 1299}], 
      Line3DBox[{1101, 1314, 3123, 1102, 1328, 3133, 1120, 1343, 3142, 1135, 
       3236, 1358, 1150, 3245, 1373, 1165, 3256, 1388, 1180, 3269, 1403, 1195,
        1418, 3172, 1210, 1433, 3184, 1225, 1448, 3194, 1240, 1463, 3202, 
       1255, 3297, 1478, 1270, 3307, 1493, 1285, 3318, 1508, 1300}], 
      Line3DBox[{1103, 1315, 3124, 1104, 1329, 3134, 1121, 1344, 3143, 1136, 
       1359, 3150, 1151, 3246, 1374, 1166, 3257, 1389, 1181, 3270, 1404, 1196,
        1419, 3173, 1211, 1434, 3185, 1226, 1449, 3195, 1241, 1464, 3203, 
       1256, 1479, 3209, 1271, 3308, 1494, 1286, 3319, 1509, 1301}], 
      Line3DBox[{1105, 1316, 3125, 1106, 1330, 3135, 1122, 1345, 3144, 1137, 
       1360, 3151, 1152, 1375, 3156, 1167, 3258, 1390, 1182, 3271, 1405, 1197,
        1420, 3174, 1212, 1435, 3186, 1227, 1450, 3196, 1242, 1465, 3204, 
       1257, 1480, 3210, 1272, 1495, 3214, 1287, 3320, 1510, 1302}], 
      Line3DBox[{1107, 1512, 3321, 1513, 1108, 1331, 3136, 1123, 1346, 3145, 
       1138, 1361, 3152, 1153, 1376, 3157, 1168, 1391, 3160, 1183, 3272, 1406,
        1198, 1421, 3175, 1213, 1436, 3187, 1228, 1451, 3197, 1243, 1466, 
       3205, 1258, 1481, 3211, 1273, 1496, 3215, 1288, 1515, 3322, 1516, 
       1517}], Line3DBox[{1289, 1497, 1514, 1274, 1482, 3298, 1259, 1467, 
       3289, 1244, 1452, 3282, 1229, 1437, 3277, 1214, 1422, 3274, 1199, 3162,
        1407, 1184, 1392, 3259, 1169, 1377, 3247, 1154, 1362, 3237, 1139, 
       1347, 3229, 1124, 1332, 3223, 1109, 1317, 3219, 1080, 1303, 1511, 
       1518}], Line3DBox[{1296, 1504, 3314, 1281, 1489, 3303, 1266, 1474, 
       3293, 1251, 1459, 3285, 1236, 1444, 3279, 1221, 1429, 3275, 1206, 1414,
        3273, 1191, 1399, 3265, 1176, 1384, 3252, 1161, 1369, 3241, 1146, 
       1354, 3232, 1131, 1339, 3225, 1116, 1324, 3220, 1094, 1310, 3217, 
       1092}], Line3DBox[{1520, 1721, 3407, 1521, 1735, 3419, 1549, 3328, 
       1750, 1564, 3332, 1765, 1579, 3339, 1780, 1594, 3348, 1795, 1609, 3359,
        1810, 1624, 3371, 1824, 3463, 1638, 1836, 3475, 1650, 3384, 1847, 
       1661, 3386, 1855, 1673, 1955, 3389, 1865, 1684, 591, 3396, 1995, 696, 
       735, 2105}], 
      Line3DBox[{1522, 1722, 3408, 1523, 1736, 3420, 1550, 1751, 3431, 1565, 
       3333, 1766, 1580, 3340, 1781, 1595, 3349, 1796, 1610, 3360, 1811, 1625,
        3372, 1825, 3464, 1639, 1837, 3476, 1651, 1848, 3483, 1662, 3387, 
       1856, 1674, 1956, 3390, 2050, 1866, 1685, 2034, 3529, 1957, 2070, 747, 
       2104}], 
      Line3DBox[{1524, 1723, 3409, 1525, 1737, 3421, 1551, 1752, 3432, 1566, 
       1767, 3441, 1581, 3341, 1782, 1596, 3350, 1797, 1611, 3361, 1812, 1626,
        3373, 1826, 3465, 1640, 1838, 3477, 1652, 1849, 3484, 1663, 1857, 
       3491, 1675, 3515, 1958, 1959, 2015, 2016, 2017, 2072, 2055, 2080, 3541,
        2107}], 
      Line3DBox[{1526, 1724, 3410, 1527, 1738, 3422, 1552, 1753, 3433, 1567, 
       1768, 3442, 1582, 1783, 3449, 1597, 3351, 1798, 1612, 3362, 1813, 1627,
        3374, 1827, 3466, 1641, 1839, 3478, 1653, 1850, 3485, 1664, 1944, 
       3492, 1945, 1946, 1902, 3516, 1960, 1903, 2061, 2063, 2062, 2099}], 
      Line3DBox[{1528, 1725, 3411, 1529, 1739, 3423, 1553, 1754, 3434, 1568, 
       1769, 3443, 1583, 1784, 3450, 1598, 1799, 3455, 1613, 3363, 1814, 1628,
        3375, 1828, 3467, 1642, 1840, 3479, 1654, 1851, 3486, 1665, 1947, 
       3493, 1948, 1986, 2009, 1950, 3525, 2067, 2078, 2103}], 
      Line3DBox[{1530, 1726, 3412, 1531, 1740, 3424, 1554, 1755, 3435, 1569, 
       1770, 3444, 1584, 1785, 3451, 1599, 1800, 3456, 1614, 1815, 3459, 1629,
        3376, 1829, 3468, 1643, 1841, 3480, 1655, 1932, 3487, 1933, 1934, 
       1900, 1949, 3494, 2045, 2044, 2025, 2075, 2065, 2108}], 
      Line3DBox[{1532, 1727, 3413, 1534, 1741, 3425, 1555, 1756, 3436, 1570, 
       1771, 3445, 1585, 1786, 3452, 1600, 1801, 3457, 1615, 1816, 3460, 1630,
        1830, 3469, 3470, 1644, 1842, 3481, 1656, 1935, 3488, 1937, 1984, 
       2006, 2007, 1993, 2008, 3534, 2056, 2076, 2096}], 
      Line3DBox[{1536, 1729, 3414, 1537, 3326, 1743, 1557, 3330, 1758, 1572, 
       3335, 1773, 1587, 3343, 1788, 1602, 3353, 1803, 1617, 3365, 1818, 1632,
        3378, 1832, 3472, 1646, 1844, 3482, 1658, 1938, 1939, 3526, 2013, 
       1853, 1667, 2079, 2014, 2069, 2110}], 
      Line3DBox[{1538, 1730, 3415, 1539, 1744, 3426, 1558, 1759, 1573, 3336, 
       1774, 1588, 3344, 1789, 1603, 3354, 1804, 1618, 3366, 1819, 1633, 3379,
        1833, 3473, 1647, 1923, 2048, 1845, 3511, 1659, 2024, 1897, 2023, 
       3536, 2074, 2091}], 
      Line3DBox[{1540, 1731, 3416, 1541, 1745, 3427, 1559, 1760, 3437, 1574, 
       3337, 1775, 1589, 3345, 1790, 1604, 3355, 1805, 1619, 3367, 1820, 1634,
        3380, 1834, 3474, 1648, 1924, 1925, 2010, 3512, 2011, 2012, 2057, 
       2058, 2054, 2106}], 
      Line3DBox[{1542, 1732, 3417, 1543, 1746, 3428, 1560, 1761, 3438, 1575, 
       1776, 3446, 1590, 3346, 1791, 1605, 3356, 1806, 1620, 3368, 1821, 1635,
        3508, 1916, 1917, 3509, 1918, 1895, 1926, 1896, 2060, 3535, 2081}], 
      Line3DBox[{1544, 1733, 3418, 1545, 1747, 3429, 1561, 1762, 3439, 1576, 
       1777, 3447, 1591, 1792, 3453, 1606, 3357, 1807, 1621, 3369, 1822, 1636,
        3510, 1919, 2046, 1920, 2047, 3520, 1981, 2030, 2053, 2077, 2100}], 
      Line3DBox[{1546, 1911, 1912, 3507, 1547, 1748, 3430, 1562, 1763, 3440, 
       1577, 1778, 3448, 1592, 1793, 3454, 1607, 1808, 3458, 1622, 1913, 3461,
        1914, 1915, 3504, 1894, 1921, 2021, 2020, 3537, 2085}], 
      Line3DBox[{1706, 1883, 2084}], Line3DBox[{1707, 1884, 1974, 635, 2087}],
       Line3DBox[{1708, 1885, 2041, 1969, 3532, 2042, 2043, 2019, 2095}], 
      Line3DBox[{1709, 1886, 1970, 3521, 1695, 2001, 2000, 2068, 1961, 2094}],
       Line3DBox[{1710, 1973, 1972, 3517, 1989, 2005, 1905, 1996, 1904, 3539, 
       2092}], Line3DBox[{1711, 1887, 3402, 1696, 1963, 1971, 3530, 1962, 
       2036, 1987, 2090}], 
      Line3DBox[{1712, 3502, 1888, 1697, 1966, 2040, 3531, 1965, 1988, 2027, 
       2028, 2018, 2082}], 
      Line3DBox[{1714, 1890, 3403, 1699, 1876, 3397, 1687, 1867, 2037, 3391, 
       2039, 2038, 1676, 1858, 2059, 2101}], 
      Line3DBox[{1715, 1891, 3404, 1700, 1877, 3398, 1688, 1868, 3392, 1952, 
       1677, 1859, 1999, 3522, 1994, 2083}], 
      Line3DBox[{1716, 1892, 3405, 1701, 1878, 3399, 1689, 1869, 3393, 1954, 
       1678, 1860, 3514, 1953, 1901, 2026, 1668, 2086}], 
      Line3DBox[{1717, 1893, 3406, 1702, 1879, 3400, 1690, 1870, 3394, 1679, 
       1861, 1940, 1669, 1998, 3513, 1997, 1991, 1927, 2093}], 
      Line3DBox[{1718, 1976, 1975, 3518, 1703, 1880, 3401, 1691, 1871, 1680, 
       1943, 3495, 1942, 1985, 2004, 3524, 1899, 1992, 1898, 2052, 2022, 
       2098}], Line3DBox[{1719, 1907, 1977, 1906, 3505, 1704, 1881, 1692, 
       3498, 1872, 1681, 3496, 1862, 1670, 1929, 3489, 1941, 1928, 1982, 2031,
        3528, 1922, 2088}], 
      Line3DBox[{1979, 1909, 1978, 3519, 1908, 1705, 3501, 1882, 1693, 3499, 
       1873, 1682, 3497, 1863, 1671, 1931, 3490, 1930, 1983, 2002, 3523, 2003,
        1990, 2051, 2064, 2071, 2109}], 
      Line3DBox[{1980, 1910, 1720, 3506, 1519, 3324, 1734, 1548, 3327, 1749, 
       1563, 3331, 1764, 1578, 3338, 1779, 1593, 3347, 1794, 1608, 3358, 1809,
        1623, 3370, 1823, 3462, 1637, 3381, 1835, 1649, 3383, 1846, 1660, 
       3385, 1854, 1672, 3388, 1864, 1683, 1967, 3395, 1968, 1874, 1694, 2029,
        3527, 2066, 748, 2097}], 
      Line3DBox[{2089, 3538, 2035, 1964, 1951, 1686, 1875, 3500, 1698, 1889, 
       3503, 1713}], 
      Line3DBox[{1533, 3323, 1728, 1535, 3325, 1742, 1556, 3329, 1757, 1571, 
       3334, 1772, 1586, 3342, 1787, 1601, 3352, 1802, 1616, 3364, 1817, 1631,
        3377, 1831, 3471, 1645, 3382, 1843, 1657, 1936, 2049, 3533, 1852, 
       1666, 2032, 2033, 2073, 3540, 2102}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsmPk31H/492WrLCFEpcVWIUllKcuzxS6VipSQElKIypo2haLIUqKNokgb
paIS2XfGLJZZzAxmGJQiFbnf9w/3fc597vP9Dz7zi3OuM97n9b5e1/V8Pp6j
ejhw91FhISEhsrSQkIjQ//1c+H//fsN/9f/q/9X/q/9X/6/+X/2/+n/1/+r/
1f+r/1f/r/5f/b/6f/X/6v/V/6v/V/+v/l/9/6/fOLH54urzHEjrv7VXfk6H
c6W0ZHwaF4cCcwq7NnJgIKvx3mUHA4LDLraz7nJxuzJwgjrJhuH62lfJ0kzc
LI+YmX+T+H7CqNOHMjbsCgTfzlOZOL8kV8cgjIuo+7opIslsHFnzcUiwnQXr
Y539Vk5cOM8z2qN5io2jljF/eFksnBZZ895rNRfn7FsXB3qzUVqd9nYeh4X7
d15pv5nFRd3rU/lSgWy0n48/7TC3F2ai4uZrOzm48nnpLqEkNoyC+zzbpHtx
Ye7Zk5HFHDy27x1Z3MhGBP/anat8Fvat4I4U3+VgaduHhSOaHIjdXvEuNZWF
ytOvRFxucNAn5j2V/ICD5Px0mbtiLDxswPLRBA76a2Iddm7iwsaJbLbvMANm
KV4DTekcpK1eot06zkVtuCJ9+/we8E68OXX6FQdqIReGmc19uKTd5LLlNw1s
zqjlixYOFqREfsqv4UDepHfM/Rgdb/62akX5crHESXzx0joOFvb9WTGdSEez
7Kc9Kvu5mCf6xq/kMwdkzrdrn3vouKVCZa+w5sLzeoB0cT4H911eeOZvZaC1
h7+3cQMXVMqhk1aJHEjGlHJWvGWgxqhKaKMGF47pkmE5ARxolqeqLl/FhImQ
PS1HiQuxBZJJcvYcuGYbus1OYmKAH6hzRI4L7Q83O+tWcFDod0v6WS8TbMmw
NSx5Lv6ti347W5SDL4P3PX7MYeGZB6n+lSoXwTwXqwkuG39H6bEpEizQd44m
Jptx0fGpnJ7bwMZw/avnpQwmFkfIfw304+KxmtGvfx/YcHwcqS7wYCJ9mcTw
wWdcVJ4beJz+mo34fZQbZTEMuASx5ONE+qCuUvIptoiNoJbDJC9TOpReionP
CekD84n2zBAxb4pdlIdrj3RDXu9W4jGxfmT0bfmr2UT0Qef+yi92dPCi2AvX
BHDhKjpN0hLm4qaw+/IBWTry7BY5KO3k4lSfyqT1ci5CRSI6Jmd6cDhZT2qv
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
KXFUCG/uQMXFhDnf9rEgoWSYPn8aHTfOJh27ad6JHOa51u/ZTGgGz/v1ieCB
PW76OQP9nVj0ffUutoADkel2UU8b2vFu01ypYx5ceFxIcNIg5snG9ldl17V2
lH2Y8pR8nAua+DNdHyMuNFvOiKbqtaP2rBZJmliXLacWLe84zEVIbUWQ7LJ2
PA0TU3u1l4tptUkfZcy4eNQVO8tdsh1Z5X9+rSeuk9plmXeRWDcbllf18IJ2
FNISI9QduQi9/PJ4F7FvzvY88qGvbkdE+YqYLaFcxI7n2wqP59vOH8+3TZOm
ubj5cZC/5vD6727tqM8uFGWOEeNflLO/YSEHW6OFtiO5HcoHLwYH7etAREu6
7tf7bGhZnG0iUdtxvuPv5m8ZHVix7OrJuT9YkOJIW5bPoUEuJ7FHZkUnvHb7
/o3dzMKDu478/To0fDLdW/3jZSd0JBaprLVi4vnHw05vLWhQNTyx4MiOLnxZ
6rz3xXM6Cn4t6a6wp0HknjxeD3Th006Vsj8vOdCx8JAxJsZDe1yk862Ci9WD
2x21hzgQL03ucl3eDu1IjmjYKy6kEy8/alUm+MM84GodsV9M/7wYXZnARe2+
75J9BlysfBp+xMmWinPRS81WEHiHJNdfYg9xfc+fqGOKVGwjOfL6iPtslzf3
Nd/GBf+cS2rOCAWr+irFu6u4+CwbceaADBejrl8WxnMoeOtoK+I1NHG+7WPv
PKcsgodF7+5xbR6moEDtXtIMzw4ciEsLDxXnQM47VN9MlgrSFxn+obYOqJq8
dj7hwUa7lWZ8rBkVw972/KP6neApKA2vLGGB8qssbPMjKv7wKxbsK+7EvsPn
olkcJpqaLj9Y3k8F53Xo3IH9XTiRcTPBKJ2B3iND/Wf3tOPZ/fN/jvV3oauQ
ZDhNhYaVhgtqmG/akaP8+Hv+Ix4El+Uz323l4N3Df+5XB7dj1rLvzvEbO8D5
9fYFheDLou9LrLbxqPi0+d1uL7kO2J7qUldt5KD5W9cdjjkVysqPTNlSHbic
IaQXRPCAt6eItg2ZAi3doeTZCztA116fZjeTi9tPA4T2u1DgXrPp/SblDvTR
L119IsLFyKNnsvZLKXgjfVQmybADu262GqR3cdDUeqvuEJ0M30XLt4Vcnjjf
9kOsh+1tGw4UFe2fP0wlY815Rn7glE6si3fS2NfLRuKfkU0hH8kw/fLIQ8um
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
d1ZT8DQ31/1MQRPetFoNXuj5hBlj887hP+ad2uIbK7uVyFjReCHjkl0zcq0s
d+osJ/zkGM9K/Q+eFX+6xnaj82QcXu7ClF3XDM/9XQ768wUw+Db5knQtHUT2
emrxBSI/LT0ioSDZI1LXF7rqm7+m4/yP/vcPa9qwlmfa5yTdg0WMmPC6M3Tc
cb2qv+cx0S5qG1LjCbvFKe+dNfUIHbavCozL0khwtY7Ts5zUg6v6pIgdO4n+
5jlpWlIuCXM/KuiOKPagkSLQX72QgcpFRZVba9vApNlsC8rj47GbxtIN0xgI
Pque9fFNG/plDlor1Pzf69P01xzwy6PDW2WSa3g4CRmXZLr9iHE3x0XWdyqh
N+68KPfOm4T+IrxY0MHHPa6Z0bgVVDzxydw7P6YJHsvLk23bP+HK2LrE0bF1
Cb+xdQlR40KUf/i1Kctw9YxWOLl3kTI7WrDh9IlD57IF6EuT2Zhqw4DM8qPC
H7EkvFIvUtR2IeZ96jv+vLkMpB7mW5STiHwhr8st9wJfJDcpyd10RfjnLhz2
0CgJ3tWOMvOAn799e5A8ph/6Q09wuzj5kCENLrazr0fersX5hXW/R+YJsMvH
T/LUUzq+P+J1e0W04ff9FR9CZvdggcvWmq3EOEqfELQ+36UG52ONpucS40jq
4P/YR1bvf+xzdMw+L0Ntv66IbkV2zbqs0z0tEDTttJ4ZL0D9mJ42pvPG9IVD
rhkn9nWhSir3S+I9Mhyr9S4w9vTgtYj7vIo+lZ+a3423R13SjQtJYK3D6pR9
PSLzDlHXZ4/5AfM//MD5N25S0sZMrCM9WWvp1IZe2dF7VmKE/X89zdCQYmL5
QHjss8w27D0uFnZiFhG/+QZbaB5iws+3O3D62jZIWpYo2vfzkDBmf7cx+5eO
2f/g4B2KTxkRt8W9efHFtAmxHSuytJYJ0b8zoHhxAA2Sm03W6RQ2ouLqJK2N
KZ/gdKzd715WC/QncNe6EXG3zsXpJ3RqBIiziDljWNcK3fHecmumNGPwrTJj
KVMg0g7amu4L5OYS7+umMzXLqB1L8jtj3T2I+SVu7sd2nS5s1QjZ7GpHxnUl
vk+zdw9miPCHovzGpLPF0mHraVCa4BnRql2Da5JHbykTfpiWP87BYX4rMLhR
PnKwCbmT57uRJxDve2mguZmYd/SecXfPOt8GbcdRzd3TRf+vqP7/WkT7irr/
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
u+zBGvrTbtgzNip9C+zEQiap8XMUTyQ/6vlAdEw1oXNVpTpvRtBwQf6gyrtL
bJBNfiQOEu+7b4jqZ3yRBq2huzyFB2y4HRT+I63MBtX54IK9ITTkG6VsGiz5
L8eb9AfHe/lj9W5nSQZSX65kVzzswByvXZ6HxHjY6+01KKdIR+nOm33yjA74
HTi1e+Y9HmrNB0rudHciKfcf2ZdKxPty1z1auEU0V0rlw4/yaKLfXWkquGqU
QEX86Fm5d9/Z4Cx4VpknScSh65m21QFUbNgk9WjVEtEc7Nn3vyRbRnbjY1PL
m0YKDc2vy1MdZvHRK86pNpDqRMPiFfOn7ehA0MWdnx8Wi+ZNZXzdXeXYyMKc
Ci/PgBQKtGu5Gxbd46BNBBfa6HT4FplxnTB+8vzluY00jASTe5bLi+ZQpYrg
Hovipfwvt+rKH9yqJVZ9v+7VMpDYqnxoeB8NNr2XQ5UauIhMEsy9K8bEu8px
EQ8yqXh6s2StYjsXlg3R6VXqTFzYvqh6vgwVOw8sIHXzuDjZ0bigyJiJlxPt
Vv88QsEl07MWE8bx8Kng+46RnUycVciYWF9GBun7FP+pC3kIkdHyqdrBRGRQ
4Dp7HTKcmjX3vzD/v+f3iuJcsclhsy58YqCqPKpJn4g3wm6qUUeFPPitjjhQ
8YgBG3m19bejSVA61HCgUZePnYdHNt03Y+CfokkTT54l4Ss3u/CKH18kn0p7
6k+HszYMeAqML28LokJ1XAI/6hgP/dPYhxyJuKhkZz4vkohjPdJGBp4QecTm
6vli50IYiDVLCr6wkYLr9u+Nc+7zMByenrgokgHlVyYXvz8gw1ThzY0FhcT9
qapP06MY0NGY3S3/qx26fl+EZtz/8m/X/MG/FcWtEsWVutYoP/gsl44+Y4/t
t3IpcDr/s3eqHB9FZlO+7ymi46T5Yv6AOgXerCUmV/5jH7P3p+6X0nFxukFS
9HUySvz3HlK05SNj64t59mV03KcI02Q+tcNbMuojx5+PrWPc2u4/uLWktqXD
av5UFC1aZFikWomk/caghwvw2nBYwvkXBTbqrtrLMyqg1x30sz1VNFeqLsio
QG4CHeMmm5uUyFMg6x08RSeLj+TUmWG7e7ohrLGfkHuNyAuUjiktoPNxqXDH
Me3GbuhJ9sVf/0rEvUeX1nXJ9mC0N/9LWigRP2V7aTK+l+GG3ozRbdOFYNLZ
1rsyyBCqNA7T75Ug6622/1Q1IXafyTne/Y2M5mevrh5oLsL1AU7Cag0hwu0z
jJmUVhya0qN0ICYfuz+T8pule6E0XfJ44s02LFOvDfW5mQW92wOZeuN7RXJN
9w20Too4Uo999oG2LyUfwiT2zEeP+X1EPv3/zKFaNMb5jPqD87nH0SV99FAX
imdNPzRM9KsdTeEJhbt7YJfcucXnbCqmzh8ypK17hvSTS+aFcUXzNkV9b+b8
K4HS2UKHumVpS/LzdiTaeTtxLxLx/PbG+DdEHt1wc3XCqmASZhnKVJ8r5+P6
igwrJyIe2nZl2q5aWTKGdTbYpH7kw6JTeOzqGgYSFnWtuiZsw9HycBfHR3xU
/MEtsR7jlgjHuCLmf3BFbOmNmrZLyLg057t/kGINPCLSXibwBTh4odTCdVk3
ou+Lnbq2jgKHYdMFNn18kdwt0qEWH1/9FnAUNvQaebQgzVQl50GfAPtUp0mu
u5sBKVr8Obkp+fAMqDdpzenDlTH+1YQ/+Fei6uJni+B7NHovetk4kYzPM/eX
xJHqMHd5CkOxXIAgE/+MdT4UrFg5wTrWrA5uW1WY5wIE/35PqPLH94Si6qwn
tJgUWhJ+YHbpM80VUiREi31s3fON/y+foXeMzzB5jM/wJ29Bdoy3UMnadT35
Rje8dK9V/XxLxrfmOxsU+0XzdnZ9XaxiNtoI1hSptOrUZnTP8z3NcxZirwi+
wcZ8Wsy7fDp8Yhk5wiSi/yzP7w5rFM3lePI0aNoJws+YJpAyHga0YcPkZXpv
5ER/p6cx9t3g7T++G9ywwnLbw5YWNEgoKX01bMJQ5t1zQm0havrqdQdrWnCS
fOZ71YcWxAbLx26tEOCzlL+VUUE3Ju+/V/gin4RnId/I8vai65f/D3OcCYA=

    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{363.4615877216111, 143.22808115454188`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.16, 0.16}, {-0.5, 0.5}, {-0.008394968838336106, 
   0.6201124113159505}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.138693077839102, -1.2372084367762315`, 0.26061666695499214`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6187610228602204`*^9, 3.61876129579722*^9, 3.6187613294612207`*^9, {
   3.6187614373592205`*^9, 3.6187614429392204`*^9}, 3.61876162955622*^9, 
   3.6187616904582205`*^9, {3.618761720838011*^9, 3.618761726371956*^9}, 
   3.6187617796914225`*^9, 3.618762092552224*^9, 3.6187621362322245`*^9, {
   3.618762217580224*^9, 3.6187622261402245`*^9}, 3.618762278854224*^9, 
   3.6187623781892242`*^9, 
   3.618762449497224*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXUuXHddVLlfVffRTL9t5EVu25ZgAsixddbecQFZ4BIesJE5sWbasZ0u2
40DCIw6BxWPEWkwYEAghzgISWZZktSTr0eomgIcsmHjBwCM8ggk/gBmzyzn7
fU7tut1Xt8VjLQZ1u+6pulWnvm/vb++zz7m3v7D8zVdf/vryN796dnn3U99Y
/vVXv3r2td2/+GvfCE3VPUVxz68URfHHu4u4Pwy79DIcvv/++1+LL/GNv/9C
/FMNX3nllQoaYDfumXdxt4+nPw9/OvYk2ML7oh5xDK7Rw2t8CS/97+++++4/
v/POO3ErSnit/uO9996Tz3gd6jptcO3O5NcuN9n/DTGox0Gt0/ZE/Zygbnpt
6s0/bkzg9/HMf7hD7l7//48fcaD9ekqMRfq5+GdnbPj7jdlZwM88G/+Uapx8
omuqU/F1e2xavcMHO4h3/bLctd0j0rb74LXOLwqdOT/ihn3nWgewE09LJzxn
aO9E2rYjvm6LTd+ZDJMvOhf3OrZ/JDF/sFEnakP+5wUBDybvRve2IQU3f23E
zb1HoW58Trox7Zz0Wadtp9zypdQd4OkI0M/KZWdd3kKs+oJzYFau/V28zlNt
J1EbB75tw4vP9UPbYDCIe9C2Pb4+41ygK2bzh3iXz0hv5+n0eN34kXC9gHF4
nc1uEN/Nw2tt2+IGT/ezbchlbfCw38Ju/HzajRKeooLLxo/Em03H1+l4xymn
Q3NOWx1fAQrPpvwuMQmoRsXPtZGAPUwBCCfNtHVtJjZ14h5gOi97ituPGwL4
Xg8695+RTqJQF58W8Oakax3qCKFH7xjB6VYEG5TC+eUmEZ+Wh9mFbhH2Fp1H
6IkZopUXn3LNkC7tPkzHuf2sIN1tOwqY9+TB5lJG6BPsWvAk5XDhxLVwYOHk
NTioCuIocqtGLeFz/rRj533zdPEG0fGm2ljShyjHZmcq9aBSACDW6bHxoZlI
CD6Pokm1OExHIuro2P8oYvDJEcLG3YgYBIYP92si21APWzxhPnWsVqS6ct5s
Sje04R16OQLwfuHEVWBf8YJr34e0LZy4QvcMe/Au2sqV+LISXo6vBKM5fpnI
OnjsrSq8XAoSfPDYxeHBF3m7MBzE7eibcGK84Avnw/YGWOBUfJ2REIPQpunI
yGzGD4p7kIgnHd3oDi8c7gVIDve4O9Ysu2Ruh/vdzHEaujGbytyM4N1Lba8m
IT14/CpBeS1u040TMn4qBJjNVPGGI2/B6QHzAkCvItbxJoq2Il4D2gdgOzc8
8Py5Mrz8MDQfOPKD4X7Y/ipu5XD/c38ZrvfEc38hgPSG0DfmAMAst5SkJYek
ChENTNH1wh686wl7UewP96WfM6ITirza84yoTXaUQnCiSqhXiascPH4F+CN3
qeijCyffHi6evA72ofe20ZuFtsNGcOxyuNBlJA/5XAE+r+QulnRT1aqmWwcC
ibofhE8IeV1LHmxPPPv94b5nXy+H+575Xvj0vmf+fPj4l79L25+Vw8e/9J0O
XpjlbRRno/Jt4nPB4XMWaWv6WwfFDYmOjUz0VHytiGjwvEB22JD22VTr5lKt
06SuRs8J9EVUrxKWgbZwmUUib/HUdewG0F5RYjZ48a3oXeBhUdui10XiAmmU
OAbm4gtc+cpcbKzwAnzzSsSAHBgfPwA+3Bu3p/80tO19+k9C294vfltMpUKV
2koXO9iWZJk0RNQP8e9YNmCL15uGY3V+bBZJuECaGvWzNyU8dRy/A576CBr6
x8FjK+Rm4mrIfLgd+hnRdfI6I7l46oZkUDaVYN6iMl6O7K90sR/NeFbHV+1g
RwxpJuUyi9yzmi5sFUcHxG00/Z7PHIPCZ8OLein+/bg3p1zqBVg3e+BLooCH
NeVQz6pEspAYlCz0oaKDYSxwErd4KPCCJg680D0jQ/GdZinc/SiE3H12S5BC
YAflMNgjS2GP2UL3400NSsNvJ/fCFnd6v1HuofTtCYeJWexiU6c6TpCqhAn1
jr60AU/zBAOxCh8rJbZ1hR0gp4NSJs5SESfAizqJISRsFbpZQL/Gvi+dvlmn
AYX5j1dagA2iz3HXSfoc82Jj5CewhZzVxNllEsjLXUmPGlwM0rSecz+/kPT4
JlwC9QhiRYtfZMhvT31FGQLkAW8PZbZRHCmdEJgLxZl7sHj6ZgQ7buFdeNVA
YEK96G0lRl6LkV8hPlYwysCtA7CcQByT2JTFO+6CzWlmjZxBNaUV770bhIkE
70Rf2Prj/TKUPX/Rz1LXgT8M1cdW4gCC9GZAQxT8ew1Ct6r/ddaY8LnwWhr8
4wHBnw8s0YFIBNhoh6XlKhk2Y1ZRqGAmBpIbQrYd0uxLIUO4FIbESR4yJRfN
qhze0JlA/8nUyLNAUzkWnBn5tCMls/KJbhve87meoL6TpYPPQ66L2DPsHU6Z
JPiKvAdIF0/dtNbPLJCSIR/UBu84FYhip2PZcGPKDFBdOF+GDh67XEFsry0P
Ybsog8ujOPrBMS/7BAS4OSNJ4bHvF+SpsPlxV/jZmgliMnVMUBXiedlTiLen
xh07B97LGWSKM+k3N1ucrbgoxEUp4lKjuusp7G6llcaLZCFiWJVNioPB93Pp
Ifm7nGCvJZk54o9AVpH5sXZ7f8wVdQaKTAVVxsRUgbjjQDwjbVPyuDniatmV
RbygkARZpcBc55ZcU/PS6Vti3Iw9CUs8O3wKpUiHNbVAnMTOiDX6DAi5mDGY
crBfMecDwZQPvBC38+HS8TWO/d6QfK00wA9oCDIlwXV3Ow8fcw5NU5pkFChu
02lmOUNgGBFS1lK110+CIW4TjpSteTmKlHUtZSRKVyX4CpI4EiAIrPgTcXiA
xSfu3RLxuaXvgqAZoRIS1ZVupKUHqg9BVD4I+apRJwhfb8WxTJPPgvOn/c+f
M05II9o8XPfEk/a0M7hHPGlGPGlaYM4iQs/3KfW37amAgU/tkD3kpk86kHJz
0AZopkcGa4W61A1hZ5FcCjyqEoZK8TXgdF4UUtwmR56GEYWMjaL6CxvBcWKV
64XzwWXOB+TfiFuP/CQ+KCR7GBQkzTYTFQ7oDzugz6ci1G0rdvTxkZsCNi2y
BZ/tqIDV4A0UmhEYGIMJ1rXFOgYMidMp3BpvO4g0ox8cjj2AN/ICFcSSiIy3
0kEOPwzlSfyUXXryKGzkBPHGUJ409ERymLX9R34o1+3aiHXBRKy+qJqXpxI9
D8U/s1jF4mqZpk/9tmCu5JWOL6hTWVJ4dMCkQL1cU6YBpk2iVIGaPIYvMiUQ
Qm6xOoFu3araDjDBzBqxpaNuyo3Z/2a5hysw6iZ5N+wwYRRmKNQET9kpUaxq
m2O0sGeHelk6KziryZcOFUpAlYrRThPg89i+ItmUqdKSVIcxGj4yZ1QsL8QE
YcjFi4hzLYFCYlsaPyTympyArqMU3DA6r65qHK1vIiYLWYflDMMGeMwB8hrO
A7p0ZnSbJ8LGl7zAtbkpVKCCKn82x/WY4lVYdoy3I3UB6CqHsMYQO3OfHWI3
GuZLdZ9wmUhaEkWuSCTJosiCBPmMNg3ySRzRPaYyU7c6yRbC1ZOBPCRp19JK
Tg9vHXWssrwUPNLbr8GF2mqrXIIGy50dGR4az6lqE+lTiRT32uU4VVaR2pWS
5gmtGY53kuE48aRwqcaNQ9LyakZXCYlXz/qNeO0C0sTJemBoxuk33T14C/kU
+0sHD+w/ck4HvZ8aD3co4HZwVvRNcdqwB+9KarO92e4im5ZL4rudwoomDztT
BqRmqi4i9aiASoedRDGjksjN1ujCWfHyKqva8mqqauG9+RQrWBZ08kq8il1l
xU7VmVJF2qZYAINDHUChk9SbnQo/SG1HzqW36Uo48NaxjOATkrdt/sQrMKyJ
MXttI5Mr0wRBiaTJk2QC8dgKz0M1ubThwVCJjkSx65SIGLBJ1WDjRrTHIx0e
zWTaWUvZTG7CtWIqIRuKQMVYZzg7SPhAfgzFyNuFtDBb8IyuwP8L47EFSfe8
nUSz68PA+zTc1EJG5n12MEoz8lesYZrMTVGhwSXbei3O04mQlyn4epRLCFi8
sSFnoSXkcC93GRxzl7JtXjD5pfFgPTAywJjUDaM2w1/LMgrFO4kZx69AzLhq
40UuWpW19MJDmYP48qoau1WngY7lbeWd9U/aktsMYIAS6/dWL2PCGPooOqsu
YGQm8wF6lkCJTMmDgl20RwtaDTsZJx/BQU3LKhGZk/OtOL5cNwrQsVpiktk0
KNQ2KAj8zWY8uxc+vZogyknxItd88eZdSwdCH13hxNs6veKRQA7HQ2NiIlce
28ZXidP4bMHPbCYX9vCHeUEplUdbQdvmIUM2GF+gjGWgc6EGcoS6OcSoEz25
XaVtPABZ1GQWw257tE1lpXbaZhNpv5ABdwnAs9ezUvPs5Gb9iEgNz6sZ+8Wu
joqMmeJWlMwE7MxDM5J0ALIatuNSAimVS1K7vF7wMTukR7ngmO0cC5/jyd3B
0UsNg4yVEjbI5yfHcLeYppoholmLytkJYc0CVAMWo4DaigOAFMG6bdLB2+T6
0C5KcVskQVBPBETtu5SiH6mATVpJBVpBDc/To56wBxCIWjCDgL5C86tXRX+P
Tg7yR9X/p7mrsmH/sr8RbbGgZhZQU0XuFm+qvKXAS6gfImQPcXMFTUyQRknI
zlWF4apZPWLRDqYz0WBqmti/rdNSXSkrFmYRKa+FqYZcI87EwuOgxE84C2Zw
nVl4fWQ8mj4sfaCYp6UfQxprdhIUu7YSFB1CIRSL7lgjZ6NHNuiah8Ad7Fkg
P6zhpWi4OIX4l5Wf0DUd6JbpXlHZ5CX5uEkKcCa5Q1e7hmunQt6/BOPCcMIJ
OsFbj+Svbm627RmPnQ9qYllbYxQmqoQvHvQ3FnvhHBu1qQcVG7gQbGckGIRd
btYSrGqcyDV7lLlD6ADTIzbEdpUF2J6oECwj5xhsXWNcJuq2QLp5Ju6z6YyM
Uk7eKNQ19AHbJKyyElZsJnQA5GfWuDnsUvOaNqu22ZiJtQhbn6hM1duYg0aV
wvOWtniOkxsFfacDOrEqQfpUplM+VT0H54fHo2Wn0oJFZTOAVGZoVEbOUYwK
6mYaoS/MGGXS0ELwR7dYyz1EvAFVsJsEmeiAxIRM86VhfVRI19z1usD9AQeZ
5TF9pOu0PTQeGdtVrdj+4pPewrKadQqjUn7MV2RIrQYmT5K6mkjUmkNHGfcC
AIecAFTquLiyly9sxE6QxwJEKcTkY+FrujSF8gMi58NbwM2olbBj6thc4jDR
VE8zTzfzuBrkDSENOybu99riPiHI0aTgIilLGzNTJdqlkqbh6DZO19hBM3c0
WWyiLIHuTjEFgR4T2T/aSkFbdqXLW8cM2NMKb08ejaWYoZIVL2SxtmIp8ZoB
p8KkNVGSlMyuyRNoNMx7gLrUgm5r2F5lQPMQDSbsyFGdztLGgUfLYhkP2zFH
Dz3FMXjw2b8OT7Fu8XRC2g1TsmU/5cRbpReQ53ojpiqk8o2URiyySi1XxX5N
xD5NebO6joZbTuISs5XVa5mqwOM/cnfw7VipfvKlvxk+GTE+u45eqrPltzBa
Yc7AkCfmSseMufbMHMiqOgDlJzwAZjLlYRMFx6yjRxjrmZpurmquRL0USJ3C
8UAyGTRjMwrz1nRtAcKltWBA+KUfIcpoyUVigijAxkq0DE4SYRDOjVcDFxds
1jLj1fxxnUx7fRMaXFn9tesoKqu+MntrzRfKUAWtDs2QOY22pyVFT0PwG7U7
GiEvEveJV/5u+ImX/5bs9keiD4mBqFEUCh/s0RhP6t6mmruaFnIxqzYOkebf
64pqBnWqtadlVpBWIfgKC4D91HjW2A5dP4EOYHuZYQND5FSHS3wmiKORGZsb
ZX0yHUrWRxihWcHruthQJVhFnVkPd89kAJw9i1OkJIWIer7y6uQNM2jct1UA
zkobgqf2ZjzIoofq15eQRNKf/zUg1taFU7tJ9XBdMtp1G33UNQcyjGeMbiU4
Yb1mIKM70j9Xue4IrZ7MLrKJAUpnWetMTsdBhQJLYmExuaSk0iaWBJMRJwWp
1cTMgWhrmg5VjuWbntnkwdrZAi/WMBhGefe+9n9HGM4kq4Nt1qOqZgdVbb5Z
awDGp/PMykOncqQM0JY6sltxCxh4K3LOOG372zFAeGDCGtopI0mfXweVot12
VUUDBJOKVabybnTcefB2hVpa5gz0tuZIzWTPjtETHy02Xsc0Jmr7adgRLxu9
Lh5Lc+XbNgBxhmZHcCYIkmFBIEw8LR28rWfCBJFxPUEq6HihfrY6TAsgwBhP
S1pf+pm2fAGaBu04wPcPw70AB7Ic9iZ4iBhBOvKsRmDsgGBK1cakrowjWYDJ
kVvtRisQaWK2SnB57vQ2eNKnJ7eJfaTIEYuoImzx8RzioiitNTioUOFFo26z
FtYAggQeTUETzaawaAEnqYpVI2DxliqNCQt9MxJtMnZsCXMNsZNFXVXHnenY
oXc2Uqw50WbD96zBOEkesxMRSYYwOpo1IhLd4zOTo7CXskMwjmYSA+cuyhyO
eEY36Z8ZNtuK9ZI+X5arrINDig6WXpA2R+11E1hu5uXP+DDeb2KNiQqn3YjK
Glk39wBLN2Qm6DRTrtMYXJRkcH47wGpaiRmaWfzMiIOjj86zNKApM2iiwXxu
q6Dp2O82MSTJyjIz2koHCY7FVzKCik9pzURPjtWIRpsGnKWkKpCKWhOL+Aif
nxwL+N5pAWu5TGSVSjKbAdZxF83q96R/SVBtxoyzDetoDpPoiW29IDGeljVU
mwqlP2F8IUGWxxWnNELEJ7V1dJ5xqoZmEYmVPQwUnIWhLIStxQT88GmLEHpy
4f+23ZgMf9wyfNos2RKj7lmaOUwyKUVa+V6Lklg4geCsZ9Vp7S0bnFh3MzPX
xeHJn9n+xJzeSs2XCBcjgDxC5nhNSCxBN209ad3IXYvIaW1lPVM7VrquFx+H
LWuBxnz2x0w4bKRAp2R6g73ZPHqj5GbbRhQ9NkgGUllnZ/YWg5whU81KZO7y
EHzXbHuoHZmPGU8wqGQjTqNwqgUdi4kEviqlvPRgcdaLJHYvy5iKY5tEpAWM
EdOdHhiPGhcx4wbOR7ppBnBaUimUgw5jYLPFIksNM0VQ65Lhr/mGrawlKk5O
hgOUqbux6eH2p99jTEEcg4PsjAQEDgr52EnGYWfskKHU2J9mAokqLKWKYIJR
CsNpp9uwCqFGGjCH8SZQR/061yPtmPDEjMEj6ZiKZpYHyPiBhNQOmpsQZBKZ
ZwG66IbBaNPAMWyi5fcER4DxsNUKjco4798Vw8jSZDuMWqLxabsw2NgBKbrM
oaRzoXyT0JeXJ8MhXza0gUXwzJABIV35YEU0QKDlEZ1U4PINJwyZf+Q1zDp/
cggWXxkzWMDvLZcbUIxt07kG5IEy/E1SYruyGFdk1KIJ9FRONFjzP46eZCto
r06eATyY2K7MF5fJVNGIJO+MmWyjFMeUcY0J65znUjrJES/POva1yR/ogcQO
bxg7bPNEXe6d5CTR4no5W8Ye10y4X8sscRUz8l+d/HFw9UbfGN4Nz/DK0VbX
z/RDSUrmQrtJ1sKch1v/htOzZfGbEaMp/FWXnun6De26xIik4ipOby2rmyfP
RMqaquht23GA/7XJ4f+IsaYFa022PGICkp/eJmOANel+ANsuGmUn+M3Ju43L
rrq+1djfA/CqmqnI9htFGFNYFqh/a/I+fwhepwTqxFTS0Nky+HCmqhtPRjdl
rH9n8n5/cItMZM1Iqu0uExTj7+9N3t0PNEzjZsM0klqVkYQiC75JcsrraShX
gNv87uT9vb81QGliueyMwpvRKX8U7rOX/Hh2sSnBw/9L0bHhhy3YFM5XU+Cw
21bMmsh6Q7YtsN57R5pDcyLMgLu8pu/oR9vvShd3UQzJLMDmJcUIiw3vcleK
hur9f4st6Cz/B4UsDTbzsumKagdWXlNXFIX33zK2oJM7PNJVYjfSAAzSNhGd
uzv93J4wLxkDZ9k58w64ReH+kOIW9G1boktikfnIxH77jSyQY8+uTXZsU7qT
/4sIWzBtTEMYUxtw9dj7hzpbANNcoof2W8SrjQjXZl33352u6a9xeUBVDmPe
avYt6Aj/hp6dYxqlGIX/a4mb7Un71+jk3YiR8FSuHV5VI4XtgbE6uzVfDBhR
z+MwlVYzo0E6buFd4H+w7z202QGNnDMZLNKfzPAW63p913mxUd9XGlUpHNHj
rhWAdDUBIvzoJnt5RwjXG1gz/yB7Nr0LHXvsfxf1XI/jri5xlQEmsO6N5/6y
8zFvDtzTeu/rHyOA4yopzxQW5ssmc/FMSCy/Ffe8/33lfSfRa8v/v07EaEQU
LNE9OLhCR/7IOQ9E7MUNQuq0XOJ15+i80+Z9pW+z/1Vvs3NWHkpw3oOx6ZPm
caDrFx0AvUt4XZqkTbt0FLsE8+pvxgaP0wfi62/jmf8U/8CK2u9hw2b+iyns
f0gsd7Oo45Ki4j9HfhDe7RrhtR7vdOV/G7tLUyNuNEqDd95ZB/91zI/9N3fv
X/DQHf07V++fc92N7nsG/dT/ne6D3sP44qmNTcJ71pk77NQu8Q2vcrAJ+9Se
z8qlNHp9JfdA7y6/jydtRmKKe/4LU+Jg/Q==\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6185830936430144`*^9, 3.618583103103109*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"drum", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"collocateParamsRange", "[", 
     RowBox[{"modEqns", ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", 
        RowBox[{"-", "8"}], ",", "1."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", ".02", ",", 
        "1."}], "}"}], ",", "500"}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6185038148502083`*^9, 3.6185039708517847`*^9}, {
   3.618504085428938*^9, 3.618504088008964*^9}, {3.6185051587537746`*^9, 
   3.6185051602037888`*^9}, {3.6185055077672987`*^9, 
   3.6185055322915506`*^9}, {3.618507146149193*^9, 3.618507147649193*^9}, {
   3.618507257597193*^9, 3.6185072602171926`*^9}, 3.618507367711193*^9, {
   3.6185075864182816`*^9, 3.618507595538373*^9}, {3.61850764858291*^9, 
   3.618507657583*^9}, {3.6185719782292852`*^9, 3.6185719815790176`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fv", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";", 
  RowBox[{"xv", "=", 
   RowBox[{"getAllXVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618502361719551*^9, 3.618502390709841*^9}, {
  3.6185024400643406`*^9, 3.6185024581685276`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fv", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618573593848198*^9, 3.618573596708226*^9}, {
  3.6185741309455705`*^9, 3.6185741453697186`*^9}, {3.6185741753800187`*^9, 
  3.6185741816400814`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.1176863609635897`*^-17", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "1.5296389323453098`*^-19", "}"}], ",", 
   RowBox[{"{", "1.1102230246251565`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "3.057961158591558`*^-17"}], "}"}], ",", 
   RowBox[{"{", "1.6653345369377348`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.551115123125783`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.551115123125783`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "9.6398189292664`*^-18"}], "}"}], ",", 
   RowBox[{"{", "6.938893903907228`*^-18", "}"}], ",", 
   RowBox[{"{", "1.0561304335505067`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1.3877787807814457`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.017127114364504`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "8.326672684688674`*^-17"}], "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1.3877787807814457`*^-17"}], "}"}], ",", 
   RowBox[{"{", "7.840950111415168`*^-16", "}"}], ",", 
   RowBox[{"{", "1.5265566588595902`*^-16", "}"}], ",", 
   RowBox[{"{", "5.551115123125783`*^-16", "}"}], ",", 
   RowBox[{"{", "1.6653345369377348`*^-16", "}"}], ",", 
   RowBox[{"{", "4.996003610813204`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.7755575615628914`*^-16"}], "}"}], ",", 
   RowBox[{"{", "5.551115123125783`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.220446049250313`*^-16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.938361447357156`*^-9"}], "}"}], ",", 
   RowBox[{"{", "6.938893903907228`*^-18", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.938361464704391`*^-9"}], "}"}], ",", 
   RowBox[{"{", "5.551115123125783`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.938361450826603`*^-9"}], "}"}], ",", 
   RowBox[{"{", "1.6653345369377348`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
   RowBox[{"{", "0.`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6187610235002203`*^9, 3.6187616309562206`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", " ", "/@", 
  RowBox[{"fv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618507170819193*^9, 3.6185072071031933`*^9}, {
  3.618507447869193*^9, 3.6185075040534534`*^9}, {3.6185076273626976`*^9, 
  3.618507639252817*^9}, {3.618573613288392*^9, 3.6185736224084835`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.168750759954107`", ",", "0.7883029183336366`", ",", 
   "0.03915536124910787`", ",", "0.01448682472482485`", ",", 
   "0.003246462212430605`", ",", "0.0006885359380341203`", ",", 
   "0.00014661063978193536`", ",", "0.00003124461275021855`", ",", 
   "6.6598235825568026`*^-6", ",", "1.4196028347893028`*^-6", ",", 
   "3.026038975277007`*^-7", ",", "6.450344764420138`*^-8", ",", 
   "1.3749645367687174`*^-8"}], "}"}]], "Output",
 CellChangeTimes->{3.6187610235202208`*^9, 3.61876163097622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"curious", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceVariables", "[", 
       RowBox[{"lucaMod", ",", "polys1$1$1", ",", 
        RowBox[{"{", 
         RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "//.", 
      "lucaSubs"}], "//", "Expand"}], "//", "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
   3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
   3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}, {
   3.618421746548664*^9, 3.6184217517987165`*^9}, {3.6184218192733965`*^9, 
   3.6184218298235025`*^9}, 3.6184267575071*^9, {3.6184959477288265`*^9, 
   3.6184959523288727`*^9}, 3.618498183979375*^9, {3.618500894470745*^9, 
   3.6185008984227867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.6187610235402203`*^9, 3.6187616309962206`*^9}],

Cell[BoxData["\<\"need modification to actually compute expected value\"\>"], \
"Print",
 CellChangeTimes->{3.6187610235402203`*^9, 3.6187616310362206`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["forCurious"], "Input",
 CellChangeTimes->{{3.6185855426288047`*^9, 3.618585544558824*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.07168592066218857`", ",", "0.`", ",", "0.23696223167815467`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.07168592066218857`", ",", "0.`", ",", "0.23696223167815467`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5354845307277833`", ",", 
       RowBox[{"-", "0.5354845307277833`"}], ",", "0.6172963046806865`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5354845307277833`", ",", "0.4645154692722171`", ",", 
       "0.6172963046806865`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.14337184132437714`", ",", 
       RowBox[{"-", "0.14337184132437714`"}], ",", "0.47392446335630933`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.14337184132437714`", ",", 
       RowBox[{"-", "0.14337184132437714`"}], ",", "0.47392446335630933`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6187610235902205`*^9, 3.61876163105622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["polys1$1$1"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.1500283424116845`"}], "+", 
    RowBox[{"0.27214323585941474`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.12370306937439732`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.03676523799648004`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.2184905074805855`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.09377644333450082`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.03363904363639862`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.030337107451252877`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.08`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.1523809708335952`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"0.053932474820764846`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.04798776609640922`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.01670871244439306`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.023629687748652782`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.04394592654842053`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.062148925335828206`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.01791366344295127`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.025333745792808712`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"4.56674912716431`", " ", 
           RowBox[{"(", 
            RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
             RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
             RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
            RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
            RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
           "\[GreaterEqual]", "0.1700283424116845`"}]},
         {
          RowBox[{"2.48859054425355`", " ", 
           RowBox[{"(", 
            RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
             RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
             RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12850893239429556`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.11995045192627837`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.031173369315857104`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.2181258539624187`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.07243170652573605`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.042507018935592916`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.003707437549887496`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6187610236102204`*^9, 3.6187616310862207`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"PiecewiseExpand", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"curious", "//.", "lucaSubs"}], "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
   3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
   3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
   3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
   3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
   3.6184252168401365`*^9, 3.6184252176101365`*^9}, 3.6185009454232564`*^9, {
   3.6185014575884275`*^9, 3.6185014761286125`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doop", "=", 
  RowBox[{
   RowBox[{"huh", "//.", 
    RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}, {
   3.618501731363187*^9, 3.618501732103194*^9}, {3.6185018414602976`*^9, 
   3.618501842520308*^9}, 3.618574516393429*^9, {3.6185750502587676`*^9, 
   3.6185750560088253`*^9}, {3.618584449409746*^9, 3.618584450629758*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(gtXFormedChebSubsNotStrings[theBasis]\\)}\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/reps\\\", ButtonNote -> \\\
\"ReplaceRepeated::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61876163139622*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "0.10921786250257334`"}], "+", 
            RowBox[{"0.24006357307221765`", " ", "qq"}], "+", 
            RowBox[{"0.35808639381990176`", " ", "ru"}], "-", 
            RowBox[{"0.404256855887147`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"0.6133700454868851`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.0958799174756222`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.1322639650769952`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.445423513311089`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "+", 
            RowBox[{"2.445423513311095`", " ", 
             RowBox[{"(", 
              RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
               RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
               RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
             RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
             RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            "\[GreaterEqual]", "0.1700283424116845`"}]},
          {
           RowBox[{
            RowBox[{"-", "0.10921786250257334`"}], "+", 
            RowBox[{"0.24006357307221765`", " ", "qq"}], "+", 
            RowBox[{"0.35808639381990176`", " ", "ru"}], "-", 
            RowBox[{"0.404256855887147`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"0.6133700454868851`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.0958799174756222`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.1322639650769952`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.445423513311089`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "+", 
            RowBox[{"1.3326017397632113`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
               RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
               RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"0.09474295472987601`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.20824736645379338`", " ", "qq"}], "-", 
            RowBox[{"0.3106283369926249`", " ", "ru"}], "+", 
            RowBox[{"0.35067971592701325`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"0.5320786281718038`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9506402984981219`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9822022801721844`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "2.1213256138532133`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"2.121325613853215`", " ", 
             RowBox[{"(", 
              RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
               RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
               RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
             RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
             RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            "\[GreaterEqual]", "0.1700283424116845`"}]},
          {
           RowBox[{"0.09474295472987601`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.20824736645379338`", " ", "qq"}], "-", 
            RowBox[{"0.3106283369926249`", " ", "ru"}], "+", 
            RowBox[{"0.35067971592701325`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"0.5320786281718038`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9506402984981219`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9822022801721844`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "2.1213256138532133`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"1.1559888044903388`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
               RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
               RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", "0", ",", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.2570178647885911`", " ", "qq"}], "-", 
            RowBox[{"0.7496903245392398`", " ", "ru"}], "+", 
            RowBox[{"0.3896671164482138`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"1.4314507432861745`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.950666033028937`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"1.7434517374060734`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "0.30412569968596453`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"4.56674912716431`", " ", 
             RowBox[{"(", 
              RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "-", 
               RowBox[{"0.14643123854446546`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.4630134448752037`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
               RowBox[{"0.09816850609536036`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.4481350209934822`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.16531159273093954`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"1.`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.08165839714908019`"}], "+", 
             RowBox[{"0.29624776329613217`", " ", "qq"}], "+", 
             RowBox[{"0.8418579348297622`", " ", "ru"}], "-", 
             RowBox[{"0.37520290633138437`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.17765518697049995`", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.10560021288576715`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"3.2410148194214856`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.589967907302929`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"2.890530781011746`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "0.9720982427987404`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
             "-", 
             RowBox[{"0.6449823817379499`", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"1.1436702954408944`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"3.430109610785988`", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.7260414337792835`", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "-", 
             RowBox[{"1.3759011356702513`", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"6.881834946954954`", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"1.716786827394697`", " ", 
              SuperscriptBox["ru", "2"], " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"3.0965414484740905`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", 
              SuperscriptBox["uu$Shock", "2"]}], "-", 
             RowBox[{"3.5682500770986594`", " ", 
              SuperscriptBox["uu$Shock", "3"]}], "+", 
             RowBox[{"3.06299623738211`", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "3"]}], "+", 
             RowBox[{"3.433573654789394`", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "3"]}], "+", 
             RowBox[{"6.193082896948181`", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "3"]}]}], "\[GreaterEqual]", 
            "0.1700283424116845`"}]},
          {
           RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.2570178647885911`", " ", "qq"}], "-", 
            RowBox[{"0.7496903245392398`", " ", "ru"}], "+", 
            RowBox[{"0.3896671164482138`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"1.4314507432861745`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.950666033028937`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"1.7434517374060734`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "0.30412569968596453`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"2.48859054425355`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "-", 
               RowBox[{"0.31067552891545963`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.5544207484258584`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
               RowBox[{"0.21871274604641222`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.4945834390318737`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.18466897899985657`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"1.`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"4.56674912716431`", " ", 
            RowBox[{"(", 
             RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
              RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
              RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
              RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
              RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], 
              "+", 
              RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], 
              "+", 
              RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
             ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
             RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
             RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            "\[GreaterEqual]", "0.1700283424116845`"}]},
          {
           RowBox[{
            RowBox[{"-", "0.1700283424116845`"}], "+", 
            RowBox[{"0.27214323585941474`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"0.12370306937439732`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"0.03676523799648004`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"2.48859054425355`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
               RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
               RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}], "+", 
            RowBox[{"0.2184905074805855`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.09377644333450082`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.03363904363639862`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.030337107451252877`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "//.", "\[VeryThinSpace]", 
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}]], "Output",
 CellChangeTimes->{3.61876102370022*^9, 3.61876163147622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Dimensions", "[", "ha", "]"}]}]], "Input",
 CellChangeTimes->{{3.618651293282651*^9, 3.618651321526651*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.6187610237202206`*^9, 3.6187616315662203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ha", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Expectation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"lookey", " ", "\[Distributed]", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], "&"}], " ", "/@", 
    RowBox[{"Flatten", "[", "doop", "]"}]}], "//", "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}, {
   3.6184998897426014`*^9, 3.618499890762612*^9}, 3.6184999218229227`*^9, {
   3.618500989557705*^9, 3.618501056952385*^9}, {3.618501772587605*^9, 
   3.6185017733976135`*^9}, {3.618501847770361*^9, 3.6185018597644873`*^9}, {
   3.6185021226231403`*^9, 3.6185021229131436`*^9}, {3.6185022051179714`*^9, 
   3.6185022222521467`*^9}, {3.618574876317028*^9, 3.618574877927044*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(gtXFormedChebSubsNotStrings[theBasis]\\)}\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/reps\\\", ButtonNote -> \\\
\"ReplaceRepeated::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6187616328662205`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(gtXFormedChebSubsNotStrings[theBasis]\\)}\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/reps\\\", ButtonNote -> \\\
\"ReplaceRepeated::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6187616329262204`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.31067552891545963`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.5544207484258584`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.21871274604641222`", "\[VeryThinSpace]", "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.18466897899985657`"}], "-", 
                    RowBox[{"1.`", " ", "uu$Shock"}]}], ")"}]}], "-", 
                  RowBox[{"0.4945834390318737`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", "0.06832314894240037`"}]},
            {
             RowBox[{
              RowBox[{"-", "0.018170315355829608`"}], "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.051393412817620665`"}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "0.1581666531916422`"}], "-", 
                    RowBox[{"1.1128217735478778`", " ", "uu$Shock"}]}], 
                   ")"}]}], "-", 
                 RowBox[{"0.43679716616367514`", " ", "uu$Shock"}]}], ")"}]}],
               "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.05592035651469557`"}], "-", 
                 RowBox[{"0.3934419111638746`", " ", "uu$Shock"}]}], ")"}]}], 
              "-", 
              RowBox[{"0.15443111909870066`", " ", "uu$Shock"}]}], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}], ",", 
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.31067552891545963`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.5544207484258584`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.21871274604641222`", "\[VeryThinSpace]", "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.18466897899985657`"}], "-", 
                    RowBox[{"1.`", " ", "uu$Shock"}]}], ")"}]}], "-", 
                  RowBox[{"0.4945834390318737`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", "0.06832314894240037`"}]},
            {
             RowBox[{"0.015762159464935255`", "\[VeryThinSpace]", "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{"0.04850909626276101`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.3412981020147374`", " ", "uu$Shock"}]}], ")"}]}], 
              "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{"0.04458211937519774`", "\[VeryThinSpace]", "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.13720444366651757`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.9653368093628745`", " ", "uu$Shock"}]}], 
                   ")"}]}], "+", 
                 RowBox[{"0.37890738009094593`", " ", "uu$Shock"}]}], ")"}]}],
               "+", 
              RowBox[{"0.13396398895196826`", " ", "uu$Shock"}]}], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}], ",", "0", ",", 
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"0.016302870819177917`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.4458184323064736`", " ", "uu$Shock"}], "-", 
              RowBox[{"5.446175838387867`", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "-", 
              RowBox[{"6.548004838611184`", " ", 
               SuperscriptBox["uu$Shock", "3"]}], "+", 
              RowBox[{
               SuperscriptBox["ru", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.2918374097387398`"}], "-", 
                 RowBox[{"1.2445748669501484`", " ", "uu$Shock"}], "+", 
                 RowBox[{"3.150431783016983`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.01209302255106115`"}], "-", 
                 RowBox[{"2.296917423324774`", " ", "uu$Shock"}], "-", 
                 RowBox[{"2.939514526764189`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"6.300863566033966`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}], "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.013008285281024962`"}], "-", 
                 RowBox[{"1.125917126944024`", " ", "uu$Shock"}], "+", 
                 RowBox[{"0.9624571428010463`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"5.620826385389961`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}], "+", 
                 RowBox[{
                  SuperscriptBox["ru", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"0.17347139209371462`", "\[VeryThinSpace]", "+", 
                    RowBox[{"1.9887241228790384`", " ", "uu$Shock"}], "+", 
                    RowBox[{"5.682384347919627`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "0.021811994925147293`"}], "-", 
                    RowBox[{"0.3022998497636333`", " ", "uu$Shock"}], "+", 
                    RowBox[{"11.88081229654905`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}], "+", 
                    RowBox[{"11.364768695839254`", " ", 
                    SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}]}], ")"}]}]}], 
             RowBox[{
              RowBox[{
               RowBox[{"uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{"3.2410148194214856`", "\[VeryThinSpace]", "-", 
                  RowBox[{"3.430109610785988`", " ", "uu$Shock"}], "-", 
                  RowBox[{"3.5682500770986594`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["ru", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.17765518697049995`"}], "-", 
                  RowBox[{"0.6449823817379499`", " ", "uu$Shock"}], "+", 
                  RowBox[{"1.716786827394697`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.8418579348297622`", "\[VeryThinSpace]", "-", 
                  RowBox[{"2.890530781011746`", " ", "uu$Shock"}], "-", 
                  RowBox[{"1.3759011356702513`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}], "+", 
                  RowBox[{"3.433573654789394`", " ", 
                   SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}], "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.29624776329613217`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.589967907302929`", " ", "uu$Shock"}], "+", 
                  RowBox[{"0.7260414337792835`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}], "+", 
                  RowBox[{"3.06299623738211`", " ", 
                   SuperscriptBox["uu$Shock", "3"]}], "+", 
                  RowBox[{
                   SuperscriptBox["ru", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"0.10560021288576715`", "\[VeryThinSpace]", "+", 
                    RowBox[{"1.1436702954408944`", " ", "uu$Shock"}], "+", 
                    RowBox[{"3.0965414484740905`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.37520290633138437`"}], "-", 
                    RowBox[{"0.9720982427987404`", " ", "uu$Shock"}], "+", 
                    RowBox[{"6.881834946954954`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}], "+", 
                    RowBox[{"6.193082896948181`", " ", 
                    SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}]}], ")"}]}]}],
               "\[GreaterEqual]", "0.2516867395607647`"}]},
            {
             RowBox[{"0.035836295632975024`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.8095640761353111`", " ", "uu$Shock"}], "-", 
              RowBox[{"3.430109610785988`", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "-", 
              RowBox[{"3.568250077098659`", " ", 
               SuperscriptBox["uu$Shock", "3"]}], "+", 
              RowBox[{
               SuperscriptBox["ru", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.17765518697049992`"}], "-", 
                 RowBox[{"0.6449823817379499`", " ", "uu$Shock"}], "+", 
                 RowBox[{"1.716786827394697`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{"0.09216761029052245`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.1470790436056726`", " ", "uu$Shock"}], "-", 
                 RowBox[{"1.375901135670251`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"3.433573654789394`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}], "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{"0.03922989850754105`", "\[VeryThinSpace]", "-", 
                 RowBox[{"0.6393018742739921`", " ", "uu$Shock"}], "+", 
                 RowBox[{"0.7260414337792835`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"3.06299623738211`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}], "+", 
                 RowBox[{
                  SuperscriptBox["ru", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"0.10560021288576715`", "\[VeryThinSpace]", "+", 
                    RowBox[{"1.1436702954408944`", " ", "uu$Shock"}], "+", 
                    RowBox[{"3.0965414484740905`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.014464210116829357`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.6679725431127759`", " ", "uu$Shock"}], "+", 
                    RowBox[{"6.881834946954954`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}], "+", 
                    RowBox[{"6.193082896948181`", " ", 
                    SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}]}], ")"}]}]}], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}], ",", 
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"0.20396081723244938`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.1454486736586889`", " ", "uu$Shock"}], "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.6687147308125265`"}], "+", 
                 RowBox[{"2.1144662452491767`", " ", "uu$Shock"}]}], ")"}]}], 
              "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.44831093952601114`"}], "+", 
                 RowBox[{"2.0465202159737443`", " ", "uu$Shock"}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.75493657181416`", "\[VeryThinSpace]", "+", 
                    RowBox[{"4.56674912716431`", " ", "uu$Shock"}]}], 
                   ")"}]}]}], ")"}]}]}], 
             RowBox[{
              RowBox[{
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.31067552891545963`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.5544207484258584`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.21871274604641222`", "\[VeryThinSpace]", "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.18466897899985657`"}], "-", 
                    RowBox[{"1.`", " ", "uu$Shock"}]}], ")"}]}], "-", 
                  RowBox[{"0.4945834390318737`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", "0.06832314894240037`"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}]}], "}"}], "//.", "\[VeryThinSpace]", 
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}]], "Output",
 CellChangeTimes->{3.6187610237602205`*^9, 3.6187616329462204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"fv", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", "8"}], "]"}], "//", 
   "Chop"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185876736103635`*^9, 3.618587683830466*^9}, {
  3.6185878718783774`*^9, 3.618587896958628*^9}, {3.6186516925521326`*^9, 
  3.6186516941721163`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {
     RowBox[{"-", "7.938361447357156`*^-9"}], "0", 
     RowBox[{"-", "7.938361464704391`*^-9"}], "0", 
     RowBox[{"-", "7.938361450826603`*^-9"}], "0", "0", "0"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6187610237802205`*^9, 3.6187616333862205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "ha", "]"}], ",", "7"}], "]"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185879085087433`*^9, 3.61858794156108*^9}, {
  3.618587971782382*^9, 3.6185879798124623`*^9}, {3.618651136660492*^9, 
  3.6186511594414034`*^9}, {3.618651345296651*^9, 3.6186513469866505`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "argrx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceRepeated\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(2\\)\[NoBreak] \
arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ReplaceRepeated\\\", ButtonNote -> \
\\\"ReplaceRepeated::argrx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6187616335362206`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"Transpose", "[", 
   RowBox[{"ReplaceRepeated", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6187610238002205`*^9, 3.6187616335362206`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fVec", "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6185876238858595`*^9, 3.6185876255558767`*^9}, {
  3.6186539464206505`*^9, 3.6186539487006283`*^9}}],

Cell[BoxData["fVec"], "Output",
 CellChangeTimes->{3.6187610238202205`*^9, 3.6187616335762205`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6186514035506506`*^9, 3.618651405850651*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186534046210537`*^9, 3.618653406841031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6187610238502207`*^9, 3.6187616336262207`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvRange", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618588399112706*^9, 3.6185884625973487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "fvRange", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6185884391271143`*^9, 3.6185884674114037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "13", ",", "40", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6187610239002204`*^9, 3.6187616336962204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polys1$1$1", "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.618594640541397*^9, 3.618594652531517*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.1500283424116845`"}], "+", 
    RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
    RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
    RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
    RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
    RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
    RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
    RowBox[{"2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
   ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5`", " ", "ru"}], "+", 
    RowBox[{"1.`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.053932474820764846`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.09597553219281844`", " ", "qq"}], "+", 
    RowBox[{"0.10442945277745663`", " ", "ru"}], "+", 
    RowBox[{"0.29537109685815977`", " ", "qq", " ", "ru"}], "+", 
    RowBox[{"0.288395108050669`", " ", "uu$Shock"}], "+", 
    RowBox[{"0.8157045462546211`", " ", "qq", " ", "uu$Shock"}], "+", 
    RowBox[{"0.734740013178612`", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{"2.0781585829107523`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
   ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"4.56674912716431`", " ", 
           RowBox[{"(", 
            RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
             RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
             RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
            RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
            RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
           "\[GreaterEqual]", "0.1700283424116845`"}]},
         {
          RowBox[{"2.48859054425355`", " ", 
           RowBox[{"(", 
            RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
             RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
             RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.2570178647885911`", " ", "qq"}], "-", 
    RowBox[{"0.7496903245392398`", " ", "ru"}], "+", 
    RowBox[{"0.3896671164482138`", " ", "qq", " ", "ru"}], "-", 
    RowBox[{"1.4314507432861745`", " ", "uu$Shock"}], "+", 
    RowBox[{"0.950666033028937`", " ", "qq", " ", "uu$Shock"}], "+", 
    RowBox[{"1.7434517374060734`", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "0.30412569968596453`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6187610239202204`*^9, 3.6187616337362204`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.618652540959446*^9, 3.618652542249446*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res3$3$1", "=", 
   RowBox[{"res2$2$1", "[", 
    RowBox[{"toOrder", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res3$3$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys3$3$1", "=", 
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
    "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6185830936430144`*^9, 3.618583103103109*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"drum", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"collocateParamsRange", "[", 
     RowBox[{"modEqns", ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", 
        RowBox[{"-", "8"}], ",", "1."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", ".02", ",", 
        "1."}], "}"}], ",", "500"}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6185038148502083`*^9, 3.6185039708517847`*^9}, {
   3.618504085428938*^9, 3.618504088008964*^9}, {3.6185051587537746`*^9, 
   3.6185051602037888`*^9}, {3.6185055077672987`*^9, 
   3.6185055322915506`*^9}, {3.618507146149193*^9, 3.618507147649193*^9}, {
   3.618507257597193*^9, 3.6185072602171926`*^9}, 3.618507367711193*^9, {
   3.6185075864182816`*^9, 3.618507595538373*^9}, {3.61850764858291*^9, 
   3.618507657583*^9}, {3.6185719782292852`*^9, 3.6185719815790176`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fv", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";", 
  RowBox[{"xv", "=", 
   RowBox[{"getAllXVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618502361719551*^9, 3.618502390709841*^9}, {
  3.6185024400643406`*^9, 3.6185024581685276`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fv", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618573593848198*^9, 3.618573596708226*^9}, {
  3.6185741309455705`*^9, 3.6185741453697186`*^9}, {3.6185741753800187`*^9, 
  3.6185741816400814`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.1176863609635897`*^-17", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "1.5296389323453098`*^-19", "}"}], ",", 
   RowBox[{"{", "1.1102230246251565`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "3.057961158591558`*^-17"}], "}"}], ",", 
   RowBox[{"{", "1.6653345369377348`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.551115123125783`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.551115123125783`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "9.6398189292664`*^-18"}], "}"}], ",", 
   RowBox[{"{", "6.938893903907228`*^-18", "}"}], ",", 
   RowBox[{"{", "1.0561304335505067`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1.3877787807814457`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.017127114364504`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "8.326672684688674`*^-17"}], "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", "1.3877787807814457`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1.3877787807814457`*^-17"}], "}"}], ",", 
   RowBox[{"{", "7.840950111415168`*^-16", "}"}], ",", 
   RowBox[{"{", "1.5265566588595902`*^-16", "}"}], ",", 
   RowBox[{"{", "5.551115123125783`*^-16", "}"}], ",", 
   RowBox[{"{", "1.6653345369377348`*^-16", "}"}], ",", 
   RowBox[{"{", "4.996003610813204`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.7755575615628914`*^-16"}], "}"}], ",", 
   RowBox[{"{", "5.551115123125783`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.220446049250313`*^-16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.938361447357156`*^-9"}], "}"}], ",", 
   RowBox[{"{", "6.938893903907228`*^-18", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.938361464704391`*^-9"}], "}"}], ",", 
   RowBox[{"{", "5.551115123125783`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.938361450826603`*^-9"}], "}"}], ",", 
   RowBox[{"{", "1.6653345369377348`*^-16", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
   RowBox[{"{", "0.`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6187610235002203`*^9, 3.6187616309562206`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", " ", "/@", 
  RowBox[{"fv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618507170819193*^9, 3.6185072071031933`*^9}, {
  3.618507447869193*^9, 3.6185075040534534`*^9}, {3.6185076273626976`*^9, 
  3.618507639252817*^9}, {3.618573613288392*^9, 3.6185736224084835`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.168750759954107`", ",", "0.7883029183336366`", ",", 
   "0.03915536124910787`", ",", "0.01448682472482485`", ",", 
   "0.003246462212430605`", ",", "0.0006885359380341203`", ",", 
   "0.00014661063978193536`", ",", "0.00003124461275021855`", ",", 
   "6.6598235825568026`*^-6", ",", "1.4196028347893028`*^-6", ",", 
   "3.026038975277007`*^-7", ",", "6.450344764420138`*^-8", ",", 
   "1.3749645367687174`*^-8"}], "}"}]], "Output",
 CellChangeTimes->{3.6187610235202208`*^9, 3.61876163097622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"curious", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceVariables", "[", 
       RowBox[{"lucaMod", ",", "polys1$1$1", ",", 
        RowBox[{"{", 
         RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "//.", 
      "lucaSubs"}], "//", "Expand"}], "//", "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
   3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
   3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}, {
   3.618421746548664*^9, 3.6184217517987165`*^9}, {3.6184218192733965`*^9, 
   3.6184218298235025`*^9}, 3.6184267575071*^9, {3.6184959477288265`*^9, 
   3.6184959523288727`*^9}, 3.618498183979375*^9, {3.618500894470745*^9, 
   3.6185008984227867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.6187610235402203`*^9, 3.6187616309962206`*^9}],

Cell[BoxData["\<\"need modification to actually compute expected value\"\>"], \
"Print",
 CellChangeTimes->{3.6187610235402203`*^9, 3.6187616310362206`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["forCurious"], "Input",
 CellChangeTimes->{{3.6185855426288047`*^9, 3.618585544558824*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.07168592066218857`", ",", "0.`", ",", "0.23696223167815467`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.07168592066218857`", ",", "0.`", ",", "0.23696223167815467`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5354845307277833`", ",", 
       RowBox[{"-", "0.5354845307277833`"}], ",", "0.6172963046806865`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5354845307277833`", ",", "0.4645154692722171`", ",", 
       "0.6172963046806865`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.14337184132437714`", ",", 
       RowBox[{"-", "0.14337184132437714`"}], ",", "0.47392446335630933`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.14337184132437714`", ",", 
       RowBox[{"-", "0.14337184132437714`"}], ",", "0.47392446335630933`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6187610235902205`*^9, 3.61876163105622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["polys1$1$1"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.1500283424116845`"}], "+", 
    RowBox[{"0.27214323585941474`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.12370306937439732`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.03676523799648004`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.2184905074805855`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.09377644333450082`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.03363904363639862`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "-", 
    RowBox[{"0.030337107451252877`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.08`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.1523809708335952`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"0.053932474820764846`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.04798776609640922`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.01670871244439306`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.023629687748652782`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.04394592654842053`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.062148925335828206`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.01791366344295127`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.025333745792808712`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"4.56674912716431`", " ", 
           RowBox[{"(", 
            RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
             RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
             RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
            RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
            RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
           "\[GreaterEqual]", "0.1700283424116845`"}]},
         {
          RowBox[{"2.48859054425355`", " ", 
           RowBox[{"(", 
            RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
             RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
             RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12850893239429556`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "-", 
    RowBox[{"0.11995045192627837`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.031173369315857104`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "-", 
    RowBox[{"0.2181258539624187`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.07243170652573605`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.042507018935592916`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}], "+", 
    RowBox[{"0.003707437549887496`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.562499205311084`", " ", 
        RowBox[{"(", 
         RowBox[{"0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
          ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6187610236102204`*^9, 3.6187616310862207`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"PiecewiseExpand", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"curious", "//.", "lucaSubs"}], "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
   3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
   3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
   3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
   3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
   3.6184252168401365`*^9, 3.6184252176101365`*^9}, 3.6185009454232564`*^9, {
   3.6185014575884275`*^9, 3.6185014761286125`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doop", "=", 
  RowBox[{
   RowBox[{"huh", "//.", 
    RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}, {
   3.618501731363187*^9, 3.618501732103194*^9}, {3.6185018414602976`*^9, 
   3.618501842520308*^9}, 3.618574516393429*^9, {3.6185750502587676`*^9, 
   3.6185750560088253`*^9}, {3.618584449409746*^9, 3.618584450629758*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(gtXFormedChebSubsNotStrings[theBasis]\\)}\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/reps\\\", ButtonNote -> \\\
\"ReplaceRepeated::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61876163139622*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "0.10921786250257334`"}], "+", 
            RowBox[{"0.24006357307221765`", " ", "qq"}], "+", 
            RowBox[{"0.35808639381990176`", " ", "ru"}], "-", 
            RowBox[{"0.404256855887147`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"0.6133700454868851`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.0958799174756222`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.1322639650769952`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.445423513311089`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "+", 
            RowBox[{"2.445423513311095`", " ", 
             RowBox[{"(", 
              RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
               RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
               RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
             RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
             RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            "\[GreaterEqual]", "0.1700283424116845`"}]},
          {
           RowBox[{
            RowBox[{"-", "0.10921786250257334`"}], "+", 
            RowBox[{"0.24006357307221765`", " ", "qq"}], "+", 
            RowBox[{"0.35808639381990176`", " ", "ru"}], "-", 
            RowBox[{"0.404256855887147`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"0.6133700454868851`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.0958799174756222`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.1322639650769952`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.445423513311089`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "+", 
            RowBox[{"1.3326017397632113`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
               RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
               RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"0.09474295472987601`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.20824736645379338`", " ", "qq"}], "-", 
            RowBox[{"0.3106283369926249`", " ", "ru"}], "+", 
            RowBox[{"0.35067971592701325`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"0.5320786281718038`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9506402984981219`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9822022801721844`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "2.1213256138532133`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"2.121325613853215`", " ", 
             RowBox[{"(", 
              RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
               RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
               RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
             RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
             RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            "\[GreaterEqual]", "0.1700283424116845`"}]},
          {
           RowBox[{"0.09474295472987601`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.20824736645379338`", " ", "qq"}], "-", 
            RowBox[{"0.3106283369926249`", " ", "ru"}], "+", 
            RowBox[{"0.35067971592701325`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"0.5320786281718038`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9506402984981219`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"0.9822022801721844`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "2.1213256138532133`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"1.1559888044903388`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
               RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
               RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", "0", ",", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.2570178647885911`", " ", "qq"}], "-", 
            RowBox[{"0.7496903245392398`", " ", "ru"}], "+", 
            RowBox[{"0.3896671164482138`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"1.4314507432861745`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.950666033028937`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"1.7434517374060734`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "0.30412569968596453`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"4.56674912716431`", " ", 
             RowBox[{"(", 
              RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "-", 
               RowBox[{"0.14643123854446546`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.4630134448752037`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
               RowBox[{"0.09816850609536036`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.4481350209934822`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.16531159273093954`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"1.`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.08165839714908019`"}], "+", 
             RowBox[{"0.29624776329613217`", " ", "qq"}], "+", 
             RowBox[{"0.8418579348297622`", " ", "ru"}], "-", 
             RowBox[{"0.37520290633138437`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.17765518697049995`", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"0.10560021288576715`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"]}], "+", 
             RowBox[{"3.2410148194214856`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.589967907302929`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"2.890530781011746`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "0.9720982427987404`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
             "-", 
             RowBox[{"0.6449823817379499`", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "+", 
             RowBox[{"1.1436702954408944`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", "uu$Shock"}], "-", 
             RowBox[{"3.430109610785988`", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"0.7260414337792835`", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "-", 
             RowBox[{"1.3759011356702513`", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"6.881834946954954`", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"1.716786827394697`", " ", 
              SuperscriptBox["ru", "2"], " ", 
              SuperscriptBox["uu$Shock", "2"]}], "+", 
             RowBox[{"3.0965414484740905`", " ", "qq", " ", 
              SuperscriptBox["ru", "2"], " ", 
              SuperscriptBox["uu$Shock", "2"]}], "-", 
             RowBox[{"3.5682500770986594`", " ", 
              SuperscriptBox["uu$Shock", "3"]}], "+", 
             RowBox[{"3.06299623738211`", " ", "qq", " ", 
              SuperscriptBox["uu$Shock", "3"]}], "+", 
             RowBox[{"3.433573654789394`", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "3"]}], "+", 
             RowBox[{"6.193082896948181`", " ", "qq", " ", "ru", " ", 
              SuperscriptBox["uu$Shock", "3"]}]}], "\[GreaterEqual]", 
            "0.1700283424116845`"}]},
          {
           RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.2570178647885911`", " ", "qq"}], "-", 
            RowBox[{"0.7496903245392398`", " ", "ru"}], "+", 
            RowBox[{"0.3896671164482138`", " ", "qq", " ", "ru"}], "-", 
            RowBox[{"1.4314507432861745`", " ", "uu$Shock"}], "+", 
            RowBox[{"0.950666033028937`", " ", "qq", " ", "uu$Shock"}], "+", 
            RowBox[{"1.7434517374060734`", " ", "ru", " ", "uu$Shock"}], "+", 
            RowBox[{
            "0.30412569968596453`", " ", "qq", " ", "ru", " ", "uu$Shock"}], 
            "-", 
            RowBox[{"2.48859054425355`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "-", 
               RowBox[{"0.31067552891545963`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.5544207484258584`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
               RowBox[{"0.21871274604641222`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.4945834390318737`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"0.18466897899985657`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"1.`", " ", "uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.08`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.1523809708335952`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.1500283424116845`"}], "+", 
                  RowBox[{"0.27214323585941474`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.12370306937439732`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03676523799648004`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}]}], "+", 
                  RowBox[{"0.2184905074805855`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.09377644333450082`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.03363904363639862`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}], "-", 
                  RowBox[{"0.030337107451252877`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.25`", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"6.562499205311084`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.1523809708335952`", "\[VeryThinSpace]", "+", 
                    "uu$Shock"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"4.56674912716431`", " ", 
            RowBox[{"(", 
             RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
              RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
              RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
              RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
              RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], 
              "+", 
              RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], 
              "+", 
              RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
             ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
             RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
             RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
             RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
             RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
             RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
             RowBox[{
             "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            "\[GreaterEqual]", "0.1700283424116845`"}]},
          {
           RowBox[{
            RowBox[{"-", "0.1700283424116845`"}], "+", 
            RowBox[{"0.27214323585941474`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"0.12370306937439732`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"0.03676523799648004`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"2.48859054425355`", " ", 
             RowBox[{"(", 
              RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
               RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
               RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
               RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], 
               "+", 
               RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
              ")"}]}], "+", 
            RowBox[{"0.2184905074805855`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.09377644333450082`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.03363904363639862`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}], "-", 
            RowBox[{"0.030337107451252877`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.25`", " ", 
                RowBox[{"(", 
                 RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"6.562499205311084`", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.1523809708335952`", "\[VeryThinSpace]", "+", "uu$Shock"}],
                  ")"}]}]}], ")"}]}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "//.", "\[VeryThinSpace]", 
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}]], "Output",
 CellChangeTimes->{3.61876102370022*^9, 3.61876163147622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Dimensions", "[", "ha", "]"}]}]], "Input",
 CellChangeTimes->{{3.618651293282651*^9, 3.618651321526651*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.6187610237202206`*^9, 3.6187616315662203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ha", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Expectation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"lookey", " ", "\[Distributed]", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], "&"}], " ", "/@", 
    RowBox[{"Flatten", "[", "doop", "]"}]}], "//", "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}, {
   3.6184998897426014`*^9, 3.618499890762612*^9}, 3.6184999218229227`*^9, {
   3.618500989557705*^9, 3.618501056952385*^9}, {3.618501772587605*^9, 
   3.6185017733976135`*^9}, {3.618501847770361*^9, 3.6185018597644873`*^9}, {
   3.6185021226231403`*^9, 3.6185021229131436`*^9}, {3.6185022051179714`*^9, 
   3.6185022222521467`*^9}, {3.618574876317028*^9, 3.618574877927044*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(gtXFormedChebSubsNotStrings[theBasis]\\)}\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/reps\\\", ButtonNote -> \\\
\"ReplaceRepeated::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6187616328662205`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(gtXFormedChebSubsNotStrings[theBasis]\\)}\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/reps\\\", ButtonNote -> \\\
\"ReplaceRepeated::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6187616329262204`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.31067552891545963`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.5544207484258584`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.21871274604641222`", "\[VeryThinSpace]", "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.18466897899985657`"}], "-", 
                    RowBox[{"1.`", " ", "uu$Shock"}]}], ")"}]}], "-", 
                  RowBox[{"0.4945834390318737`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", "0.06832314894240037`"}]},
            {
             RowBox[{
              RowBox[{"-", "0.018170315355829608`"}], "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.051393412817620665`"}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "0.1581666531916422`"}], "-", 
                    RowBox[{"1.1128217735478778`", " ", "uu$Shock"}]}], 
                   ")"}]}], "-", 
                 RowBox[{"0.43679716616367514`", " ", "uu$Shock"}]}], ")"}]}],
               "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.05592035651469557`"}], "-", 
                 RowBox[{"0.3934419111638746`", " ", "uu$Shock"}]}], ")"}]}], 
              "-", 
              RowBox[{"0.15443111909870066`", " ", "uu$Shock"}]}], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}], ",", 
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"0", 
             RowBox[{
              RowBox[{
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.31067552891545963`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.5544207484258584`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.21871274604641222`", "\[VeryThinSpace]", "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.18466897899985657`"}], "-", 
                    RowBox[{"1.`", " ", "uu$Shock"}]}], ")"}]}], "-", 
                  RowBox[{"0.4945834390318737`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", "0.06832314894240037`"}]},
            {
             RowBox[{"0.015762159464935255`", "\[VeryThinSpace]", "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{"0.04850909626276101`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.3412981020147374`", " ", "uu$Shock"}]}], ")"}]}], 
              "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{"0.04458211937519774`", "\[VeryThinSpace]", "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.13720444366651757`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.9653368093628745`", " ", "uu$Shock"}]}], 
                   ")"}]}], "+", 
                 RowBox[{"0.37890738009094593`", " ", "uu$Shock"}]}], ")"}]}],
               "+", 
              RowBox[{"0.13396398895196826`", " ", "uu$Shock"}]}], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}], ",", "0", ",", 
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"0.016302870819177917`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.4458184323064736`", " ", "uu$Shock"}], "-", 
              RowBox[{"5.446175838387867`", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "-", 
              RowBox[{"6.548004838611184`", " ", 
               SuperscriptBox["uu$Shock", "3"]}], "+", 
              RowBox[{
               SuperscriptBox["ru", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.2918374097387398`"}], "-", 
                 RowBox[{"1.2445748669501484`", " ", "uu$Shock"}], "+", 
                 RowBox[{"3.150431783016983`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.01209302255106115`"}], "-", 
                 RowBox[{"2.296917423324774`", " ", "uu$Shock"}], "-", 
                 RowBox[{"2.939514526764189`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"6.300863566033966`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}], "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.013008285281024962`"}], "-", 
                 RowBox[{"1.125917126944024`", " ", "uu$Shock"}], "+", 
                 RowBox[{"0.9624571428010463`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"5.620826385389961`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}], "+", 
                 RowBox[{
                  SuperscriptBox["ru", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"0.17347139209371462`", "\[VeryThinSpace]", "+", 
                    RowBox[{"1.9887241228790384`", " ", "uu$Shock"}], "+", 
                    RowBox[{"5.682384347919627`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "0.021811994925147293`"}], "-", 
                    RowBox[{"0.3022998497636333`", " ", "uu$Shock"}], "+", 
                    RowBox[{"11.88081229654905`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}], "+", 
                    RowBox[{"11.364768695839254`", " ", 
                    SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}]}], ")"}]}]}], 
             RowBox[{
              RowBox[{
               RowBox[{"uu$Shock", " ", 
                RowBox[{"(", 
                 RowBox[{"3.2410148194214856`", "\[VeryThinSpace]", "-", 
                  RowBox[{"3.430109610785988`", " ", "uu$Shock"}], "-", 
                  RowBox[{"3.5682500770986594`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["ru", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.17765518697049995`"}], "-", 
                  RowBox[{"0.6449823817379499`", " ", "uu$Shock"}], "+", 
                  RowBox[{"1.716786827394697`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.8418579348297622`", "\[VeryThinSpace]", "-", 
                  RowBox[{"2.890530781011746`", " ", "uu$Shock"}], "-", 
                  RowBox[{"1.3759011356702513`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}], "+", 
                  RowBox[{"3.433573654789394`", " ", 
                   SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}], "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.29624776329613217`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.589967907302929`", " ", "uu$Shock"}], "+", 
                  RowBox[{"0.7260414337792835`", " ", 
                   SuperscriptBox["uu$Shock", "2"]}], "+", 
                  RowBox[{"3.06299623738211`", " ", 
                   SuperscriptBox["uu$Shock", "3"]}], "+", 
                  RowBox[{
                   SuperscriptBox["ru", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"0.10560021288576715`", "\[VeryThinSpace]", "+", 
                    RowBox[{"1.1436702954408944`", " ", "uu$Shock"}], "+", 
                    RowBox[{"3.0965414484740905`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.37520290633138437`"}], "-", 
                    RowBox[{"0.9720982427987404`", " ", "uu$Shock"}], "+", 
                    RowBox[{"6.881834946954954`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}], "+", 
                    RowBox[{"6.193082896948181`", " ", 
                    SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}]}], ")"}]}]}],
               "\[GreaterEqual]", "0.2516867395607647`"}]},
            {
             RowBox[{"0.035836295632975024`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.8095640761353111`", " ", "uu$Shock"}], "-", 
              RowBox[{"3.430109610785988`", " ", 
               SuperscriptBox["uu$Shock", "2"]}], "-", 
              RowBox[{"3.568250077098659`", " ", 
               SuperscriptBox["uu$Shock", "3"]}], "+", 
              RowBox[{
               SuperscriptBox["ru", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.17765518697049992`"}], "-", 
                 RowBox[{"0.6449823817379499`", " ", "uu$Shock"}], "+", 
                 RowBox[{"1.716786827394697`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{"0.09216761029052245`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.1470790436056726`", " ", "uu$Shock"}], "-", 
                 RowBox[{"1.375901135670251`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"3.433573654789394`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}], "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{"0.03922989850754105`", "\[VeryThinSpace]", "-", 
                 RowBox[{"0.6393018742739921`", " ", "uu$Shock"}], "+", 
                 RowBox[{"0.7260414337792835`", " ", 
                  SuperscriptBox["uu$Shock", "2"]}], "+", 
                 RowBox[{"3.06299623738211`", " ", 
                  SuperscriptBox["uu$Shock", "3"]}], "+", 
                 RowBox[{
                  SuperscriptBox["ru", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{"0.10560021288576715`", "\[VeryThinSpace]", "+", 
                    RowBox[{"1.1436702954408944`", " ", "uu$Shock"}], "+", 
                    RowBox[{"3.0965414484740905`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}]}], ")"}]}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.014464210116829357`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.6679725431127759`", " ", "uu$Shock"}], "+", 
                    RowBox[{"6.881834946954954`", " ", 
                    SuperscriptBox["uu$Shock", "2"]}], "+", 
                    RowBox[{"6.193082896948181`", " ", 
                    SuperscriptBox["uu$Shock", "3"]}]}], ")"}]}]}], ")"}]}]}], 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}], ",", 
    RowBox[{"1.0000000000000002`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"0.20396081723244938`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.1454486736586889`", " ", "uu$Shock"}], "+", 
              RowBox[{"ru", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.6687147308125265`"}], "+", 
                 RowBox[{"2.1144662452491767`", " ", "uu$Shock"}]}], ")"}]}], 
              "+", 
              RowBox[{"qq", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.44831093952601114`"}], "+", 
                 RowBox[{"2.0465202159737443`", " ", "uu$Shock"}], "+", 
                 RowBox[{"ru", " ", 
                  RowBox[{"(", 
                   RowBox[{"0.75493657181416`", "\[VeryThinSpace]", "+", 
                    RowBox[{"4.56674912716431`", " ", "uu$Shock"}]}], 
                   ")"}]}]}], ")"}]}]}], 
             RowBox[{
              RowBox[{
               RowBox[{"ru", " ", 
                RowBox[{"(", 
                 RowBox[{"0.31067552891545963`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.5544207484258584`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"qq", " ", 
                RowBox[{"(", 
                 RowBox[{"0.21871274604641222`", "\[VeryThinSpace]", "+", 
                  RowBox[{"ru", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.18466897899985657`"}], "-", 
                    RowBox[{"1.`", " ", "uu$Shock"}]}], ")"}]}], "-", 
                  RowBox[{"0.4945834390318737`", " ", "uu$Shock"}]}], ")"}]}],
                "+", 
               RowBox[{"0.5761670135009846`", " ", "uu$Shock"}]}], 
              "\[GreaterEqual]", "0.06832314894240037`"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ")"}]}]}], "}"}], "//.", "\[VeryThinSpace]", 
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}]], "Output",
 CellChangeTimes->{3.6187610237602205`*^9, 3.6187616329462204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"fv", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", "8"}], "]"}], "//", 
   "Chop"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185876736103635`*^9, 3.618587683830466*^9}, {
  3.6185878718783774`*^9, 3.618587896958628*^9}, {3.6186516925521326`*^9, 
  3.6186516941721163`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0"},
    {
     RowBox[{"-", "7.938361447357156`*^-9"}], "0", 
     RowBox[{"-", "7.938361464704391`*^-9"}], "0", 
     RowBox[{"-", "7.938361450826603`*^-9"}], "0", "0", "0"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6187610237802205`*^9, 3.6187616333862205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "ha", "]"}], ",", "7"}], "]"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185879085087433`*^9, 3.61858794156108*^9}, {
  3.618587971782382*^9, 3.6185879798124623`*^9}, {3.618651136660492*^9, 
  3.6186511594414034`*^9}, {3.618651345296651*^9, 3.6186513469866505`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceRepeated", "::", "argrx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(ReplaceRepeated\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(2\\)\[NoBreak] \
arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ReplaceRepeated\\\", ButtonNote -> \
\\\"ReplaceRepeated::argrx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6187616335362206`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"Transpose", "[", 
   RowBox[{"ReplaceRepeated", "[", "]"}], "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6187610238002205`*^9, 3.6187616335362206`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fVec", "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6185876238858595`*^9, 3.6185876255558767`*^9}, {
  3.6186539464206505`*^9, 3.6186539487006283`*^9}}],

Cell[BoxData["fVec"], "Output",
 CellChangeTimes->{3.6187610238202205`*^9, 3.6187616335762205`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6186514035506506`*^9, 3.618651405850651*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186534046210537`*^9, 3.618653406841031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6187610238502207`*^9, 3.6187616336262207`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvRange", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618588399112706*^9, 3.6185884625973487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "fvRange", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6185884391271143`*^9, 3.6185884674114037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "13", ",", "40", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6187610239002204`*^9, 3.6187616336962204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polys1$1$1", "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.618594640541397*^9, 3.618594652531517*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.1500283424116845`"}], "+", 
    RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
    RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
    RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
    RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
    RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
    RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
    RowBox[{"2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
   ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.5`", " ", "ru"}], "+", 
    RowBox[{"1.`", " ", "uu$Shock"}]}], ",", 
   RowBox[{"0.053932474820764846`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.09597553219281844`", " ", "qq"}], "+", 
    RowBox[{"0.10442945277745663`", " ", "ru"}], "+", 
    RowBox[{"0.29537109685815977`", " ", "qq", " ", "ru"}], "+", 
    RowBox[{"0.288395108050669`", " ", "uu$Shock"}], "+", 
    RowBox[{"0.8157045462546211`", " ", "qq", " ", "uu$Shock"}], "+", 
    RowBox[{"0.734740013178612`", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{"2.0781585829107523`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
   ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"4.56674912716431`", " ", 
           RowBox[{"(", 
            RowBox[{"0.04466214621233144`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.09816850609536036`", " ", "qq"}], "-", 
             RowBox[{"0.14643123854446546`", " ", "ru"}], "+", 
             RowBox[{"0.16531159273093954`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.2508236475801216`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4481350209934822`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4630134448752037`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"0.5442864717188295`", " ", "qq"}], "+", 
            RowBox[{"0.7731441835899833`", " ", "ru"}], "-", 
            RowBox[{"0.4595654749560005`", " ", "qq", " ", "ru"}], "+", 
            RowBox[{"1.433843781709358`", " ", "uu$Shock"}], "-", 
            RowBox[{"1.230815669719123`", " ", "qq", " ", "uu$Shock"}], "-", 
            RowBox[{"1.3797262320705677`", " ", "ru", " ", "uu$Shock"}], "-", 
            RowBox[{
            "2.48859054425355`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
           "\[GreaterEqual]", "0.1700283424116845`"}]},
         {
          RowBox[{"2.48859054425355`", " ", 
           RowBox[{"(", 
            RowBox[{"0.06832314894240037`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.21871274604641222`", " ", "qq"}], "-", 
             RowBox[{"0.31067552891545963`", " ", "ru"}], "+", 
             RowBox[{"0.18466897899985657`", " ", "qq", " ", "ru"}], "-", 
             RowBox[{"0.5761670135009846`", " ", "uu$Shock"}], "+", 
             RowBox[{"0.4945834390318737`", " ", "qq", " ", "uu$Shock"}], "+", 
             RowBox[{"0.5544207484258584`", " ", "ru", " ", "uu$Shock"}], "+", 
             RowBox[{"1.`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}], 
            ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0.2875230351937397`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.2570178647885911`", " ", "qq"}], "-", 
    RowBox[{"0.7496903245392398`", " ", "ru"}], "+", 
    RowBox[{"0.3896671164482138`", " ", "qq", " ", "ru"}], "-", 
    RowBox[{"1.4314507432861745`", " ", "uu$Shock"}], "+", 
    RowBox[{"0.950666033028937`", " ", "qq", " ", "uu$Shock"}], "+", 
    RowBox[{"1.7434517374060734`", " ", "ru", " ", "uu$Shock"}], "+", 
    RowBox[{
    "0.30412569968596453`", " ", "qq", " ", "ru", " ", "uu$Shock"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6187610239202204`*^9, 3.6187616337362204`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.618652540959446*^9, 3.618652542249446*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lagrangian Characterization", "Section",
 CellChangeTimes->{{3.618161018883319*^9, 3.618161026312069*^9}}],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}], "+", " ", 
        RowBox[{
         RowBox[{"lambda", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
          ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lambda", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"eqvdIf", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"zzT", "[", "t", "]"}], "\[GreaterEqual]", "rUnderBar"}], 
          ",", 
          RowBox[{"zzT", "[", "t", "]"}], ",", 
          RowBox[{"zzF", "[", "t", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zzT", "[", "t", "]"}], "-", " ", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zzF", "[", "t", "]"}], "-", "rUnderBar"}]}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"rr", "[", "t", "]"}], "-", 
      RowBox[{
       RowBox[{"eqvdIf", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"lambda", "[", "t", "]"}], "\[GreaterEqual]", "0"}], ",", 
         "rUnderBar", ",", 
         RowBox[{"phip", "*", 
          RowBox[{"qq", "[", "t", "]"}]}]}], "]"}], " ", "should", " ", "fix",
        " ", "codesubs"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6181615332420692`*^9, 3.618161582344569*^9}, {
   3.618164221779069*^9, 3.618164225962819*^9}, {3.6181642809460692`*^9, 
   3.618164297294819*^9}, {3.6181652195085692`*^9, 3.6181652329598193`*^9}, {
   3.6181653021635695`*^9, 3.6181653078635693`*^9}, {3.618166246271819*^9, 
   3.6181662568418193`*^9}, {3.618167466622819*^9, 3.618167470505319*^9}, {
   3.618167550833069*^9, 3.6181675542068195`*^9}, 3.6182378559250584`*^9, {
   3.6182426906953087`*^9, 3.618242698692808*^9}, {3.6184220122313385`*^9, 
   3.618422023161448*^9}, {3.618426474936246*^9, 3.6184264756762533`*^9}, {
   3.6184280274519243`*^9, 3.61842803300198*^9}, {3.6184284588822803`*^9, 
   3.618428525516981*^9}, {3.618428769603446*^9, 3.6184288569063225`*^9}, {
   3.6184296114959345`*^9, 3.6184296452962723`*^9}, {3.618429786433695*^9, 
   3.618429860678444*^9}, 3.618493851243683*^9, {3.618649713134859*^9, 
   3.6186497153648367`*^9}, {3.618649757826413*^9, 3.6186497776862144`*^9}}],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"-", ".18"}]}], 
     RowBox[{"(*", 
      RowBox[{"2", "/", "100"}], "*)"}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "20", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "rUnderBar", ",", "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", 
    "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}, {3.6182427033953085`*^9, 
   3.618242724237808*^9}, {3.6182428957790585`*^9, 3.6182429090240583`*^9}, {
   3.61824446597836*^9, 3.61824448509864*^9}, {3.618244528649624*^9, 
   3.6182445291784163`*^9}, {3.6184206482294874`*^9, 
   3.6184206489194946`*^9}, {3.618421512034299*^9, 3.6184215230044084`*^9}, {
   3.618422226795503*^9, 3.6184222273155084`*^9}, {3.6184256469838924`*^9, 
   3.6184256480939035`*^9}, {3.6185030815788217`*^9, 
   3.6185031093690996`*^9}, {3.618507087185193*^9, 3.6185070882551928`*^9}, {
   3.618507552643939*^9, 3.6185075539879575`*^9}, {3.6185749367776327`*^9, 
   3.618574941217677*^9}, {3.6185749891581564`*^9, 3.618574989988165*^9}, {
   3.618575171324982*^9, 3.618575171514984*^9}, {3.6185752899461684`*^9, 
   3.6185752984862537`*^9}, 3.618576505092454*^9, 3.6185765514149194`*^9, {
   3.6185765927593393`*^9, 3.6185765971993837`*^9}, {3.618578713080787*^9, 
   3.618578713510792*^9}, {3.618578933432021*^9, 3.618578934022027*^9}, {
   3.6185844884601364`*^9, 3.618584488740139*^9}, {3.6185845512047677`*^9, 
   3.618584551894775*^9}, {3.6185849550838623`*^9, 3.6185849690640016`*^9}, {
   3.618585052862852*^9, 3.6185850610829344`*^9}, {3.6185851166674976`*^9, 
   3.618585117117502*^9}, 3.618585319272545*^9, {3.618585767127076*^9, 
   3.618585767387079*^9}, {3.618587543637038*^9, 3.618587553627138*^9}, {
   3.6185947331803517`*^9, 3.618594749836527*^9}, {3.618595341567514*^9, 
   3.61859534520755*^9}, {3.6185965519137983`*^9, 3.6185966034243135`*^9}, 
   3.6185970381827173`*^9, {3.618597132957673*^9, 3.618597138867732*^9}, {
   3.6186498015899763`*^9, 3.618649805689935*^9}, {3.6186507867091646`*^9, 
   3.6186508010690207`*^9}, {3.6186510519980965`*^9, 
   3.6186510592083845`*^9}, {3.618651633808719*^9, 3.6186516516485405`*^9}, {
   3.618651720631852*^9, 3.6186517213018456`*^9}, {3.6186532451496463`*^9, 
   3.61865324682963*^9}, {3.618653283273266*^9, 3.618653284053258*^9}, {
   3.6186539178269362`*^9, 3.618653918576929*^9}, {3.618653977430341*^9, 
   3.618653978100334*^9}, {3.6186564087037134`*^9, 3.6186564104537134`*^9}, {
   3.6186565285867133`*^9, 3.6186565304467134`*^9}, {3.618748081051148*^9, 
   3.618748085581148*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}]], "Input",
 CellChangeTimes->{{3.6181643453198195`*^9, 3.618164367401069*^9}}],

Cell[BoxData[
 RowBox[{"polyRange", "//.", "lucaSubs"}]], "Input",
 CellChangeTimes->{{3.6185831540086255`*^9, 3.6185831666987524`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"(", 
     RowBox[{"someSubs", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tcl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"targ", ",", 
                 RowBox[{"{", 
                  RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
               "]"}]}], ")"}], "\[Equal]", 
            RowBox[{"(", 
             RowBox[{"acl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"theProd", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                  "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
          RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
         RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}], 
     ")"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"goodQkArray", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lucaMat", "=", 
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9, {3.618161722942319*^9, 
   3.618161723452319*^9}, {3.618161909353569*^9, 3.6181619098635693`*^9}, {
   3.6181620653648195`*^9, 3.6181621299798193`*^9}, {3.6181622242498193`*^9, 
   3.6181622724773192`*^9}, {3.6181626066898193`*^9, 3.618162706914569*^9}, {
   3.618163099793569*^9, 3.618163117742319*^9}, {3.6181639572090693`*^9, 
   3.6181639768615694`*^9}, {3.6182387991523085`*^9, 
   3.6182387994473085`*^9}, {3.618426620147715*^9, 3.6184266210277243`*^9}, {
   3.6184298994088316`*^9, 3.61842989978084*^9}, {3.6186498672833195`*^9, 
   3.6186498676033163`*^9}, {3.6186530211578846`*^9, 3.6186530225078707`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}],

Cell[BoxData[
 RowBox[{"forCurious", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"bmat", ",", " ", 
      RowBox[{"bmat", " ", ".", " ", "bmat"}], ",", " ", "phimat", ",", " ", 
      RowBox[{"bmat", " ", ".", " ", "phimat"}]}], "}"}], "//.", "lucaSubs"}],
    "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.6185853307626595`*^9, 3.618585372165079*^9}, {
  3.6185854414497824`*^9, 3.6185854927243013`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["compute first order projection", "Subsection",
 CellChangeTimes->{{3.6182387696273084`*^9, 3.6182387747148085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{"lucaBasis", "[", 
   RowBox[{"setAllWeights", "[", "lucaMat", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.618242282427308*^9, 
   3.618242288222308*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"<<", "ProjectionInterface`"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6184293990137925`*^9, 3.618429403903841*^9}, {
  3.6188437154707346`*^9, 3.6188437190607347`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simp", "=", 
   RowBox[{
   "JavaNew", "[", 
    "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res1$1$1", "=", 
   RowBox[{"ComputeInitialCollocationWeights", "[", 
    RowBox[{"lucaBasis", ",", "lucaMat", 
     RowBox[{"(*", 
      RowBox[{"+", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"3", "*", 
          RowBox[{"Random", "[", "]"}]}], ",", 
         RowBox[{"{", "5", "}"}], ",", 
         RowBox[{"{", "8", "}"}]}], "]"}]}], "*)"}], ",", "modEqns", ",", 
     "simp"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res1$1$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"CreatePolynomials", "[", 
       RowBox[{"lucaMod", ",", "res1$1$1"}], "]"}], "//", "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", "\"\<ComputeInitialCollocationWeights did not converge\>\"",
     ",", "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.6184291133629093`*^9, 
   3.618429142187204*^9}, 3.618495827011609*^9, {3.618502907547064*^9, 
   3.618502927927268*^9}, {3.6185030281362824`*^9, 3.6185030289362907`*^9}, {
   3.6185053233954377`*^9, 3.618505336475569*^9}, {3.618507313591193*^9, 
   3.618507318451193*^9}, {3.618597158551937*^9, 3.618597164031992*^9}, {
   3.6185973146615195`*^9, 3.618597317501548*^9}, {3.6186564849757133`*^9, 
   3.618656486865713*^9}}],

Cell[BoxData[
 RowBox[{"res1$1$1", "[", 
  RowBox[{"isConvergedQ", "[", "]"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theSys", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheSystem", "[", "]"}], "]"}]}], ";", 
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theResWeights", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theBasis", "[", 
   RowBox[{"setAllWeights", "[", "theResWeights", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valDrv", "=", 
   RowBox[{"theSys", "[", 
    RowBox[{"updateValDrv", "[", "theBasis", "]"}], "]"}]}], ";", 
  RowBox[{"fVec", "=", 
   RowBox[{
    RowBox[{"valDrv", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "fVec"}], "Input",
 CellChangeTimes->{{3.6182538073343287`*^9, 3.618253827974329*^9}, {
  3.6182538589143286`*^9, 3.6182538597343287`*^9}, {3.6182539171363287`*^9, 
  3.618253957736329*^9}, {3.6182539925063286`*^9, 3.618254002416329*^9}, {
  3.6182540648363285`*^9, 3.6182541455980215`*^9}, {3.618306819017769*^9, 
  3.618306820857806*^9}, {3.6183069070795307`*^9, 3.6183069146596823`*^9}, {
  3.6183070298419857`*^9, 3.6183070428722463`*^9}, {3.6183070817230234`*^9, 
  3.6183072042654743`*^9}, {3.618307234616081*^9, 3.618307347318335*^9}, {
  3.618307422109831*^9, 3.6183074230598497`*^9}, {3.618307524621881*^9, 
  3.6183075507424035`*^9}, {3.618502070648615*^9, 3.618502073748646*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "//", "Expand"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185838437106133`*^9, 3.6185838680148635`*^9}, {
   3.618584140273612*^9, 3.618584142573635*^9}, 3.6185966428697147`*^9, {
   3.618596849543801*^9, 3.618596851527829*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6185830936430144`*^9, 3.618583103103109*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"drum", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"collocateParamsRange", "[", 
     RowBox[{"modEqns", ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", 
        RowBox[{"-", "8"}], ",", "1."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", ".02", ",", 
        "1."}], "}"}], ",", "500"}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6185038148502083`*^9, 3.6185039708517847`*^9}, {
   3.618504085428938*^9, 3.618504088008964*^9}, {3.6185051587537746`*^9, 
   3.6185051602037888`*^9}, {3.6185055077672987`*^9, 
   3.6185055322915506`*^9}, {3.618507146149193*^9, 3.618507147649193*^9}, {
   3.618507257597193*^9, 3.6185072602171926`*^9}, 3.618507367711193*^9, {
   3.6185075864182816`*^9, 3.618507595538373*^9}, {3.61850764858291*^9, 
   3.618507657583*^9}, {3.6185719782292852`*^9, 3.6185719815790176`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fv", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";", 
  RowBox[{"xv", "=", 
   RowBox[{"getAllXVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618502361719551*^9, 3.618502390709841*^9}, {
  3.6185024400643406`*^9, 3.6185024581685276`*^9}}],

Cell[BoxData[
 RowBox[{"fv", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618573593848198*^9, 3.618573596708226*^9}, {
  3.6185741309455705`*^9, 3.6185741453697186`*^9}, {3.6185741753800187`*^9, 
  3.6185741816400814`*^9}}],

Cell[BoxData[
 RowBox[{"Norm", " ", "/@", 
  RowBox[{"fv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618507170819193*^9, 3.6185072071031933`*^9}, {
  3.618507447869193*^9, 3.6185075040534534`*^9}, {3.6185076273626976`*^9, 
  3.618507639252817*^9}, {3.618573613288392*^9, 3.6185736224084835`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curious", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceVariables", "[", 
       RowBox[{"lucaMod", ",", "polys1$1$1", ",", 
        RowBox[{"{", 
         RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "//.", 
      "lucaSubs"}], "//", "Expand"}], "//", "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
   3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
   3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}, {
   3.618421746548664*^9, 3.6184217517987165`*^9}, {3.6184218192733965`*^9, 
   3.6184218298235025`*^9}, 3.6184267575071*^9, {3.6184959477288265`*^9, 
   3.6184959523288727`*^9}, 3.618498183979375*^9, {3.618500894470745*^9, 
   3.6185008984227867`*^9}}],

Cell[BoxData["forCurious"], "Input",
 CellChangeTimes->{{3.6185855426288047`*^9, 3.618585544558824*^9}}],

Cell[BoxData[
 RowBox[{"curious", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6185872675252423`*^9, 3.618587279435362*^9}, {
  3.618651262912651*^9, 3.6186512633926506`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"PiecewiseExpand", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"curious", "//.", "lucaSubs"}], "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
   3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
   3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
   3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
   3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
   3.6184252168401365`*^9, 3.6184252176101365`*^9}, 3.6185009454232564`*^9, {
   3.6185014575884275`*^9, 3.6185014761286125`*^9}}],

Cell[BoxData[
 RowBox[{"doop", "=", 
  RowBox[{
   RowBox[{"huh", "//.", 
    RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}, {
   3.618501731363187*^9, 3.618501732103194*^9}, {3.6185018414602976`*^9, 
   3.618501842520308*^9}, 3.618574516393429*^9, {3.6185750502587676`*^9, 
   3.6185750560088253`*^9}, {3.618584449409746*^9, 3.618584450629758*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Dimensions", "[", "ha", "]"}]}]], "Input",
 CellChangeTimes->{{3.618651293282651*^9, 3.618651321526651*^9}}],

Cell[BoxData[
 RowBox[{"ha", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Expectation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"lookey", " ", "\[Distributed]", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], "&"}], " ", "/@", 
    RowBox[{"Flatten", "[", "doop", "]"}]}], "//", "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}, {
   3.6184998897426014`*^9, 3.618499890762612*^9}, 3.6184999218229227`*^9, {
   3.618500989557705*^9, 3.618501056952385*^9}, {3.618501772587605*^9, 
   3.6185017733976135`*^9}, {3.618501847770361*^9, 3.6185018597644873`*^9}, {
   3.6185021226231403`*^9, 3.6185021229131436`*^9}, {3.6185022051179714`*^9, 
   3.6185022222521467`*^9}, {3.618574876317028*^9, 3.618574877927044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"fv", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", "8"}], "]"}], "//", 
   "Chop"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185876736103635`*^9, 3.618587683830466*^9}, {
  3.6185878718783774`*^9, 3.618587896958628*^9}, {3.6186516925521326`*^9, 
  3.6186516941721163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "ha", "]"}], ",", "7"}], "]"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185879085087433`*^9, 3.61858794156108*^9}, {
  3.618587971782382*^9, 3.6185879798124623`*^9}, {3.618651136660492*^9, 
  3.6186511594414034`*^9}, {3.618651345296651*^9, 3.6186513469866505`*^9}}],

Cell[BoxData[
 RowBox[{"fVec", "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6185876238858595`*^9, 3.6185876255558767`*^9}, {
  3.6186539464206505`*^9, 3.6186539487006283`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6186514035506506`*^9, 3.618651405850651*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186534046210537`*^9, 3.618653406841031*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvRange", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618588399112706*^9, 3.6185884625973487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "fvRange", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6185884391271143`*^9, 3.6185884674114037`*^9}}],

Cell[BoxData[
 RowBox[{"polys1$1$1", "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.618594640541397*^9, 3.618594652531517*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.618652540959446*^9, 3.618652542249446*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["barrier", "Section",
 CellChangeTimes->{{3.618572097731743*^9, 3.61857209877166*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}], "//", "Chop"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.618652936870726*^9, 3.6186529690144053`*^9}}],

Cell[BoxData["}"], "Input",
 CellChangeTimes->{3.6186529698443975`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{"fVec", ",", "8"}], "]"}], "//", "Chop"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186522531593323`*^9, 3.6186522775294456`*^9}, {
  3.6186523123334455`*^9, 3.6186523197534456`*^9}}],

Cell[BoxData[
 RowBox[{"curious", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618652545869446*^9, 3.6186525497194457`*^9}}],

Cell[BoxData["stateVar"], "Input",
 CellChangeTimes->{{3.618652677806314*^9, 3.6186526901761904`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "[", 
   RowBox[{"[", "6", "]"}], "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.6186526158729324`*^9, 3.6186526527225637`*^9}, {
  3.6186526995760965`*^9, 3.618652715596936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "ha", "]"}], ",", "7"}], "]"}], "//", "Chop"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186523274634457`*^9, 3.618652385407446*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"oldFVec", "=", "fVec"}], ";", 
  RowBox[{"oldHa", "=", "ha"}], ";"}]], "Input",
 CellChangeTimes->{{3.6186514136806507`*^9, 3.618651427030651*^9}}],

Cell[BoxData[
 RowBox[{"drum", "=", 
  RowBox[{
   RowBox[{"lucaBasis", "[", 
    RowBox[{"solveParamsRange", "[", 
     RowBox[{"lucaMat", ",", "modEqns", ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", 
        RowBox[{"-", ".1938"}], ",", "1."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", ".02", ",", 
        "1."}], "}"}], ",", "100"}], "]"}], "]"}], "//", 
   "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.618588356612281*^9, 3.6185883752324677`*^9}, {
  3.618594517470166*^9, 3.6185945191301827`*^9}, {3.618595436646477*^9, 
  3.6185954670567813`*^9}, {3.6185959950191345`*^9, 3.6185959959191437`*^9}, {
  3.618596461718865*^9, 3.6185965123133783`*^9}, {3.618597419525589*^9, 
  3.6185974523019266`*^9}, {3.6186503480508633`*^9, 3.6186503486008635`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simp", "=", 
   RowBox[{
   "JavaNew", "[", 
    "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res1$1$1", "=", 
   RowBox[{"ComputeInitialCollocationWeights", "[", 
    RowBox[{"lucaBasis", ",", ",", "modEqns", ",", "simp"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res1$1$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"CreatePolynomials", "[", 
       RowBox[{"lucaMod", ",", "res1$1$1"}], "]"}], "//", "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.6184291133629093`*^9, 
   3.618429142187204*^9}, 3.618495827011609*^9, {3.618502907547064*^9, 
   3.618502927927268*^9}, {3.6185030281362824`*^9, 3.6185030289362907`*^9}, {
   3.6185053233954377`*^9, 3.618505336475569*^9}, {3.618507313591193*^9, 
   3.618507318451193*^9}, {3.618595656565711*^9, 3.618595659355739*^9}, {
   3.6185961244514475`*^9, 3.6185961509857197`*^9}}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "drum", "]"}]], "Input",
 CellChangeTimes->{{3.618596102021223*^9, 3.618596108751291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{".02", "-", " ", 
     RowBox[{"-", "1"}]}], ")"}], "*", 
   RowBox[{"395", "/", "500"}]}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.6185963617998505`*^9, 3.618596419824437*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drum", "[", 
    RowBox[{"[", "001", "]"}], "]"}], "//", "Chop"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185961547557573`*^9, 3.618596260014825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drum", "[", 
    RowBox[{"[", "396", "]"}], "]"}], "//", "Chop"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185962750649757`*^9, 3.618596316859401*^9}, {
  3.6185964470687184`*^9, 3.618596447648724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvnow", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6185958737499065`*^9, 3.6185959029942064`*^9}, 
   3.618595939214569*^9}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"fvnow", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6185959136743135`*^9, 3.6185959695788803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "//", "ExpandAll"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.61859567745592*^9, 3.618595695516101*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6185955095722203`*^9, 3.618595516592291*^9}}],

Cell[BoxData[
 RowBox[{"Methods", "[", "res1$1$1", "]"}]], "Input",
 CellChangeTimes->{{3.6185919108940935`*^9, 3.6185919200341845`*^9}}],

Cell[BoxData[
 RowBox[{"theWSB", "=", 
  RowBox[{"res1$1$1", "[", 
   RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6185924862008467`*^9, 3.618592523941224*^9}}],

Cell[BoxData[
 RowBox[{"theWSB", "[", 
  RowBox[{"getNewtonItersSeq", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618593459422579*^9, 3.618593476602751*^9}}],

Cell[BoxData[
 RowBox[{"??", "getAllFVals"}]], "Input",
 CellChangeTimes->{{3.6185927912438965`*^9, 3.618592796753952*^9}}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "fv", "]"}]], "Input",
 CellChangeTimes->{{3.618592899845983*^9, 3.6185929034260187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fv", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6185927673036575`*^9, 3.6185927842338266`*^9}, {
  3.618592893665921*^9, 3.6185928943959284`*^9}, {3.6185943660786524`*^9, 
  3.6185943818188095`*^9}, {3.618594550250494*^9, 3.6185945638706303`*^9}}],

Cell[BoxData[
 RowBox[{"Norm", " ", "/@", " ", 
  RowBox[{"fv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618594134175333*^9, 3.6185941390453815`*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"xv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6185943855088463`*^9, 3.6185943967789593`*^9}, 
   3.618594903744079*^9}],

Cell[BoxData[
 RowBox[{"Methods", "[", "theWSB", "]"}]], "Input",
 CellChangeTimes->{{3.618592528151266*^9, 3.6185925325413103`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["barrier", "Section",
 CellChangeTimes->{{3.6185948336293697`*^9, 3.61859483562939*^9}}],

Cell[BoxData[
 RowBox[{"stratIters", "=", 
  RowBox[{"theWSB", "[", 
   RowBox[{"getNewtonItersSeq", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6185925772317567`*^9, 3.618592597971964*^9}, {
  3.6185926359223433`*^9, 3.61859265351252*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"stratIters", "=", 
   RowBox[{
    RowBox[{"res1$1$1", "[", 
     RowBox[{"getTheStrategyIters", "[", "]"}], "]"}], " ", "this", " ", 
    "has", " ", "no", " ", "info"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6185919365443497`*^9, 3.618591958434569*^9}, {
  3.618592667982664*^9, 3.618592675242737*^9}}],

Cell[BoxData[
 RowBox[{"Methods", "[", "stratIters", "]"}]], "Input",
 CellChangeTimes->{{3.618591962704612*^9, 3.61859197253471*^9}}],

Cell[BoxData[
 RowBox[{"nIters", "=", 
  RowBox[{"stratIters", "[", 
   RowBox[{"getNewtonIters", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618592107426059*^9, 3.6185921552465367`*^9}}],

Cell[BoxData[
 RowBox[{"Methods", "[", "nIters", "]"}]], "Input",
 CellChangeTimes->{{3.6185921609065933`*^9, 3.6185921667966523`*^9}}],

Cell[BoxData[
 RowBox[{"nIters", "[", 
  RowBox[{"isEmpty", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6185922686076703`*^9, 3.6185923029890146`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"simp", "=", 
    RowBox[{
    "JavaNew", "[", 
     "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"\
", "]"}]}], ";", "\n", 
   RowBox[{"res1$1$1", "=", 
    RowBox[{"ComputeInitialCollocationWeights", "[", 
     RowBox[{"lucaBasis", ",", 
      RowBox[{"drum", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", "modEqns", ",", "simp"}], 
     "]"}]}], ";", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res1$1$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys1$1$1", "=", 
      RowBox[{
       RowBox[{"CreatePolynomials", "[", 
        RowBox[{"lucaMod", ",", "res1$1$1"}], "]"}], "//", "Chop"}]}], 
     RowBox[{"(*", 
      RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}],
       "*)"}], ",", 
     "\"\<ComputeInitialCollocationWeights did not converge\>\""}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.6184291133629093`*^9, 
   3.618429142187204*^9}, 3.618495827011609*^9, {3.618502907547064*^9, 
   3.618502927927268*^9}, {3.6185030281362824`*^9, 3.6185030289362907`*^9}, {
   3.6185053233954377`*^9, 3.618505336475569*^9}, {3.618505555451782*^9, 
   3.618505559641824*^9}, {3.6185736779790387`*^9, 3.618573694479204*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theSys", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheSystem", "[", "]"}], "]"}]}], ";", 
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theResWeights", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theBasis", "[", 
   RowBox[{"setAllWeights", "[", "theResWeights", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valDrv", "=", 
   RowBox[{"theSys", "[", 
    RowBox[{"updateValDrv", "[", "theBasis", "]"}], "]"}]}], ";", 
  RowBox[{"fVec", "=", 
   RowBox[{
    RowBox[{"valDrv", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "fVec"}], "Input",
 CellChangeTimes->{{3.6182538073343287`*^9, 3.618253827974329*^9}, {
  3.6182538589143286`*^9, 3.6182538597343287`*^9}, {3.6182539171363287`*^9, 
  3.618253957736329*^9}, {3.6182539925063286`*^9, 3.618254002416329*^9}, {
  3.6182540648363285`*^9, 3.6182541455980215`*^9}, {3.618306819017769*^9, 
  3.618306820857806*^9}, {3.6183069070795307`*^9, 3.6183069146596823`*^9}, {
  3.6183070298419857`*^9, 3.6183070428722463`*^9}, {3.6183070817230234`*^9, 
  3.6183072042654743`*^9}, {3.618307234616081*^9, 3.618307347318335*^9}, {
  3.618307422109831*^9, 3.6183074230598497`*^9}, {3.618307524621881*^9, 
  3.6183075507424035`*^9}, {3.618502070648615*^9, 3.618502073748646*^9}}],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"getParams", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618505865890366*^9, 3.6185058777018557`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fv", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";", 
  RowBox[{"xv", "=", 
   RowBox[{"getAllXVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618502361719551*^9, 3.618502390709841*^9}, {
  3.6185024400643406`*^9, 3.6185024581685276`*^9}}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "xv", "]"}]], "Input",
 CellChangeTimes->{{3.6185023952998867`*^9, 3.6185023987339277`*^9}, {
  3.6185024620385666`*^9, 3.6185024627585735`*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"fv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618502509869045*^9, 3.618502548451434*^9}, {
  3.6185029857218513`*^9, 3.618502985961854*^9}, {3.618503160361614*^9, 
  3.618503161081621*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"xv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"-", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618502509869045*^9, 3.618502548451434*^9}}],

Cell[BoxData[
 RowBox[{"Norm", "/@", 
  RowBox[{"fv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6185024152740927`*^9, 3.6185024198241386`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curious", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceVariables", "[", 
       RowBox[{"lucaMod", ",", "polys1$1$1", ",", 
        RowBox[{"{", 
         RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "//.", 
      "lucaSubs"}], "//", "Expand"}], "//", "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
   3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
   3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}, {
   3.618421746548664*^9, 3.6184217517987165`*^9}, {3.6184218192733965`*^9, 
   3.6184218298235025`*^9}, 3.6184267575071*^9, {3.6184959477288265`*^9, 
   3.6184959523288727`*^9}, 3.618498183979375*^9, {3.618500894470745*^9, 
   3.6185008984227867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"PiecewiseExpand", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"curious", "//.", "lucaSubs"}], "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
   3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
   3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
   3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
   3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
   3.6184252168401365`*^9, 3.6184252176101365`*^9}, 3.6185009454232564`*^9, {
   3.6185014575884275`*^9, 3.6185014761286125`*^9}}],

Cell[BoxData[
 RowBox[{"doop", "=", 
  RowBox[{"huh", "/.", 
   RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}, {
  3.618501731363187*^9, 3.618501732103194*^9}, {3.6185018414602976`*^9, 
  3.618501842520308*^9}}],

Cell[BoxData[
 RowBox[{"ha", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Expectation", "[", 
     RowBox[{"#", ",", 
      RowBox[{"lookey", " ", "\[Distributed]", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], "&"}], " ", "/@", 
   RowBox[{"Flatten", "[", "doop", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}, {
   3.6184998897426014`*^9, 3.618499890762612*^9}, 3.6184999218229227`*^9, {
   3.618500989557705*^9, 3.618501056952385*^9}, {3.618501772587605*^9, 
   3.6185017733976135`*^9}, {3.618501847770361*^9, 3.6185018597644873`*^9}, {
   3.6185021226231403`*^9, 3.6185021229131436`*^9}, {3.6185022051179714`*^9, 
   3.6185022222521467`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["do some low order plots", "Section",
 CellChangeTimes->{{3.6185022767966976`*^9, 3.6185022778567085`*^9}, {
  3.618594948368533*^9, 3.61859495408859*^9}}],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"getParams", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6185950001940613`*^9, 3.6185950061841216`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ha", "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184999448251543`*^9, 3.618499953735244*^9}}],

Cell[BoxData["nonStateVar"], "Input",
 CellChangeTimes->{{3.618650291276863*^9, 3.618650295776863*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", 
         RowBox[{"-", ".03"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
   3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
   3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
   3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618428161337283*^9, 
   3.6184281636473064`*^9}, {3.6184289239089956`*^9, 3.618428929629053*^9}, {
   3.618494134656559*^9, 3.618494135156564*^9}, {3.61859576370079*^9, 
   3.618595780474964*^9}, 3.618596727244566*^9, {3.6186502699968634`*^9, 
   3.6186502705368633`*^9}, {3.6186503071068635`*^9, 
   3.6186503213268633`*^9}, {3.618760814572582*^9, 3.618760815152588*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", 
         RowBox[{"-", ".5"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618428161337283*^9, 
  3.6184281636473064`*^9}, {3.6184289239089956`*^9, 3.618428929629053*^9}, {
  3.618494157486788*^9, 3.618494179391013*^9}, {3.618595784535005*^9, 
  3.618595805385214*^9}, {3.6185967326886263`*^9, 3.618596744408744*^9}, {
  3.6185968980582943`*^9, 3.618596924062562*^9}}],

Cell[BoxData[
 RowBox[{"polys1$1$1", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
  3.6184273766373463`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427441564007*^9, 
  3.618427442114012*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
  3.6184273766373463`*^9}, {3.6184274456340475`*^9, 3.618427446374055*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["barrier", "Section",
 CellChangeTimes->{{3.618594936248412*^9, 3.618594937288422*^9}}],

Cell[CellGroupData[{

Cell["higher order", "Subsection",
 CellChangeTimes->{{3.6184275419790173`*^9, 3.61842754425904*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"res2$2$1", "=", 
    RowBox[{"res1$1$1", "[", 
     RowBox[{"incOrder", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res2$2$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys2$2$1", "=", 
      RowBox[{
       RowBox[{"CreatePolynomials", "[", 
        RowBox[{"lucaMod", ",", "res2$2$1"}], "]"}], "//", "Chop"}]}], 
     RowBox[{"(*", 
      RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}],
       "*)"}], ",", 
     "\"\<ComputeInitialCollocationWeights did not converge\>\""}], "]"}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}, {
  3.6182461948467803`*^9, 3.61824619804428*^9}, {3.618427590733512*^9, 
  3.618427594953554*^9}, {3.61849458700712*^9, 3.618494616989423*^9}, {
  3.6185951038791065`*^9, 3.6185951081231575`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rUnderBar", ",", 
          RowBox[{"polys2$2$1", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
  3.6184273766373463`*^9}, {3.618427727402892*^9, 3.618427754715172*^9}, {
  3.6184277945555706`*^9, 3.6184278168598022`*^9}, {3.6184278854544935`*^9, 
  3.6184278860544996`*^9}, {3.618494689142149*^9, 3.618494689662154*^9}, {
  3.6184947220044813`*^9, 3.618494733644598*^9}, {3.618495508610396*^9, 
  3.6184956039453545`*^9}, {3.6185952191082754`*^9, 3.6185953103872023`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys2$2$1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
   3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
   3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
   3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
   3.6184273766373463`*^9}, 3.618427727402892*^9}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys2$2$1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
   3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
   3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
   3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427441564007*^9, 
   3.618427442114012*^9}, 3.6184277282129006`*^9}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys2$2$1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
   3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
   3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
   3.6184269893514404`*^9, 3.618427034865902*^9}, {3.618427376337343*^9, 
   3.6184273766373463`*^9}, {3.6184274456340475`*^9, 3.618427446374055*^9}, 
   3.618427728842907*^9}],

Cell[BoxData[
 RowBox[{"lucaMod", "[", 
  RowBox[{"getParams", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618503753707595*^9, 3.6185037869399295`*^9}}],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"getParams", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6185037937499976`*^9, 3.618503795400014*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lagrangian Characterization First debugging attempt", "Section",
 CellChangeTimes->{{3.618161018883319*^9, 3.618161026312069*^9}, {
  3.6184263805332985`*^9, 3.6184263857233505`*^9}}],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}], "+", " ", 
        RowBox[{
         RowBox[{"lambda", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
          ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lambda", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rr", "[", "t", "]"}], " ", "-", " ", "rUnderBar"}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zz", "[", "t", "]"}], "-", 
        RowBox[{"eqvdIf", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rr", "[", "t", "]"}], "\[GreaterEqual]", "rUnderBar"}], 
          ",", 
          RowBox[{"rr", "[", "t", "]"}], ",", "rUnderBar"}], "]"}]}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6181615332420692`*^9, 3.618161582344569*^9}, {
   3.618164221779069*^9, 3.618164225962819*^9}, {3.6181642809460692`*^9, 
   3.618164297294819*^9}, {3.6181652195085692`*^9, 3.6181652329598193`*^9}, {
   3.6181653021635695`*^9, 3.6181653078635693`*^9}, {3.618166246271819*^9, 
   3.6181662568418193`*^9}, {3.618167466622819*^9, 3.618167470505319*^9}, {
   3.618167550833069*^9, 3.6181675542068195`*^9}, 3.6182378559250584`*^9, {
   3.6182426906953087`*^9, 3.618242698692808*^9}, {3.6184220122313385`*^9, 
   3.618422023161448*^9}}],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "rUnderBar", ",", "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", 
    "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}, {3.6182427033953085`*^9, 
   3.618242724237808*^9}, {3.6182428957790585`*^9, 3.6182429090240583`*^9}, {
   3.61824446597836*^9, 3.61824448509864*^9}, {3.618244528649624*^9, 
   3.6182445291784163`*^9}, {3.6184206482294874`*^9, 
   3.6184206489194946`*^9}, {3.618421512034299*^9, 3.6184215230044084`*^9}, {
   3.618422226795503*^9, 3.6184222273155084`*^9}, {3.6184256469838924`*^9, 
   3.6184256480939035`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}]], "Input",
 CellChangeTimes->{{3.6181643453198195`*^9, 3.618164367401069*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"(", 
     RowBox[{"someSubs", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tcl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"targ", ",", 
                 RowBox[{"{", 
                  RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
               "]"}]}], ")"}], "\[Equal]", 
            RowBox[{"(", 
             RowBox[{"acl", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"CoefficientList", "[", 
                RowBox[{"theProd", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                  "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
          RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
         RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}], 
     ")"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"goodQkArray", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{".1", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lucaMat", "=", 
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9, {3.618161722942319*^9, 
   3.618161723452319*^9}, {3.618161909353569*^9, 3.6181619098635693`*^9}, {
   3.6181620653648195`*^9, 3.6181621299798193`*^9}, {3.6181622242498193`*^9, 
   3.6181622724773192`*^9}, {3.6181626066898193`*^9, 3.618162706914569*^9}, {
   3.618163099793569*^9, 3.618163117742319*^9}, {3.6181639572090693`*^9, 
   3.6181639768615694`*^9}, {3.6182387991523085`*^9, 3.6182387994473085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["compute first order projection", "Subsection",
 CellChangeTimes->{{3.6182387696273084`*^9, 3.6182387747148085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{"lucaBasis", "[", 
   RowBox[{"setAllWeights", "[", "lucaMat", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.618242282427308*^9, 
   3.618242288222308*^9}}],

Cell[BoxData["nonStateVar"], "Input",
 CellChangeTimes->{{3.6184270570961237`*^9, 3.6184270629061823`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simp", "=", 
   RowBox[{
   "JavaNew", "[", 
    "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res1$1$1", "=", 
   RowBox[{"ComputeInitialCollocationWeights", "[", 
    RowBox[{"lucaBasis", ",", "lucaMat", ",", "modEqns", ",", "simp"}], 
    "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res1$1$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res1$1$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res1$1$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"polys1$1$1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/.", 
        RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}, {
  3.6184269893514404`*^9, 3.618427034865902*^9}}],

Cell[BoxData[
 RowBox[{"subbedPolys", "=", 
  RowBox[{"CreatePolynomials", "[", 
   RowBox[{"lucaMod", ",", "res1$1$1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6183129503194017`*^9, 3.61831295423948*^9}, 
   3.6183131433132615`*^9, {3.618313297186339*^9, 3.6183132990563765`*^9}, {
   3.618313355797511*^9, 3.618313393938274*^9}, {3.6183359889576674`*^9, 
   3.618336010427882*^9}, {3.6183365572133493`*^9, 3.6183366275240526`*^9}, {
   3.618336667864456*^9, 3.618336695534733*^9}, {3.6183367564853425`*^9, 
   3.61833675824536*^9}, {3.6183368214059916`*^9, 3.6183368543063207`*^9}, {
   3.6183377030168095`*^9, 3.618337707876858*^9}, {3.6183399146209273`*^9, 
   3.618339922691008*^9}, {3.618415991889818*^9, 3.618416013190031*^9}, {
   3.6184161436013355`*^9, 3.6184161445813446`*^9}, {3.6184185498253975`*^9, 
   3.618418565535554*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"<<", "ProjectionInterface`"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6183259680351267`*^9, 3.6183259728046494`*^9}, {
  3.6188437468207345`*^9, 3.6188437501707344`*^9}}],

Cell[BoxData[
 RowBox[{"curious", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceVariables", "[", 
       RowBox[{"lucaMod", ",", "subbedPolys", ",", 
        RowBox[{"{", 
         RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "/.", 
      RowBox[{
       RowBox[{
        RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", 
       "uu$Shock"}]}], "//.", "lucaSubs"}], "//", "Expand"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
  3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
  3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}, {
  3.618421746548664*^9, 3.6184217517987165`*^9}, {3.6184218192733965`*^9, 
  3.6184218298235025`*^9}}],

Cell[BoxData[
 RowBox[{"huh", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"PiecewiseExpand", "/@", 
     RowBox[{"(", 
      RowBox[{"curious", "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", 
        "uu$Shock"}]}], ")"}]}], "//.", "lucaSubs"}], "/.", 
   RowBox[{"eqvdIf", "\[Rule]", "If"}]}]}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
  3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
  3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
  3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
  3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
  3.6184252168401365`*^9, 3.6184252176101365`*^9}}],

Cell[BoxData[
 RowBox[{"?", "NExpectation"}]], "Input",
 CellChangeTimes->{{3.6184252549441366`*^9, 3.618425263714136*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ha", "=", 
   RowBox[{"Expectation", "[", 
    RowBox[{
     RowBox[{"huh", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], ",", 
     RowBox[{"uu$Shock", " ", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "@@", 
  RowBox[{"(", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ha", ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], "]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.61842546509606*^9, 3.6184254939063473`*^9}, {
  3.618425736768797*^9, 3.6184258114935503`*^9}, {3.6184259093125396`*^9, 
  3.6184259253527*^9}, {3.6184259616170692`*^9, 3.6184260277597346`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"curious", "/.", 
      RowBox[{
       RowBox[{
        RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", 
       "uu$Shock"}]}], ")"}], "/.", 
    RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//.", 
   "lucaSubs"}], "/.", 
  RowBox[{"eqvdIf", "\[Rule]", "If"}]}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
  3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
  3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
  3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
  3.6184194199840984`*^9}}],

Cell[BoxData[
 RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ha", "/.", 
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6183076627046423`*^9, 3.618307663824665*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys1$1$1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "/.", 
     RowBox[{"uu$Shock", "\[Rule]", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618244590034284*^9, 3.6182446683943024`*^9}, {
  3.61824470267503*^9, 3.6182447434050303`*^9}, {3.6182447773787804`*^9, 
  3.6182447775625305`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6183085301119905`*^9, 3.618308542792244*^9}}],

Cell[BoxData[
 RowBox[{"pts", "=", 
  RowBox[{"gtChebNodes", "[", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6182453963022804`*^9, 3.61824543657728*^9}, {
  3.61824547099228*^9, 3.6182454732397804`*^9}, {3.6182505524229913`*^9, 
  3.6182505560351267`*^9}}],

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "pts", "]"}]], "Input",
 CellChangeTimes->{{3.6182454958872805`*^9, 3.6182455043885303`*^9}, {
  3.6182456490672803`*^9, 3.6182456795347805`*^9}}],

Cell[BoxData[
 RowBox[{"old", "=", 
  RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6182389326933084`*^9, 3.6182389488603086`*^9}, 
   3.618250547020631*^9, {3.6182507685938053`*^9, 3.618250847602072*^9}, {
   3.6182509429467645`*^9, 3.618250943713531*^9}, 3.6182513489887605`*^9}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "fVec", "]"}]], "Input",
 CellChangeTimes->{{3.6183075803729963`*^9, 3.6183075844530773`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theSys", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheSystem", "[", "]"}], "]"}]}], ";", 
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theResWeights", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theBasis", "[", 
   RowBox[{"setAllWeights", "[", "theResWeights", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valDrv", "=", 
   RowBox[{"theSys", "[", 
    RowBox[{"updateValDrv", "[", "theBasis", "]"}], "]"}]}], ";", 
  RowBox[{"fVec", "=", 
   RowBox[{
    RowBox[{"valDrv", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", "fVec", "]"}]}], "Input",
 CellChangeTimes->{{3.6182538073343287`*^9, 3.618253827974329*^9}, {
  3.6182538589143286`*^9, 3.6182538597343287`*^9}, {3.6182539171363287`*^9, 
  3.618253957736329*^9}, {3.6182539925063286`*^9, 3.618254002416329*^9}, {
  3.6182540648363285`*^9, 3.6182541455980215`*^9}, {3.618306819017769*^9, 
  3.618306820857806*^9}, {3.6183069070795307`*^9, 3.6183069146596823`*^9}, {
  3.6183070298419857`*^9, 3.6183070428722463`*^9}, {3.6183070817230234`*^9, 
  3.6183072042654743`*^9}, {3.618307234616081*^9, 3.618307347318335*^9}, {
  3.618307422109831*^9, 3.6183074230598497`*^9}, {3.618307524621881*^9, 
  3.6183075507424035`*^9}}],

Cell[BoxData[
 RowBox[{"polys", "=", 
  RowBox[{"CreatePolynomials", "[", "res1$1$1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6183085962733135`*^9, 3.6183086383041544`*^9}}],

Cell[BoxData[
 RowBox[{"repVars", "=", 
  RowBox[{"ReplaceVariables", "[", 
   RowBox[{"lucaMod", ",", "polys", ",", 
    RowBox[{"{", 
     RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6183085555224986`*^9, 3.6183085855931*^9}, {
  3.6183086765549192`*^9, 3.6183087180457487`*^9}, {3.618308760656601*^9, 
  3.618308764206672*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Variables", "[", 
   RowBox[{"PiecewiseExpand", " ", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"repVars", "//.", "lucaSubs"}], "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6183143428492537`*^9, 3.6183144278709536`*^9}}],

Cell[BoxData[
 RowBox[{"PlotPolynomials", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"PiecewiseExpand", "/@", 
       RowBox[{"repVars", "[", 
        RowBox[{"[", 
         RowBox[{"{", "5", "}"}], "]"}], "]"}]}], "//.", "lucaSubs"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", "0"}], ",", 
       RowBox[{"eqvdIf", "->", "If"}]}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], ",", 
    RowBox[{"{", "\"\<eq1\>\"", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618308794669283*^9, 3.618308854394481*^9}, {
  3.6183117879461546`*^9, 3.618311813766671*^9}, {3.6183120001603985`*^9, 
  3.618312029280981*^9}, {3.618312101752431*^9, 3.6183121281829596`*^9}, {
  3.6183122726158476`*^9, 3.61831227723594*^9}, {3.6183125169007335`*^9, 
  3.6183125640016756`*^9}, {3.6183126131126575`*^9, 3.618312677883953*^9}, {
  3.6183127469553347`*^9, 3.6183128014464245`*^9}, {3.6183128365771265`*^9, 
  3.618312845207299*^9}, {3.618312893638268*^9, 3.6183129419692345`*^9}, {
  3.6183130191707783`*^9, 3.6183131162827206`*^9}, {3.6183134169887347`*^9, 
  3.618313464189679*^9}, {3.618313543391263*^9, 3.6183135686517677`*^9}, {
  3.618313602312441*^9, 3.6183136096425877`*^9}, {3.6183136943742824`*^9, 
  3.6183137094245834`*^9}}],

Cell[BoxData[
 RowBox[{"polys", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6183144817120304`*^9, 3.618314488812173*^9}}],

Cell[BoxData[
 RowBox[{"PlotPolynomials", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PiecewiseExpand", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"polys", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ">", "rUnderBar"}], ",", 
          RowBox[{"polys", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", "rUnderBar"}], "]"}], "]"}], 
       "}"}], "//.", "lucaSubs"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", 
        RowBox[{"-", ".1"}]}], ",", 
       RowBox[{"eqvdIf", "->", "If"}]}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "//.", 
     "lucaSubs"}], ",", 
    RowBox[{"{", "\"\<eq1\>\"", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.618308794669283*^9, 3.618308854394481*^9}, {
  3.6183117879461546`*^9, 3.618311813766671*^9}, {3.6183120001603985`*^9, 
  3.618312029280981*^9}, {3.618312101752431*^9, 3.6183121281829596`*^9}, {
  3.6183122726158476`*^9, 3.61831227723594*^9}, {3.6183125169007335`*^9, 
  3.6183125640016756`*^9}, {3.6183126131126575`*^9, 3.618312677883953*^9}, {
  3.6183127469553347`*^9, 3.6183128014464245`*^9}, {3.6183128365771265`*^9, 
  3.618312845207299*^9}, {3.618312893638268*^9, 3.6183129419692345`*^9}, {
  3.6183130191707783`*^9, 3.6183131162827206`*^9}, {3.6183134169887347`*^9, 
  3.618313464189679*^9}, {3.618313543391263*^9, 3.6183135686517677`*^9}, {
  3.618313602312441*^9, 3.6183136096425877`*^9}, {3.6183136943742824`*^9, 
  3.6183137094245834`*^9}, {3.6183140706038084`*^9, 3.618314074373884*^9}, {
  3.618314559783592*^9, 3.618314636245121*^9}, {3.6183147759179144`*^9, 
  3.618314799898394*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["evaluation barrier", "Section",
 CellChangeTimes->{{3.6183380378301573`*^9, 3.618338038940169*^9}, {
  3.618426322138706*^9, 3.618426324078725*^9}}],

Cell[BoxData[
 RowBox[{"lookey", "=", 
  RowBox[{"projEquations", "[", "lucaMod", "]"}]}]], "Input",
 CellChangeTimes->{{3.618326569779497*^9, 3.6183266009594975`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "\"\<a\>\""}], ",", 
    RowBox[{"2", "\[Rule]", "\"\<b\>\""}]}], "|>"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6183298464814606`*^9, 3.61832986295179*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"eqvdIf", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rr", "[", "t", "]"}], "\[GreaterEqual]", "rUnderBar"}], ",", 
        RowBox[{"rr", "[", "t", "]"}], ",", "rUnderBar"}], "]"}]}], "+", 
     RowBox[{"zz", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"xxL_Symbol", "[", "Global`t", "]"}], "-", 
     RowBox[{"Global`eqvdIf", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"xxR_Symbol", "[", "Global`t", "]"}], "\[GreaterEqual]", 
        "yy__"}], ",", "zz__"}], "]"}]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"xxL", ",", "xxR", ",", "yy", ",", "zz"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.618330217858888*^9, 3.6183302427693863`*^9}, {
  3.6183302835802026`*^9, 3.6183304281130934`*^9}}],

Cell["", "Subsection",
 CellChangeTimes->{{3.6183259609458356`*^9, 3.6183259650854216`*^9}}],

Cell[CellGroupData[{

Cell["To Higher Order (2,2,1)", "Subsection",
 CellChangeTimes->{{3.6182431159240584`*^9, 3.6182431196590586`*^9}, {
  3.6182504417300463`*^9, 3.6182504480671263`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"res2$2$1", "=", 
    RowBox[{"res1$1$1", "[", 
     RowBox[{"incOrder", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res2$2$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys1$1$1", "=", 
      RowBox[{
       RowBox[{"genPolys", "[", 
        RowBox[{
         RowBox[{"res2$2$1", "[", 
          RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
         RowBox[{"res2$2$1", "[", 
          RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
       "Chop"}]}], 
     RowBox[{"(*", 
      RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}],
       "*)"}], ",", 
     "\"\<ComputeInitialCollocationWeights did not converge\>\""}], "]"}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}, {
  3.6182461948467803`*^9, 3.61824619804428*^9}}],

Cell[BoxData[
 RowBox[{"sysPolys", "=", 
  RowBox[{"ReplaceVariables", "[", 
   RowBox[{"lucaMod", ",", "polys3$3$1", ",", 
    RowBox[{"{", 
     RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.61824623651553*^9, 3.6182462388867803`*^9}, {
  3.61824650534478*^9, 3.61824650582353*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dimensions", "/@", "sysPolys"}], "=", 
   RowBox[{"sysPolys", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6182464687885303`*^9, 3.6182465227760305`*^9}}],

Cell[BoxData["ListContourPlot3D"], "Input",
 CellChangeTimes->{{3.61824600263428*^9, 3.6182460096567802`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some Plots", "Subsection",
 CellChangeTimes->{{3.6182430754078083`*^9, 3.6182430795040584`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.61824615171303*^9, 3.61824618306053*^9}],

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"uu$Shock", "\[Rule]", 
       RowBox[{"-", ".1"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.618167852917569*^9, 3.618167853883819*^9}, {3.61824488735128*^9, 
  3.6182449484987803`*^9}, {3.61824502854753*^9, 3.6182450409287806`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.6181678576525693`*^9, 3.618167858658819*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.6181678619638195`*^9, 3.618167863386319*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"polys3$3$1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "0"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6181676963338194`*^9, 3.618167813381319*^9}, {
  3.618167871875069*^9, 3.618167872705819*^9}}],

Cell["\<\
One can also get and update (should be \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote], but it isn\[CloseCurlyQuote]t yet) all the model \
parameters simultaneously \
\>", "Text",
 CellChangeTimes->{{3.617531730237169*^9, 3.617531790921002*^9}, {
  3.6175318473302345`*^9, 3.6175318776722345`*^9}, {3.6179006868050604`*^9, 
  3.6179006931551237`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["higher order (3,3,1)", "Subsection",
 CellChangeTimes->{{3.6182504895591574`*^9, 3.618250501472868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"res3$3$1", "=", 
     RowBox[{"res2$2$1", "[", 
      RowBox[{"toOrder", "[", 
       RowBox[{"2", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"res3$3$1", "[", 
        RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
       RowBox[{"polys3$3$1", "=", 
        RowBox[{"genPolys", "[", 
         RowBox[{
          RowBox[{"res3$3$1", "[", 
           RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
          RowBox[{"res3$3$1", "[", 
           RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
      "Chop"}], ";"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}, 
   3.6181679893695693`*^9, {3.61824604683053*^9, 3.6182460838242803`*^9}, 
   3.61824616791928*^9, {3.61824620725928*^9, 3.6182462187505302`*^9}, {
   3.618250421467233*^9, 3.618250426093302*^9}}],

Cell[BoxData[
 RowBox[{"Methods", "[", "res1$1$1", "]"}]], "Input",
 CellChangeTimes->{{3.618253625607786*^9, 3.6182536340581245`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.61825374421253*^9, 3.618253764783353*^9}, 
   3.618253854814329*^9}],

Cell[BoxData[
 RowBox[{"Methods", "[", "theSys", "]"}]], "Input",
 CellChangeTimes->{{3.618253773303694*^9, 3.618253795114329*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 CellChangeTimes->{{3.6179033593378525`*^9, 3.6179033620678797`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}], ";", 
  RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9, 3.6178019897616196`*^9, {3.6182439320120087`*^9, 
   3.618243954374336*^9}}],

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SuperSuperSimpleDebug", "Section",
 CellChangeTimes->{{3.618161018883319*^9, 3.618161026312069*^9}, {
  3.618656627496713*^9, 3.6186566338767133`*^9}}],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection",
 CellChangeTimes->{3.618656652186713*^9}],

Cell[BoxData[
 RowBox[{"tryEqn", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"qt", "\[Equal]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"zt", "+", "ztp1"}], " ", "\[GreaterEqual]", "0"}], ",", "zt",
        ",", "99"}], "]"}]}], ",", 
    RowBox[{"zt", "\[Equal]", 
     RowBox[{"qtm1", "+", "et"}]}], ",", 
    RowBox[{"ztp1", "\[Equal]", 
     RowBox[{"qt", "+", "etp1"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.6186675351164823`*^9, {3.6186677481422606`*^9, 3.6186678994207487`*^9}, {
   3.618668047003276*^9, 3.618668056653179*^9}, {3.618670618464739*^9, 
   3.6186706191047645`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PiecewiseExpand", "[", "tryEqn", "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.618668117196574*^9, 3.6186681254264917`*^9}, {
  3.61866823181343*^9, 3.6186682373833737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"superSimpleEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"eqvdIf", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"zzT", "[", "t", "]"}], "-", 
            RowBox[{"1", "*", 
             RowBox[{"zzT", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}]}], "\[GreaterEqual]", "0"}], 
          ",", 
          RowBox[{"zzT", "[", "t", "]"}], ",", "99"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zzT", "[", "t", "]"}], "-", " ", 
        RowBox[{"qq", "[", 
         RowBox[{"t", "-", "1"}], "]"}], "-", 
        RowBox[{
         RowBox[{"eps", "[", "zzT", "]"}], "[", "t", "]"}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"superSimpleMod", ",", "superSimpleEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",",
        "modEqns"}], "}"}], "=", 
     RowBox[{"GenerateModelCode", "[", "superSimpleMod", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6181615332420692`*^9, 3.618161582344569*^9}, {
   3.618164221779069*^9, 3.618164225962819*^9}, {3.6181642809460692`*^9, 
   3.618164297294819*^9}, {3.6181652195085692`*^9, 3.6181652329598193`*^9}, {
   3.6181653021635695`*^9, 3.6181653078635693`*^9}, {3.618166246271819*^9, 
   3.6181662568418193`*^9}, {3.618167466622819*^9, 3.618167470505319*^9}, {
   3.618167550833069*^9, 3.6181675542068195`*^9}, 3.6182378559250584`*^9, {
   3.6182426906953087`*^9, 3.618242698692808*^9}, {3.6184220122313385`*^9, 
   3.618422023161448*^9}, {3.618426474936246*^9, 3.6184264756762533`*^9}, {
   3.6184280274519243`*^9, 3.61842803300198*^9}, {3.6184284588822803`*^9, 
   3.618428525516981*^9}, {3.618428769603446*^9, 3.6184288569063225`*^9}, {
   3.6184296114959345`*^9, 3.6184296452962723`*^9}, {3.618429786433695*^9, 
   3.618429860678444*^9}, 3.618493851243683*^9, {3.618649713134859*^9, 
   3.6186497153648367`*^9}, {3.618649757826413*^9, 3.6186497776862144`*^9}, {
   3.618656644166713*^9, 3.6186566446167135`*^9}, {3.618656691126411*^9, 
   3.6186566930163918`*^9}, {3.6186567773855486`*^9, 3.618656940753915*^9}, {
   3.6186570061542606`*^9, 3.618657019924123*^9}, {3.6186571059036837`*^9, 
   3.6186571278539033`*^9}, {3.618657193784562*^9, 3.618657197444599*^9}, {
   3.618657365066275*^9, 3.61865737054633*^9}, {3.6186574429558926`*^9, 
   3.6186574445158772`*^9}, {3.61865749522537*^9, 3.618657498615336*^9}, {
   3.6186576134751873`*^9, 3.6186576291150312`*^9}, {3.6186606197743015`*^9, 
   3.6186606234642644`*^9}, 3.61866300393346*^9, 3.6186644423838816`*^9, {
   3.618664782741996*^9, 3.6186647831519957`*^9}, {3.618664944771077*^9, 
   3.6186649453410716`*^9}, {3.618665072262804*^9, 3.618665072592801*^9}, {
   3.618665600179529*^9, 3.6186656005595255`*^9}, {3.618666433771182*^9, 
   3.6186664507815228`*^9}, {3.6186665746900215`*^9, 
   3.6186665750800295`*^9}, {3.618666670144555*^9, 3.618666671214555*^9}, {
   3.618670070370119*^9, 3.618670076110061*^9}, {3.618670606340249*^9, 
   3.6186706080803185`*^9}, {3.618741300032046*^9, 3.618741300352046*^9}}],

Cell[BoxData["\"\<\\\"c:\\\\Program \
Files\\\\Java\\\\jdk1.7.0_51\\\\bin\\\\javac\\\" -cp \
./;ProjectionMethodToolsJava-0.0.1-SNAPSHOT.jar;Jama-1.0.2-1.0-SNAPSHOT.jar  \
-target 1.7 ./superSimpleMod.java\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->CompressedData["
1:eJwd0GtIkwEUBuAtreksRqJlOpulrBFGudzAXOHGVBYkOJpEElpsWFSKgW3m
DIWPKLOvxEEwY15Ahmk3wQuL1japbESImPWjdG3m1syYQuasrPP24/DA++Oc
l7PrTI3WwOVwOKU06Yx/zfojrDT1NJs7yK7KTyMO8rEnyHtKsk+GzLChStcN
9/tvFD0j0/WxW51kYuvR+9B6OXUKbr/Tkf+cHBTyxC7SdW94L9QU1B+AKkVV
NcyoeDsGT/xU7HOTxtqcCR9ZcDN+Bvbu/LMA/Xx77GeSYfUp8E3NeyEslz7Q
wXFukgGu9xVaoMMhPOYn81s1x6Fcm3QOfj9YWQ83aEeb4bzEJgiQlzzuZKjM
yk6DLvZl1hypbrNJYK5LoISBzUzh/zzaVgGNL0pk8+Tr/sV+qNpT54GSjQmr
MHe48y+MNNqlQexNGT0M2Yc6NdzRbqiF+pONd6FT3lQdQq81kRGy4qEoVNRl
7P5K5nkHphbwn5VoCF6RMBFovboUhcuZat830h4Y2LaIu3mMGHpPlx+CqZYL
c5tWwsrVSJDLI4vHwnw4/Wi6DJqPLBnhuCnBDW3taV7oO/XuYhyZWBbTBK+V
nL0OmV/SW9CpkQ3C5d+mj7BlS8sXKCwyj8ST52ctryCnNPQBCm7LkvmkOzsn
E06KHHL4D5gXfi4=
  "]]
}, Open  ]],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"superSimpleSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", "3"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"sigma", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "}"}], "//.", "superSimpleSubs"}], "//", "N"}]}], 
  ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}, {3.6182427033953085`*^9, 
   3.618242724237808*^9}, {3.6182428957790585`*^9, 3.6182429090240583`*^9}, {
   3.61824446597836*^9, 3.61824448509864*^9}, {3.618244528649624*^9, 
   3.6182445291784163`*^9}, {3.6184206482294874`*^9, 
   3.6184206489194946`*^9}, {3.618421512034299*^9, 3.6184215230044084`*^9}, {
   3.618422226795503*^9, 3.6184222273155084`*^9}, {3.6184256469838924`*^9, 
   3.6184256480939035`*^9}, {3.6185030815788217`*^9, 
   3.6185031093690996`*^9}, {3.618507087185193*^9, 3.6185070882551928`*^9}, {
   3.618507552643939*^9, 3.6185075539879575`*^9}, {3.6185749367776327`*^9, 
   3.618574941217677*^9}, {3.6185749891581564`*^9, 3.618574989988165*^9}, {
   3.618575171324982*^9, 3.618575171514984*^9}, {3.6185752899461684`*^9, 
   3.6185752984862537`*^9}, 3.618576505092454*^9, 3.6185765514149194`*^9, {
   3.6185765927593393`*^9, 3.6185765971993837`*^9}, {3.618578713080787*^9, 
   3.618578713510792*^9}, {3.618578933432021*^9, 3.618578934022027*^9}, {
   3.6185844884601364`*^9, 3.618584488740139*^9}, {3.6185845512047677`*^9, 
   3.618584551894775*^9}, {3.6185849550838623`*^9, 3.6185849690640016`*^9}, {
   3.618585052862852*^9, 3.6185850610829344`*^9}, {3.6185851166674976`*^9, 
   3.618585117117502*^9}, 3.618585319272545*^9, {3.618585767127076*^9, 
   3.618585767387079*^9}, {3.618587543637038*^9, 3.618587553627138*^9}, {
   3.6185947331803517`*^9, 3.618594749836527*^9}, {3.618595341567514*^9, 
   3.61859534520755*^9}, {3.6185965519137983`*^9, 3.6185966034243135`*^9}, 
   3.6185970381827173`*^9, {3.618597132957673*^9, 3.618597138867732*^9}, {
   3.6186498015899763`*^9, 3.618649805689935*^9}, {3.6186507867091646`*^9, 
   3.6186508010690207`*^9}, {3.6186510519980965`*^9, 
   3.6186510592083845`*^9}, {3.618651633808719*^9, 3.6186516516485405`*^9}, {
   3.618651720631852*^9, 3.6186517213018456`*^9}, {3.6186532451496463`*^9, 
   3.61865324682963*^9}, {3.618653283273266*^9, 3.618653284053258*^9}, {
   3.6186539178269362`*^9, 3.618653918576929*^9}, {3.618653977430341*^9, 
   3.618653978100334*^9}, {3.6186564087037134`*^9, 3.6186564104537134`*^9}, {
   3.6186565285867133`*^9, 3.6186565304467134`*^9}, {3.618656698336339*^9, 
   3.618656698836334*^9}, {3.618657386156461*^9, 3.618657392656396*^9}, {
   3.6186575321050014`*^9, 3.6186575519748025`*^9}, {3.618657663044692*^9, 
   3.618657691614406*^9}, {3.618657900002322*^9, 3.618657930302019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"qLow", ",", "qHigh"}], "}"}], "}"}], "/.", 
    "superSimpleSubs"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"superSimpleBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "superSimpleSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "superSimpleSubs"}], ",", 
     RowBox[{"sigma", "//.", "superSimpleSubs"}], ",", 
     RowBox[{"integOrder", "//.", "superSimpleSubs"}], ",", "shockPower", ",",
      "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}, {3.6186566997863245`*^9, 
  3.6186567031762905`*^9}, {3.618657523505087*^9, 3.6186575260650616`*^9}, {
  3.6186576536347857`*^9, 3.6186576539147835`*^9}, {3.6186579685316367`*^9, 
  3.618657999101331*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}]], "Input",
 CellChangeTimes->{{3.6181643453198195`*^9, 3.618164367401069*^9}}],

Cell[BoxData[
 RowBox[{"polyRange", "//.", "superSimpleSubs"}]], "Input",
 CellChangeTimes->{{3.6185831540086255`*^9, 3.6185831666987524`*^9}, 
   3.618656703976282*^9}],

Cell[BoxData[
 RowBox[{"solvePoly", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Piecewise", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"99", ",", 
         RowBox[{
          RowBox[{"qq", "+", "zzT$Shock"}], "<", "99"}]}], "}"}], "}"}], ",", 
      RowBox[{"qq", "+", "zzT$Shock"}]}], "]"}], ",", 
    RowBox[{"qq", "+", "zzT$Shock"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.61866879308745*^9, 3.61866892022645*^9}, {
   3.618668957170208*^9, 3.6186690190735893`*^9}, 3.6186704826572895`*^9}],

Cell[BoxData[
 RowBox[{"subbedPolys", "=", 
  RowBox[{
   RowBox[{"PiecewiseExpand", "/@", 
    RowBox[{"ReplaceVariables", "[", 
     RowBox[{"superSimpleMod", ",", "solvePoly", ",", 
      RowBox[{"{", 
       RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"eqvdIf", "\[Rule]", "If"}]}]}]], "Input",
 CellChangeTimes->{{3.618669115320628*^9, 3.6186691371104107`*^9}, {
  3.6186691950038323`*^9, 3.6186692374474087`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"subbedPolys", ",", 
   RowBox[{"{", 
    RowBox[{"qq", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"zzT$Shock", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618669274987033*^9, 3.618669319162592*^9}}],

Cell[BoxData["subbedPolys"], "Input",
 CellChangeTimes->{{3.61866915710021*^9, 3.6186691601101804`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["compute first order projection", "Subsection",
 CellChangeTimes->{{3.6182387696273084`*^9, 3.6182387747148085`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"superSimpleMat", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"superSimpleMat", "=", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"superSimpleMat", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "99"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "1"}]}], "}"}]}], 
      "]"}]}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{"superSimpleMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"superSimpleMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", 
      "superSimpleSubs"}]}], "*)"}], "\n", 
   RowBox[{"superSimpleBasis", "[", 
    RowBox[{"setAllWeights", "[", "superSimpleMat", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.618242282427308*^9, 
   3.618242288222308*^9}, {3.618656708596236*^9, 3.6186567114662075`*^9}, {
   3.618657789013432*^9, 3.6186578026932955`*^9}, {3.6186701180696416`*^9, 
   3.618670118509637*^9}, {3.618740964081046*^9, 3.6187410534550457`*^9}, {
   3.618741224258046*^9, 3.618741228788046*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"<<", "ProjectionInterface`"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6184293990137925`*^9, 3.618429403903841*^9}, {
  3.6188437301707344`*^9, 3.6188437332207346`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simp", "=", 
   RowBox[{
   "JavaNew", "[", 
    "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"",
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res1$1", "=", 
   RowBox[{"ComputeInitialCollocationWeights", "[", 
    RowBox[{
    "superSimpleBasis", ",", "superSimpleMat", ",", "modEqns", ",", "simp"}], 
    "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res1$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1", "=", 
     RowBox[{
      RowBox[{"CreatePolynomials", "[", 
       RowBox[{"superSimpleMod", ",", "res1$1"}], "]"}], "//", "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", "\"\<ComputeInitialCollocationWeights did not converge\>\"",
     ",", "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}, {3.6181617113335695`*^9, 
   3.618161711836069*^9}, {3.618163930235319*^9, 3.618163930860319*^9}, {
   3.6182388492755585`*^9, 3.6182388757220583`*^9}, {3.6184291133629093`*^9, 
   3.618429142187204*^9}, 3.618495827011609*^9, {3.618502907547064*^9, 
   3.618502927927268*^9}, {3.6185030281362824`*^9, 3.6185030289362907`*^9}, {
   3.6185053233954377`*^9, 3.618505336475569*^9}, {3.618507313591193*^9, 
   3.618507318451193*^9}, {3.618597158551937*^9, 3.618597164031992*^9}, {
   3.6185973146615195`*^9, 3.618597317501548*^9}, {3.6186564849757133`*^9, 
   3.618656486865713*^9}, {3.618656712156201*^9, 3.6186567133161893`*^9}, {
   3.618658027161051*^9, 3.618658035910963*^9}, 3.618658195122958*^9}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"getAllFVals", "[", "res1$1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618661189034574*^9, 3.618661207465127*^9}}],

Cell[BoxData["polys1$1"], "Input",
 CellChangeTimes->{{3.6186703121157045`*^9, 3.6186703163356624`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"getAllFVals", "[", "res1$1", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ")"}], "//", "Chop"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186608688468113`*^9, 3.6186609258262415`*^9}, {
   3.618661114404355*^9, 3.618661119024309*^9}, {3.6186611494240055`*^9, 
   3.6186611612638865`*^9}, {3.6186612344559364`*^9, 3.618661235195959*^9}, 
   3.6186613790512743`*^9, {3.6186661724678106`*^9, 3.618666182807707*^9}, {
   3.6186662723288116`*^9, 3.6186663223089533`*^9}}],

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"getAllXVals", "[", "res1$1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618661189034574*^9, 3.618661207465127*^9}, {
  3.6186625137144504`*^9, 3.6186625144944506`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Transpose", "/@", 
     RowBox[{
      RowBox[{"getAllXVals", "[", "res1$1", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "//", "Chop"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186625268844504`*^9, 3.6186625730344505`*^9}, {
  3.6186626293644505`*^9, 3.6186626427844505`*^9}, {3.6186627461744504`*^9, 
  3.6186627480444503`*^9}}],

Cell[BoxData["nonStateVar"], "Input",
 CellChangeTimes->{{3.61865821672339*^9, 3.618658224523546*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theSys", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheSystem", "[", "]"}], "]"}]}], ";", 
  RowBox[{"theBasis", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theResWeights", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"getResWeights", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theBasis", "[", 
   RowBox[{"setAllWeights", "[", "theResWeights", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valDrv", "=", 
   RowBox[{"theSys", "[", 
    RowBox[{"updateValDrv", "[", "theBasis", "]"}], "]"}]}], ";", 
  RowBox[{"fVec", "=", 
   RowBox[{
    RowBox[{"valDrv", "[", 
     RowBox[{"getTheVal", "[", "]"}], "]"}], "[", 
    RowBox[{"getArray", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "fVec"}], "Input",
 CellChangeTimes->{{3.6182538073343287`*^9, 3.618253827974329*^9}, {
  3.6182538589143286`*^9, 3.6182538597343287`*^9}, {3.6182539171363287`*^9, 
  3.618253957736329*^9}, {3.6182539925063286`*^9, 3.618254002416329*^9}, {
  3.6182540648363285`*^9, 3.6182541455980215`*^9}, {3.618306819017769*^9, 
  3.618306820857806*^9}, {3.6183069070795307`*^9, 3.6183069146596823`*^9}, {
  3.6183070298419857`*^9, 3.6183070428722463`*^9}, {3.6183070817230234`*^9, 
  3.6183072042654743`*^9}, {3.618307234616081*^9, 3.618307347318335*^9}, {
  3.618307422109831*^9, 3.6183074230598497`*^9}, {3.618307524621881*^9, 
  3.6183075507424035`*^9}, {3.618502070648615*^9, 3.618502073748646*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["barrier", "Section",
 CellChangeTimes->{{3.6186581450119553`*^9, 3.618658150572067*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Java", "::", "excptn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A Java exception occurred: \
\[NoBreak]\\!\\(\\\"java.lang.NullPointerException\\\\n\\\\tat \
gov.frb.ma.msu.ProjectionMethodToolsJava.WeightedStochasticBasis.\
setAllWeights(WeightedStochasticBasis.java:201)\\\"\\)\[NoBreak].\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.6186565458567133`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.047009951050155235`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.04701168623553939`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.04676627245405604`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.046515756222413995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.04689115923158921`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.046819160334631627`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.04659340393917924`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.04349851623749065`"}], "}"}], ",", 
   RowBox[{"{", "0.0002514473452996657`", "}"}], ",", 
   RowBox[{"{", "0.0002462560310892538`", "}"}], ",", 
   RowBox[{"{", "0.00015422241991783214`", "}"}], ",", 
   RowBox[{"{", "0.00004209867035664949`", "}"}], ",", 
   RowBox[{"{", "0.00025137348803067755`", "}"}], ",", 
   RowBox[{"{", "0.0002461836986540067`", "}"}], ",", 
   RowBox[{"{", "0.00015417712733000084`", "}"}], ",", 
   RowBox[{"{", "0.002493174812408211`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0005790194705080492`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0005668278028656965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0003550806227792802`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00009688718995930212`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.000578679371545085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0005664948649081875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00035487209080557747`"}], "}"}], ",", 
   RowBox[{"{", "0.003095169569096376`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00025144734529960013`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0002462560310892368`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00015422241991773652`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00004209867035660977`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0002513734880306408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0002461836986539695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00015417712732999952`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0024931748124081624`"}], "}"}], ",", 
   RowBox[{"{", "0.0002514473452996102`", "}"}], ",", 
   RowBox[{"{", "0.000246256031089259`", "}"}], ",", 
   RowBox[{"{", "0.00015422241991777663`", "}"}], ",", 
   RowBox[{"{", "0.000042098670356635615`", "}"}], ",", 
   RowBox[{"{", "0.00025137348803066367`", "}"}], ",", 
   RowBox[{"{", "0.0002461836986539512`", "}"}], ",", 
   RowBox[{"{", "0.00015417712733001038`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.005183738217704792`"}], "}"}], ",", 
   RowBox[{"{", "0.00025144734529963797`", "}"}], ",", 
   RowBox[{"{", "0.00024625603108923214`", "}"}], ",", 
   RowBox[{"{", "0.00015422241991777663`", "}"}], ",", 
   RowBox[{"{", "0.00004209867035662174`", "}"}], ",", 
   RowBox[{"{", "0.00025137348803065673`", "}"}], ",", 
   RowBox[{"{", "0.00024618369865403444`", "}"}], ",", 
   RowBox[{"{", "0.00015417712732999043`", "}"}], ",", 
   RowBox[{"{", "5.551115123125783`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
   RowBox[{"{", "2.7755575615628914`*^-17", "}"}], ",", 
   RowBox[{"{", "8.326672684688674`*^-17", "}"}], ",", 
   RowBox[{"{", "2.7755575615628914`*^-17", "}"}], ",", 
   RowBox[{"{", "2.7755575615628914`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.7755575615628914`*^-17"}], "}"}], ",", 
   RowBox[{"{", "2.7755575615628914`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00518373821770482`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0Gkow3EAh/G/zZizJTlzFZo33igTI0NSKPeRMhtaW2NkMVpyFkUpktTK
MWdbvJBrroWEKS9IjpijuV/QMKb4fV88fd4/QUJZVrkNRVHxJK2+gnH98cTj
ar29YZXRkA1ZM+elsM3o3wsjVs3D0GdH9Q7nzqW0G+Ld6W46VJaqcmCeukwM
uwfn66H5N6wVTjVPsG6JDY6pHvBB0OgLrZa/Q9iVGRxyR6xlvbKhspLPg1s6
XTKUylY1MNw/PtJEVMjHRmBAyo0GujOEm1C00ncGF8O/LDBazaXuia7f9Ag4
y3GJg14iTRLsly9WQ/W+ZAD2SGpkD8TLyJM6WDy5xnnEl6u942eiqV36CG0P
+t6gR2fGD6TeJo0vxFNnB89XYtr6VShUuxXHwFHxhsnu84nHHBLR7InssHEn
GBXIzYcDKyUK6FZWrocqVcMe7JiJrWQStfyfJij4Xe+AloSubsgutC7Bo+aj
C/g1XPAC66YHlx2IPrmJu7CI2eLsSDTQt/3gQm5sMPwHDmMx2A==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"polys1$1$1", "//", "Expand"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185838437106133`*^9, 3.6185838680148635`*^9}, {
   3.618584140273612*^9, 3.618584142573635*^9}, 3.6185966428697147`*^9, {
   3.618596849543801*^9, 3.618596851527829*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6185830936430144`*^9, 3.618583103103109*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"drum", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"collocateParamsRange", "[", 
     RowBox[{"modEqns", ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", 
        RowBox[{"-", "8"}], ",", "1."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1.", ",", "0.99", ",", "1.", ",", "0.5", ",", "0.5", ",", ".02", ",", 
        "1."}], "}"}], ",", "500"}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6185038148502083`*^9, 3.6185039708517847`*^9}, {
   3.618504085428938*^9, 3.618504088008964*^9}, {3.6185051587537746`*^9, 
   3.6185051602037888`*^9}, {3.6185055077672987`*^9, 
   3.6185055322915506`*^9}, {3.618507146149193*^9, 3.618507147649193*^9}, {
   3.618507257597193*^9, 3.6185072602171926`*^9}, 3.618507367711193*^9, {
   3.6185075864182816`*^9, 3.618507595538373*^9}, {3.61850764858291*^9, 
   3.618507657583*^9}, {3.6185719782292852`*^9, 3.6185719815790176`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fv", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";", 
  RowBox[{"xv", "=", 
   RowBox[{"getAllXVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618502361719551*^9, 3.618502390709841*^9}, {
  3.6185024400643406`*^9, 3.6185024581685276`*^9}}],

Cell[BoxData[
 RowBox[{"fv", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618573593848198*^9, 3.618573596708226*^9}, {
  3.6185741309455705`*^9, 3.6185741453697186`*^9}, {3.6185741753800187`*^9, 
  3.6185741816400814`*^9}}],

Cell[BoxData[
 RowBox[{"Norm", " ", "/@", 
  RowBox[{"fv", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618507170819193*^9, 3.6185072071031933`*^9}, {
  3.618507447869193*^9, 3.6185075040534534`*^9}, {3.6185076273626976`*^9, 
  3.618507639252817*^9}, {3.618573613288392*^9, 3.6185736224084835`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curious", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceVariables", "[", 
       RowBox[{"superSimpleMod", ",", "polys1$1$1", ",", 
        RowBox[{"{", 
         RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "//.", 
      "superSimpleSubs"}], "//", "Expand"}], "//", "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184186426563253`*^9, 3.6184186896667957`*^9}, {
   3.618418781537714*^9, 3.618418790507804*^9}, {3.6184191676615753`*^9, 
   3.6184191701416*^9}, {3.61842122522132*^9, 3.6184212268713365`*^9}, {
   3.618421746548664*^9, 3.6184217517987165`*^9}, {3.6184218192733965`*^9, 
   3.6184218298235025`*^9}, 3.6184267575071*^9, {3.6184959477288265`*^9, 
   3.6184959523288727`*^9}, 3.618498183979375*^9, {3.618500894470745*^9, 
   3.6185008984227867`*^9}, {3.6186567138761835`*^9, 3.6186567151461706`*^9}}],

Cell[BoxData["forCurious"], "Input",
 CellChangeTimes->{{3.6185855426288047`*^9, 3.618585544558824*^9}}],

Cell[BoxData[
 RowBox[{"curious", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6185872675252423`*^9, 3.618587279435362*^9}, {
  3.618651262912651*^9, 3.6186512633926506`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"PiecewiseExpand", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"curious", "//.", "superSimpleSubs"}], "/.", 
      RowBox[{"eqvdIf", "\[Rule]", "If"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6184188508784075`*^9, 3.6184189265291643`*^9}, {
   3.6184189908598075`*^9, 3.6184190413603125`*^9}, {3.6184191030809298`*^9, 
   3.6184191211111097`*^9}, {3.618419175891658*^9, 3.6184192139620385`*^9}, {
   3.6184192887427864`*^9, 3.618419313853037*^9}, {3.6184194196740956`*^9, 
   3.6184194199840984`*^9}, {3.6184251637701364`*^9, 3.618425182070136*^9}, {
   3.6184252168401365`*^9, 3.6184252176101365`*^9}, 3.6185009454232564`*^9, {
   3.6185014575884275`*^9, 3.6185014761286125`*^9}, 3.6186567156561656`*^9}],

Cell[BoxData[
 RowBox[{"doop", "=", 
  RowBox[{
   RowBox[{"huh", "//.", 
    RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}]}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184255829412484`*^9, 3.618425589381313*^9}, {
   3.618501731363187*^9, 3.618501732103194*^9}, {3.6185018414602976`*^9, 
   3.618501842520308*^9}, 3.618574516393429*^9, {3.6185750502587676`*^9, 
   3.6185750560088253`*^9}, {3.618584449409746*^9, 3.618584450629758*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Dimensions", "[", "ha", "]"}]}]], "Input",
 CellChangeTimes->{{3.618651293282651*^9, 3.618651321526651*^9}}],

Cell[BoxData[
 RowBox[{"ha", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Expectation", "[", 
      RowBox[{"#", ",", 
       RowBox[{"lookey", " ", "\[Distributed]", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "0.02"}], "]"}]}]}], "]"}], "&"}], " ", "/@", 
    RowBox[{"Flatten", "[", "doop", "]"}]}], "//", "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6184251933801365`*^9, 3.6184254582819867`*^9}, {
   3.6184998897426014`*^9, 3.618499890762612*^9}, 3.6184999218229227`*^9, {
   3.618500989557705*^9, 3.618501056952385*^9}, {3.618501772587605*^9, 
   3.6185017733976135`*^9}, {3.618501847770361*^9, 3.6185018597644873`*^9}, {
   3.6185021226231403`*^9, 3.6185021229131436`*^9}, {3.6185022051179714`*^9, 
   3.6185022222521467`*^9}, {3.618574876317028*^9, 3.618574877927044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"fv", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", "8"}], "]"}], "//", 
   "Chop"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185876736103635`*^9, 3.618587683830466*^9}, {
  3.6185878718783774`*^9, 3.618587896958628*^9}, {3.6186516925521326`*^9, 
  3.6186516941721163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "ha", "]"}], ",", "7"}], "]"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6185879085087433`*^9, 3.61858794156108*^9}, {
  3.618587971782382*^9, 3.6185879798124623`*^9}, {3.618651136660492*^9, 
  3.6186511594414034`*^9}, {3.618651345296651*^9, 3.6186513469866505`*^9}}],

Cell[BoxData[
 RowBox[{"fVec", "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6185876238858595`*^9, 3.6185876255558767`*^9}, {
  3.6186539464206505`*^9, 3.6186539487006283`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6186514035506506`*^9, 3.618651405850651*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gtXFormedChebSubsNotStrings", "[", "theBasis", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6186534046210537`*^9, 3.618653406841031*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fvRange", "=", 
   RowBox[{"getAllFVals", "[", "res1$1$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.618588399112706*^9, 3.6185884625973487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "fvRange", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6185884391271143`*^9, 3.6185884674114037`*^9}}],

Cell[BoxData[
 RowBox[{"polys1$1$1", "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.618594640541397*^9, 3.618594652531517*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.618652540959446*^9, 3.618652542249446*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Luca\[CloseCurlyQuote]s Simplest Financial Market Model", "Section"],

Cell[CellGroupData[{

Cell["Model and Initial Polynomial Basis Definition", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
Provide Model Equations and Generate an instance of the Model\
\[CloseCurlyQuote]s Class ( a Subclass of DoEqns )\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lucaEqns", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"qq", "[", "t", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"betap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "rhop"}], ")"}], "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "+", "1"}], "]"}]}], "+", 
          RowBox[{"rhop", "*", 
           RowBox[{"qq", "[", 
            RowBox[{"t", "-", "1"}], "]"}]}], "-", 
          RowBox[{"sigmap", "*", 
           RowBox[{"rr", "[", "t", "]"}]}], "+", 
          RowBox[{"ru", "[", "t", "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"rr", "[", "t", "]"}], "-", 
        RowBox[{"phip", "*", 
         RowBox[{"qq", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"ru", "[", "t", "]"}], "-", 
        RowBox[{"rho$ru", "*", 
         RowBox[{"ru", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "-", 
        RowBox[{"adj", "*", 
         RowBox[{
          RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newWeightedStochasticBasis", "[", 
     RowBox[{"lucaMod", ",", "lucaEqns"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stateVar", ",", "nonStateVar", ",", "theShock"}], "}"}], ",", 
      "modEqns"}], "}"}], "=", 
    RowBox[{"GenerateModelCode", "[", "lucaMod", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184715132008`*^9}, {
   3.6176203137766237`*^9, 3.617620320586692*^9}, 3.617622301252499*^9, {
   3.6176238558830457`*^9, 3.617623855893046*^9}, {3.6176418815599227`*^9, 
   3.617641890090008*^9}, 3.6176420120022273`*^9, {3.6177033847505884`*^9, 
   3.6177033969401007`*^9}, {3.6182278635640583`*^9, 
   3.6182279570803084`*^9}, {3.6182301341053085`*^9, 
   3.6182301351490583`*^9}, {3.6182301891553087`*^9, 
   3.6182301943953085`*^9}, {3.6182348081713085`*^9, 
   3.6182348099438086`*^9}, {3.6182350255715585`*^9, 
   3.6182350276940584`*^9}, {3.6182354325328083`*^9, 
   3.6182354691448083`*^9}, {3.6182356846533084`*^9, 
   3.6182357488365583`*^9}, {3.618236119559308*^9, 3.6182361457443085`*^9}, 
   3.6182378252090583`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\\"c:\\\\Program \
Files\\\\Java\\\\jdk1.7.0_51\\\\bin\\\\javac\\\" -cp \
./;ProjectionMethodToolsJava-0.0.1-SNAPSHOT.jar;Jama-1.0.2-1.0-SNAPSHOT.jar  \
-target 1.7 ./lucaMod.java\"\>"], "Print",
 CellChangeTimes->{3.618839122719734*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ingenmodcode:\"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", "lucaMod", "]"}], "\[RightGuillemet]"}],
    JLink`Objects`vm1`JavaObject15503454965334017], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"qq", ",", "ru"}], "}"}], ",", 
     RowBox[{"{", "rr", "}"}], ",", 
     RowBox[{"{", "uu$Shock", "}"}]}], "}"}]}],
  SequenceForm[
  "ingenmodcode:", 
   JLink`Objects`vm1`JavaObject15503454965334017, {{$CellContext`qq, \
$CellContext`ru}, {$CellContext`rr}, {$CellContext`uu$Shock}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.618839127839734*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>"}], "}"}], ",", 
     RowBox[{"{", "\<\"rr\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"uu$Shock\"\>", "}"}]}], "}"}], ",", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", "lucaMod", "]"}], "\[RightGuillemet]"}],
    JLink`Objects`vm1`JavaObject15503454965334017]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391278797345`*^9}]
}, Open  ]],

Cell[TextData[{
 "A list of equations constitutes the model\[CloseCurlyQuote]s definition. \
The state and non-state variables are of the form symbolName[t-1|t|t+1]. The \
shocks are of the form eps[symbolName][t].  The shocks and the variables with \
time index t-1 constitute the state variables. The newWeigthedStochasticBasis \
function associates features of the model definition with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " upvalues of a variable."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lucaSubs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"betap", "\[Rule]", 
      RowBox[{"99", "/", "100"}]}], ",", 
     RowBox[{"phip", "\[Rule]", "1"}], ",", 
     RowBox[{"rhop", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"sigmap", "\[Rule]", "1"}], ",", 
     RowBox[{"rUnderBar", "\[Rule]", 
      RowBox[{"0", "*", 
       RowBox[{"2", "/", "100"}]}]}], ",", 
     RowBox[{"qLow", "\[Rule]", 
      RowBox[{"-", ".5"}]}], ",", 
     RowBox[{"qHigh", "\[Rule]", ".5"}], ",", 
     RowBox[{"ruLow", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "4"}], "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"ruHigh", "\[Rule]", "  ", 
      RowBox[{"4", "*", 
       RowBox[{"sigma$u", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "rho$ru"}], ")"}]}]}]}], ",", 
     RowBox[{"integOrder", "\[Rule]", 
      RowBox[{"{", "10", "}"}]}], ",", 
     RowBox[{"sigma$u", "\[Rule]", "0.02"}], ",", 
     RowBox[{"theMean", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"rho$ru", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"adj", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modParams", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "adj", ",", "betap", ",", "phip", ",", "rhop", ",", " ", "rho$ru", ",", 
       "sigmap"}], "}"}], "//.", "lucaSubs"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "modParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6176184695131807`*^9, 3.6176184709431953`*^9}, {
   3.617703402499878*^9, 3.617703411279773*^9}, {3.6177064442624526`*^9, 
   3.617706470622716*^9}, 3.6177065552335625`*^9, {3.6177068140671525`*^9, 
   3.617706814627158*^9}, {3.617808431086068*^9, 3.617808432756085*^9}, {
   3.617900877016963*^9, 3.6179008776869698`*^9}, {3.6188257804586506`*^9, 
   3.6188257809586506`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polyRange", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qLow", ",", "qHigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ruLow", ",", "ruHigh"}], "}"}]}], "}"}], "/.", "lucaSubs"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"initPower", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"shockPower", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6176197329698153`*^9, 3.6176197373298593`*^9}, {
  3.617897602744055*^9, 3.617897609984127*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Computation for First Degree", "Subsection",
 CellChangeTimes->{{3.6176181767412395`*^9, 3.6176181877213497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "rhop"}], ",", "0", ",", "0", ",", "1", ",", "sigmap", 
       ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"betap", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rhop"}], ")"}]}], ")"}]}], ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"-", "phip"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "rho$ru"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rhop"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip", "*", "rho$ru"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "rho$ru"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phimat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "sigmap"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
          RowBox[{"phip", "*", "sigmap", "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"phip", "*", "sigmap"}], "-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", "*", "betap", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], 
               "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
              "]"}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "betap", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "phip"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "betap", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rho$ru"}], "+", 
          RowBox[{"phip", "*", "sigmap"}], "+", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"phip", "*", "sigmap"}], "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", "betap", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
           "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phip", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"phip", "*", "sigmap"}], "-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"4", "*", "betap", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "rhop"}], ")"}], "*", "rhop"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"phip", "*", "sigmap"}]}], ")"}], "^", "2"}]}], 
             "]"}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "rhop"}], ")"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qkArray", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"qk", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theProd", "=", 
    RowBox[{"qkArray", ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}], "}"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"targ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bmat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "qq", "}"}], ",", 
         RowBox[{"{", "rr", "}"}], ",", 
         RowBox[{"{", "ru", "}"}]}], "}"}]}], "+", 
      RowBox[{"phimat", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "adj", "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"{", "uu$Shock", "}"}], "}"}]}]}], ")"}], "+", 
    RowBox[{"zero", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"qq", "*", "rr"}], "+", 
       RowBox[{"qq", "*", "uu$Shock"}], "+", 
       RowBox[{"rr", "*", "uu$Shock"}], "+", 
       RowBox[{"qq", "*", "rr", "*", "uu$Shock"}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"goodQkArray", "=", 
   RowBox[{"qkArray", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tcl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"targ", ",", 
               RowBox[{"{", 
                RowBox[{"qq", ",", "ru", ",", "uu$Shock"}], "}"}]}], "]"}], 
             "]"}]}], ")"}], "\[Equal]", 
          RowBox[{"(", 
           RowBox[{"acl", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"theProd", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<qq\>\"", ",", "\"\<ru\>\"", ",", "\"\<uu$Shock\>\""}], 
                "}"}]}], "]"}], "]"}]}], ")"}]}], "]"}], "/.", 
        RowBox[{"zero", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Flatten", "[", "qkArray", "]"}]}], "]"}], "]"}]}]}], ";", 
  RowBox[{"lucaMatSymb", "=", 
   RowBox[{"goodQkArray", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.617618191091383*^9, 3.6176182619961014`*^9}, {
   3.617618332971815*^9, 3.6176183804022894`*^9}, {3.61761842843277*^9, 
   3.6176185124736104`*^9}, 3.617618623214718*^9, {3.6176246250167437`*^9, 
   3.6176246317668114`*^9}, {3.6176246770072637`*^9, 3.6176247573890676`*^9}, 
   3.617895950299513*^9, 3.6179006239644322`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lucaMat", "=", 
  RowBox[{
   RowBox[{"lucaMatSymb", "//.", "lucaSubs"}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.617627763020282*^9, 3.617627766890321*^9}, {
   3.617627799922654*^9, 3.6176278399040537`*^9}, {3.6176278824864836`*^9, 
   3.6176281084647675`*^9}, {3.6177381889885225`*^9, 
   3.6177381911185436`*^9}, {3.6177383746603785`*^9, 3.617738413470767*^9}, {
   3.6177385310319424`*^9, 3.6177386394130263`*^9}, {3.6177959800565042`*^9, 
   3.6177959979666834`*^9}, {3.617797284849552*^9, 3.6177972872395763`*^9}, {
   3.6178012830255404`*^9, 3.617801310705817*^9}, {3.6178068828165636`*^9, 
   3.6178069017467527`*^9}, 3.617807018587921*^9, {3.6178943096991043`*^9, 
   3.6178943124091315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.13387113268194584`", ",", "0.15432407617017166`", ",", 
     "0.`", ",", "0.3086481523403433`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.25`", ",", "0.`", ",", "0.5`", ",", "0.`", ",",
      "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.13387113268194584`", ",", "0.15432407617017166`", ",", 
     "0.`", ",", "0.3086481523403433`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391304797344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bmat", ",", "phimat"}], "}"}], "//.", "lucaSubs"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.617802364651374*^9, 3.6178023718714466`*^9}, 
   3.6178943142791505`*^9, {3.6178945883238907`*^9, 3.617894594113949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2677422653638917`", ",", "0.`", ",", "0.30864815234034326`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.5`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5354845307277833`", ",", 
       RowBox[{"-", "0.5354845307277833`"}], ",", "0.6172963046806865`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5354845307277833`", ",", "0.4645154692722171`", ",", 
       "0.6172963046806865`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6188391305297346`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute initial projection", "Subsection",
 CellChangeTimes->{{3.618241121927308*^9, 3.6182411277748084`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "row", 
    " ", "for", " ", "each", " ", "state", " ", "variable", " ", "and", " ", 
    "each", " ", "shock"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "matrix", " ", "should", " ", "have", " ", "a", " ", "column", 
    " ", "for", " ", "each", " ", "basis", " ", "polynomial"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lucaMat", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"lucaMat", "=", 
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"lucaMat", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "0.292289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "rho$ru"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "0.299289"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", ".53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "53"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}]}], "]"}], "//.", "lucaSubs"}]}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"lucaBasis", "[", 
    RowBox[{"setAllWeights", "[", 
     RowBox[{"lucaMat", "+", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"200", 
          RowBox[{"Random", "[", "]"}]}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "8"}], "}"}]}], "]"}]}], "]"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"simp", "=", 
     RowBox[{
     "JavaNew", "[", 
      "\"\<gov.frb.ma.msu.ProjectionMethodToolsJava.SimpleFindZeroStrategy\>\"\
", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"res1$1$1", "=", 
     RowBox[{"ComputeInitialCollocationWeights", "[", 
      RowBox[{"lucaBasis", ",", "lucaMat", ",", "modEqns", ",", "simp"}], 
      "]"}]}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"res1$1$1", "[", 
       RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
      RowBox[{"polys1$1$1", "=", 
       RowBox[{
        RowBox[{"genPolys", "[", 
         RowBox[{
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
          RowBox[{"res1$1$1", "[", 
           RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
        "Chop"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
       "*)"}], ",", 
      "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6176156469769397`*^9, 3.6176156523569937`*^9}, 
   3.617617055755028*^9, {3.617619353515021*^9, 3.6176194404058895`*^9}, {
   3.6176195132566185`*^9, 3.617619518896675*^9}, 3.6176195724572105`*^9, 
   3.61761967341922*^9, {3.6176199544320297`*^9, 3.617619974732233*^9}, {
   3.617628132645009*^9, 3.6176281388650713`*^9}, {3.6176283671223745`*^9, 
   3.617628398636697*^9}, {3.617707678452851*^9, 3.617707683832905*^9}, {
   3.617810028308057*^9, 3.61781003865816*^9}, {3.6178946311343193`*^9, 
   3.617894656424572*^9}, {3.6178947445854535`*^9, 3.617894751975528*^9}, {
   3.6178948219762278`*^9, 3.617894830366311*^9}, {3.617895719505203*^9, 
   3.617895722175229*^9}, {3.6179020634008284`*^9, 3.6179021033412275`*^9}, {
   3.617902153351728*^9, 3.617902177271967*^9}}],

Cell[BoxData[
 RowBox[{"genPolys", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", 
      RowBox[{
      "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
       "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
     "\[RightGuillemet]"}],
    JLink`Objects`vm1`JavaObject21042422561636353], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1338711326819458`", ",", "0.049383704374454954`", ",", "0",
        ",", "0.05999456893325389`", ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0.08`", ",", "0", ",", "0.09718925656664625`", ",",
        "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1338711326819458`", ",", "0.04938370437445494`", ",", "0", 
       ",", "0.05999456893325386`", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6188391313297343`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Obtaining Information About the Model Solution", "Subsection",
 CellChangeTimes->{{3.6182412040305586`*^9, 3.6182412238200583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ushk", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, 3.617539650968808*^9, {
   3.617539771520014*^9, 3.617539771530014*^9}, {3.6175447381456804`*^9, 
   3.6175447847461467`*^9}, {3.6176152216606865`*^9, 3.617615223130701*^9}, {
   3.617729256863103*^9, 3.6177292659831944`*^9}, {3.6178125174749517`*^9, 
   3.6178125207149844`*^9}, 3.617897909905138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", "0.06872318237675475`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.06872318237675475`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391317297344`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<uu$Shock\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175390631259155`*^9}, 3.6175396509788084`*^9, {3.617539771530014*^9, 
   3.617539771530014*^9}, 3.617726982672346*^9, {3.6178125554353313`*^9, 
   3.6178125576453533`*^9}, 3.617897982661892*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.617539651018809*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.617703168939221*^9, 3.617703170609154*^9}, {
   3.6177251642891626`*^9, 3.617725171869238*^9}, 3.617897983211898*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}], ",", 
   RowBox[{"{", "0.35355339059327373`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.35355339059327373`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391317897344`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.6175396510288086`*^9, {3.6175397808301067`*^9, 
   3.6175397808301067`*^9}, {3.6177251761492805`*^9, 3.6177251785693054`*^9}, 
   3.617726984322363*^9, {3.6178134560223618`*^9, 3.6178134697124987`*^9}, 
   3.6178979837519026`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.617539651048809*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.617725218189701*^9, 3.61772522000972*^9}, {
   3.6178134784125853`*^9, 3.6178134801226025`*^9}, 3.617897986241928*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.422031988005361`", "}"}], ",", 
   RowBox[{"{", "0.2327096165563051`", "}"}], ",", 
   RowBox[{"{", "0.20378478648480564`", "}"}], ",", 
   RowBox[{"{", "0.01446241503574977`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.014462415035749687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.20378478648480558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.23270961655630504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.4220319880053609`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391318497343`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.6175396510588093`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252370898905`*^9, 3.6177252404999247`*^9}, 
   3.61772699007242*^9, 3.6178979869219346`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.6175396510688095`*^9, {3.617539780840107*^9, 
   3.617539780840107*^9}, {3.6177252488600082`*^9, 3.6177252514100337`*^9}, {
   3.6178134902427034`*^9, 3.6178134918127193`*^9}, 3.617897987691942*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.6245126790883837`", "}"}], ",", 
   RowBox[{"{", "0.5738230784725493`", "}"}], ",", 
   RowBox[{"{", "0.2250674265680727`", "}"}], ",", 
   RowBox[{"{", "0.1743778259522383`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17437782595223822`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.22506742656807263`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.5738230784725492`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.6245126790883836`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391318997345`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<qq\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.6175396510788097`*^9, {3.617539780840107*^9, 
   3.617539780850107*^9}, {3.617725260960129*^9, 3.617725262840148*^9}, 
   3.6177269918424377`*^9, 3.6178979883419485`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutm1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539015086396*^9}, 3.6175392088874583`*^9, 3.6175394582869225`*^9, 
   3.6175396510988097`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, {
   3.6177106269615965`*^9, 3.617710632491652*^9}, {3.6177252781303005`*^9, 
   3.617725279760317*^9}, 3.617897989161957*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", "0.11313708498984762`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.11313708498984759`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391319797344`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", "lucaBasis", ",", " ", "lucaMat"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539084265704*^9}, 3.617539208947458*^9, 3.617539467326923*^9, 
   3.6175396511088095`*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.617725307870598*^9, 3.6177269974024935`*^9, {3.617813504982851*^9, 
   3.617813510372905*^9}, 3.6178138325861273`*^9, 3.617897990611972*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rut", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.617539479096923*^9, 
   3.61753965114881*^9, {3.617539859260891*^9, 3.617539859260891*^9}, 
   3.6177253085806055`*^9, 3.617813838136183*^9, 3.617897991391979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.5303300858899107`", "}"}], ",", 
   RowBox[{"{", "0.5303300858899107`", "}"}], ",", 
   RowBox[{"{", "0.17677669529663692`", "}"}], ",", 
   RowBox[{"{", "0.17677669529663692`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17677669529663684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17677669529663684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.5303300858899106`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.5303300858899106`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391320597343`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175394824969225`*^9, 
   3.61753965114881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725310980629*^9, 3.617726995772477*^9, 3.6178979921219864`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rutp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175394837869225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.6177253135206547`*^9, {3.6178135164529657`*^9, 3.617813518572987*^9}, 
   3.6178979926919923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.8286407592029854`", "}"}], ",", 
   RowBox[{"{", "0.8286407592029854`", "}"}], ",", 
   RowBox[{"{", "0.27621358640099514`", "}"}], ",", 
   RowBox[{"{", "0.27621358640099514`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.276213586400995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.276213586400995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.8286407592029853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.8286407592029853`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391321097345`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<ru\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.6175394860369225`*^9, 
   3.61753965115881*^9, {3.617539859270891*^9, 3.617539859270891*^9}, 
   3.617725316300682*^9, 3.617727031702837*^9, 3.617897993301998*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrt", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539028196265*^9}, 3.6175392097874494`*^9, 3.6175396511888103`*^9, {
   3.617539859270891*^9, 3.6175398592808914`*^9}, 3.617725318670706*^9, {
   3.617813531043112*^9, 3.6178135320331216`*^9}, 3.6178979939920053`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.422031988005361`", "}"}], ",", 
   RowBox[{"{", "0.2327096165563051`", "}"}], ",", 
   RowBox[{"{", "0.20378478648480564`", "}"}], ",", 
   RowBox[{"{", "0.01446241503574977`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.014462415035749687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.20378478648480558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.23270961655630504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.4220319880053609`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391323297343`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "0"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.6175391040075073`*^9}, 3.617539210287444*^9, 3.6175396511888103`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.6177253196207156`*^9, 
   3.6177270480029993`*^9, 3.6178979946020117`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rrtp1", "=", 
  RowBox[{"doVal", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.6175390136164107`*^9, 
   3.617539035536192*^9}, 3.617539210797439*^9, 3.6175396511988106`*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725320590725*^9, {
   3.6178135365931673`*^9, 3.617813538953191*^9}, 3.617897995162017*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.6245126790883837`", "}"}], ",", 
   RowBox[{"{", "0.5738230784725493`", "}"}], ",", 
   RowBox[{"{", "0.2250674265680727`", "}"}], ",", 
   RowBox[{"{", "0.1743778259522383`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.17437782595223822`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.22506742656807263`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.5738230784725492`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.6245126790883836`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391324497347`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doDrv", "[", 
   RowBox[{
    RowBox[{"varName", " ", "=", " ", "\"\<rr\>\""}], ",", " ", 
    RowBox[{"vTime", " ", "=", " ", "1"}], ",", " ", "lucaBasis", ",", " ", 
    "lucaMat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6175386002183003`*^9, 3.617538610908407*^9}, {
   3.617538753175294*^9, 3.617538777744311*^9}, {3.617539062035927*^9, 
   3.617539114197405*^9}, 3.617539211427433*^9, 3.617539651208811*^9, {
   3.6175398592808914`*^9, 3.6175398592808914`*^9}, 3.617725322270742*^9, 
   3.617727051953039*^9, 3.6178979958220234`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res2$2$1", "=", 
   RowBox[{"res1$1$1", "[", 
    RowBox[{"incOrder", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"res2$2$1", "[", 
     RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
    RowBox[{"polys1$1$1", "=", 
     RowBox[{
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res2$2$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}], "//", 
      "Chop"}]}], 
    RowBox[{"(*", 
     RowBox[{"Chop", " ", "drops", " ", "very", " ", "small", " ", "terms"}], 
     "*)"}], ",", 
    "\"\<ComputeInitialCollocationWeights did not converge\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6178983489355545`*^9, 3.617898453166597*^9}}],

Cell[BoxData[
 RowBox[{"genPolys", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", 
      RowBox[{
      "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
       "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
     "\[RightGuillemet]"}],
    JLink`Objects`vm1`JavaObject34116172987236353], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1338711326819458`", ",", "0", ",", "0.049383704374454954`",
        ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0.05999456893325389`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.08`", ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0.09718925656664625`", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1338711326819458`", ",", "0", ",", "0.04938370437445494`", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0.05999456893325386`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.618839132589734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res3$3$1", "=", 
   RowBox[{"res2$2$1", "[", 
    RowBox[{"toOrder", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"res3$3$1", "[", 
      RowBox[{"isConvergedQ", "[", "]"}], "]"}], ",", "\n", 
     RowBox[{"polys3$3$1", "=", 
      RowBox[{"genPolys", "[", 
       RowBox[{
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getTheWeightedStochasticBasis", "[", "]"}], "]"}], ",", 
        RowBox[{"res3$3$1", "[", 
         RowBox[{"getResWeights", "[", "]"}], "]"}]}], "]"}]}]}], "]"}], "//",
    "Chop"}]}]], "Input",
 CellChangeTimes->{{3.6178984797068624`*^9, 3.6178985654777203`*^9}}],

Cell[BoxData[
 RowBox[{"genPolys", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", 
      RowBox[{
      "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
       "ProjectionMethodToolsJava", ".", "WeightedStochasticBasis"}], "]"}], 
     "\[RightGuillemet]"}],
    JLink`Objects`vm1`JavaObject22759707051556865], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1338711326819458`", ",", "0", ",", "0", ",", 
       "0.049383704374454954`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0.05999456893325389`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0.08`", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0.09718925656664625`", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1338711326819458`", ",", "0", ",", "0", ",", 
       "0.04938370437445494`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0.05999456893325386`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6188391329097347`*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command, GenerateModelCode, outputs lists of state variables, non-state \
variables and shocks along with an instance of the class associated with the \
model."
}], "Text",
 CellChangeTimes->{3.6175329697524137`*^9, 3.617900660424797*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oldBetap", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"get$betap", "[", "]"}], "]"}]}]], "Input"],

Cell[BoxData["0.99`"], "Output",
 CellChangeTimes->{3.6188391329597344`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", ".5", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"modEqns", "[", 
  RowBox[{"get$betap", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"set$betap", "[", "oldBetap", "]"}], "]"}]}], "Input"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.618839133009734*^9}]
}, Open  ]],

Cell["\<\
One can also get and update (should be \[OpenCurlyDoubleQuote]set\
\[CloseCurlyDoubleQuote], but it isn\[CloseCurlyQuote]t yet) all the model \
parameters simultaneously \
\>", "Text",
 CellChangeTimes->{{3.617531730237169*^9, 3.617531790921002*^9}, {
  3.6175318473302345`*^9, 3.6175318776722345`*^9}, {3.6179006868050604`*^9, 
  3.6179006931551237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"theOldParams", "=", 
  RowBox[{"modEqns", "[", 
   RowBox[{"getParams", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"modEqns", "[", 
  RowBox[{"updateParams", "[", "theOldParams", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6175318845050344`*^9, 3.6175319564834347`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.99`", ",", "1.`", ",", "0.5`", ",", "0.5`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6188391330797343`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"theStatePoly", "=", 
   RowBox[{"lucaBasis", "[", 
    RowBox[{"getTheState", "[", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175336874341993`*^9, 3.617533734673255*^9}}],

Cell["The polynomial ranges", "Item",
 CellChangeTimes->{{3.6175338258124323`*^9, 3.6175338467320137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getRanges", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09718925656664625`"}], ",", "0.09718925656664625`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391332097344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getOrders", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175338503719406`*^9, 3.617533864641788*^9}, {
  3.617533906331788*^9, 3.617533915991788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.618839133259734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPhiFunc", "[", 
    RowBox[{"#", ",", "lucaBasis"}], "]"}], "&"}], "/@", " ", 
  RowBox[{"theStatePoly", "[", 
   RowBox[{"getStateVariableNames", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6175341379817877`*^9, 3.6175341887334027`*^9}, {
  3.6176184695331807`*^9, 3.617618470953195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"2.`", " ", "\<\"qq\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"2.`", " ", "\<\"ru\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"2.`", " ", "\<\"uu$Shock\"\>"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391333197346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Join", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"lucaMat", ","}], "*)"}], 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{
       RowBox[{"getTheGrid", "[", "]"}], "[", 
       RowBox[{"generatePolyOrdersForOuterProduct", "[", "]"}], "]"}], "]"}], 
     "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6176160776422462`*^9, 3.6176161235027046`*^9}, {
   3.617616246203932*^9, 3.6176163025654955`*^9}, {3.617619782800314*^9, 
   3.617619787320359*^9}, 3.61789905024457*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "1", "0", "1", "0", "1", "0", "1"},
    {"0", "0", "1", "1", "0", "0", "1", "1"},
    {"0", "0", "0", "0", "1", "1", "1", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6188391333797345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getTheGrid", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.617626649969055*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"JavaObject", "[", 
    RowBox[{
    "gov", ".", "frb", ".", "ma", ".", "msu", ".", 
     "ProjectionMethodToolsJava", ".", "GridPointsSpec"}], "]"}], 
   "\[RightGuillemet]"}],
  JLink`Objects`vm1`JavaObject3895372900466689]], "Output",
 CellChangeTimes->{3.618839133429734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getStateVariableNames", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175357853313556`*^9, 3.617535796611356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"qq\"\>", ",", "\<\"ru\"\>", ",", "\<\"uu$Shock\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6188391334797344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOrderedOuter", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.617534500160631*^9, 3.6175345117608633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"2.`", " ", "\<\"qq\"\>"}], ",", 
   RowBox[{"2.`", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"4.`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>"}], ",", 
   RowBox[{"2.`", " ", "\<\"uu$Shock\"\>"}], ",", 
   RowBox[{"4.`", " ", "\<\"qq\"\>", " ", "\<\"uu$Shock\"\>"}], ",", 
   RowBox[{"4.`", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}], ",", 
   RowBox[{
   "8.`", " ", "\<\"qq\"\>", " ", "\<\"ru\"\>", " ", "\<\"uu$Shock\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6188391338697343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theStatePoly", "[", 
  RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6175345957204895`*^9, 3.6175345996202946`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     "0.06872318237675475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", "0.06872318237675475`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", "0.11313708498984762`", ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35355339059327373`", ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.35355339059327373`"}], ",", 
     RowBox[{"-", "0.11313708498984759`"}], ",", 
     RowBox[{"-", "0.06872318237675475`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391339397345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"theStatePoly", "[", 
      RowBox[{"getXformedChebNodePts", "[", "]"}], "]"}], "]"}]}], "//.", 
   "lucaSubs"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6177966373630776`*^9, 3.6177966786634903`*^9}, 
   3.617796709883803*^9, {3.6177967757344613`*^9, 3.617796776974474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.11587246898806172`", ",", 
     RowBox[{"-", "0.07344990246099414`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}], ",", "0.07344990246099414`", ",", 
     RowBox[{"-", "0.11587246898806172`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     "0.03436159118837737`", ",", "0.03436159118837737`", ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}], ",", 
     RowBox[{"-", "0.03436159118837737`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391339897346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}]], "Input",
 CellChangeTimes->{{3.6175346707167397`*^9, 3.617534680446253*^9}, {
  3.617534729073821*^9, 3.617534736143468*^9}, {3.617535094504675*^9, 
  3.6175350948646708`*^9}, {3.6175364743190355`*^9, 3.6175364745190372`*^9}, {
  3.6175365680499725`*^9, 3.6175365685399776`*^9}, {3.6175366308609433`*^9, 
  3.6175366319509106`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.22627416997969524`", ",", 
     "0.16`", ",", "0.1374463647535095`", ",", "0.09718925656664623`", ",", 
     "0.0311005621013268`", ",", "0.02199141836056152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.22627416997969524`", ",", 
     RowBox[{"-", "0.16`"}], ",", "0.1374463647535095`", ",", 
     RowBox[{"-", "0.09718925656664623`"}], ",", "0.0311005621013268`", ",", 
     RowBox[{"-", "0.02199141836056152`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.22627416997969518`"}], ",", 
     RowBox[{"-", "0.15999999999999998`"}], ",", "0.1374463647535095`", ",", 
     "0.09718925656664623`", ",", 
     RowBox[{"-", "0.031100562101326792`"}], ",", 
     RowBox[{"-", "0.021991418360561513`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.22627416997969518`"}], ",", "0.15999999999999998`", ",", 
     "0.1374463647535095`", ",", 
     RowBox[{"-", "0.09718925656664623`"}], ",", 
     RowBox[{"-", "0.031100562101326792`"}], ",", "0.021991418360561513`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.7071067811865475`", ",", "0.22627416997969524`", ",", 
     "0.16`", ",", 
     RowBox[{"-", "0.1374463647535095`"}], ",", 
     RowBox[{"-", "0.09718925656664623`"}], ",", 
     RowBox[{"-", "0.0311005621013268`"}], ",", 
     RowBox[{"-", "0.02199141836056152`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", "0.22627416997969524`", ",", 
     RowBox[{"-", "0.16`"}], ",", 
     RowBox[{"-", "0.1374463647535095`"}], ",", "0.09718925656664623`", ",", 
     RowBox[{"-", "0.0311005621013268`"}], ",", "0.02199141836056152`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7071067811865475`", ",", 
     RowBox[{"-", "0.22627416997969518`"}], ",", 
     RowBox[{"-", "0.15999999999999998`"}], ",", 
     RowBox[{"-", "0.1374463647535095`"}], ",", 
     RowBox[{"-", "0.09718925656664623`"}], ",", "0.031100562101326792`", ",",
      "0.021991418360561513`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "0.7071067811865475`"}], ",", 
     RowBox[{"-", "0.22627416997969518`"}], ",", "0.15999999999999998`", ",", 
     RowBox[{"-", "0.1374463647535095`"}], ",", "0.09718925656664623`", ",", 
     "0.031100562101326792`", ",", 
     RowBox[{"-", "0.021991418360561513`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391397697344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bmat", " ", ".", "lucaMat", ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"doExportOuterEval", "[", "lucaBasis", "]"}], "]"}]}], "//.", 
   "lucaSubs"}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{{3.617796291899623*^9, 3.6177962958796625`*^9}, {
   3.6177963821205254`*^9, 3.617796409490799*^9}, 3.617898737399439*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.09914105652431512`", ",", 
     RowBox[{"-", "0.00998254423596251`"}], ",", "0.05888646591720689`", ",", 
     RowBox[{"-", "0.05023713484307074`"}], ",", "0.05023713484307075`", ",", 
     RowBox[{"-", "0.058886465917206886`"}], ",", "0.00998254423596251`", ",", 
     RowBox[{"-", "0.09914105652431512`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09914105652431512`", ",", 
     RowBox[{"-", "0.00998254423596251`"}], ",", "0.05888646591720689`", ",", 
     RowBox[{"-", "0.05023713484307074`"}], ",", "0.05023713484307075`", ",", 
     RowBox[{"-", "0.058886465917206886`"}], ",", "0.00998254423596251`", ",", 
     RowBox[{"-", "0.09914105652431512`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08600165224744219`", ",", 
     RowBox[{"-", "0.008659533477085736`"}], ",", "0.051082100004153336`", 
     ",", 
     RowBox[{"-", "0.0435790857203746`"}], ",", "0.0435790857203746`", ",", 
     RowBox[{"-", "0.051082100004153336`"}], ",", "0.00865953347708575`", ",", 
     RowBox[{"-", "0.08600165224744219`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.618839140469734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"theStatePoly", "[", 
    RowBox[{"getStateVariablePolynomialWeights", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175382216625147`*^9, 3.6175382283435817`*^9}, {
  3.6178987697897635`*^9, 3.6178987712997785`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.13387113268194584`", ",", "0.15432407617017166`", ",", "0", 
     ",", "0.3086481523403433`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0.25`", ",", "0", ",", "0.5`", ",", "0", ",", "0", 
     ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391404897346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lucaBasis", "[", 
     RowBox[{"getTheNonState", "[", "]"}], "]"}], "[", 
    RowBox[{"getRelevantWeightsNSP", "[", "]"}], "]"}], "[", 
   RowBox[{"getArray", "[", "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6175383075943737`*^9, 3.617538338314681*^9}, {
  3.6178987739598045`*^9, 3.6178987756698217`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0.1338711326819458`", ",", "0", ",", "0", ",", 
    "0.04938370437445494`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
    "0.05999456893325386`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
     "0", ",", "0", ",", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6188391405397344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"biggerMat", "=", 
   RowBox[{"nxtWts", "[", 
    RowBox[{"lucaMat", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Dimensions", "/@", 
   RowBox[{"{", 
    RowBox[{"lucaMat", ",", "biggerMat"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.617541767748976*^9, 3.6175418089993887`*^9}, 
   3.617541841180711*^9, {3.6175418807711067`*^9, 3.617541912431423*^9}, {
   3.6178990734148016`*^9, 3.6178990740148077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "216"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391405597343`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"thePolys", "=", 
   RowBox[{
    RowBox[{"CreatePolynomials", "[", "res1$1$1", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
      RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
      RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
      RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}, {3.617899263634715*^9, 3.6178992952650313`*^9}, 
   3.617899529273444*^9, {3.6182382139208083`*^9, 3.618238218272808*^9}, {
   3.618241750717058*^9, 3.6182417546608086`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["thePolys"], "Input",
 CellChangeTimes->{{3.6182416852250586`*^9, 3.6182416868263083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"0.1338711326819458`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.049383704374454954`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.05999456893325389`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"10.289203100491495`", " ", 
        RowBox[{"(", 
         RowBox[{
         "0.09718925656664625`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.08`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.09718925656664625`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"10.289203100491495`", " ", 
        RowBox[{"(", 
         RowBox[{
         "0.09718925656664625`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.1338711326819458`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", "qq"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{"0.04938370437445494`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"6.25`", " ", 
        RowBox[{"(", 
         RowBox[{"0.16`", "\[VeryThinSpace]", "+", "ru"}], ")"}]}]}], ")"}]}],
     "+", 
    RowBox[{"0.05999456893325386`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"10.289203100491495`", " ", 
        RowBox[{"(", 
         RowBox[{
         "0.09718925656664625`", "\[VeryThinSpace]", "+", "uu$Shock"}], 
         ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391406897345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sysPolys", "=", 
    RowBox[{
     RowBox[{"ReplaceVariables", "[", 
      RowBox[{"lucaMod", ",", "thePolys", ",", 
       RowBox[{"{", 
        RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
       RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
       RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
       RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}]}], 
   ";"}], ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
   3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
   3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}, 
   3.6178994558446503`*^9, {3.617899508525177*^9, 3.6178995206352987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ingtcns:\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "}"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "rhop"}], " ", 
       RowBox[{"qq", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
      RowBox[{"qq", "[", "t", "]"}], "-", 
      RowBox[{"betap", " ", 
       RowBox[{"qq", "[", 
        RowBox[{"1", "+", "t"}], "]"}]}], "+", 
      RowBox[{"betap", " ", "rhop", " ", 
       RowBox[{"qq", "[", 
        RowBox[{"1", "+", "t"}], "]"}]}], "+", 
      RowBox[{"sigmap", " ", 
       RowBox[{"rr", "[", "t", "]"}]}], "-", 
      RowBox[{"ru", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "phip"}], " ", 
       RowBox[{"qq", "[", "t", "]"}]}], "+", 
      RowBox[{"rr", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "rho$ru"}], " ", 
       RowBox[{"ru", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], "]"}]}], "+", 
      RowBox[{"ru", "[", "t", "]"}], "-", 
      RowBox[{"adj", " ", 
       RowBox[{
        RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}]}]}]}], "}"}]}],
  SequenceForm[
  "ingtcns:", {}, {(-$CellContext`rhop) $CellContext`qq[-1 + $CellContext`t] + \
$CellContext`qq[$CellContext`t] - $CellContext`betap $CellContext`qq[
     1 + $CellContext`t] + ($CellContext`betap $CellContext`rhop) \
$CellContext`qq[
      1 + $CellContext`t] + $CellContext`sigmap \
$CellContext`rr[$CellContext`t] - $CellContext`ru[$CellContext`t], \
(-$CellContext`phip) $CellContext`qq[$CellContext`t] + \
$CellContext`rr[$CellContext`t], (-$CellContext`rho$ru) $CellContext`ru[-1 + \
$CellContext`t] + $CellContext`ru[$CellContext`t] - $CellContext`adj \
$CellContext`eps[$CellContext`uu][$CellContext`t]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.618839140719734*^9}],

Cell[BoxData["\<\"constraints explicitly involving future state or non state \
not implemented yet: augment model with dummy for now\"\>"], "Print",
 CellChangeTimes->{3.6188391407297344`*^9}],

Cell[BoxData["\<\"need to generalize code for makeNextStateSubs\"\>"], "Print",
 CellChangeTimes->{3.6188391407397346`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"agedconstraint\"\>", "\[InvisibleSpace]", 
   "ProjectionInterface`Private`ageCnstr"}],
  SequenceForm["agedconstraint", ProjectionInterface`Private`ageCnstr],
  Editable->False]], "Print",
 CellChangeTimes->{3.6188391407397346`*^9}],

Cell[BoxData["\<\"need modification to actually compute expected value\"\>"], \
"Print",
 CellChangeTimes->{3.6188391407497344`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".00"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}, {
   3.6178999614757957`*^9, 3.617899961835799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sysPolys", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"sysPolys", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<uu\>\"", "\[Rule]", "uu"}], ",", 
        RowBox[{"\"\<ru\>\"", "\[Rule]", "ru"}], ",", 
        RowBox[{"\"\<qq\>\"", "\[Rule]", "qq"}], ",", 
        RowBox[{"\"\<uu$Shock\>\"", "\[Rule]", "uu$Shock"}]}], "}"}]}], "//", 
     "Expand"}], ")"}], "//.", "lucaSubs"}]}]], "Input",
 CellChangeTimes->{{3.618238442317808*^9, 3.6182384970948086`*^9}, {
  3.6182385828475585`*^9, 3.6182386195463085`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"7.6576859543422`*^-19", "-", 
    RowBox[{"0.30556167081693986`", " ", "lookey"}], "-", 
    RowBox[{"1.1102230246251565`*^-16", " ", "qq"}], "+", 
    RowBox[{"2.220446049250313`*^-16", " ", "ru"}], "-", 
    RowBox[{"2.220446049250313`*^-16", " ", "uu$Shock"}]}], ",", 
   RowBox[{"3.0814879110195774`*^-33", "-", 
    RowBox[{"1.1102230246251565`*^-16", " ", "ru"}], "-", 
    RowBox[{"3.3306690738754696`*^-16", " ", "uu$Shock"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0790175038649235`*^-17"}], "-", 
    RowBox[{"1.1102230246251565`*^-16", " ", "uu$Shock"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6188391408097343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sysPolys", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qq", "\[Rule]", ".1"}], ",", 
     RowBox[{"ru", "\[Rule]", ".2"}], ",", 
     RowBox[{"uu$Shock", "\[Rule]", ".1"}]}], "}"}]}], "//.", 
  "lucaSubs"}]], "Input",
 CellChangeTimes->{{3.6182385042235584`*^9, 3.6182385547543087`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.1867998841685786`*^-17", "-", 
    RowBox[{"0.30556167081693986`", " ", "lookey"}]}], ",", 
   RowBox[{"-", "5.551115123125783`*^-17"}], ",", 
   RowBox[{"-", "2.1892405284900803`*^-17"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6188391409197345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}, {3.6182383897670584`*^9, 
  3.6182383955490584`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnHv0XuOVx3+JmJCEMRjWMHXpZBXtrC6dYqbGzKkWTWSoYpi2FhG5qMq4
xS0St1rtb/7oDBmrhHFXVVR56U/wyhsvYaY1LYmIXFCXGWZYxHWqQmacZ3+e
Zz3f/e41/f1j5dPd593nc56zz3P2uew87aRDZ4weGhrae+OhoY3+7787P3PQ
XRs2PNe78i8v3+b5uQ/3htq/k7sz59yxcGT2GsdvGb/V+bPXPOX469efPnPi
5GWOz2jH+UUQ3w94x/Eh+wvim2B8xy2fIH6Z47a9jpsfx81nxHtTl259wX98
/0HnWTmeleNZOZ4Hx/cD3nEcz0F8E4zvOJ6D/B3Hc+DHcTwHvHfg1Z9cuXzf
B5xn5XhWjmfleB4c3w94x3E8B/FNML7jeA7ydxzPgR/H8Rzw3pN3bn/b2ln3
GD8re1aOZ+V4Vo7nwfH9gHccx3MQ3wTjO47nIH/H8Rz4cRzPAe8d3c7zO918
Vo5n5XhWjufB8f2AdxzHcxDfBOM7jucgf8fxHPhxHM8B7z3R+v+R8UOyZ+V4
Vo5n5XgeHN8PeMdxPAfxTTC+43gO8nccz4Efx/Ec8N5jLb/MeVaOZ+V4Vo7n
wfH9gHccx3MQ3wTjO47nIH/H8Rz4cRzPAbd/X7RPf+knLrv+1VnZs3I8K8ez
cjwPju8HvOP4UPXn4ptgfMfxHOTvOJ4DP47jOeC9Xyf/9r9Pz56V41k5npXj
eXB8P+AdxzEcxDfB+I7jOcjfcTwHfhzHc8B7a1I9MT41e1aOZ+V4Vo7nwfH9
gHccx3MQ3wTjO47nIH/H8Rz4cRzPAe8dl86Pxs/PnpXjWTmeleN5cHw/4B3H
8RzEN8H4juM5yN9xPAd+HMdzwHtPp/Vew/bgWTmeleNZOZ4Hx/cD3nGcvyC+
CcZ3HM9B/o7jOfDjOJ4D3js4Xb84z8rxrBzPyvE8OL4f8I7j/AXxTTC+43gO
8nccz4Efx/Ec8N60dD3u6oZyPCvHs3I8D47vB7zjOPkG8U0wvuN4DvJ3HM+B
H8fxHHD6Y8Zdvy5z6ddlLv26zKVfJ/H9gHccx3MQ3wTjOy79Os3fcenXqR/H
pV+X+cO7nvepNSPP9M49/6kpx415qCfxjlt8E8Q7LuNrPo7L+I5H+WsfUuJd
PpEf/d23LvzPE2evebY34eg//9z1vbJdxpuAE5/rhsS7ehKNr/kzfpR/8LvO
j8S7/R7lr787f+eXuhs2+L7uqhlzH9mwYaX7XbjG73nLFo9v2LDcxcM1/pNt
nr9y8XCNX93+7qMuHq7xE9txei4ervG7tPynQT9/uKuc+MF96eGu8u1TvJsP
cI3fIeXp4uEavzJ5cPFwjd8xeXbxcI3fI+1HFw/X+KfTPHHxcI2fl+ahi4dr
PPNW+73MT+XMQ+XMN+XMK+XMH+XMh8H98+Gucva7cvavcvajcvaXcvaLcvwr
x7NyPGu/F8/K8awcz8rxrBzPyvE8uH8+3FWOZ+V4Vo5n5XhWjmfleFaOZ+V4
1n4vnpXjWTmeleNZOZ6V43lw/3y4qxzPyvGsHM/K8awcz8rxrBzPyvGs/V48
K8ezcjwrx7NyPCvH8+D++XBXOZ6V41k5npXjWTmeleNZOZ6V41n7vXhWjmfl
eFaOZ+V4Vo7nwf3z4a5yPCvHs3I8K8ezcjwrx7NyPCvHc/p36ffiWTmeleNZ
OZ6V41k5npXjWTmeleNZOZ6V41k5npXjWTmeleNZ+714Vo5n5XhWjmfleFaO
58H98+Gucjwrx7NyPCvHs3I8K8ezcjwrx7P2e/GsHM/K8awcz8rxrBzPg/vn
w13leFaOZ+V4Vo5n5XhWjmfleFaOZ+334lk5npXjWTmeleNZOZ4H98+Hu8rx
rBzPyvGsHM/K8awcz8rxrBzP2u/Fs3I8K8ezcjwrx7NyPA/unw93leNZOZ6V
41k5npXjWTmeleNZOZ6134tn5XhWjmfleFaOZ+V4Htw/H+4qx7NyPCvHs3I8
K8ezcjwrx7NyPGu/F8/K8awcz8rxrBzPyvE8uH8+3FWOZ+V4Vo5n5XhWjmfl
eFaOZ+V41n6d9OUyl/5b5tJny1z6aZlL3yxz6Y9ljmfl0u/KXPpamUv/KnPp
U2Uu/ajMpe+UOT532WPp2xe96vucb1TPgxSfI3/wqVUP3VQ4PrVPjs/93/ju
4tHTCsfnZtKnzX2Mx16+Yd9P+H5j1D/cVfLHp+aPz3skf3xq/vjU/PGp+efz
2jnf6W75oe+/Hf/1l6772qLFzuf/7LX/9y4+red8fnncYSOztl3ifI47e6Pd
xp6+xPlc9vJdV960bInzufCI6ZsfsLvvx04J+m+rJX98av741PzxqfnjU/PH
p+ZPHbhC8s/19p/mXbL9nyzqjWr5mdnzWyc+c8Y3nl1k8Wdkzxcc+NdHLVx4
b29D+zcne95i12v2ffrw+4yflj1fs/HQLttucb/xU7Pnz744dcIRv7i/91HL
T8meu0sefPPS73YtvnheYX2txM/Mnqdb/omfkT2Tf+KnZ8+aP541fzxfLfnj
WfPH8wOW/0eWP55fs/uEbBee57XHy13m+dTseXx7XNxl++W07PmKtv7cbXxO
9rzbH73/wY57/cz46dnzove+/vzRb/6sN9r2I54PePK+R666bSTvdzwfY32t
UTKfuc+Z+CnZM/mPsvzxrPnjWfPH866SP541fzx/xfIfbfnj+fV2v9/cW996
/tvseUK7f28xz0dlz59u9+OtvY1afmz2PKk9rn/SG9Pych09sz1+bzde+hVf
ao/TO3obt/yE7Pnx9ni8w+JnZ8/Lra+1Sfvv0hdaZ/knfkT2vJnl/3uWP54/
Y/mPsfzxrPnjeYblP9ryx7Pmn/tvlv9Yyx/PG7f5XGE+S//tS+3vXpU5nr/Y
jn9t5nU/+brM8XxOO69uyBzPl7fz58bM8TzSzpMfZo7nx4P+2zjJH8/7Sf54
1vzrfnLJH89zJX88L5T88XyP5I/ns9r8Z/XGb7b3fp99fUb2fEfLz+wdevgR
b9677rjs+dA2nwt6l1956tX7v13m88/b+O/1um3f6Zjs+Yvt9n6/9zftON/M
nr/ZjnNJb80L/zjliXePzJ5/0OZ/ae/bpzz6w1d+e5j0387aZ4n03661/Dex
/PG8yPI/xPLH8+GW/2WWP541fzz/leV/sOWP56Ms/9WWP54vt/xnWf54/lHi
zaJFLx46Z37pv52QxmlObuNL/+0b6Xeb3T5962+OOmtG9vxCyrN5of3dGdnz
iWm7mis+3q7TZmbPryUPTdqPM7PnMZ3WWzPuY29/X/qca62vNcqOazxfb/nf
a/nn9Yblf4rlj+e/k/zxrPnj+STJH8//Lfnj+fW035vxlj+eF6d5ntbP55f+
27XpuLB19bHZ84XpOLL4Mp+np+POPEzLng9Ix2ni50/Lnr+WjmuLPy573ibV
AYs/LnteZX2tFF/6b13Lf5Tlj+drJP+83rD8R1n+eNb88fwVy3/I8sfzIZI/
nreW/PG8ItXtJtX5+dlz8nOH5Tk3ez4xnReaD20dVfcrftKsl3Xd59J5x3hZ
P6d8bmnea/m3s+f30nmt+U3LZ8h19J02znnlvqrln/i87Hl/yz/leXb2TP7r
Lf+6X1Hyx/OfWf6s0/C8leSP53ct/7cs//ycQFqHNK+0/KvZ8/1p3ZL7onj+
TFrnNOn8fnz2/C9pXdSk83u5Ttk8raOMz8mez0vrLuPl/vWb9nxZ4vOy55VV
X+vwe/E8yfLfWs6D91n+m1j+eb1h+Y+z/PGs+eOZ/MdY/ngm/7GWP57XWf7j
LH88L0nratd/2z2tw13/7bq0bnf9ty3TOt/1376Trgtc/+2ddB3h+m8z03WH
678dFPTfFkv+eNb88az541nzx/NFkj+eNX88z5D8c18oXSc2G5l/PC9P15UW
X57HmJCuQ/Pxhef90nVr827LT8rz+f10nWu8rJ9PSNfFzcstPybP57XpOrpZ
ZscXnulrfSB1w65zjZ+T5zP5r7frx3ydYvl/YPnjWfPH828t//ctfzyT/0uW
f74/YvnfZfnn515Sf8b13zarnq+bkz1b/6ThOkj6Rba/ynMv1p8xPjd7XmfP
mbJ/8bxb6v8YPzd7vsL6XaMtTzwvt/wTPzV75vnA0ZY/njV/6Rfl/PFM/qMt
fzyT/xjLX3y6vseKgGu/jnHwwPjEW38s1yUZv9Hxoz5h9J0B7b/xvKVynmdW
zvPMynmeeXB8P+Adx6kTQbzrH/I8c5BPEL/McZ5nVs7zzAHvfUv6bPhUjk/l
+FSOz8Hx/YB3HMdnEN8E4zuOzyB/x/GpHJ+Btyi+d6H10z6yfhqeleNZOZ6V
43lwfD/gHcfxHMQ3wfiO4znI33E8K8dz4C2Kt7pxt/Wp5sh7EIXX7zsUXr/v
UHj9voPG9wPecRzPQXwTjO94/b6Dy9/x+n2Hwuv3HZy3KN7uL9xu/bfyfqty
PCvHs3I8D47vB7zjOJ6D+CYY33E8B/k7jmfleA68RfHWxy59MDwrx7NyPCvH
8+D4fsA7juM5iG+C8R3Hc5C/43hWjufAWxTfW2j9rpnW76rff5+6T1fe49b4
+j36Es9+0fj6PfoSz/7S+Pr9+hLPftT4+r17Hb8fjN8P4jtBfMfFMx80fqj6
c+M3wfhNkH8Q33fxzKvATzD+smD8ZS6eeRjsXxfP/Azmm4tn3gbzLRq/d5X1
Oe+zPifzUznzUDnzTTnzanB8P+Adx5kJQXwTjO84+zHI33H2i3L8B96ieOtH
3WjXX8dmz8rxrBzPyvE8OL4f8I7jeA7im2B8x/Ec5O84npXjOfAWxVvf43br
i56RPSvHs3I8K8fz4Ph+wDuO4zmIb4LxHcdzkL/jeFaO58BbFJ/7q2kdcrLM
58Lr+Vx4PZ8Lr+ezxvcD3nG8ns8uvgnGd7yezy5/x+v5XHg9n523KN71UfGs
HM/K8awcz4Pj+wHvOM5fEN8E4zuO5yB/x/GsHM+Btyg+90ufs35jXTcKr+tG
4XXdKLyuGxrfD3jHcfIN4ptgfMfruuHyd7yuG4XXdcN5i+Lpg9l9jXO1/5a5
9N8yl/6bxPcD3nEcn0F8E4zvuPTfNH/Hpf+WufTfMscnfHzL53X7iw64YWT2
StdXHHvIj/9h9hrft/zBL7f99aQFjzm+44drbxuZ/ZDjhxy539uTFtzt+AOT
Nt9pwcQHXZ9wz+0mHzZx8s8df+rdfb+8ZuQJxxcc/dxREyf7PuTBj847Y/aa
1Y5vuvt2F4/Mfs7xHdr8l7t+4NL2+wP/7vhX2+162PHb2/0y4vjGS56fsGDi
v7l+3eLWwxOOz73z1i+sGVnh+F6tn9WOv2nv+yt/p+W/dP23+e34Sx2f0OZ5
r+M3Xbl6/aQFj7s+2LQxZ22zYOKKzD80vsPsP9x9zcgqF796RWfyxMnPOn5b
6+2R3L/iPsUJ7Xy+3/W1Dmz9P+n6RWPb/Fc53q++L1HG/9eWP+D6OW9seft/
TVrwtO+3nDNlowUTn3H8n9vjYq273j8+uK6/LbgeXxdcdx8fXF+/GVxHvxNc
L78SXOe+GlzPTguuW18Lrk9vDq5DpwfXmzsG15UPWV3iOojnZ6hLen10mdUl
5TtZXVJ+qNUl5V2rS8o/b3VJ+QqrS8ovsbqk/CCrS8o3sbqkfEerS1ynpOdM
ju0+YnVJr1+oS8rvsLqkfIzVJeUPWF1SfrbVJc1nT6tLGk9d0njqEtcF79t1
wblWl/R6YXOrS8qpSzoOdUnjqUvKV1ldUk5dYl29qdXVb1ld0vX2FKtLyqlL
yqlLOv4jVpd0nbnO6pLyW60uKb/U6hLrqGdtHWXnQXdePre+r+ruNykfX4+T
1xVynzTz8fX5N/Pz7D6sjj/xho/rzIXBOmStO8+utvv1yke34yxw/Oh2P97q
zpvb231zd35Pnt358a20Xxzfi+flhM9rf/dKx69t59tN7vzYTfPBnWefsvv4
Gr+0+m5SOQ9umuahO88enOati59YvU9U4te39f96F/9i4u48mzzf787LN6Xj
y/EdqveAyjhr03Hq7wel49rf30l1IPNxxn+c6kbmmxpfa89p6DiL0n5x8VPS
fnTrgaFUrxqNPyvVN39/J9VDF/95e+5C49+x70TpeuMvUh12fF6q244vSXXe
8XHpvOD4Lva8ivKT03Hk+Mp2Pixw66Ib0/nI8cnp/OX4knS+c/yP0/nRcZ5L
UU690v72Iem87Pil6Tzu+NPpvO/4F9I6wfF+Wlc4/qe8x2R8VnX/4nL779R9
Ftu6aHHr80LXnz8grWcc3y6tfxy/JK2XHB+T1leOL0nrMcd5rkY59VzXM7ta
PVe+lT2/pJw6r+uKNVbndV2xidV5jT/S6rzy7azO6zjUeV0PUOfh7xmnzus6
hDqv41xpdV7Hoc5rPHVeOXVe1xXUeV1XHGR1Xp8Lfd/qOXyc8Zetnmv8VKvn
+rs3Wz1XTt3W9clOVreVT7e6rZy6rbxj9Vn5kVaflW9k9Vk59dmtu6w+K6c+
K6c+67qL+gx/0Tj1Gb7SOPVZ+2CbWn3WcU6xOqzjPGN1GP68ceqw5nmg1WF9
/pM6rPlQh+GrjVNXtR9FXVVOXVW+t9VV5Q9ZXYWPNb6H1VX4Jsbvtfqp4+xv
9VM59VP5xVY/lVM/lfesfmo+59Tr3ub3W16e73X9MaszynnuVDnPnbp1tZ3H
le9Seyv9MauTynmO1PUDbf2mPL9XKJzzdbS9ug5newev/x91nO1VzvYqZ7uU
s13K2S7lbJdyzpvRdrm+mW2XcrZLOdulnPyVk79eX5C/u36x/KM8dd1ef2eg
rPPr7wwUXr/vX3j9vn/h9fO9/nd1/czv6nqb8TWe8aNx3Hqb97uF19/vKv2u
+vtdhdff7yq8/n5X4fX3uwqvv99VeP39rsLr73QVXn+nq/D6O13a3/uV4/V3
ugqvv9NVeP2dLu9N+4R40/Uk3pTjTTnelONNOX6U48f198yPcvwox49y/CjH
g65v6/ebynoYD8rxoBwPytle5fV7SYWzvZon26vxbG+0XboOZ7t0/Vy/51I4
26Wc/HV88tf4+j2Uwslfee2/rNtr/2VdXfsv6/baZ4mvfRZe+/S/q+tbflc5
4ytn/GgcXTfWfsq6NP2/hru6TqCu6vmU+jD4Of/h7uC+30/deZnjWjm/q+dB
flf5nkE/kHyUk49y8tHzNcedu99XvedSzpv194XKebP+vlCJr78vVOLJX3n9
XaDC6+8ClfHr7wIVXn8XqIzDdul5uf4uTeFsl/YD2S5dD3A8Dn7ee7irnO1V
Xn9npozP9mo826vxewT9QDzoegMPyvGgvP6eSeF4UE59GPycNu+pFZ7fBxSO
H9c/ND/K6++WFI6f37UfiDftX+FNOd6U40053pTjTXn+rtHAfuBwd/BzzsOu
T4hnjcezcjwrx7NyPLu+aPU9jf+/Tzg/6BOyXcrZLuWMo+sE9qOuExhf4xlf
Od50HH7X3U/kOxXS39sz6BOSj45DPjoO+Wg8+1F57aec92s/5bxfrxtL36/2
VsapvZX42luJr9eHhZOnrhPIUzl5Kud4HPyc4XBXOfkrJ3/l5K+c40X5HkGf
sJ4/ZZ1Tz5/S36vnT+nv1eve0per171lnHq+lXVXPd9Kn7CebyXPer6VPmG9
Ti751Ovk8rvzf7c+WO6nSR8sc+mDZS59sMylD5b7h9IHy/06vOk48r2+zKVv
lrn0zTKXvlnm0jcr/dK6b5bznB/cT5f3pjP/X8Aj8Ek=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzt2DFKA0EUxvEhRqPBA9jE6A0sNQbMGTyCRLELATtBU9hYKAheQgSvoKUo
6B20l8VGNiGMOqIkefsCgxuzY/6vWfjx2P2SbXa+5a3G5nbOGFOZNmbK/Eyr
/xpt4DiO4ziO48F6udQ8r+Ij954rjuM4juM4juMT6AOD4ziO4ziOB+BJfS+e
vvcMjuM4juM4juM4juM4PimeM0v78dNZQl/Uurq8OBXesdc79ZNj4bG1i6Xm
kfBXe/hxnwPhkdvfE/7svC6861z2Wl1bTszfcc+V+due+d+U/C9K/kclf6S4
cX2dvE/R/f/yuQW3L3MWzE3i75pV3mNefe+fs7s26AvuuTJ/Uck/75k/r+Sf
U/LPDM3/PTiO4ziO4ziO4ziO4/hv/U7ptWKlr2Of/Szvryo9J56u9w+O4ziO
4ziO41l07dyED3ftHFTx9KrnOWvdc197rrZf49yH4ziO43/uWr89Ln9QvO3Z
z6fl955+qzjfPziO4ziO41+TtZ4tdB9XT1ijP8RxHMfxYD2UPlDr3/5rT7jC
dw6O4/hI/R0RtnMz
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-2.7755575615628914`*^-17, 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6188391427437344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"<<", "ProjectionInterface`"}], "*)"}]], "Input",
 CellChangeTimes->{{3.618825709948651*^9, 3.618825716738651*^9}, {
  3.6188436990407343`*^9, 3.618843702740734*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"making xx global\"\>"], "Print",
 CellChangeTimes->{3.618825717488651*^9, 3.618839143403734*^9}],

Cell[BoxData["\<\"beginning private defs\"\>"], "Print",
 CellChangeTimes->{3.618825717488651*^9, 3.618839143403734*^9}],

Cell[BoxData["\<\"why not numbers?\"\>"], "Print",
 CellChangeTimes->{3.618825717488651*^9, 3.6188391434137344`*^9}],

Cell[BoxData["\<\"why eval of shock t+1?\"\>"], "Print",
 CellChangeTimes->{3.618825717488651*^9, 3.6188391434337344`*^9}],

Cell[BoxData["\<\"done reading ProjectionInterface\"\>"], "Print",
 CellChangeTimes->{3.618825717488651*^9, 3.6188391434337344`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.618854568173744*^9, 3.618854572953744*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1668, 839},
WindowMargins->{{54, Automatic}, {Automatic, 64}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
ShowCellTags->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3619009036-8586872"->{
  Cell[164106, 3197, 574, 12, 56, "Print",
   CellTags->"Info3619009036-8586872"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3619009036-8586872", 2976305, 58359}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[721, 27, 657, 14, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1403, 45, 210, 3, 72, "Section"],
Cell[1616, 50, 120, 1, 37, "Subsection"],
Cell[1739, 53, 111, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[1875, 58, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[1967, 62, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2138, 69, 7871, 160, 201, "Input"],
Cell[CellGroupData[{
Cell[10034, 233, 1832, 26, 23, "Print"],
Cell[11869, 261, 2301, 40, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[14197, 305, 481, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[14703, 318, 42, 0, 40, "Input"],
Cell[14748, 320, 2857, 64, 61, "Output"]
}, Open  ]],
Cell[17620, 387, 3139, 49, 81, "Input"],
Cell[20762, 438, 1026, 29, 81, "Input"],
Cell[CellGroupData[{
Cell[21813, 471, 174, 3, 40, "Input"],
Cell[21990, 476, 1717, 27, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23744, 508, 136, 2, 40, "Input"],
Cell[23883, 512, 1659, 29, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25603, 548, 122, 1, 37, "Subsection"],
Cell[25728, 551, 2776, 62, 81, "Input"],
Cell[28507, 615, 2811, 54, 121, "Input"],
Cell[CellGroupData[{
Cell[31343, 673, 95, 2, 40, "Input"],
Cell[31441, 677, 96, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31574, 683, 140, 2, 40, "Input"],
Cell[31717, 687, 109, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31863, 694, 220, 4, 40, "Input"],
Cell[32086, 700, 1578, 24, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33701, 729, 137, 3, 40, "Input"],
Cell[33841, 734, 1333, 19, 40, "Output"]
}, Open  ]],
Cell[35189, 756, 231, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[35445, 765, 179, 4, 40, "Input"],
Cell[35627, 771, 1366, 20, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37054, 798, 96, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[37175, 803, 267, 7, 40, "Input"],
Cell[37445, 812, 2889, 91, 81, "Output"]
}, Open  ]],
Cell[40349, 906, 287, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[40661, 916, 1671, 37, 121, "Input"],
Cell[42335, 955, 3112, 68, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45484, 1028, 290, 5, 40, "Input"],
Cell[45777, 1035, 15113, 308, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60927, 1348, 156, 3, 40, "Input"],
Cell[61086, 1353, 3201, 72, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64324, 1430, 166, 3, 40, "Input"],
Cell[64493, 1435, 3890, 123, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68420, 1563, 404, 11, 61, "Input"],
Cell[68827, 1576, 8622, 174, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77486, 1755, 133, 2, 40, "Input"],
Cell[77622, 1759, 2508, 43, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80167, 1807, 830, 21, 40, "Input"],
Cell[81000, 1830, 82932, 1358, 202, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163969, 3193, 134, 2, 40, "Input"],
Cell[164106, 3197, 574, 12, 56, "Print",
 CellTags->"Info3619009036-8586872"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164717, 3214, 361, 10, 61, "Input"],
Cell[165081, 3226, 315, 9, 40, "Output"]
}, Open  ]],
Cell[165411, 3238, 101, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[165537, 3244, 308, 8, 40, "Input"],
Cell[CellGroupData[{
Cell[165870, 3256, 314, 4, 23, "Print"],
Cell[166187, 3262, 245, 3, 23, "Print"],
Cell[166435, 3267, 245, 3, 23, "Print"],
Cell[166683, 3272, 252, 4, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[166962, 3280, 767, 14, 40, "Input"],
Cell[167732, 3296, 516, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[168273, 3311, 192, 4, 40, "Input"],
Cell[168468, 3317, 3083, 70, 163, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171588, 3392, 318, 9, 40, "Input"],
Cell[171909, 3403, 980, 19, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172926, 3427, 819, 16, 40, "Input"],
Cell[173748, 3445, 1832, 27, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175617, 3477, 134, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[175776, 3483, 143, 2, 23, "Print"],
Cell[175922, 3487, 147, 2, 23, "Print"],
Cell[176072, 3491, 141, 2, 23, "Print"],
Cell[176216, 3495, 149, 2, 23, "Print"],
Cell[176368, 3499, 156, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176573, 3507, 365, 9, 40, "Input"],
Cell[CellGroupData[{
Cell[176963, 3520, 336, 4, 23, "Print"],
Cell[177302, 3526, 267, 3, 23, "Print"],
Cell[177572, 3531, 264, 3, 23, "Print"],
Cell[177839, 3536, 276, 4, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178164, 3546, 149, 3, 40, "Input"],
Cell[178316, 3551, 11870, 246, 221, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190235, 3803, 160, 2, 72, "Section"],
Cell[CellGroupData[{
Cell[190420, 3809, 103, 1, 40, "Input"],
Cell[190526, 3812, 490, 9, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191053, 3826, 424, 10, 40, "Input"],
Cell[191480, 3838, 131, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191648, 3845, 1681, 33, 40, "Input"],
Cell[193332, 3880, 131, 2, 40, "Output"]
}, Open  ]],
Cell[193478, 3885, 71, 1, 40, "Input"],
Cell[193552, 3888, 70, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[193647, 3893, 1407, 28, 40, "Input"],
Cell[195057, 3923, 121286, 1973, 235, 112282, 1826, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316380, 5901, 276, 7, 40, "Input"],
Cell[316659, 5910, 1064, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317760, 5932, 184, 4, 40, "Input"],
Cell[317947, 5938, 772, 13, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318756, 5956, 1180, 29, 40, "Input"],
Cell[319939, 5987, 127935, 2073, 203, 118575, 1918, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447911, 8065, 86, 2, 40, "Input"],
Cell[448000, 8069, 3236, 95, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451273, 8169, 695, 13, 61, "Input"],
Cell[451971, 8184, 810, 13, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452818, 8202, 185, 4, 40, "Input"],
Cell[453006, 8208, 2985, 69, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456028, 8282, 581, 16, 40, "Input"],
Cell[456612, 8300, 123056, 2004, 174, 112114, 1824, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579705, 10309, 832, 20, 40, "Input"],
Cell[580540, 10331, 83563, 1368, 215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[664140, 11704, 830, 20, 40, "Input"],
Cell[664973, 11726, 45650, 747, 299, 34197, 558, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710660, 12478, 880, 20, 40, "Input"],
Cell[711543, 12500, 83809, 1370, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[795389, 13875, 878, 20, 40, "Input"],
Cell[796270, 13897, 112507, 1831, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[908814, 15733, 105, 1, 40, "Input"],
Cell[908922, 15736, 375, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[909334, 15748, 479, 11, 40, "Input"],
Cell[909816, 15761, 201, 3, 40, "Output"]
}, Open  ]],
Cell[910032, 15767, 474, 13, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910543, 15785, 96, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[910664, 15790, 640, 17, 40, "Input"],
Cell[911307, 15809, 136539, 2230, 170, 126556, 2065, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047883, 18044, 640, 17, 40, "Input"],
Cell[1048526, 18063, 122573, 2000, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1171136, 20068, 709, 17, 40, "Input"],
Cell[1171848, 20087, 605, 17, 302, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1172490, 20109, 923, 25, 61, "Input"],
Cell[1173416, 20136, 3981, 81, 161, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177446, 20223, 160, 2, 72, "Section"],
Cell[CellGroupData[{
Cell[1177631, 20229, 161, 3, 40, "Input"],
Cell[1177795, 20234, 107, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177939, 20241, 709, 17, 40, "Input"],
Cell[1178651, 20260, 556, 16, 302, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1179244, 20281, 103, 1, 40, "Input"],
Cell[1179350, 20284, 178, 4, 40, "Output"]
}, Open  ]],
Cell[1179543, 20291, 70, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[1179638, 20296, 1263, 26, 40, "Input"],
Cell[1180904, 20324, 83997, 1375, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1264938, 21704, 223, 6, 40, "Input"],
Cell[1265164, 21712, 3452, 77, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1268653, 21794, 1394, 28, 40, "Input"],
Cell[1270050, 21824, 145655, 2365, 274, 118799, 1924, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1415742, 24194, 86, 2, 40, "Input"],
Cell[1415831, 24198, 2918, 90, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1418786, 24293, 832, 20, 40, "Input"],
Cell[1419621, 24315, 106677, 1748, 300, 83589, 1368, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1526335, 26068, 830, 20, 40, "Input"],
Cell[1527168, 26090, 45370, 743, 299, 34197, 558, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1572575, 26838, 880, 20, 40, "Input"],
Cell[1573458, 26860, 102068, 1671, 302, 83584, 1367, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1675563, 28536, 913, 22, 61, "Input"],
Cell[CellGroupData[{
Cell[1676501, 28562, 30647, 833, 356, "Print"],
Cell[1707151, 29397, 121, 1, 23, "Print"],
Cell[1707275, 29400, 24918, 627, 288, "Print"]
}, Open  ]],
Cell[1732208, 30030, 22571, 649, 450, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1754816, 30684, 137, 3, 40, "Input"],
Cell[1754956, 30689, 151, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1755144, 30696, 1492, 30, 40, "Input"],
Cell[1756639, 30728, 196117, 3184, 201, 173773, 2817, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1952793, 33917, 676, 18, 61, "Input"],
Cell[CellGroupData[{
Cell[1953494, 33939, 127836, 3519, 1324, "Print"],
Cell[2081333, 37460, 121, 1, 23, "Print"],
Cell[2081457, 37463, 104413, 2647, 1039, "Print"]
}, Open  ]],
Cell[2185885, 40113, 87760, 2576, 1597, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2273682, 42694, 188, 4, 40, "Input"],
Cell[2273873, 42700, 203, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2274113, 42708, 95, 1, 40, "Input"],
Cell[2274211, 42711, 74, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2274322, 42717, 956, 25, 40, "Input"],
Cell[2275281, 42744, 185173, 3005, 167, 175975, 2853, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[2460469, 45752, 94, 1, 40, "Input"],
Cell[2460566, 45755, 985, 19, 40, "Input"],
Cell[2461554, 45776, 313, 7, 40, "Input"],
Cell[CellGroupData[{
Cell[2461892, 45787, 294, 7, 40, "Input"],
Cell[2462189, 45796, 2533, 57, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2464759, 45858, 329, 6, 40, "Input"],
Cell[2465091, 45866, 541, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2465669, 45881, 821, 17, 40, "Input"],
Cell[CellGroupData[{
Cell[2466515, 45902, 147, 1, 23, "Print"],
Cell[2466665, 45905, 156, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2466870, 45913, 104, 1, 40, "Input"],
Cell[2466977, 45916, 1720, 52, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2468734, 45973, 36, 0, 40, "Input"],
Cell[2468773, 45975, 13201, 373, 273, "Output"]
}, Open  ]],
Cell[2481989, 46351, 753, 14, 40, "Input"],
Cell[CellGroupData[{
Cell[2482767, 46369, 466, 9, 40, "Input"],
Cell[2483236, 46380, 589, 13, 21, "Message"],
Cell[2483828, 46395, 65217, 1446, 1143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2549082, 47846, 166, 3, 61, "Input"],
Cell[2549251, 47851, 113, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2549401, 47858, 819, 16, 40, "Input"],
Cell[2550223, 47876, 592, 13, 21, "Message"],
Cell[2550818, 47891, 592, 13, 21, "Message"],
Cell[2551413, 47906, 20146, 447, 285, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2571596, 48358, 475, 13, 40, "Input"],
Cell[2572074, 48373, 926, 23, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2573037, 48401, 414, 9, 40, "Input"],
Cell[2573454, 48412, 552, 11, 21, "Message"],
Cell[2574009, 48425, 231, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2574277, 48436, 179, 3, 40, "Input"],
Cell[2574459, 48441, 99, 1, 40, "Output"]
}, Open  ]],
Cell[2574573, 48445, 94, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[2574692, 48450, 190, 4, 40, "Input"],
Cell[2574885, 48456, 218, 5, 40, "Output"]
}, Open  ]],
Cell[2575118, 48464, 187, 4, 40, "Input"],
Cell[CellGroupData[{
Cell[2575330, 48472, 178, 4, 61, "Input"],
Cell[2575511, 48478, 163, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2575711, 48486, 130, 2, 40, "Input"],
Cell[2575844, 48490, 5284, 111, 158, "Output"]
}, Open  ]],
Cell[2581143, 48604, 92, 1, 40, "Input"],
Cell[2581238, 48607, 736, 20, 61, "Input"],
Cell[2581977, 48629, 94, 1, 40, "Input"],
Cell[2582074, 48632, 985, 19, 40, "Input"],
Cell[2583062, 48653, 313, 7, 40, "Input"],
Cell[CellGroupData[{
Cell[2583400, 48664, 294, 7, 40, "Input"],
Cell[2583697, 48673, 2533, 57, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2586267, 48735, 329, 6, 40, "Input"],
Cell[2586599, 48743, 541, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2587177, 48758, 821, 17, 40, "Input"],
Cell[CellGroupData[{
Cell[2588023, 48779, 147, 1, 23, "Print"],
Cell[2588173, 48782, 156, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2588378, 48790, 104, 1, 40, "Input"],
Cell[2588485, 48793, 1720, 52, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2590242, 48850, 36, 0, 40, "Input"],
Cell[2590281, 48852, 13201, 373, 273, "Output"]
}, Open  ]],
Cell[2603497, 49228, 753, 14, 40, "Input"],
Cell[CellGroupData[{
Cell[2604275, 49246, 466, 9, 40, "Input"],
Cell[2604744, 49257, 589, 13, 21, "Message"],
Cell[2605336, 49272, 65217, 1446, 1143, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2670590, 50723, 166, 3, 61, "Input"],
Cell[2670759, 50728, 113, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2670909, 50735, 819, 16, 40, "Input"],
Cell[2671731, 50753, 592, 13, 21, "Message"],
Cell[2672326, 50768, 592, 13, 21, "Message"],
Cell[2672921, 50783, 20146, 447, 285, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2693104, 51235, 475, 13, 40, "Input"],
Cell[2693582, 51250, 926, 23, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2694545, 51278, 414, 9, 40, "Input"],
Cell[2694962, 51289, 552, 11, 21, "Message"],
Cell[2695517, 51302, 231, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2695785, 51313, 179, 3, 40, "Input"],
Cell[2695967, 51318, 99, 1, 40, "Output"]
}, Open  ]],
Cell[2696081, 51322, 94, 1, 40, "Input"],
Cell[CellGroupData[{
Cell[2696200, 51327, 190, 4, 40, "Input"],
Cell[2696393, 51333, 218, 5, 40, "Output"]
}, Open  ]],
Cell[2696626, 51341, 187, 4, 40, "Input"],
Cell[CellGroupData[{
Cell[2696838, 51349, 178, 4, 61, "Input"],
Cell[2697019, 51355, 163, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2697219, 51363, 130, 2, 40, "Input"],
Cell[2697352, 51367, 5284, 111, 158, "Output"]
}, Open  ]],
Cell[2702651, 51481, 92, 1, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2702780, 51487, 112, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[2702917, 51492, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[2703009, 51496, 146, 3, 35, "Subsubsection"],
Cell[2703158, 51501, 4362, 102, 221, "Input"],
Cell[2707523, 51605, 481, 9, 49, "Text"],
Cell[2708007, 51616, 4184, 81, 101, "Input"],
Cell[2712194, 51699, 1026, 29, 81, "Input"],
Cell[2713223, 51730, 174, 3, 40, "Input"],
Cell[2713400, 51735, 136, 2, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2713585, 51743, 129, 1, 37, "Subsection"],
Cell[2713717, 51746, 10282, 291, 261, "Input"],
Cell[2724002, 52039, 4893, 126, 241, "Input"],
Cell[2728898, 52167, 286, 7, 40, "Input"],
Cell[2729187, 52176, 427, 10, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2729651, 52191, 122, 1, 37, "Subsection"],
Cell[2729776, 52194, 2703, 61, 81, "Input"],
Cell[2732482, 52257, 210, 4, 40, "Input"],
Cell[2732695, 52263, 2561, 51, 101, "Input"],
Cell[2735259, 52316, 95, 2, 40, "Input"],
Cell[2735357, 52320, 1597, 36, 121, "Input"],
Cell[2736957, 52358, 290, 5, 40, "Input"],
Cell[2737250, 52365, 94, 1, 40, "Input"],
Cell[2737347, 52368, 985, 19, 40, "Input"],
Cell[2738335, 52389, 313, 7, 40, "Input"],
Cell[2738651, 52398, 294, 7, 40, "Input"],
Cell[2738948, 52407, 329, 6, 40, "Input"],
Cell[2739280, 52415, 821, 17, 40, "Input"],
Cell[2740104, 52434, 104, 1, 40, "Input"],
Cell[2740211, 52437, 202, 4, 40, "Input"],
Cell[2740416, 52443, 753, 14, 40, "Input"],
Cell[2741172, 52459, 466, 9, 40, "Input"],
Cell[2741641, 52470, 166, 3, 61, "Input"],
Cell[2741810, 52475, 819, 16, 40, "Input"],
Cell[2742632, 52493, 475, 13, 40, "Input"],
Cell[2743110, 52508, 414, 9, 40, "Input"],
Cell[2743527, 52519, 179, 3, 40, "Input"],
Cell[2743709, 52524, 94, 1, 40, "Input"],
Cell[2743806, 52527, 190, 4, 40, "Input"],
Cell[2743999, 52533, 187, 4, 40, "Input"],
Cell[2744189, 52539, 178, 4, 61, "Input"],
Cell[2744370, 52545, 130, 2, 40, "Input"],
Cell[2744503, 52549, 92, 1, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2744644, 52556, 91, 1, 72, "Section"],
Cell[2744738, 52559, 229, 6, 40, "Input"],
Cell[2744970, 52567, 71, 1, 40, "Input"],
Cell[2745044, 52570, 276, 7, 40, "Input"],
Cell[2745323, 52579, 151, 3, 40, "Input"],
Cell[2745477, 52584, 102, 1, 40, "Input"],
Cell[2745582, 52587, 237, 5, 40, "Input"],
Cell[2745822, 52594, 256, 7, 40, "Input"],
Cell[2746081, 52603, 182, 4, 40, "Input"],
Cell[2746266, 52609, 889, 18, 40, "Input"],
Cell[2747158, 52629, 2170, 41, 81, "Input"],
Cell[2749331, 52672, 132, 2, 40, "Input"],
Cell[2749466, 52676, 245, 7, 40, "Input"],
Cell[2749714, 52685, 215, 6, 40, "Input"],
Cell[2749932, 52693, 266, 7, 40, "Input"],
Cell[2750201, 52702, 213, 5, 40, "Input"],
Cell[2750417, 52709, 216, 6, 40, "Input"],
Cell[2750636, 52717, 159, 3, 40, "Input"],
Cell[2750798, 52722, 94, 1, 40, "Input"],
Cell[2750895, 52725, 137, 2, 40, "Input"],
Cell[2751035, 52729, 209, 4, 40, "Input"],
Cell[2751247, 52735, 164, 3, 40, "Input"],
Cell[2751414, 52740, 123, 2, 40, "Input"],
Cell[2751540, 52744, 132, 2, 40, "Input"],
Cell[2751675, 52748, 336, 6, 40, "Input"],
Cell[2752014, 52756, 184, 4, 40, "Input"],
Cell[2752201, 52762, 257, 7, 40, "Input"],
Cell[2752461, 52771, 133, 2, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2752631, 52778, 93, 1, 72, "Section"],
Cell[2752727, 52781, 249, 5, 40, "Input"],
Cell[2752979, 52788, 349, 8, 40, "Input"],
Cell[2753331, 52798, 134, 2, 40, "Input"],
Cell[2753468, 52802, 196, 4, 40, "Input"],
Cell[2753667, 52808, 135, 2, 40, "Input"],
Cell[2753805, 52812, 158, 3, 40, "Input"],
Cell[2753966, 52817, 2244, 44, 81, "Input"],
Cell[2756213, 52863, 1597, 36, 121, "Input"],
Cell[2757813, 52901, 159, 3, 40, "Input"],
Cell[2757975, 52906, 313, 7, 40, "Input"],
Cell[2758291, 52915, 187, 3, 40, "Input"],
Cell[2758481, 52920, 382, 10, 40, "Input"],
Cell[2758866, 52932, 282, 8, 40, "Input"],
Cell[2759151, 52942, 176, 4, 40, "Input"],
Cell[2759330, 52948, 821, 17, 40, "Input"],
Cell[2760154, 52967, 166, 5, 40, "Input"],
Cell[2760323, 52974, 753, 14, 40, "Input"],
Cell[2761079, 52990, 308, 6, 40, "Input"],
Cell[2761390, 52998, 738, 15, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2762165, 53018, 160, 2, 58, "Section"],
Cell[2762328, 53022, 161, 3, 40, "Input"],
Cell[2762492, 53027, 709, 17, 40, "Input"],
Cell[2763204, 53046, 103, 1, 40, "Input"],
Cell[2763310, 53049, 1186, 25, 40, "Input"],
Cell[2764499, 53076, 1103, 24, 40, "Input"],
Cell[2765605, 53102, 86, 2, 40, "Input"],
Cell[2765694, 53106, 832, 20, 40, "Input"],
Cell[2766529, 53128, 830, 20, 40, "Input"],
Cell[2767362, 53150, 880, 20, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2768279, 53175, 92, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[2768396, 53180, 101, 1, 37, "Subsection"],
Cell[2768500, 53183, 1011, 24, 81, "Input"],
Cell[2769514, 53209, 1253, 26, 40, "Input"],
Cell[2770770, 53237, 858, 20, 40, "Input"],
Cell[2771631, 53259, 858, 20, 40, "Input"],
Cell[2772492, 53281, 910, 21, 40, "Input"],
Cell[2773405, 53304, 159, 3, 40, "Input"],
Cell[2773567, 53309, 159, 3, 40, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2773775, 53318, 189, 2, 58, "Section"],
Cell[CellGroupData[{
Cell[2773989, 53324, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[2774081, 53328, 146, 3, 35, "Subsubsection"],
Cell[2774230, 53333, 3233, 79, 181, "Input"],
Cell[2777466, 53414, 481, 9, 49, "Text"],
Cell[2777950, 53425, 2359, 55, 101, "Input"],
Cell[2780312, 53482, 1026, 29, 81, "Input"],
Cell[2781341, 53513, 174, 3, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2781564, 53522, 129, 1, 37, "Subsection"],
Cell[2781696, 53525, 10282, 291, 261, "Input"],
Cell[2791981, 53818, 4687, 123, 241, "Input"],
Cell[2796671, 53943, 286, 7, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2796994, 53955, 122, 1, 37, "Subsection"],
Cell[2797119, 53958, 2703, 61, 81, "Input"],
Cell[2799825, 54021, 107, 1, 40, "Input"],
Cell[2799935, 54024, 1973, 42, 81, "Input"],
Cell[2801911, 54068, 781, 19, 40, "Input"],
Cell[2802695, 54089, 781, 19, 40, "Input"],
Cell[2803479, 54110, 842, 13, 40, "Input"],
Cell[2804324, 54125, 212, 4, 40, "Input"],
Cell[2804539, 54131, 791, 19, 40, "Input"],
Cell[2805333, 54152, 795, 17, 40, "Input"],
Cell[2806131, 54171, 123, 2, 40, "Input"],
Cell[2806257, 54175, 416, 11, 40, "Input"],
Cell[2806676, 54188, 587, 14, 40, "Input"],
Cell[2807266, 54204, 166, 5, 40, "Input"],
Cell[2807435, 54211, 713, 17, 40, "Input"],
Cell[2808151, 54230, 87, 1, 40, "Input"],
Cell[2808241, 54233, 180, 3, 40, "Input"],
Cell[2808424, 54238, 94, 1, 40, "Input"],
Cell[2808521, 54241, 593, 16, 40, "Input"],
Cell[2809117, 54259, 94, 1, 40, "Input"],
Cell[2809214, 54262, 352, 8, 40, "Input"],
Cell[2809569, 54272, 193, 3, 40, "Input"],
Cell[2809765, 54277, 316, 5, 40, "Input"],
Cell[2810084, 54284, 136, 2, 40, "Input"],
Cell[2810223, 54288, 1578, 36, 121, "Input"],
Cell[2811804, 54326, 174, 3, 40, "Input"],
Cell[2811981, 54331, 378, 8, 40, "Input"],
Cell[2812362, 54341, 348, 9, 61, "Input"],
Cell[2812713, 54352, 1635, 37, 40, "Input"],
Cell[2814351, 54391, 149, 3, 40, "Input"],
Cell[2814503, 54396, 2018, 46, 61, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2816570, 54448, 154, 2, 72, "Section"],
Cell[2816727, 54452, 168, 3, 40, "Input"],
Cell[2816898, 54457, 259, 7, 61, "Input"],
Cell[2817160, 54466, 868, 24, 40, "Input"],
Cell[2818031, 54492, 92, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[2818148, 54497, 168, 2, 37, "Subsection"],
Cell[2818319, 54501, 1036, 27, 81, "Input"],
Cell[2819358, 54530, 330, 7, 40, "Input"],
Cell[2819691, 54539, 239, 6, 40, "Input"],
Cell[2819933, 54547, 110, 1, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2820080, 54553, 102, 1, 37, "Subsection"],
Cell[2820185, 54556, 88, 1, 40, "Input"],
Cell[2820276, 54559, 691, 18, 40, "Input"],
Cell[2820970, 54579, 702, 19, 40, "Input"],
Cell[2821675, 54600, 702, 19, 40, "Input"],
Cell[2822380, 54621, 700, 19, 40, "Input"],
Cell[2823083, 54642, 366, 7, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2823486, 54654, 110, 1, 37, "Subsection"],
Cell[2823599, 54657, 1061, 26, 81, "Input"],
Cell[2824663, 54685, 135, 2, 40, "Input"],
Cell[2824801, 54689, 117, 2, 40, "Input"],
Cell[2824921, 54693, 131, 2, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2825101, 54701, 103, 1, 72, "Section"],
Cell[2825207, 54704, 412, 8, 40, "Input",
 InitializationCell->True],
Cell[2825622, 54714, 106, 1, 40, "Input"],
Cell[2825731, 54717, 81, 1, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2825849, 54723, 157, 2, 72, "Section"],
Cell[CellGroupData[{
Cell[2826031, 54729, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[2826123, 54733, 188, 4, 35, "Subsubsection"],
Cell[2826314, 54739, 630, 17, 40, "Input"],
Cell[2826947, 54758, 229, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[2827201, 54767, 3680, 70, 121, "Input"],
Cell[2830884, 54839, 1002, 19, 23, "Print"]
}, Open  ]],
Cell[2831901, 54861, 481, 9, 49, "Text"],
Cell[2832385, 54872, 3429, 58, 81, "Input"],
Cell[2835817, 54932, 1129, 27, 101, "Input"],
Cell[2836949, 54961, 174, 3, 40, "Input"],
Cell[2837126, 54966, 169, 3, 40, "Input"],
Cell[2837298, 54971, 534, 14, 40, "Input"],
Cell[2837835, 54987, 453, 10, 40, "Input"],
Cell[2838291, 54999, 337, 9, 40, "Input"],
Cell[2838631, 55010, 104, 1, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2838784, 55017, 122, 1, 37, "Subsection"],
Cell[2838909, 55020, 3408, 77, 101, "Input"],
Cell[2842320, 55099, 210, 4, 40, "Input"],
Cell[2842533, 55105, 2441, 45, 101, "Input"],
Cell[2844977, 55152, 172, 3, 40, "Input"],
Cell[2845152, 55157, 104, 1, 40, "Input"],
Cell[2845259, 55160, 566, 12, 40, "Input"],
Cell[2845828, 55174, 225, 4, 40, "Input"],
Cell[2846056, 55180, 427, 11, 40, "Input"],
Cell[2846486, 55193, 102, 1, 40, "Input"],
Cell[2846591, 55196, 1597, 36, 121, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2848237, 55238, 94, 1, 72, "Section"],
Cell[2848334, 55241, 419, 10, 39, "Message"],
Cell[2848756, 55253, 4273, 96, 125, "Output"],
Cell[2853032, 55351, 290, 5, 40, "Input"],
Cell[2853325, 55358, 94, 1, 40, "Input"],
Cell[2853422, 55361, 985, 19, 40, "Input"],
Cell[2854410, 55382, 313, 7, 40, "Input"],
Cell[2854726, 55391, 294, 7, 40, "Input"],
Cell[2855023, 55400, 329, 6, 40, "Input"],
Cell[2855355, 55408, 885, 17, 40, "Input"],
Cell[2856243, 55427, 104, 1, 40, "Input"],
Cell[2856350, 55430, 202, 4, 40, "Input"],
Cell[2856555, 55436, 784, 14, 40, "Input"],
Cell[2857342, 55452, 466, 9, 40, "Input"],
Cell[2857811, 55463, 166, 3, 61, "Input"],
Cell[2857980, 55468, 819, 16, 40, "Input"],
Cell[2858802, 55486, 475, 13, 40, "Input"],
Cell[2859280, 55501, 414, 9, 40, "Input"],
Cell[2859697, 55512, 179, 3, 40, "Input"],
Cell[2859879, 55517, 94, 1, 40, "Input"],
Cell[2859976, 55520, 190, 4, 40, "Input"],
Cell[2860169, 55526, 187, 4, 40, "Input"],
Cell[2860359, 55532, 178, 4, 61, "Input"],
Cell[2860540, 55538, 130, 2, 40, "Input"],
Cell[2860673, 55542, 92, 1, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2860802, 55548, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[2860901, 55552, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[2860993, 55556, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2861164, 55563, 2307, 57, 101, "Input"],
Cell[CellGroupData[{
Cell[2863496, 55624, 256, 4, 23, "Print"],
Cell[2863755, 55630, 715, 18, 23, "Print"]
}, Open  ]],
Cell[2864485, 55651, 499, 13, 40, "Output"]
}, Open  ]],
Cell[2864999, 55667, 481, 9, 49, "Text"],
Cell[2865483, 55678, 2008, 50, 101, "Input"],
Cell[2867494, 55730, 1026, 29, 81, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2868569, 55765, 129, 1, 37, "Subsection"],
Cell[2868701, 55768, 10282, 291, 261, "Input"],
Cell[2878986, 56061, 3855, 106, 201, "Input"],
Cell[CellGroupData[{
Cell[2882866, 56171, 734, 12, 40, "Input"],
Cell[2883603, 56185, 648, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2884288, 56207, 286, 7, 40, "Input"],
Cell[2884577, 56216, 886, 28, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2885512, 56250, 116, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[2885653, 56255, 3822, 97, 141, "Input"],
Cell[2889478, 56354, 1030, 27, 61, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2890557, 56387, 138, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[2890720, 56392, 692, 13, 40, "Input"],
Cell[2891415, 56407, 601, 15, 40, "Output"]
}, Open  ]],
Cell[2892031, 56425, 611, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[2892667, 56441, 637, 12, 40, "Input"],
Cell[2893307, 56455, 601, 15, 40, "Output"]
}, Open  ]],
Cell[2893923, 56473, 663, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[2894611, 56490, 612, 11, 40, "Input"],
Cell[2895226, 56503, 598, 15, 40, "Output"]
}, Open  ]],
Cell[2895839, 56521, 586, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[2896450, 56536, 621, 11, 40, "Input"],
Cell[2897074, 56549, 595, 15, 40, "Output"]
}, Open  ]],
Cell[2897684, 56567, 583, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[2898292, 56582, 690, 13, 40, "Input"],
Cell[2898985, 56597, 601, 15, 40, "Output"]
}, Open  ]],
Cell[2899601, 56615, 695, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[2900321, 56632, 609, 11, 40, "Input"],
Cell[2900933, 56645, 597, 15, 40, "Output"]
}, Open  ]],
Cell[2901545, 56663, 602, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[2902172, 56678, 643, 12, 40, "Input"],
Cell[2902818, 56692, 593, 15, 40, "Output"]
}, Open  ]],
Cell[2903426, 56710, 598, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[2904049, 56725, 618, 11, 40, "Input"],
Cell[2904670, 56738, 598, 15, 40, "Output"]
}, Open  ]],
Cell[2905283, 56756, 589, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[2905897, 56771, 618, 11, 40, "Input"],
Cell[2906518, 56784, 595, 15, 40, "Output"]
}, Open  ]],
Cell[2907128, 56802, 581, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[2907734, 56817, 923, 25, 61, "Input"],
Cell[2908660, 56844, 1363, 31, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2910060, 56880, 736, 20, 61, "Input"],
Cell[2910799, 56902, 1833, 37, 101, "Output"]
}, Open  ]],
Cell[2912647, 56942, 315, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[2912987, 56954, 122, 3, 40, "Input"],
Cell[2913112, 56959, 76, 1, 40, "Output"]
}, Open  ]],
Cell[2913203, 56963, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[2913325, 56969, 197, 4, 61, "Input"],
Cell[2913525, 56975, 73, 1, 40, "Output"]
}, Open  ]],
Cell[2913613, 56979, 366, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[2914004, 56990, 309, 6, 61, "Input"],
Cell[2914316, 56998, 179, 5, 40, "Output"]
}, Open  ]],
Cell[2914510, 57006, 218, 5, 40, "Input"],
Cell[2914731, 57013, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[2914863, 57018, 164, 3, 40, "Input"],
Cell[2915030, 57023, 394, 13, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2915461, 57041, 213, 4, 40, "Input"],
Cell[2915677, 57047, 125, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2915839, 57055, 348, 8, 40, "Input"],
Cell[2916190, 57065, 397, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2916624, 57082, 585, 14, 40, "Input"],
Cell[2917212, 57098, 684, 18, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2917933, 57121, 139, 3, 40, "Input"],
Cell[2918075, 57126, 355, 9, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2918467, 57140, 176, 3, 40, "Input"],
Cell[2918646, 57145, 163, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2918846, 57154, 149, 2, 40, "Input"],
Cell[2918998, 57158, 550, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2919585, 57175, 178, 3, 40, "Input"],
Cell[2919766, 57180, 1384, 36, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2921187, 57221, 389, 9, 40, "Input"],
Cell[2921579, 57232, 1173, 23, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2922789, 57260, 402, 6, 40, "Input"],
Cell[2923194, 57268, 2707, 58, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2925938, 57331, 374, 8, 40, "Input"],
Cell[2926315, 57341, 1169, 22, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2927521, 57368, 332, 7, 40, "Input"],
Cell[2927856, 57377, 420, 11, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2928313, 57393, 384, 9, 40, "Input"],
Cell[2928700, 57404, 526, 10, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2929263, 57419, 573, 14, 40, "Input"],
Cell[2929839, 57435, 217, 7, 40, "Output"]
}, Open  ]],
Cell[2930071, 57445, 836, 17, 40, "Input"],
Cell[CellGroupData[{
Cell[2930932, 57466, 104, 1, 40, "Input"],
Cell[2931039, 57469, 2291, 73, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2933367, 57547, 845, 19, 40, "Input"],
Cell[CellGroupData[{
Cell[2934237, 57570, 1895, 49, 23, "Print"],
Cell[2936135, 57621, 192, 2, 23, "Print"],
Cell[2936330, 57625, 123, 1, 23, "Print"],
Cell[2936456, 57628, 282, 6, 23, "Print"],
Cell[2936741, 57636, 132, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[2936900, 57642, 985, 27, 40, "Input"],
Cell[CellGroupData[{
Cell[2937910, 57673, 571, 14, 40, "Input"],
Cell[2938484, 57689, 687, 15, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2939208, 57709, 329, 9, 40, "Input"],
Cell[2939540, 57720, 306, 7, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2939883, 57732, 524, 11, 40, "Input"],
Cell[2940410, 57745, 34249, 559, 287, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2974696, 58309, 206, 4, 40, "Input"],
Cell[CellGroupData[{
Cell[2974927, 58317, 114, 1, 23, "Print"],
Cell[2975044, 58320, 120, 1, 23, "Print"],
Cell[2975167, 58323, 116, 1, 23, "Print"],
Cell[2975286, 58326, 122, 1, 23, "Print"],
Cell[2975411, 58329, 132, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[2975570, 58334, 92, 1, 40, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)
], ";"}]], "Input",
 CellChangeTimes->{{3.617541981702116*^9, 3.617542042812727*^9}, {
   3.6175424260875597`*^9, 3.6175424287675867`*^9}, 3.6175425928502274`*^9, {
   3.6175434803318834`*^9, 3.6175434896918836`*^9}, {3.6175435415218835`*^9, 
   3.6175435485918837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"before genPolys in createpolynomials 1\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.617797796114665*^9}],

Cell[BoxData["\<\"before genPolys in createpolynomials\"\>"], "Print",
 CellChangeTimes->{3.617720577721262*^9, 3.6177977961346655`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sysPolys", "=", 
   RowBox[{"ReplaceVariables", "[", 
    RowBox[{"lucaMod", ",", "thePolys", ",", 
     RowBox[{"{", 
      RowBox[{"stateVar", ",", "nonStateVar"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.61754193613166*^9, 3.617541951251811*^9}, {
  3.617542440467704*^9, 3.617542442007719*^9}, {3.617542473358032*^9, 
  3.6175425266395655`*^9}, {3.617542563299932*^9, 3.6175425887401867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forPlot", "=", 
   RowBox[{
    RowBox[{"sysPolys", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"eps", "[", "uu", "]"}], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{"uu$Shock", "\[Rule]", ".05"}]}], "}"}]}], "//.", 
    "lucaSubs"}]}], ";", 
  RowBox[{"pltqq", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"qq", ",", "qLow", ",", "qHigh"}], "}"}], "//.", "lucaSubs"}]}], 
  ";", 
  RowBox[{"pltru", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ru", ",", "ruLow", ",", "ruHigh"}], "}"}], "//.", 
    "lucaSubs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6175426017603164`*^9, 3.617542695701256*^9}, {
   3.617542772471463*^9, 3.617542823149943*^9}, {3.61754287391842*^9, 
   3.6175429243879056`*^9}, 3.6175430119152794`*^9, {3.617543223362234*^9, 
   3.617543228722181*^9}, {3.617543575931884*^9, 3.6175435781718836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forPlot", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ru", "->", ".0"}], ",", 
    RowBox[{"qq", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.61754333080116*^9, 3.617543350490963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3730516147770083`*^-7"}], ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617720577811262*^9, 3.61779779662467*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", " ", "@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"forPlot", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "pltqq", ",", "pltru"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6175429586968765`*^9, 3.617542990005937*^9}, {
  3.6175430349045897`*^9, 3.617543043804323*^9}, {3.6175430763137045`*^9, 
  3.6175431229432383`*^9}, {3.6175431860526075`*^9, 3.6175431867526007`*^9}, {
  3.6175433763308835`*^9, 3.6175433821908836`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnHu0VuO+x9fIJVKGJbKxSaRc4sj9PkWlKys2NtqdV4pCW+cc2S7lkqit
Q1QbXVDkVllK0xKt3tlFbqVUuq5Cci9Zqzv21ll7zt/nabzf533GOP3TGJ/x
jLl+8/M+73c+8/fO+TTpfvsVPeuUlJScu1dJyR61/zdZ23narl1fJGPOe6bR
unveS64o+3jfh4ftjG66Y8qoij5VjjdtuaJv5wbboon7NXygT9Vyx7eXfr3i
4KE10aYX+t3UtP0Sxx/7Zt2AytKNUc/0OPMdb/nKbx07N/jGxs9x/LXFJ5xe
WbrG+JuOr3utctyM0gVRif2DNxq5zy/v9RmYt/ERvE77fptmli5I7PiOn9uk
7vUzS9ckVo/jvy7s/UVtPTZ+ieNXNSgrnVm6MbHzdXz1sWOaNBpak5gfx/dp
8/i7tX4S8+n4mT0evLLWJzzJzTvowW8em+15hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHru8NzRK5a2mul5hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6hqtnuHr+bOrhk9fc/LbnGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunuHqGa6e4eq5WzrPp3qe4eoZrp7h6hmunuHqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp4Xp/5f8TzD1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9
w9UzXD3D1TNcPS9I+dOeZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoar
Z7h6hqvn7CwGna+e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp6/zPxH6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunuHquSrL
E88zXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1fON2fXR8wxX
z3D1DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1vDJb73me4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4eoZrp4vy+5fPM9w9QxXz3D1DFfP
cPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz92z+3HPM1w9w9UzXD3D1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9Wz9Zc8z/BAv87zDA/06zzP8EC/zvMMD/Tr
PM/wQL/O8wwP9Os8z/BAv855fu+4+5tVVaxN7ntgeccb95ybzJhVdkHvhdsj
/MPxb+Mj+POf1R1cO94dHx44fhQ4fhQ4fsTx4dQv3PVROb6MTwLjtR73d6l/
88Bvb+tT9XlSv9tZLV9I5iaPDHnsmB3lOyLjEfyWsa371HIdHwXGR4zHA8fB
A+OpX49P/Ryf+jm+1s9xAuO9+ymOE6jH1T+gydeVu3bt7uvu+49tN44csC1a
1fOe93ftWuH+7pxVR+VfvHWz44yHnzHxgE937Vrqxm8+/5lTbpq2yXHGw49O
61zkxufe3/T1oGHfO854+Or0737gxn96eZtRL976leOMhzdNj5O48fe9edaY
QcNWOs54ePOUv+HGT3/0o7qDhn1o+TCkEl5SMmvnv/OB8RxHx8MZf3g23s2H
RccPvOqRYR8mcMbDj8zqdOPr1TlozsPDVjrOePiKzIMb/9TfprWYcOtXjjMe
3jjz7MY329T1roeHfe844+GnZ5+jGz+9x97v1X6OjjsPxldm88SNf+mnFXUn
3LrZccbD+2fz0I3/6dXJr9fOQ8cZD2fe0u/VeQvX+QnXeQjX+QbXeQXX+QPX
+QDX+QDXzx2uny9cP0e4fl6uHvlc4Oofrp7p96pnuHqGq2e4eoarZ7h6hqtn
uHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZ
rp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqG
q2dXj3iGq2e4eqbfq57h6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4erZ1SOe
4eoZrp7p96pnuHqGq2e4eoarZ7h6hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn
+r3qGa6e4eoZrp7h6hmunuHqGa6e4eoZrp7h6hmunl094hmunuHqmX6veoar
Z7h6hqtnuHqGq2e4eoarZ7h6hqtnuHqGq2dXj3iGq2e4eqbfq57h6hmunuHq
Ga6e4eoZrp7h6hmunuHqGa6e4erZ1SOe4eoZrp7p96pnuHqGq2e4eoarZ7h6
hqtnuHqGq2e4eoarZ7h6dvWIZ7h6hqtn+r3qGa6e4eoZrp7h6hmunuHqGa6e
4eoZrp7h6hmunl094hmunuHqmX6veoarZ7h6hqtnuHqGq2e4eoarZ7h6hqtn
uHqGq2dXj3iGq2e4eqZfF+jLeZ7hgT6b5xke6Jt5nuGB/pjnGR7oa3me4YE+
lefZ1VO87+Q847P56fO2DNrg9zl/tt8N1GdFabNVc1+e492P0CdXn21+fiRf
p/tc736kgfVpvT7Ggu9ebHWE328M9Q+Ps/rVJ/Wrz7etfvVJ/eqT+tUn9avP
lfc+VHngv/z+W69rvx7fZXre87njzDaDn/ifxPN5Sb0rK24+ZJbns97dexxf
t98sz+eS76aNeXnJLM/nqKt77N/2FL8f2zHQf1tt9atP6lef1K8+qV99Ur/6
pH7NgdFWv5e3w/o/efgx0z3Pm29be+d1n0/3PD/Y4cKuo0a943k+4LjnW638
07ue5+f3Kml+yAEzPM8nr8/Vv3r+DM9z5azZNSMfqfQ8Lwv033pY/eqZ+tUz
9atn6lfPz1n96pn61fNMq189b7TfCdVz//T7Ms3zvF/6vZjmeR6d5k/seT7+
0F9+a3zmW57n6duvXdet5i3Pc9vP3n3/2ckVnuf/DPTf+J1TPVO/eqZ+9Uz9
6vk4q189U796vtTqV8+b0s/9Vc9z/fTzneh5PiH9HCd5ntul3+vXPc83pd/f
cs/zxen3dIrn+dP0+zjF87w00H+rtvrVcwOrXz2faPWrZ+pXzz2tfvVM/V7/
zepXz3ul9Yz2PF+c/t1nPc8XpccfF+gnj/c835vOqxc9z8+k82eC57kinScv
eZ4/DfTf6ln96rm11a+eqb94P3m85/keq189j7L61fPbVr96viut/2bP85SU
/83zfEVaz4Oe54/T8YM9zxel5/uY5/n69DhPep6fSusf6XnO/r/L67+Ns/rV
83SrXz3/yepXz9Svni+w+tVzV6tfPT9j9avnVzLurYdvyY7jrYevy/6utx7+
KqvTWw/flp2Xtx7emHnw1sN7vpl689bDawL9txesfm+9YfWr5z9b/eqZ+tXz
7Va/ev7R6lfPm7LP3bvvyGfz3PM8LvteeJ4HZt8jz3OP7HvneW6bfU89z12y
77XnuVGWA57nVYH+W6XVr56ft/q99YbVr56pXz1favWr5zKrXz0fZPWr52VZ
bnueMz9TPM+3ZdeFQL/idc9zy+y643nO6pnoed6eXdcC99F+/+0zq189t7H6
1TP1F+9XvO55PtXqV88NrX71vM3q954TyNYhnucZ2brF83xits7xPI/N1kWe
5/2zdZTn+f5s3eV5rrHny9TzikD/rZ3Vr57ftfq99YbVr56pXz1Tv3qmfvVc
bfWr51nZutrzfEq2Dvc8j8/W7Z7nA7N1vuf5oey+wPO8NbuP8DzflN13eJ47
B/pveatfPVO/eqZ+9Uz96nmQ1a+eqV8997T6vb5Qdp/oeV6a3Vd6nutn96Ge
59bZfavn+ZfsPtfzfEt2X+x5XpPdR/+/+292n+t5pn7vPsXqV8/Ur55/tfrV
M/V7v49Y/d5zL1l/xvNs/RDPs/VPPM88l6ierT/jea6250zV8/FZ/8fzPDrQ
f1tq9atnng9Uz9Qf6Bd5nqlfPVO/9ovod+ET/8uM63Nf9Ov0c8GDHsf6Y5Ee
x47vcfqEgb6rq5Pnlum/8dwyz1vCed6S55nh+jwzXJ9nhuvzzHB9nhmuzzPD
9XlmuD7PDNfnmeH6PDNcn2eG6/PMcJ5nxmdv67OpT7j6hKtPuPqEq0+4+oSr
T7j6hKtPuPqEq0+4+oSrT7g+Hw7neWA8D7R+mnqGq2e4eoarZ7h6hqtnuHqG
q2e4eoarZ7h6hqtnuHqGq2e4eh5jfTP1DFfP8OLvO8SB/UniwP4kcWB/kjiw
P0kc2J8kDuxPEgf2J4kD+5PEgf1J4sD+JHFgf5LY89zL+mPqGa6e4eoZrp7h
6hmunuHqGa6e4eoZrp7h6hmunuHqGa6e4ep5tPXB1DNcPcPVM1w9w9UzXD3D
1TNcPcPVM1w9w9UzXD3D1TNcPcPV8yjrd+G58P333Pnqn/H4L3yPPne+fi6M
53MpfI8+571Hz3g+r8L363Pe+/WM53MsfO8+5713z/jCz3eOG6+fO+P53Avf
08957+kznvlQUvAv572/z/jCecJ7/TnvvX7GM38K3/fPee/7M555VbgPQM7b
B4DxzLfC/QFy3v4AjGceFu4bkPP2DWC8rMfceJ23jJf3jNx4nc/PWp9T5y1c
5ydc5yFc5xtc5xVc5w9c5wlc5wNcP3e4fr5w/Rzh+nnB9XOBq3+4eh5r/Uz1
DFfPcPUMV89w9QxXz3D1DFfPcPUMV89w9QxXz3D1DFfPcPV8i/Ut1TNcPcPV
M1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3D1TNcPcOLz+c4MJ/jwHyOA/M5Dszn
ODCf48B8jgPzOQ7M5zgwn+PAfI4D8zkOzOc4MJ/jwHyOPc/0UdUzXD3D1TNc
PcPVM1w9w9UzXD3D1TNcPcPVM1w9w9UzXD3Di+dGPpAb+UBu5AO5kQ/kRj6Q
G/lAbuQDuZEP5EY+kBv5QG7kA7mRD+RGPpAb+UBu5D3P9P10PwF4oP/m+YQH
+m+eT3ig/+b5hAf6b55PeKD/5vmEB/pvnk84PudMb/tiRZ8Vrq+4tl+d+V1/
q4nqlr329z5Vu/uW179+ZI8OmzdGTy085Mt2wxc4/vtfzz616qdvosb/WjO5
os9cx1vfMKFk5ZK1Udk1rbe0Gx47fvBHb5yzZcSiaGa7/Y8a3nS26xOOe/Kx
x8eXrU7OOKz9lU3bf+z4SXVP+iVp8XWyfFurS6oqFjs+pE3DE/+j5YZkeLcv
ujZtv7sPuWV2/5MXHVaTXPZB/zv7VK12/Oh1t3+w97Nbk31POeyJij7OQ1JW
cmPuwsY7kyPT+pe6fmDzftd3WLnkp2heuv/AJ45/fGa/P/Re+G10eXpe7zm+
pvqIT7aM+CIqTz+XCsePvqNL74OHLo72mrWu/vCmH7l+3Q1R9YGndlqf5FMP
ix2vHLC89fiyH5N7pk46p6pimeMNunU7b8jE6uTM1M9qx88f0OWzpMXWpMbe
94fzvv/WlC90/bd//D719+3l30UD0uPPc/ycWfMXDJ74ZVQ/rfMdx9/dY/4Z
LTstjV4es/qf7YZ/6vpgNW+N6taw7w9J9z3vajS86TLHm/8atWt1bnVyZJ+D
T6mqWOX41Yeetu6uyi3J6mVvtm/a/nPHB53d7J4pF+5IJqfe3nf9q72G7DPt
4KHrolvS+TzD8S4jWtfp3GBZ1CH1/5nrFw1sccnErSN+Tuqm9a9yvO9bB21q
2WlLMqdgf4k4ec72l/gw5TNdP+eHo/MLey1cHv18YPkP7YavdH2SR7ts//XH
qs3JxHs77jG86VrHp/f9YcTR3bYnI9LvxRp3v7+0/vxxVT9tS3rJff2xlleT
5X58h+VVtdx3D7O86iX316dZXtXIfXS55dVWuV/eYHn1vdzn7myX5dIGuZ89
w3Kpu9y37rRc2ij3p1daLr0q96GrLJd6yP1mXculxnJfeYbl0lzLJe6DNJfg
XS2XnrZcgu+yXDrKcgnexnLpCssl+KGWS5WWS/DnLJdOs1yCt7BcWma5BB9s
ufSk5RKcXOpsuQRvYrm0j+US/HLLpcaWS9ynHGe59L7lEny+5BJ8reXSFMsl
d/9oubSn5RI8Z7k003IJPsNy6W7LJTi5dIblEvw8ySV4b8kl7gvIpfssl9x9
iuXS/pZL8BmSS3DNJbjmEpxcWmW5BNdcYl1NLvW2XIKXWS51tFyCPyS5BNdc
gpNL71susc781nKp2nIJPtRyaZLlEvwdy6WRlkuso8gluw666/JtGyc1qp1v
0X2Fv6smm+x3Ulk/uL7QfoXHifrYceR3Urfu3a/w+ht1sXl+v/0Oy/Hr2e+w
TV/8d84MdPyiARVPTCsda+uQNe46W72z4TW152W/s69wfK79Xl8nPc5wx8tm
NG8xvXRy1C39HCe56+a4esMqL2swz/ZpSXb/7ma/m5dnnt31cXnXUzvUeo42
Z5+L469eEE2t/VyiM3lezvgWe06gf/p3xzi+9x9/vbRjg7eicel8e9ldH/tu
GHPMIUNnJ5XZfNjN/3v0tt4LlyfL7Xd8d3233/HnFeybFCeVtm/Svtk8dPzx
8X+ZUDsPo8uyeet4sueyRrXz1p5PWOT4DfY8wz/T/H/B8Z7XfXn3u6WV0fqM
u+vsA890OTgprUwyzzMcX/nVUcdf1mBZ8nL2/XL8ozfubNto6Dp7bmGR48fa
cwhrsu+pu16/0PT2U2q/p1GT7Hvt+B179X+69nsd9cxywPG23w75/aJzq6PX
stxw/KTHT5x/YN8fojX2nAZ8sT2nMT37XBzv3mn9soOGzo46Zp+jWw80ue7W
9Zc3eCspyfLK8VZXvtL11E5Lk7uyfHP8X9+dkxsy8ctkU5aHjl/b7KjhO8q/
S06z5y7gFfbcxVbbJ4r1xhDbJ+rsLIcdv6736Edrczjqn+W24yd2eKVm8MTq
aFaW847vvKrX1HFlP0b1suuC42MPGXh/y07r7bmUxPEH7HmVvtn3aPfvPrcu
/2unBvOiFel8GO7WRY+fVe/G2aWTkwnZ9cjxSXNPeqLR0MVJ++z65XiPi37d
snXEF8ms7Hq3+zjd1k+qvd4lf8yuj47/OPajtbXXR/dcCpznUsgr+tvkVVl2
XXY8+mT6gNrrcjQyu447Xlo+7+uFh9VEK7PrvuPvHfHS0ye33BCdk60THO/1
Rb5n7TohmpOtKxw/5OKpN48rWx214D0m45UFz/k8U8m6qKSkb/qcTz71OdD1
5yf2u/f3eaVjk7bZesbx5r16Dd42YlFyWLb+cfyTKQ80X7VkbfJktl5yfO5T
L8+rXS8le2brK8cbL/vfHbXrq2RWth5zPPn7Owf95bca91wNnOdqyHPWM+T5
cZbn8HaW5w3t+SX4R/b8EjnP+oGcr7Kch5Pz+1jOw/9sOX+N5Tx8tOX8YZbz
8L0l51kPaM67Pq3kPFxzHk7Oj7Gch98mOQ/XnHfrJcl51g+a83ByvrPlPDxv
Of+L5Tm8u+X5d5bn8Ecsz3OW564/aXn+quU5/GPLc3Kb9cl4y+2jLLfh5HYP
y214G8lteAvL7Tctn+HdLJ+vsXyGn2D5vIflM/wSyWf475bP1ZbP8Oskn+Fv
Sz6z7hos+Qy/VvIZrvkMJ5/3tXyGk8//ZTkMf9xyeK3lMPxpyWH4ZMvhDpbD
8Jskh+HDJIfhGyyHyVXWexdJrsI1V+Hk6rmWq3Byda7lKvwPlqunW67C51iu
vmP5CX/B8rON5Se8meQnfIHl5xOWn3DNT/iRlp+J5Sc8b/l5b+G6N9pHnjtl
3avPncL1uVO4PncK1+dO4frcKZznTnmO1K3P5TlSuD5HCvfeK+T48hwpnOs1
58s6XM8XrucL1/OF6/nCOV/OC67nBdfzcseR84Lrc8hwrpucF+t5PS+4nhdc
zwvOeVE/XOt346V+uNYPp/7CfQbiwP6ccWAfztjVWfi+fxzYZzIO7CcZu3r4
u6yf9e+6Pp79XY4P1+PDOT7HYZ3Jcdz73caL79+VC+zflQvs35UL7N+VC+zf
lQvs35UL7N+Vc/t3Fe7TlQvs05UL7NOVC+zTlQvs05UL7NOVC+zTlXP7dOGN
daN6g6s3uHqDqze4eoNrTrp1r/iBqx+4+nHHFz9w9QPHDx5Y3xZ/v2mC5wGu
HuDqAa75CS/+XtIE73zdceR84Xq+cM1P1sl6XvDi77mUe+cF1/yEa/1ufNH3
UMq9+uGan6yfi/uPA/7jSPPT8aI+44DPONL8ZH2rfxeu+QnX48M1P1k3an7C
GZ99/4dUsk7g/Rdyleup5iqcfOA4cH2PBq65B+d7zd/lOqh/F+69Pyv7dVAP
XOuBaz1wzRk437vC91ziwL7fcWB/7ziwj/fu/S6oH158X6A4sN91HNjXOg7s
X717nwrOi+ty8X1pyr3zgut5wTU34HwfOV+4ni+8+D4z5d75wvV84Zozbt1i
32s8sN5QD3D1AC++n8kEzwNccwlOPuAH7r0PaFz9wNUPvPi+JRM8P249Jrmn
/UC80b9Sb3D1BldvcPUGV29wb18j4/reHxyf8N19wkLPjFfPcPUMV89w9ezq
LLqfxkhv/ax9wgHSJ8Q/5wXX84JzXhyH9YB+jnDNf7geH67e4Jr/XMe9fSqM
6/yBa/7DtR641gPXzxGu+c/1vbif2KsTrnXCi3uLA95ir0641sk6QeuEa51w
/T7C9ToF1/rhWj9c64fr9wWu3xe3XpLcZp1TfP7kA/Mn750vvPi6Nx/p9Qte
fL7lA/MtH5hvec8DvPg6Oe95oA+mHlwfr3gfzPMAD/TBvHU1PNAH896/hgf2
6/O8wQN9M8+b60MW75t563m4XtdYJwfem3Y5/H+q0Tx6
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ZbeDYwrl82QTX43O88lWvgZvll0Njkd25nojy9dUG7i59p3sW3CcskV2Mjiu
kS0dBd9En62yY8ExzkiuPzBfk98U/J6Kp3bALYJj1aLJ+ke5rCLJvoryS9/R
p3EI/wUZ2+AmwbGe/I7/wYM0FrlOU7y2PbcpitG+hU8KjvuU+1EuboXmItfJ
igH/zfV22VyXnAd3pM/f8JnBea3RlMq5ntmT2ynlTn/LbahsccVkH0n+wN6C
YwflWn/Nx025vr9yW6b82AH0Pz84X7c/t4nyE/4p2B8rndu03nAP+SrJ76Z8
2rjMtlb2ToGb8hLyPVJyHkN5tiw5v6E823L6lgnO58ivUU5jfLRfoJjrHrhU
cs5BubgSyfpfub5Kye8gX6UkfGFwzrBMci5IOboKyT6DYk/loeWTvMA9Kyfn
aeVTHZYct8qfUf5Y/t5y2Z3k3JT8w5qKS4P9xlrwlcF+5jGKIYP9TPlHys/c
zbXlkvNCyhnKJ5ONeB151eS8lvzMJtpLwb7TpNxnUwyovPhy5Mui4yP5dU/D
jZPXlXwn+UrKI02Kzosrv/1cdN5aObpno329SfA4+HiuHRTsTyqPqFzNIuSt
kveF/EnlbpXrfiraFxgJ3yi7mdnHkm+wILMPIf9Wfu7d9BkbnadX3vL56FhW
z7oKbpl8H/mcyrXLz1yMfFnBMZ1iO+l52TbpesXaigdnIq+X7Icor3hEsr+k
/M9xyT6M8q41kv0x5XwOTvb9lM8pn+z7KfdYLdm/Uo6obLIfpdxO7WQfUvml
usk+jHI7iktOhuvzDj/SXqM5pT422Z9RbrO4dHRwHuko6frgXFadZN9MuazS
yb6Tckr7uOcFwecLByb7nMopSfc01BrgWbsL9lEV1/RIjg2Vb1QeRXrsKPmE
yfkN5Ta7UOYG5zY/4doGwbHYBcljqLE8JNk3Vp6qSrL/qdzaucm5COWFlE+t
Lp0m+5bsfypvdl5y3Kd8aefk2Fw5q47JOQSdO5yZnMfQmYXyJ0/DC7nPn3CP
4DyY4rZmcMPo+K8p3CAfW/kOsvU9k220zjUugh8NPqPpBy8KPvd5JXN+RzkB
5QaU335G/nayH6jzmv7wU8FnRssy51mUI9Iz9Cz5PDprkn7rxLVPZ/Zl5a/K
D5Rtb5r7sHqHKfL5k9e54hf5RfJxnpAuTN5fOssYmPztOucakGz3dbb1ZsG5
AsXjbxWcB1CcrnUvO1iCuh3t8cGxz4n5OukcfR51Otw6OhbX/NaN9lWkM5cg
65Ps/+hcoG+yX6Tzl8vhecFnNCG3TSfIF0r2kXTmpbyd7Nfx1Jck+xuaw4uT
fSed6azN16fyA8oXymYdJ/8qX2PST8p5y+YeSX1Gcp5NZ17KW9SRjtVcFxyb
KPYfmezjyef9itI6OOfwE9wxOMa/KVlnSnduojQPznVszNeSciDvw/WCcz6j
8n2qvPd7BefSlds5NL9/U97hOtpvBp87KLemOazLXP+Qj7NyEV9rfQXnPa5K
1r36RuX75Z9Ujz5zkC9XibpXPu8at8r5tc2Qr8q/XfmcNQXHm8o76UxMtqMX
fa5Ozunp3EHnHvKBqyk+ov1M8NnEpcn5PZ1H9E7Ojeg8YnXBuSnltT7P95Ry
RG0pU4LPYRsk5yt09tcwObegM8pmyfGXzvXqJ8eYOtdbWXDOSrmdRsnxo84Q
dV6qPTgv+uxR+2s+3Dw5ptN5onL88qmO1hqhPTb4nLRpchync9IWyTGjzihX
FJxPU47rtOQYVmed7SnjgvMMOjOUzb0kOsegPTISHpSct9RZ0qnJManOTzfk
elv5rjbJ8bjOW1snx+M6P/0/3mLPsA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmmW4HMUWRaerbnANFjwEd3cL7g4Ph+AQ3CG4u7sHd3d3dx7u7u724K31
7fpR6V63J/fOdFeds/eumWLTHVffofR6ve34p4/jCPyzGMf5u17vbc6fr73e
8fBh8OXwWozH4Pvgmfv1er9yfRp4cvgZrj0OHwLvA1/ga+GD4WHw+fBv8LTw
QPhZ+Hd4OngK+Dn4afgI+AD4YvhOeCd4K/gE+C54F3gofBL8AzwAHg1+HP4e
ngAeBX4MHouxCrwM/CnnEzD+A68Cf8P5s7z+WPgQ+FKv+Rng++FZ+HzPcP0Y
+GD4Eq6N7z2AV4a/5vxuru8KbwufDK/NeAJ+AJ6V//8c14+DD4Uv49oAXwOv
Cn/L+RiMleCl4I85/4bXjwX/yXgYHoWxNOeLcv19zr/l+tjw34xHfGCMeTnM
xvVXOR+VsQw8GP6A89EYy8KLwR9y3sdYFJ4XfpPzv/h9s8HTwS/Cf8Ozw9PD
L8H/wvPAs8KvwP0Zq8HLwZ9zPh5jTXgl+CvOx2WsAa8If8l5YSwMzw2/znnH
mA+eHX6N88pYBJ4HfoPzsRmrwsvCn3F+M39/G3gT+Ci4H2MwPB/8FucjM5aC
F4Hf4/wpXn84vD98ETw5Ywi8DvwL55MxNobXhn/m/Elefxi8H3wh/AJ8Mnw0
fCU8IWMdeDX4O58t1w+F94WHwy/Cp8DHwFfBYzJWhpeGP+F8UsZG8H/gnzif
mLEBvCb8g/eG/3+A11l/V8D/hU+Dj+P6NfDojBXhJeGPOH+Z66fDx8PXwiMx
loQXht/lfBLGhvBa8I+cv8TrT4WPha+GJ2KsD68Bf8/5P1yfG54Ffhm+sWR+
vQHPz/z9g+uzwNPAz/u32v3dqOTvf1zy90fj+F/4g5L6MVLJ/Pm0ZP6OUTJ/
3il53v1Kft8S7f5vWPJ53y95viOWzMf3SubrCBxfgD8ped6jl7zfOzmODH/I
+9vK9QiPCn8MbwPf0ura2/BmnNwK87F678Cbt89r/XsT3sT5BvCWem/Bm8K3
wSPA78JbWH/gUeCP4K3he+DR4E/gofC98Ojwp/C28Gcl63HMkvX5fcn8nqBk
/v5Qsp4GlNTbV0qex//4/0/DP5Wsp4k5vuN85M3tbH2Gf4d/ZazLa9dj/Mb5
dFwf5nr3Q/FBXy1Zv/+0+vxXyfybsmQ+/VyyficpmT+vl6xPb4r1+LWS+vJv
q9cvltSH3+Gn4K9L6te4Jev7u5J6O35Jffm2ZD2MV7K+H+TYH/6C/78d/HlJ
fRqrpB48UdIPvm/1/PGSfvFdq+cvlNSr3+An4efgWeFf4Sfg/5XM/6lK6unD
HMeFv+L6Dq4HeErrK7wnPCf3a3frV8n6nwvew/peUj/mgHeznpWs9/nhfeDV
S/rBbK0fLV/S3+aG97S/lPSvBeB9XW8l/WX21i9WKOmPI8HrWg9L6pv3Y354
bI4HwV9yXBAeh+Mh8O8cl7Nfcjwc/oPj8vAgjke0+bQ4PCHHQ9t6nAMemeP+
8Icc57Q/cjwA/oLjAnB/jgfDb3GcybbCcT/4TY4zwpXjvvBirb+vX1LvFm/1
cIOS+jK49fv1SurnUxwnhn/ifu/anu+E8A/wzvBD8Djwl/D28CPwePDX8I7w
0/Ak8M/wbtZreCL4R3gX6yU8FfwXvBf8DDwp/Au8u/WJ9/MS/BT8oPcXfgS+
B56xX+b79HDHcRjXZ+b6jtZv+Fx4IXh/62mJ/lkQ3s/6XdLPXQ+D4D/4fXvA
M3F9B3gpfn4OPCO8vfUbPhueAd4OXgI+C36D4wwuN477tPW7Lbw4fCb8Z838
nrZL/fP5248GlvTzX0r0yKQl/W95axZ8Ha+fgs+3DHwDfCU8GbysNQ++Cp4c
XskaCt8ITwXPB58BnwCPCS9nzYSvhQfCa8APwHfCM8Brwo/C98IzwatYE+Fb
4WngFeE74BvgKeG9+Tx3wyfzfh/w8zK27qW//+v970v92gXu4/VTw1vYb+C/
OZ+GsSW8Mfw/zqdlbAUPgf/hfAXG7fD18CD+/4x9qZfqxQLPBO8N7wxXeFVr
NnwbPC28GnwffDs8Hbw6fD98Bzw9PBW8uf0K/ovzKRmbOf/hPzkfxNjU9QH/
YX3l807hemz18kd4cut/q1eLMi6Dz4fH5/cPhDfppaZb23/i9QPtD63eDWZc
Dl8AT8DrF4OvgIfDA+DF4SvhC+EJ4SXha+HL4InhpeDr4MvhSeCl4evhK+BJ
4enhofCmXfrHQvD5nJ4BjwPPD58JnwiPBS8MXwCfCY8LLwIPh8+Cx4MXgM+C
T4LH7pd65/OerURPzck4uhd9PQrX54ZPgI+ER4NLzf2cgdd/wbXHSvzGt1x/
1HvN9Uvgffn53d47+GJ4H/gueAh8ETwMvhOuNc9rxhJ9uhN8E3w0fB+8DXy1
7we+x7kD3wwfA98P99U8/5lK9G5X87ymK9HDv5b4i8lK9PpvJXp/8hI9/k+J
Hpy6RB/+W6JHpynxJ4qPIa73Ev3br2b+z1ziN0asme+zlviHEWrWwywlfmaF
5jc2h2+Al2v+ZVP4OutD8zubwdfDB8IPwWeX1MeX9AFqYfufvZafHdSLfxuR
5zE7fCR8IDwSPKu/A94bHgG+o9XPLeHjuTYv46Re9PQYXJ8DPgo+CB4Zvr9k
fn/Wxe+oD1wvn3fxN3eU+Ln34Yfgdfn951gf+Plt8GpNf28L3wyv2vT7UPgm
eB7GifBR/P/R+Xvrcf1ceFeu3861NZre3h6+FV696WX98C2uJeus/cka5j30
OXP+hTWG81maP12G8/Nca+017/Oz47l2W6v/m/P3j+1Lz12gS4/+sPVkvbaa
+YPWA+boogHeaD13zi49+s3Wk+fqogneappgiS4aQK1wHH/vPdc35/P2i4bQ
+6mxPm89fvEuGuKLphH0cmpQtcMx/P93OL+U87n7RWPofew5v7ceqXdTI9o7
1cBjdOnpamM18z+9aDy1tJpar6qnUGurycfq0sPV6mryXhcNoFa/tfXHzfjZ
MX3R6KWLhlO7q8H7umgEtfkHXby+c+SOpoFW76Kp1EZf1Tw/n6N+Ro1lr7EG
WYucLxdyvk3J/Nywpj7uUVLvFq2ZP+uUzG/1jfN53ZL1sFFN/dyzpP5tXNNv
9yqpf/vDz1s/S/rHfvBz8Okl/WVf+Fn4tJL+cwD8gvW0pL8uUlMP14b72V9r
6uvWJfN53pr1tGpJP1u6pj5vXLI+j4bfhi+B57Lf19TzLeFR4ZVr6vdWJfV2
g5p+sTvcH16rpt8YEqkH1q7pNzuW1P9la+r7kJL1bL05G96kpJ6vU9OPdiqp
/+pn6/1qJf19H/gZ+NQSveCace1cAc8HP82z+hr+lHFOe0+nd/kMvtep4Vu6
aI5h8ALw1U0D3qdWhC/t8pm2rVmje3bx3K5dPffhXTIuvfiN8GnwefCKPnv1
SZc1PgF8ZF96szXf2u+ccm6VNr/1bJN16VF6uTm4/rBezp5W08NW6OLp7G3e
A7WOnsJ74zNUm6iBfLbOOWurNdi5eJg1HF4d/pHf33F9my4aZ9aaZ3pElznj
s9YT6g3toQNqPKM/81wv6Zzaq0sNd66pia8pud9qZT1t/y4aXq+rx5+5i0fV
+98BXwJfA69vb2G8y/llXJunXzT7VF08hFpezT6oi+ZWy+vBZujiUfRmavgZ
u3gUtb2a2ixKz6nWHo/zr/zbjKtKPPa4XTyC3lvNP3UXD6MX0PNN3MXz6QX1
0At1ySz01nqOibpoeL2IHmXKLpr8qaZRH1K79aJd1RwjtXqjFrkXvrmLph1a
06NGsDe2evRhq7/LtfqpBhjc6rHaQI8zSRcPo/fRE5mF6oGfaBrC7M8MQW2h
Z1ZL2iPtlXvW5I0nlOhr14Bz7ZSStTF7v7x/56Bz0Z5sb9ajjGOWBO/YxfNO
WeN5zc7MZPTCx8FbdOlhY9sr4R26eOYpamq0tVrPMqq9E96+i2eevCazNbtV
E4xX0wPthdb4MWs8t9nbob14cTPdoW0+Oz/13GZtek69uJ7abNgMSq+th9q1
rR+9lZ5tjy6eTS+nB9u9i2fTm+nBduviyfVmeqxd2nrTe52hJuzi4aeu8exm
w2oovbyeX616dFuvev5hbX2aBejpzb4P7sXrm7mYjZthmMWcAm/XJQOYtMZD
mg2ryfSWemqzRDWMXlsPrXay59h71CjnddG8ahc13cldaq61V013SheNpNZT
E53TRQOrldREZ3fpefY+NeKpXTSR2lHNc24XDa0W0tObHaqx9Ppm3GbdZh4T
12SAZpFqKLPBg0q8pJ5ya3jnEi9iD7AX7F3iRe2R9ko9tXsLala9tpruIviq
XrSeGu3iLppc7aaG17vqYdX2avSb4Lt60e56gGu6aHa9gR7g6i4aX29gxmi2
qsYzezTTGtjWm1nXc239WZ/UN0+19Tao1Z9da/zusSV+2J5i7zm09Zrda/ZH
jivx39vV+MvDSvyXfuNB+KgS/71jjZ8+ssSfH90X76UHG13tWONHDy/xazvU
+NEjSvza5jV+f78S/2gGYBZu5mo2sFWN/z6gxB/6THw2B5b4Q3vSm71ofevD
IfAr8Lklfv4o+C34YnhOewv8Bjwcnk19CL8OX1Cy33EY/Bp8fsn+yR41+ynH
l/jxveAn4RNL8oZD4Vfh80r2k7as8e/7l/hb9d3IXTJes149gnsj6km9wyNN
X/Zv9dCM0b0EM2OzRzNI9zoG95JNmrm6d7BYL1msGfN0rb+YPZtJm3WbuZhV
mzmqL91jMos0kxyt6V3rs558QKvHZpN6er39wF6yybebvl+8F31tRupeiBm4
2amZq9m9mbZZ7Eut39kP9QN6zru7eDS9qB71ri5zyLl0Eq95sMs99d7q4cy6
XuzF26lRh7V6ZP04y/fcRWOqNV9rel6/oT8wYzJrMmM1ezezd+/HDNgs38zd
vQIzZbN4M233nvQDZt1mLENbfbAebtXu14D2/JwDZjPOSefGllwfER4fvr1p
QLMj14zaUI1sFuOcVztfUnNvvEdqAzWz2Y1rZN92P25q/dh+fRljrl40hdri
Zfsi/De8d1/eo7V7ufbeL63RHmoStclFNVpCDaOWObFmrjnn9DYb9+Veek/V
q2fVaE81idpEDTpGL1pFbXox12fuRaOoVdT4d7bn6fPQP/r8zCy/rPmdT7bn
qTZevy96+dEuev6kGu+k59J7XVBTu6xhagkzKLOozfjZRFxbpy9zxTnj+r2l
pndbc6w9p9XMbZ+Zz849M/fONuFn41v/a7yYnk3v9k6N9rNGW6vfrqnV1nBr
+YU12k9NpbY6o0ZL6gH1gqfXeEE9pF7y3BqtpiZTm51TU3utwWqf4TXaTA2p
llTzHggv27TweTVaSs2n9ju/5nmrsdRaj5bMtW/gneBra7SZGk2vvF5f9NMj
Xerdhn3xa4930bMb9cXPPdHFX+v5zL6G9+IFz6zRompmtbM11dpqnqIW0xOe
1fqv/c8aZ5anp7L26TnN2vRkelFr9IWtH1q7reHDWz+1ttszrmz90F7ie/a9
O0es3dbkB1p9sFZbY927tyZbe+1RZsXWXHuXPc2s155ir7OGuxeuxrS2O2ec
O+rhI1o/P7vpC/vxun25pub089qTzDb1kPYqe95VrR/v1PTCRa2/27/taVc0
fWCvO5DftyC8BPxRiSfRm3zG+ILzExjf9JLJuF7OrvEGn/gazjfoi79+rEue
4TN7otU/s5Kb+J0f9ZIRfFKzRl2r/o5PazT1DU3PqLWtGTN1qSnWEufQpF3m
2KOtx5u1miHY++3ZZq1mBPZy34PvxTll1mJmbHa8uXO01ee7Wr23frvGXet+
Br28GYJZ9AO9ZAvOSeemc1LvZU+9sekh+4E93GxeTWJvt8aOaG3vUnvdA3cv
fIg1Sz1W0wvsCWY9enj1rvpXfXlDjfc0MzI70vOb5amHzQLMHMwGzSTMIswU
zHLNUMwarql5lmZgZmFmGGZz6luzja79/ulLvLYZtLXJGqU+d8/avWv3MEep
8cD+volKvPGrNVpWDawWNmM2vzIPMu8xI/W7H2ayZqcf1PQKe4Za0kzV72aY
d5m1mnGYdZtxmH2YYZhlq7fVs2ZG6nP1unr6vhovpUfSK91b45X0RHqjR2q8
iZ5Eb3JPjVfSE+gNroIX6iXjM+u7sibrMwM0C7y9xrvpyfRmj9ZkGXoevc8V
NVmhGaJZ4v01XkaPp9czw3Fvx4zIbOeVGq+gh9BLPADv1YsH0gs9WOOt9Eh6
pYdqvJOeS+9lJu13Ycy8zaofrvFaeiy91tU12kcNZNbpdx787oN7tGO4/hjr
9ZLZmd0Nbf3kkOat3fNx78eMeyDXrqvJOs0wzTLfqPEqehy9zus1tciapNe5
sebZOwfMMv0Oht/FMHPvz7W3GJf24qn0Vu7puLezBT+brGaPyb0mM/dBNXtM
7jWZH05Vk3mYFe3WspBTa/qLGaVZpRmS2dIWJdmSfsh77T3X35xSk2WacZp1
+p0Nv7vhHsFYXHu3plZaM/U+7pGZX/qdmGm4dj1jhV4yYLPgN2u8oR5OL2fN
tFaNWlJL36vxRnoivdFHPrNeNKZa88Oa2mMNUmv6HQG/e+Iev98deJ/rt/Ti
sfRa7rH73SX3+N17d0/E7wK5J+leiXssfhfI7xi49+Ieh9/F8jsQ7n281u6f
HlQv6h6KtcUaYC1wj8Tv0vidAvdO3BPxu0Hm1e6VmFe5l6snG8K1/wPYLr2e

          "]], Polygon3DBox[CompressedData["
1:eJwt13n8VWMaAPDbvfdXiHZKJCRLobRr166VVlpptbSgxdZmKhVFoyJUmEIz
tjEhY0mjDW1IJQpjHXtKpVLN9/m8/fF8nvf5nufc3/2d8573vPes/iM6D89m
MpmPRYH4Wy6T+b1QJlNGVFCvd7BrPpOZL69nH7G/6LmSPcjWsA1sLHtWnMCq
slrsK+MF7Ed1VpzMVrF/slPl+qw52238DDtersJqsi+NX2Cl5VqsIfvRuLO/
+5C8lm1k4/R0YfPYO2wTG8+eEyVZDVaffW/8PCsl12QN2A/GC9lP6rw4ha1m
F/i8y+Sb2e3sAj1PiD3qUuJ0ts7xS/WNkB9jT7NuepqzyewltlS8qW4hprCX
1W/ou1FfAzaaPckWi1fVTcQ49pz6ZX2D9DVit7Kn2fOsD2vMbmNL2AusLztN
lBeVHGvg2APyqepy4mzj+uyv8sWih/FU594tlqgbijHsKfVzPq+3c5qxiXGv
4ruxIewyNiHuC1vGBrOmbHxcW/YKG8jqsOvYPPYY68hqsyHsIbaQdWC12GD2
IJsrXlTXFdezh9WP6+ukrya7Nr4/e5i1YdXZ1Ww6m8WasBrsGjaLzWOtWH12
E3s8/lfWg1UQp4tz4n93bLZcT8SDsFDfU/q6O34J68fuZw+x1qwau4pNY/ez
xmyR2BvzR5zBNjhekZ0hKutvpJ4jn6wuIyrG/xmfKz+lPhRzSlR27kdxr1kh
+WxWhW03bqN3uvxvtoKN0PN3kWPnsAvZp8at9E2Vl7HlbJieJSLLKrGq7BPj
xeyAuryoxD5k/2B5uTK7iO2Iuc1+UxeLXvZuXEu2W11CnMbei3nMDkYtzmGb
2UnsxJiXvlMN9T1yVXG58e36JuqrFtco7oU437GmMUfkkuoSca+Ma7OZcnF1
sbh3xrXYDLlorDkx/41rsnvl0vGcx/U3rsPuk89SnynONW7M5sqV4tkQ58Wz
F/NQvkhcaXyX7zfd96vreHe2kG1kW9lkdha7lF3Pros5qK4i2rDb1LeKBeoL
xRVsonqac+s5tyW7m70S6wMbyrqxBWwD28ImsXdEezaMjWY11Z30zWGr2Dp2
B/tF/E9dTpzJ3nL8Z/aduqyoyFawN3Jpvh/Kp7kZc3R5Ll2Pw/l0LeKa/Ci2
O++g80qIb+KdIP5g54vq7H3nvJVL1+1IPt2/uI97xH4954lq+jY6/mYuPQN/
5tM9iHvxYmTWTF9bfQdifcyle/hbPt3nuN97xeGYjzHHYz12bB87YnyxqO3c
LXEtc2lO7M6neRPzZ7fYp+fc6NW3yfF/xT2Xm7N27KDx67m0Zh7Mp3Uh1odX
c2nu/J5Pz2w8u8fFcdbeuV2cu8f4eFZB7sC6st+NT4jrK3dk3dhe42JxjeJd
ynqzQ8bFWWW5G+vDDmfTvKon75P3iz/Ea7m0fh/IpzU+1vqixhVZJ+d2d+6+
eN5iTstdWC/2p/FPer9QHyeKiMF6luXSM7Unn56TeF72i6Nxz0Qd5251/A+W
kauzuobbYv3JpbVrr3NPMS4bz3jcV3aFvh769huXZhfIbeM6i+/Vu/T+GvMx
7om+NXGv2a6YtzFn2Fq2Lua5fBO7jdVRfyh6s3FsCmuu/ljcEM88m82uVG+K
Z4mNYRNYI/VG0ZWNZuNZQ/V7oiMbEc8qq63eILqwUWwca5BLe53Y8zzKnxXX
+D9Ws1bGQ/Td5NjF6rdFczaQDWNV1WtEW3YjG8kuUb8verI72SR2mXqlaMEG
seHsQvWqWCfYYDaCXaR+V3Rgw9kYViuuZzz/8d4RFeL7+H7rWWd9I9Vj9dVX
fyKGxjoa71rWRb0il9bbo845N9ZBsVRcwjrr66nv+FyaQ5+rC0Rh8Xa8e8UT
+j5Qb9c3Vc9LubTO78qnNbnosfkR8+TMY/M61snt6htj/XbuHOd2Vv9HNGMD
2FBWRb1NDGRT2H2svfpTMSzWdPYg6xr3R/RlE9hU1lK9WfRh42Ofw1qoPxC9
2Fg2mTVTbxH92SQ2g7VVbxUD2GQ2k7VTl4hrxLqzvuyIcdnYT8l92aDYP+sr
x6qxfvGsscKsH1vCPmafs5kxl9mTbAvbwe6J7xv7AbaV7WT3xv/Fnmbb2Gds
BpsjPlPn4plmy2JvFNdGfVjtlMxLrLXBNPlV/hYbrmdWzAX1IXU83ksdf8Bg
Bzt67DfAy+xr9kisjXwlu0u9VrRjQ9koViOX9ruTsmkPG3vZ8j7gcNz7bFqv
Y93eHHtRUT2eH/UQ5xbRM1vsVBeKecVeiTVT3wPZtHeOPXRln/eovu+Nj+gp
Ld52/GH2LSsdexO2PNZl594f7yW2lo2J54/NjHcQW81Gsh7sMbaJbWNT2OVs
Rrwj2So2Kpe+y2y2Mua8WKFuJ+5jy9Vr9I3WN1/8oM6IMtLKeB/omyWvYO+w
W+O5Z4vYZvYJm8bmii/VRcUJ7LXYh7Cv1CeFs9djT8S+VhcXJ7I32Dz2jbpk
9LI3WS9/Y7H8EfuUTddzFXucvV8o/c67Oz5f3BtrWlxndku8J8RYtiDuJRsQ
80zcwR5li9i1cc/ESDaHLWC91IdEEVaXNWGfx/s+3plyPdaUfRHvWFZYrsMa
s53GBb5f2ZivrBP71XiHvlvk2Ww+66k+IApYbdaIfWZc2Lnl5DbsCrbLuBQ7
X76KXZNJE70kO4/1YP3QUeNTYr8n92ED47nRd3Ls2VhvNiBOZWVi3xrXlvWP
V2Iuvd+qsJ7sajFNXUSclk3vu3jvTcmnZ+FE1lDdQExkR9hJrJG6hc/7OtZg
VkxuzFrGniub9j5/HlvXY31fl0+/37pn0/4y9pkFBekd8POx93u851fr+ZLd
o+8Z9VKfd3Os4eJONp8tZv3V/413HFvEnmU35NJv01HZ9JssfpuVKkj/W/ls
+h/if9mZT7/fBmXT78j4PVlUXy5+57CW6g4+7yfjfOwV5FasI/sl9gpsrrya
rWd35tLCVZw1Ya2U3xo/kku/qeK31TPqb9WFYo9n3JS1duw742zs0+QWrD37
OZv2462zaX8e+/RCvt//Ae+H9SU=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRFEYgOFrX8cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
MvY1ImJr7Gt4TqJ45zmZezLnO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xhtd817aeda9lA+1w
hXGucpdr3AszcZ8bPOAmt3QYfodH3OEx4zzhLk+5xzPu85zT7nHDD13oJdxR
Y2bb4hAX2cc5dnCSzRxnHUdYxQGWsVRd1hls5aczGnjHGh6zItyLRby274pv
ytVT2KtCM+awgDHmMzvsYRZjzGQWM8J5TGcqU5RmncTU8B+H7/irZP2EZ/qS
MaIZH7f/78MfvadK6Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 997, 1003, 1337, 689, 1121, 912, 691, 1122, 913, 692, 
       1123, 914, 693, 1124, 915, 694, 1125, 916, 695, 1126, 1004, 1218, 696, 
       481, 697, 1127, 917, 698, 1128, 918, 699, 1129, 919, 700, 1130, 920, 
       701, 1131, 921, 702, 1338, 998, 922, 999}], 
      Line3DBox[{704, 1005, 1219, 703, 1006, 1220, 705, 1132, 923, 706, 1133, 
       924, 707, 1134, 925, 708, 1135, 926, 709, 1136, 1007, 1221, 710, 1008, 
       1222, 711, 1009, 1223, 712, 1137, 927, 713, 1138, 928, 714, 1139, 929, 
       715, 1140, 930, 716, 1141, 931, 717}], 
      Line3DBox[{719, 1010, 1224, 718, 1011, 1225, 720, 1012, 1226, 721, 1142,
        932, 722, 1143, 933, 723, 1144, 934, 724, 1145, 1013, 1227, 725, 1014,
        1228, 726, 1015, 1229, 727, 1016, 1230, 728, 1146, 935, 729, 1147, 
       936, 730, 1148, 937, 731, 1149, 938, 732}], 
      Line3DBox[{734, 1017, 1231, 733, 1018, 1232, 735, 1019, 1233, 736, 1020,
        1234, 737, 1150, 939, 738, 1151, 940, 739, 1152, 1021, 1235, 740, 
       1022, 1236, 741, 1023, 1237, 742, 1024, 1238, 743, 1025, 1239, 744, 
       1153, 941, 745, 1154, 942, 746, 1155, 943, 747}], 
      Line3DBox[{749, 1026, 1240, 748, 1027, 1241, 750, 1028, 1242, 751, 1029,
        1243, 752, 1030, 1244, 753, 1156, 944, 754, 1157, 1031, 1245, 755, 
       1032, 1246, 756, 1033, 1247, 757, 1034, 1248, 758, 1035, 1249, 759, 
       1036, 1250, 760, 1158, 945, 761, 1159, 946, 762}], 
      Line3DBox[{764, 1037, 1251, 763, 1038, 1252, 765, 1039, 1253, 766, 1040,
        1254, 767, 1041, 1255, 768, 1042, 1256, 769, 1160, 1043, 1257, 770, 
       1044, 1258, 771, 1045, 1259, 772, 1046, 1260, 773, 1047, 1261, 774, 
       1048, 1262, 775, 1049, 1263, 776, 1161, 947, 777}], 
      Line3DBox[{781, 1162, 948, 779, 1163, 949, 783, 1164, 950, 785, 1165, 
       951, 787, 1166, 952, 789, 1167, 953, 791, 1168, 1057, 1272, 793, 1169, 
       954, 795, 1170, 955, 797, 1171, 956, 799, 1172, 957, 801, 1173, 958, 
       803, 1174, 959, 805, 1175, 960, 807}], 
      Line3DBox[{806, 1279, 1064, 804, 1278, 1063, 802, 1277, 1062, 800, 1276,
        1061, 798, 1275, 1060, 796, 1274, 1059, 794, 1273, 1058, 792, 1271, 
       1270, 1056, 790, 1269, 1055, 788, 1268, 1054, 786, 1267, 1053, 784, 
       1266, 1052, 782, 1265, 1051, 778, 1264, 1050, 780}], 
      Line3DBox[{809, 1065, 1280, 808, 1176, 961, 810, 1177, 962, 811, 1178, 
       963, 812, 1179, 964, 813, 1180, 965, 814, 1181, 1066, 1281, 815, 1067, 
       1282, 816, 1182, 966, 817, 1183, 967, 818, 1184, 968, 819, 1185, 969, 
       820, 1186, 970, 821, 1187, 971, 822}], 
      Line3DBox[{824, 1068, 1283, 823, 1069, 1284, 825, 1188, 972, 826, 1189, 
       973, 827, 1190, 974, 828, 1191, 975, 829, 1192, 1070, 1285, 830, 1071, 
       1286, 831, 1072, 1287, 832, 1193, 976, 833, 1194, 977, 834, 1195, 978, 
       835, 1196, 979, 836, 1197, 980, 837}], 
      Line3DBox[{839, 1073, 1288, 838, 1074, 1289, 840, 1075, 1290, 841, 1198,
        981, 842, 1199, 982, 843, 1200, 983, 844, 1201, 1076, 1291, 845, 1077,
        1292, 846, 1078, 1293, 847, 1079, 1294, 848, 1202, 984, 849, 1203, 
       985, 850, 1204, 986, 851, 1205, 987, 852}], 
      Line3DBox[{854, 1080, 1295, 853, 1081, 1296, 855, 1082, 1297, 856, 625, 
       857, 1206, 988, 858, 1207, 989, 859, 1208, 1083, 1298, 860, 1084, 1299,
        861, 1085, 1300, 862, 1086, 1301, 863, 633, 864, 1209, 990, 865, 1210,
        991, 866, 1211, 992, 867}], 
      Line3DBox[{869, 1087, 1302, 868, 1088, 1303, 870, 1089, 1304, 871, 1090,
        1305, 872, 641, 873, 1212, 993, 874, 1213, 1091, 1306, 875, 1092, 
       1307, 876, 1093, 1308, 877, 1094, 1309, 878, 1095, 1310, 879, 1096, 
       1311, 880, 1214, 994, 881, 1215, 995, 882}], 
      Line3DBox[{884, 1097, 1312, 883, 1098, 1313, 885, 1099, 1314, 886, 1100,
        1315, 887, 1101, 1316, 888, 657, 889, 1216, 1102, 1317, 890, 1103, 
       1318, 891, 1104, 1319, 892, 1105, 1320, 893, 1106, 1321, 894, 1107, 
       1322, 895, 665, 896, 1217, 996, 897}], 
      Line3DBox[{911, 1002, 685, 910, 1336, 1119, 909, 1335, 1118, 908, 1334, 
       1117, 907, 1333, 1116, 906, 1332, 1115, 905, 1331, 1114, 904, 1330, 
       1329, 1113, 903, 1328, 1112, 902, 1327, 1111, 901, 1326, 1110, 900, 
       1325, 1109, 899, 1324, 1108, 898, 1120, 1323, 1000, 1001}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1121, 252, 1220, 488, 280, 1225, 503, 295, 1232, 
       518, 310, 1241, 533, 325, 1252, 548, 340, 1265, 563, 1163, 355, 578, 
       1176, 370, 1284, 593, 385, 1289, 608, 400, 1296, 623, 415, 1303, 638, 
       430, 1313, 653, 445, 1324, 668, 460}], 
      Line3DBox[{253, 475, 1122, 254, 489, 1132, 281, 1226, 504, 296, 1233, 
       519, 311, 1242, 534, 326, 1253, 549, 341, 1266, 564, 1164, 356, 579, 
       1177, 371, 594, 1188, 386, 1290, 609, 401, 1297, 624, 416, 1304, 639, 
       431, 1314, 654, 446, 1325, 669, 461}], 
      Line3DBox[{255, 476, 1123, 256, 490, 1133, 282, 505, 1142, 297, 1234, 
       520, 312, 1243, 535, 327, 1254, 550, 342, 1267, 565, 1165, 357, 580, 
       1178, 372, 595, 1189, 387, 610, 1198, 402, 625, 417, 1305, 640, 432, 
       1315, 655, 447, 1326, 670, 462}], 
      Line3DBox[{257, 477, 1124, 258, 491, 1134, 283, 506, 1143, 298, 521, 
       1150, 313, 1244, 536, 328, 1255, 551, 343, 1268, 566, 1166, 358, 581, 
       1179, 373, 596, 1190, 388, 611, 1199, 403, 626, 1206, 418, 641, 433, 
       1316, 656, 448, 1327, 671, 463}], 
      Line3DBox[{259, 478, 1125, 260, 492, 1135, 284, 507, 1144, 299, 522, 
       1151, 314, 537, 1156, 329, 1256, 552, 344, 1269, 567, 1167, 359, 582, 
       1180, 374, 597, 1191, 389, 612, 1200, 404, 627, 1207, 419, 642, 1212, 
       434, 657, 449, 1328, 672, 464}], 
      Line3DBox[{261, 479, 1126, 263, 493, 1136, 285, 508, 1145, 300, 523, 
       1152, 315, 538, 1157, 330, 553, 1160, 345, 1270, 568, 1168, 360, 583, 
       1181, 375, 598, 1192, 390, 613, 1201, 405, 628, 1208, 420, 643, 1213, 
       435, 658, 1216, 450, 1329, 673, 465}], 
      Line3DBox[{265, 481, 266, 1222, 495, 287, 1228, 510, 302, 1236, 525, 
       317, 1246, 540, 332, 1258, 555, 347, 1273, 570, 1169, 362, 1282, 585, 
       377, 1286, 600, 392, 1292, 615, 407, 1299, 630, 422, 1307, 645, 437, 
       1318, 660, 452, 1331, 675, 467}], 
      Line3DBox[{267, 482, 1127, 268, 1223, 496, 288, 1229, 511, 303, 1237, 
       526, 318, 1247, 541, 333, 1259, 556, 348, 1274, 571, 1170, 363, 586, 
       1182, 378, 1287, 601, 393, 1293, 616, 408, 1300, 631, 423, 1308, 646, 
       438, 1319, 661, 453, 1332, 676, 468}], 
      Line3DBox[{269, 483, 1128, 270, 497, 1137, 289, 1230, 512, 304, 1238, 
       527, 319, 1248, 542, 334, 1260, 557, 349, 1275, 572, 1171, 364, 587, 
       1183, 379, 602, 1193, 394, 1294, 617, 409, 1301, 632, 424, 1309, 647, 
       439, 1320, 662, 454, 1333, 677, 469}], 
      Line3DBox[{271, 484, 1129, 272, 498, 1138, 290, 513, 1146, 305, 1239, 
       528, 320, 1249, 543, 335, 1261, 558, 350, 1276, 573, 1172, 365, 588, 
       1184, 380, 603, 1194, 395, 618, 1202, 410, 633, 425, 1310, 648, 440, 
       1321, 663, 455, 1334, 678, 470}], 
      Line3DBox[{273, 485, 1130, 274, 499, 1139, 291, 514, 1147, 306, 529, 
       1153, 321, 1250, 544, 336, 1262, 559, 351, 1277, 574, 1173, 366, 589, 
       1185, 381, 604, 1195, 396, 619, 1203, 411, 634, 1209, 426, 1311, 649, 
       441, 1322, 664, 456, 1335, 679, 471}], 
      Line3DBox[{275, 486, 1131, 276, 500, 1140, 292, 515, 1148, 307, 530, 
       1154, 322, 545, 1158, 337, 1263, 560, 352, 1278, 575, 1174, 367, 590, 
       1186, 382, 605, 1196, 397, 620, 1204, 412, 635, 1210, 427, 650, 1214, 
       442, 665, 457, 1336, 680, 472}], 
      Line3DBox[{277, 682, 1338, 683, 278, 501, 1141, 293, 516, 1149, 308, 
       531, 1155, 323, 546, 1159, 338, 561, 1161, 353, 1279, 576, 1175, 368, 
       591, 1187, 383, 606, 1197, 398, 621, 1205, 413, 636, 1211, 428, 651, 
       1215, 443, 666, 1217, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1323, 444, 652, 1312, 429, 637, 1302, 414, 
       622, 1295, 399, 607, 1288, 384, 592, 1283, 369, 577, 1280, 354, 1162, 
       562, 1264, 339, 547, 1251, 324, 532, 1240, 309, 517, 1231, 294, 502, 
       1224, 279, 487, 1219, 250, 473, 1337, 681, 688}], 
      Line3DBox[{466, 674, 1330, 451, 659, 1317, 436, 644, 1306, 421, 629, 
       1298, 406, 614, 1291, 391, 599, 1285, 376, 584, 1281, 361, 569, 1272, 
       1271, 346, 554, 1257, 331, 539, 1245, 316, 524, 1235, 301, 509, 1227, 
       286, 494, 1221, 264, 480, 1218, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnF1IFFEUxwfNIKFCV/sutA+zzF0po5L8gEjBrKC3giiCJIVICIQekkwt
guihDHoRV0MoWiIhiEp7yFJCQ7CXVcN8iR5EITGViqhmR/EMnusemdmd1b8v
wp/L3XN+99z/zN45s8nnLp04H6VpWlaMpkX/+1+SkDm49+JIrhb4u/a69Ko7
v+dTbn72xJeZ+o3fo57/Ojfe/yiR6A179ivHNwxsJbq7u0+pHyjYRvTxIr+u
11zZRfQfG3zKeKR5ScdLdXAGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AGZ3AO
PWenrZfd8zttvNPylepp/j8z59eOFb7zzLJfNM/s+2had8clE/1I6qhSl86f
c9ZN9OIyr1I3z8P4wLT+fIjq3ypm9Qdtyh+k4w/eS6N6Y7NSX3J6PdEn0hM9
Kr2uKYroGd99St3kY1qj4WOc3npoI9EvVC5T6isvLyW668F9pV5K61NrMeqT
06V1K61DaV1ZVQ/S9ZWul5Q/OIMzOIMzOIMzOIMzOIMzOIMzOIMzONvHuYCe
+2k3jXM/cJ4fZ/C0lid8AH4LzuAMzuAMzuAMzuAMzuAMzuAMzuAc6ZxxXhSa
8zdp35dV80jnt+pzzTyn+oe58dI+Rq4eTP3MGtPPPB2PNF+7x4NnePcLOIMz
OIMzOIeGs933OdL1kq6jVetrVT1I60RaP9K6Wqj1A9+AP4MzOIMzOIMzODuN
M3iqeXJxFpavJXp1X5I+/2R+BtF722r18afepxDdu7lbyW3k+hqidz1L0ed/
GfuL5FX6sN+jitP8fOSo8XzEPH7MGM9xMJ9vlxjn29znunypRI8rb1Pmy8Vp
Hp9hjDefqycY5+rc8wUuL3Oc8UacXXd3Er3qwwtl/ByfseUriN73tVj5vCDY
OpxaLy6eYL+Xeee538159Rt5RbpfwZfgSzPzhS8tTl+Srpfd83C+kZJF76+y
6/zzqkNXOp2nejgwz6iP1tt4aqDeuOfmHH+uDrk+AS2JxtOZ3avrj9t30Hie
tuj6un2biJ78JFr0HH+uc0uOG6cPx9P44+8E4j8zSPf1eOZbXfeYOBQZHLj+
gWD7ELj9/tlYF85nuHi4Po2+GJrvyYFAvqt+bqf5vurQ9cNDW4he3jSo65V5
sbSuciqU8XN+xa0Lty+46wXHk7uecr7UMUl1rzugd7lMfPI+Kq/LnG8Hu9/d
DAfXHBy4PiuOg/k+pMa4D2lO3030wtW3lNykfT5V6ZTbeHuPrpfVU9/orG/V
9eL+OKK/uX3co8pXykfat8b5Ode/BJ8Pjc/b7ed2+zb8udaRPuw0X3Waf0ZK
32m4+kjDlW+4+pDtzsvu+K2K0y6ec32udH5unkjv53daP7l0vyw2n+T4wD/h
n1byDLd/ct+Lpb5q1Xs0Vvm53e/12H3dCdd7SeG6njrtPSyn3Vc4jc9C/V2j
SOEsvR+W5gX/D43/R0qcTrtOOc23ncYhUs7BnMbNqvev/wIBCpF+
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.16, 0.16}, {-1.5350392591410702`, 
   1.5350389845307473`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6177205827312617`*^9, 3.617797802744731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"0.08490356838515613`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.262631886804103`", " ", "qq"}], "+", 
     RowBox[{"1.4502338875909508`", " ", "ru"}], "-", 
     RowBox[{
      FractionBox["99", "200"], " ", 
      RowBox[{"(", 
       RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.2251169437954754`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6.3437477801304835`*^-18"}], "+", 
           RowBox[{"1.`", " ", "ru"}]}], ")"}]}], "+", 
        RowBox[{"0.3813159434020515`", " ", 
         RowBox[{"(", 
          RowBox[{"0.042451784192578085`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3813159434020515`", " ", "qq"}], "+", 
           RowBox[{"1.2251169437954754`", " ", "ru"}]}], ")"}]}]}], ")"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"qq", ",", 
      RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ru", ",", 
      RowBox[{"-", "0.16`"}], ",", "0.16`"}], "}"}]}], "]"}],
  HoldForm]], "Output",
 CellChangeTimes->{3.617720583441262*^9, 3.617797804204746*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllNewtonIterInfo", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617543646721884*^9, 3.617543669001989*^9}, {
  3.61754379710327*^9, 3.6175438018433175`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"huh", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "//", "Dimensions"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.617543808223381*^9, 3.6175438640749397`*^9}, {
  3.617543938765687*^9, 3.6175439394656935`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205834912615`*^9, 3.617797804454748*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"huh", "=", 
   RowBox[{"getAllFVals", "[", "res2$2$1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617544337890678*^9, 3.6175443467307663`*^9}, {
  3.6175444031613307`*^9, 3.6175444037713366`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "huh", "]"}]], "Input",
 CellChangeTimes->{{3.61754391610546*^9, 3.617543921335512*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "11", ",", "24", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205835312614`*^9, 3.6177978045147486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Norm", " ", "/@", " ", 
    RowBox[{"huh", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617544359790897*^9, 3.617544362200921*^9}, {
  3.617544449421793*^9, 3.617544452291822*^9}, {3.617544495513254*^9, 
  3.617544506473364*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     LineBox[{{1., 37.611884246245204`}, {2., 32.31548509037757}, {3., 
      5.862708750947969*^6}, {4., 1.465675809258381*^6}, {5., 
      366410.37643775373`}, {6., 91561.8311536904}, {7., 
      22727.048579896753`}, {8., 5195.825595533379}, {9., 655.898090414444}, {
      10., 9.652394706720582}, {11., 0.00578172379216631}}],
     FontFamily->"Arial"]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 11.}, {0, 3.664175044553892*^6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617720583841262*^9, 3.6177978050947547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lucaBasis", "=", 
   RowBox[{"GenerateBasis", "[", 
    RowBox[{"stateVar", ",", 
     RowBox[{"polyRange", "//.", "lucaSubs"}], ",", "initPower", ",", 
     "theShock", ",", 
     RowBox[{"theMean", "//.", "lucaSubs"}], ",", 
     RowBox[{
      RowBox[{"{", "sigma$u", "}"}], "//.", "lucaSubs"}], ",", 
     RowBox[{"integOrder", "//.", "lucaSubs"}], ",", "shockPower", ",", 
     "nonStateVar"}], "]"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["check initialization", "Section",
 CellChangeTimes->{{3.617648049920026*^9, 3.6176480578011045`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176463247456064`*^9, 3.617646327615635*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205839112616`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617645348426832*^9, 3.617645352746876*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox["\<\"JLink-Launch218\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox["\<\"JLink-Launch218\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Connect",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject["JLink-Launch218", 91, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6177205842012615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.6176460986193385`*^9, 3.617646102029372*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.617720584221262*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6175465828181276`*^9, 3.6175465891481905`*^9}, {
  3.617642190098014*^9, 3.6176421988801064`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReinstallJava", "[", "]"}]], "Input",
 CellChangeTimes->{{3.617647455953071*^9, 3.6176474604131155`*^9}, {
  3.61764758282434*^9, 3.6176475893044043`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                ScrollPosition->{0., 0.},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Links\\\\JLink\\\\JLink.jar\
\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-7b428f3f-564f-\
4daa-9473-f97408bd08d3\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Links\\JLink\\JLink.jar\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-7b428f3f-564f-4daa-9473-\
f97408bd08d3\"", 1304, 7],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.617720584462262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"duh", "=", 
  InterpretationBox[
   RowBox[{
    TagBox["LinkObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PanelBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquarePlusIconMedium"],
             ImageSizeCache->{12., {0., 12.}}],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = True),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               StyleBox[
                
                PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 300}, Automatic},
                 ScrollPosition->{0., 0.},
                 StripOnInput->True],
                LineBreakWithin->False],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
         {
          PaneBox[
           ButtonBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "SquareMinusIconMedium"]],
            Appearance->None,
            ButtonFunction:>(Typeset`open$$ = False),
            Evaluator->Automatic,
            Method->"Preemptive"],
           Alignment->{Center, Center},
           
           ImageSize->
            Dynamic[{
             Automatic, 
              3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          GraphicsBox[
           {Thickness[0.038461538461538464`], 
            {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
             FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
              3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
              25.499999999999996`, 2.5}, {25.499999999999996`, 
              1.3953100000000003`}, {24.604699999999998`, 
              0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
              0.49999999999999994`}, {1.3953100000000003`, 
              0.49999999999999994`}, {0.49999999999999994`, 
              1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
              0.49999999999999994`, 23.5}, {0.49999999999999994`, 
              24.604699999999998`}, {1.3953100000000003`, 
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
              25.499999999999996`}, {24.604699999999998`, 
              25.499999999999996`}, {25.499999999999996`, 
              24.604699999999998`}, {25.499999999999996`, 23.5}, {
              25.499999999999996`, 2.5}}}]}, 
            {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
              19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
              20.021499999999996`}, {6.930469999999999, 
              20.021499999999996`}, {6.930469999999999, 
              18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832, 
              16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
              11.079700000000003`}, {9.46445, 12.933999999999997`}, {
              18.917199999999998`, 12.933999999999997`}, {18.917199999999998`,
               14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
              13.8391}}}], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
              "]], 
             FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
              4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
              5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
              8.29796625}, {14.163129999999999`, 8.29796625}, {
              14.163129999999999`, 4.337966249999999}}}]}},
           AspectRatio->1,
           Axes->False,
           Background->GrayLevel[0.93],
           Frame->True,
           FrameStyle->Directive[
             Thickness[Tiny], 
             GrayLevel[0.7]],
           FrameTicks->None,
           ImageSize->{Automatic, 
             Dynamic[
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
            {
             RowBox[{
              TagBox["\<\"Name: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 500}, Automatic},
                StripOnInput->True],
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link mode: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["Listen",
               "SummaryItem"]}]},
            {
             RowBox[{
              TagBox["\<\"Link protocol: \"\>",
               "SummaryItemAnnotation"], "\[InvisibleSpace]", 
              TagBox["\<\"SharedMemory\"\>",
               "SummaryItem"]}]}
           },
           AutoDelete->False,
           
           BaseStyle->{
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
        },
        AutoDelete->False,
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Rows" -> {{Top}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open$$],
       ImageSize->Automatic],
      BaselinePosition->Baseline],
     DynamicModuleValues:>{}], "]"}],
   LinkObject[
   "\"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\Java\\Windows-x86-64\\bin\\javaw\" \
-classpath \"C:\\Program Files\\Wolfram \
Research\\Mathematica\\10.0\\SystemFiles\\lib\\JLink.jar\" \
-Dcom.wolfram.jlink.libdir=\"C:\\Program Files\\Wolfram Research\\Mathematica\
\\10.0\\SystemFiles\\os\\win64\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\"C:\\Users\\m1gsa00\\AppData\\Local\\Temp\\m-3d3ffcbf-b63e-4bb7-97bb-\
12c7d6aa40b7\"", 147, 7],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.617647720216714*^9, 3.6176477215267267`*^9}}],

Cell[BoxData[
 RowBox[{"LinkObject", "[", 
  RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}]], "Output",
 CellChangeTimes->{3.617720584512262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", "duh", "]"}]], "Input",
 CellChangeTimes->{{3.6176477385068965`*^9, 3.617647746436976*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinkObject", "::", "linkn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\
\"C:\\\\\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Research\\\\\\\\Math\\\" \
\[Ellipsis] \\\".wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\[NoBreak] in \
\[NoBreak]\\!\\(LinkConnectedQ[\\(\\(LinkObject[\\(\\(\\(\\(\\\"\\\\\\\"C:\\\\\
\\\\Program Files\\\\\\\\Wolfram \
Research\\\\\\\\Mathematica\\\\\\\\10.0\\\\\\\\SystemFiles\\\\\\\\Java\\\\\\\\\
Windows-x86-64\\\\\\\\bin\\\\\\\\javaw\\\\\\\" -classpath \
\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Wolfram Resea\\\" \[Ellipsis] \
\\\".jlink.JLinkSystemClassLoader com.wolfram.jlink.Install -init \
\\\\\\\"C:\\\\\\\\Users\\\\\\\\m1gsa00\\\\\\\\AppData\\\\\\\\Local\\\\\\\\\
Temp\\\\\\\\m-3d3ffcbf-b63e-4bb7-97bb-12c7d6aa40b7\\\\\\\"\\\"\\)\\), 147, \
7\\)\\)]\\)\\)]\\)\[NoBreak] has an invalid LinkObject number; the link may \
be closed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/LinkObject/linkn\\\", ButtonNote -> \
\\\"LinkObject::linkn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6177205849022617`*^9}],

Cell[BoxData[
 RowBox[{"LinkConnectedQ", "[", 
  RowBox[{"LinkObject", "[", 
   RowBox[{"\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\Java\\\\Windows-x86-64\\\\\
bin\\\\javaw\\\" -classpath \\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\lib\\\\JLink.jar\\\" \
-Dcom.wolfram.jlink.libdir=\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\10.0\\\\SystemFiles\\\\os\\\\win64\\\" -Xmx256m  \
-Djava.system.class.loader=com.wolfram.jlink.JLinkSystemClassLoader \
com.wolfram.jlink.Install -init \
\\\"C:\\\\Users\\\\m1gsa00\\\\AppData\\\\Local\\\\Temp\\\\m-3d3ffcbf-b63e-\
4bb7-97bb-12c7d6aa40b7\\\"\"\>", ",", "147", ",", "7"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6177205849822617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Link*"}]], "Input",
 CellChangeTimes->{{3.617647704275554*^9, 3.6176477093656054`*^9}}],

Cell[BoxData[{
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["System`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["System`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["ControllerLinking",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"ControllerLinking", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkFunction",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFunction", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkProtocol",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkProtocol", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ThisLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"ThisLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["GraphLinkEfficiency",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"GraphLinkEfficiency", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkHost",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkHost", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRankCentrality",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkRankCentrality", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$CurrentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$CurrentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkActivate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkActivate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkInterrupt",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkInterrupt", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkRead",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkRead", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$Linked",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$Linked", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkClose",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkClose", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkLaunch",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkLaunch", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadHeld", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$LinkSupported",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$LinkSupported", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnect",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkConnect", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkMode",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkMode", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkReadyQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkReadyQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$ParentLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"$ParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"LinkConnectedQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkObject",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkObject", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Links",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"Links", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["$SetParentLink",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"$SetParentLink", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["LinkCreate",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkCreate", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOpen",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOpen", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkService",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkService", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkError",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkError", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkOptions",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkOptions", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWrite",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWrite", "System`"}},
          ButtonNote->"System`"], ""},
        {
         ButtonBox["LinkFlush",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkFlush", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkPatterns",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkPatterns", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinkWriteHeld",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"LinkWriteHeld", "System`"}},
          ButtonNote->"System`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]], "\n", 
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["JLink`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["JLink`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["CreateExtraLinks",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3617706185-7034399", {"CreateExtraLinks", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["FrontEndLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"FrontEndLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaLink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaLink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["JavaUILink",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"JavaUILink", "JLink`"}},
          ButtonNote->"JLink`"], 
         ButtonBox["SharingLinks",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3617706185-7034399", {"SharingLinks", "JLink`"}},
          ButtonNote->"JLink`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.19]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]}], "Print", "InfoCell",
 CellChangeTimes->{3.617720585162262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"urlClass", "=", 
  RowBox[{"LoadJavaClass", "[", "\"\<java.net.URL\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176473903024144`*^9, 3.6176474065625772`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"JavaClass", "[", 
   RowBox[{"java", ".", "net", ".", "URL"}], ",", "<>", "]"}],
  JLink`JavaClass["java.net.URL", 30, {
    JLink`JVM["vm3"]}, 1, "java`net`URL`", False, True]]], "Output",
 CellChangeTimes->{3.617720585472262*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "===", "\"\<Windows\>\""}], ",", 
    RowBox[{
    "SetDirectory", "[", 
     "\"\<g:/git/ProjectionMethodTools/ProjectionMethodToolsJava/code\>\"", 
     "]"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<prepPackages.mth\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61764493105157*^9, 3.6176449762320213`*^9}, {
   3.6176461252696047`*^9, 3.6176461327996798`*^9}, {3.6176461684300365`*^9, 
   3.6176461696100483`*^9}, 3.6176465507588663`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{"modEqns", ",", "tryMat", ",", "lucaBasis"}], "]"}]], "Input",
 CellChangeTimes->{{3.617721060199997*^9, 3.6177210880602756`*^9}}],

Cell[BoxData[
 RowBox[{"modelDiags", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"JavaObject", "[", "lucaMod", "]"}], "\[RightGuillemet]"}],
    JLink`Objects`vm3`JavaObject23866079067504641], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.292289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.5`", ",", "0", ",", "0", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0.299289`", ",", "0", ",", "0", ",", "0",
        ",", "0"}], "}"}]}], "}"}], ",", 
   "JLink`Objects`vm2`JavaObject9714448113598465"}], "]"}]], "Output",
 CellChangeTimes->{3.617721089840293*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], ";", 
  RowBox[{"InstallJava", "[", "]"}], ";", 
  RowBox[{"Needs", "[", "\"\<ProjectionInterface`\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6176483553441143`*^9, 3.617648419509763*^9}, 
   3.61764845348411*^9}],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 CellChangeTimes->{{3.617648519376775*^9, 3.6176485222268033`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ProjectionInterface`\"\>", ",", "\<\"JLink`\"\>", 
   ",", "\<\"TemplatingLoader`\"\>", ",", "\<\"PacletManager`\"\>", 
   ",", "\<\"System`\"\>", ",", "\<\"Global`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.6177205856922617`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1628, 891},
WindowMargins->{{Automatic, -1710}, {45, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile"->""},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 33, 0, 99, "Title"],
Cell[616, 24, 102, 1, 41, "Author"],
Cell[CellGroupData[{
Cell[743, 29, 74, 0, 72, "Section"],
Cell[CellGroupData[{
Cell[842, 33, 67, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[934, 37, 146, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1105, 44, 1879, 50, 101, "Input"],
Cell[2987, 96, 577, 9, 23, "Print"]
}, Open  ]],
Cell[3579, 108, 481, 9, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4097, 122, 84, 1, 35, "Subsubsection"],
Cell[4184, 125, 1841, 48, 101, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6062, 178, 149, 3, 35, "Subsubsection"],
Cell[6214, 183, 977, 28, 81, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7240, 217, 129, 1, 37, "Subsection"],
Cell[7372, 220, 171, 2, 30, "Text",
 InitializationCell->True],
Cell[7546, 224, 10241, 291, 281, "Input"],
Cell[17790, 517, 319, 8, 40, "Input"],
Cell[18112, 527, 355, 9, 40, "Input"],
Cell[CellGroupData[{
Cell[18492, 540, 1197, 35, 40, "Input"],
Cell[19692, 577, 1802, 51, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21531, 633, 151, 3, 40, "Input"],
Cell[21685, 638, 666, 15, 40, "Output"]
}, Open  ]],
Cell[22366, 656, 1703, 42, 141, "Input"],
Cell[CellGroupData[{
Cell[24094, 702, 127, 2, 40, "Input"],
Cell[24224, 706, 12510, 263, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36771, 974, 365, 6, 40, "Input"],
Cell[37139, 982, 917, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38093, 1010, 2387, 69, 81, "Input"],
Cell[40483, 1081, 910, 21, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41442, 1108, 55, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[41522, 1112, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[41670, 1119, 4565, 117, 261, "Input"],
Cell[46238, 1238, 734, 16, 40, "Output"]
}, Open  ]],
Cell[46987, 1257, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[47301, 1267, 232, 5, 40, "Input"],
Cell[47536, 1274, 398, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47971, 1286, 184, 4, 40, "Input"],
Cell[48158, 1292, 117859, 3040, 213, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166078, 4339, 163, 2, 37, "Subsection"],
Cell[166244, 4343, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[166574, 4352, 345, 8, 40, "Input"],
Cell[166922, 4362, 1109, 25, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168068, 4392, 486, 10, 40, InheritFromParent],
Cell[168557, 4404, 1048, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169642, 4433, 256, 6, 40, "Input"],
Cell[169901, 4441, 553, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170491, 4458, 241, 7, 40, "Input"],
Cell[170735, 4467, 981, 26, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171753, 4498, 135, 2, 40, "Input"],
Cell[171891, 4502, 273, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172201, 4511, 203, 5, 40, "Input"],
Cell[172407, 4518, 614, 14, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173058, 4537, 98, 1, 40, "Input"],
Cell[173159, 4540, 590, 13, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173786, 4558, 184, 3, 40, "Input"],
Cell[173973, 4563, 1440, 44, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175450, 4612, 574, 9, 40, "Input"],
Cell[176027, 4623, 1617, 41, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177681, 4669, 1533, 37, 40, "Input"],
Cell[179217, 4708, 714, 18, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179968, 4731, 839, 23, 40, InheritFromParent],
Cell[180810, 4756, 737, 19, 40, "Output"]
}, Open  ]],
Cell[181562, 4778, 1594, 38, 40, "Input"],
Cell[183159, 4818, 1936, 47, 101, "Input"],
Cell[CellGroupData[{
Cell[185120, 4869, 3080, 81, 101, "Input"],
Cell[188203, 4952, 1091, 23, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189331, 4980, 123, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[189479, 4987, 4621, 118, 261, "Input"],
Cell[194103, 5107, 583, 10, 40, "Output"]
}, Open  ]],
Cell[194701, 5120, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[195015, 5130, 232, 5, 40, "Input"],
Cell[195250, 5137, 447, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195734, 5150, 184, 4, 40, "Input"],
Cell[195921, 5156, 12523, 321, 54, "Output"]
}, Open  ]],
Cell[208459, 5480, 702, 15, 40, "Input"],
Cell[CellGroupData[{
Cell[209186, 5499, 102, 1, 40, "Input"],
Cell[209291, 5502, 1121, 17, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210449, 5524, 140, 2, 40, "Input"],
Cell[210592, 5528, 1036, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211665, 5549, 184, 3, 40, "Input"],
Cell[211852, 5554, 2302, 49, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214191, 5608, 385, 8, 40, "Input"],
Cell[214579, 5618, 1734, 30, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216350, 5653, 281, 7, 61, "Input"],
Cell[216634, 5662, 1595, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218266, 5695, 130, 2, 40, "Input"],
Cell[218399, 5699, 2197, 42, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220633, 5746, 442, 10, 40, "Input"],
Cell[221078, 5758, 1846, 35, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222961, 5798, 515, 11, 40, "Input"],
Cell[223479, 5811, 1879, 36, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225395, 5852, 305, 6, 40, "Input"],
Cell[225703, 5860, 1123, 22, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226863, 5887, 454, 11, 40, "Input"],
Cell[227320, 5900, 3606, 66, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230963, 5971, 206, 4, 40, "Input"],
Cell[231172, 5977, 1171, 24, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232416, 6009, 113, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[232554, 6014, 108, 1, 35, "Subsubsection"],
Cell[232665, 6017, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[232781, 6022, 586, 11, 40, "Input"],
Cell[233370, 6035, 1197, 24, 40, "Output"]
}, Open  ]],
Cell[234582, 6062, 533, 11, 40, "Input"],
Cell[235118, 6075, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[235229, 6080, 616, 12, 40, "Input"],
Cell[235848, 6094, 1248, 24, 40, "Output"]
}, Open  ]],
Cell[237111, 6121, 586, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[237722, 6137, 773, 21, 40, "Input"],
Cell[238498, 6160, 1285, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239820, 6189, 612, 17, 40, "Input"],
Cell[240435, 6208, 389, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240861, 6221, 348, 9, 40, InheritFromParent],
Cell[241212, 6232, 347, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241596, 6243, 509, 9, 40, "Input"],
Cell[242108, 6254, 1218, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243363, 6283, 183, 3, 40, "Input"],
Cell[243549, 6288, 355, 5, 40, "Output"]
}, Open  ]],
Cell[243919, 6296, 563, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[244507, 6311, 516, 9, 40, "Input"],
Cell[245026, 6322, 1201, 24, 40, "Output"]
}, Open  ]],
Cell[246242, 6349, 560, 11, 40, "Input"],
Cell[246805, 6362, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[247018, 6369, 669, 13, 40, "Input"],
Cell[247690, 6384, 1223, 24, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248950, 6413, 631, 18, 40, "Input"],
Cell[249584, 6433, 853, 19, 40, "Output"]
}, Open  ]],
Cell[250452, 6455, 600, 12, 40, "Input"],
Cell[CellGroupData[{
Cell[251077, 6471, 537, 10, 40, "Input"],
Cell[251617, 6483, 1190, 24, 40, "Output"]
}, Open  ]],
Cell[252822, 6510, 579, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[253426, 6525, 537, 10, 40, "Input"],
Cell[253966, 6537, 1186, 24, 40, "Output"]
}, Open  ]],
Cell[255167, 6564, 577, 11, 40, "Input"],
Cell[255747, 6577, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[255858, 6582, 514, 9, 40, "Input"],
Cell[256375, 6593, 971, 20, 40, "Output"]
}, Open  ]],
Cell[257361, 6616, 566, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[257952, 6631, 514, 9, 40, "Input"],
Cell[258469, 6642, 972, 20, 40, "Output"]
}, Open  ]],
Cell[259456, 6665, 558, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260063, 6682, 115, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[260203, 6687, 4543, 117, 261, "Input"],
Cell[264749, 6806, 261, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265047, 6816, 4372, 114, 281, "Input"],
Cell[269422, 6932, 528, 15, 40, "Output"],
Cell[269953, 6949, 398, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270388, 6964, 120, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[270533, 6971, 1009, 27, 81, "Input"],
Cell[271545, 7000, 400, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271982, 7015, 1055, 28, 81, "Input"],
Cell[273040, 7045, 308, 9, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273397, 7060, 72, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[273494, 7064, 139, 1, 35, "Subsubsection"],
Cell[273636, 7067, 292, 8, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273965, 7080, 47, 0, 35, "Subsubsection"],
Cell[274015, 7082, 85, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[274125, 7088, 122, 3, 40, "Input"],
Cell[274250, 7093, 125, 2, 40, "Output"]
}, Open  ]],
Cell[274390, 7098, 97, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[274512, 7104, 197, 4, 61, "Input"],
Cell[274712, 7110, 122, 2, 40, "Output"]
}, Open  ]],
Cell[274849, 7115, 264, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[275138, 7124, 309, 6, 61, "Input"],
Cell[275450, 7132, 227, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275726, 7144, 121, 1, 35, "Subsubsection"],
Cell[275850, 7147, 247, 5, 30, "Text"],
Cell[276100, 7154, 218, 5, 40, "Input"],
Cell[276321, 7161, 107, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[276453, 7166, 164, 3, 40, "Input"],
Cell[276620, 7171, 442, 14, 40, "Output"]
}, Open  ]],
Cell[277077, 7188, 162, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[277264, 7194, 213, 4, 40, "Input"],
Cell[277480, 7200, 174, 4, 40, "Output"]
}, Open  ]],
Cell[277669, 7207, 109, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[277803, 7212, 348, 8, 40, "Input"],
Cell[278154, 7222, 466, 14, 40, "Output"]
}, Open  ]],
Cell[278635, 7239, 188, 2, 25, "Item"],
Cell[CellGroupData[{
Cell[278848, 7245, 561, 14, 40, "Input"],
Cell[279412, 7261, 729, 19, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280178, 7285, 139, 3, 40, "Input"],
Cell[280320, 7290, 406, 10, 40, "Output"]
}, Open  ]],
Cell[280741, 7303, 118, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[280884, 7308, 176, 3, 40, "Input"],
Cell[281063, 7313, 212, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281312, 7323, 149, 2, 40, "Input"],
Cell[281464, 7327, 674, 15, 40, "Output"]
}, Open  ]],
Cell[282153, 7345, 117, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[282295, 7350, 178, 3, 40, "Input"],
Cell[282476, 7355, 1459, 38, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283972, 7398, 389, 9, 40, "Input"],
Cell[284364, 7409, 1301, 25, 61, "Output"]
}, Open  ]],
Cell[285680, 7437, 153, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[285858, 7444, 402, 6, 40, "Input"],
Cell[286263, 7452, 2726, 59, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289026, 7516, 352, 8, 40, "Input"],
Cell[289381, 7526, 1022, 20, 61, "Output"]
}, Open  ]],
Cell[290418, 7549, 102, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[290545, 7554, 249, 5, 40, "Input"],
Cell[290797, 7561, 962, 21, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291796, 7587, 299, 7, 40, "Input"],
Cell[292098, 7596, 1280, 23, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293427, 7625, 108, 1, 35, "Subsubsection"],
Cell[293538, 7628, 91, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[293654, 7633, 532, 10, 40, "Input"],
Cell[294189, 7645, 649, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294875, 7666, 489, 10, 40, "Input"],
Cell[295367, 7678, 2988, 60, 101, "Output"]
}, Open  ]],
Cell[298370, 7741, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[298481, 7746, 485, 10, 40, "Input"],
Cell[298969, 7758, 650, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299656, 7779, 485, 10, 40, "Input"],
Cell[300144, 7791, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303165, 7856, 462, 9, 40, "Input"],
Cell[303630, 7867, 608, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304275, 7888, 464, 9, 40, "Input"],
Cell[304742, 7899, 4270, 82, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309049, 7986, 464, 9, 40, "Input"],
Cell[309516, 7997, 566, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310119, 8014, 462, 9, 40, "Input"],
Cell[310584, 8025, 6168, 113, 241, "Output"]
}, Open  ]],
Cell[316767, 8141, 188, 3, 25, "Item"],
Cell[CellGroupData[{
Cell[316980, 8148, 531, 10, 40, "Input"],
Cell[317514, 8160, 648, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318199, 8181, 525, 10, 40, "Input"],
Cell[318727, 8193, 2984, 60, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321748, 8258, 507, 9, 40, "Input"],
Cell[322258, 8269, 587, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322882, 8290, 507, 9, 40, "Input"],
Cell[323392, 8301, 4285, 87, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327714, 8393, 507, 9, 40, "Input"],
Cell[328224, 8404, 562, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328823, 8421, 505, 9, 40, "Input"],
Cell[329331, 8432, 6061, 114, 221, "Output"]
}, Open  ]],
Cell[335407, 8549, 86, 1, 25, "Item"],
Cell[CellGroupData[{
Cell[335518, 8554, 490, 9, 40, "Input"],
Cell[336011, 8565, 610, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336658, 8586, 490, 9, 40, "Input"],
Cell[337151, 8597, 4276, 84, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341464, 8686, 490, 9, 40, "Input"],
Cell[341957, 8697, 570, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342564, 8714, 486, 9, 40, "Input"],
Cell[343053, 8725, 6751, 125, 261, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349853, 8856, 121, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[349999, 8861, 674, 19, 81, "Input"],
Cell[350676, 8882, 1415, 48, 70, "Output"],
Cell[352094, 8932, 13113, 264, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365268, 9203, 99, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[365392, 9208, 517, 13, 40, "Input"],
Cell[365912, 9223, 239, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366188, 9235, 378, 7, 40, "Input"],
Cell[CellGroupData[{
Cell[366591, 9246, 136, 1, 23, "Print"],
Cell[366730, 9249, 136, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[366893, 9254, 452, 10, 40, "Input"],
Cell[367348, 9266, 933, 26, 40, "Input"],
Cell[CellGroupData[{
Cell[368306, 9296, 228, 6, 40, "Input"],
Cell[368537, 9304, 194, 5, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368768, 9314, 471, 10, 40, "Input"],
Cell[369242, 9326, 36275, 592, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405554, 9923, 1088, 28, 112, "Input"],
Cell[406645, 9953, 1153, 29, 55, "Output"]
}, Open  ]],
Cell[407813, 9985, 240, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408078, 9994, 408, 12, 61, "Input"],
Cell[408489, 10008, 151, 3, 40, "Output"]
}, Open  ]],
Cell[408655, 10014, 236, 5, 40, "Input"],
Cell[CellGroupData[{
Cell[408916, 10023, 130, 2, 40, "Input"],
Cell[409049, 10027, 163, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409249, 10035, 382, 9, 40, "Input"],
Cell[409634, 10046, 1263, 32, 235, "Output"]
}, Open  ]],
Cell[410912, 10081, 460, 11, 40, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411421, 10098, 107, 1, 72, "Section"],
Cell[CellGroupData[{
Cell[411553, 10103, 106, 1, 40, "Input"],
Cell[411662, 10106, 278, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411977, 10116, 125, 2, 40, "Input"],
Cell[412105, 10120, 12237, 259, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424379, 10384, 106, 1, 40, "Input"],
Cell[424488, 10387, 276, 5, 40, "Output"]
}, Open  ]],
Cell[424779, 10395, 206, 3, 40, "Input"],
Cell[CellGroupData[{
Cell[425010, 10402, 179, 3, 40, "Input"],
Cell[425192, 10407, 13652, 286, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438881, 10698, 14347, 294, 82, "Input"],
Cell[453231, 10994, 749, 12, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454017, 11011, 137, 2, 40, "Input"],
Cell[454157, 11015, 1616, 28, 73, "Message"],
Cell[455776, 11045, 796, 14, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456609, 11064, 117, 2, 40, "Input"],
Cell[456729, 11068, 8691, 217, 309, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465457, 11290, 185, 3, 40, "Input"],
Cell[465645, 11295, 276, 6, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465970, 11307, 33, 0, 72, "Section"],
Cell[466006, 11309, 503, 12, 40, "Input",
 InitializationCell->True],
Cell[466512, 11323, 305, 5, 40, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[466842, 11332, 183, 3, 40, "Input"],
Cell[467028, 11337, 824, 22, 40, "Output"]
}, Open  ]],
Cell[467867, 11362, 289, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[468181, 11372, 106, 1, 40, "Input"],
Cell[468290, 11375, 278, 5, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

Needs["simpleRBCModel`"]
Needs["AMASeriesRepresentation`"]
Get["AMAPaperCalcs.mth"]

latexSubs={ProtectedSymbols`epsVar$1->Subscript[epsilon,t],
ProtectedSymbols`xxxtm1Var$3->Subscript[theta,t-1],
ProtectedSymbols`xxxtm1Var$2->Subscript[k,t-1],
ProtectedSymbols`xxxtm1Var$1->Subscript[c,t-1],
ProtectedSymbols`zzzVar$1->Subscript[z,1t],
ProtectedSymbols`zzzVar$2->Subscript[z,2t],
ProtectedSymbols`zzzVar$3->Subscript[z,3t],
ProtectedSymbols`zzzVar$4->Subscript[z,4t]
};


(*00*)
(*00*)

xtExt00=Private`computeNextXt[{Private`bmatExt,Private`phimatExt,Private`fmatExt,Private`psiepsExt,Private`psicExt,Private`psizExt}]//N//Expand//Simplify
TeXForm[MatrixForm[xt00/.latexSubs]];

xtp1Ext00=Private`computeNextXtp1[{Private`bmatExt,Private`phimatExt,Private`fmatExt,Private`psiepsExt,Private`psicExt,Private`psizExt}]//N//Expand//Simplify
TeXForm[MatrixForm[xtp100/.latexSubs]];

solnSubsExt00=
Private`makeConstraintFindRootFunc[Private`hFuncExt,{Private`bmatExt//N,Private`phimatExt//N,Private`fmatExt//N,Private`psiepsExt//N,Private`psicExt//N,Private`psizExt//N},{}];

solnFuncsExt00=Private`subsFuncToVecFunc[solnSubsExt00];

Export["cFuncExt00Lin.pdf",oneVsLin=Plot3D[{solnFuncsExt00[{0,ProtectedSymbols`xxxtm1Var$2,0,ProtectedSymbols`xxxtm1Var$4,0}][[1]],xtExt00[[1,1]]/.{ProtectedSymbols`zzzVar$4->0,ProtectedSymbols`zzzVar$3->0,ProtectedSymbols`zzzVar$2->0,ProtectedSymbols`zzzVar$1->0,ProtectedSymbols`epsVar$1->0}},{ProtectedSymbols`xxxtm1Var$2,.0,1.0},{ProtectedSymbols`xxxtm1Var$4,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0]]]


Export["cFuncExt00Exact.pdf",oneVsExac=Plot3D[{solnFuncsExt00[{0,ProtectedSymbols`xxxtm1Var$2,0,ProtectedSymbols`xxxtm1Var$4,0}][[1]],condExp[0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$4,0,1][[4]]},{ProtectedSymbols`xxxtm1Var$2,.0,2.0},{ProtectedSymbols`xxxtm1Var$4,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0],PlotRange->{0,1.5}]]










(*


aGSpec={1,{4,.1,1.0},{3,.95,1.06},{3,-.03,.03}};
solnFuncExt00Interp=Private`makeInterpFunc[solnFuncsExt00,{1,3},aGSpec]

solnFuncExt00PF=Private`makeInterpFuncPF[solnFuncsExt00,{1,3},aGSpec,1]


solnFuncExt00RE=Private`makeInterpFuncRE[solnFuncsExt00,{1,3},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]


solnFunc00Interp=Private`makeInterpFunc[solnFuncs00,{1},aGSpec={1,{4,.1,1.0},{3,.95,1.06},{3,-.03,.03}}]

solnFunc00PF=Private`makeInterpFuncPF[solnFuncs00,{1},aGSpec,1]
(*solnFunc00RE=Private`makeInterpFuncRE[solnFuncs00,{1},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]
*)


(xt01=Private`computeNextXt[{Private`bmat,Private`phimat,Private`fmat,Private`psieps,Private`psic,Private`psiz},solnFunc00PF[[6+Range[3]]],{{cc},{kk},{tt}},{1}]//N//Expand//Simplify)/.latexSubs
(xtp101=Private`computeNextXtp1[{Private`bmat,Private`phimat,Private`fmat,Private`psieps,Private`psic,Private`psiz},solnFunc00PF[[6+Range[3]]],{{cc},{kk},{tt}},{1}]//N//Expand//Simplify)/.latexSubs



(*
Export["cFunc00PF.pdf",cf00=Plot3D[solnFunc00PF[[1]][kk,tt],{kk,.01,2},{tt,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0]]]

agedSolnFunc00PF=Private`ageZFuncsPF[solnFunc00Interp,solnFunc00PF,1]

nextZsPF00=Private`prepNextZZksPF[solnFunc00PF[[{2,3}]],solnFunc00Interp[[3+Range[3]]],{},1]


(*01*)
(*
solnFunc00RE=Private`makeInterpFuncRE[solnFuncs00,{1},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]

Private`subXtXtp1[Private`hFunc,{Private`bmat,Private`phimat,Private`fmat,Private`psieps,Private`psic,Private`psiz},solnFunc00PF[[6+Range[3]]],{{.1},{.1},{.9}},{1}]

*)
solnSubsPF01=
Private`makeConstraintFindRootFunc[Private`hFunc,{Private`bmat//N,Private`phimat//N,Private`fmat//N,Private`psieps//N,Private`psic//N,Private`psiz//N},solnFunc00PF[[6+Range[3]]],{},xG={{.1},{.1},{1}},{1}]

solnFuncsPF01=Private`subsFuncToVecFunc[solnSubsPF01]

solnFunc01Interp=Private`makeInterpFunc[solnFuncsPF01,{1},aGSpec]

solnFunc01PF=Private`makeInterpFuncPF[solnFuncsPF01,{1},aGSpec,1]
solnFunc01RE=Private`makeInterpFuncRE[solnFuncsPF01,{1},aGSpec,{NormalDistribution[0,sigma/.Private`paramSubs]}]

nextZsPF01=Private`prepNextZZks[solnFunc01Interp[[{2,3}]],solnFunc01Interp[[3+Range[3]]],{}]

(*02*)

solnSubsPF02=
Private`makeConstraintFindRootFunc[Private`hFunc,{Private`bmat//N,Private`phimat//N,Private`fmat//N,Private`psieps//N,Private`psic//N,Private`psiz//N},nextZsPF01,{},xG,{1}]

solnFuncsPF02=Private`subsFuncToVecFunc[solnSubsPF02]

solnFunc02Interp=Private`makeInterpFunc[solnFuncsPF02,{1},aGSpec]

solnFunc02PF=Private`makeInterpFuncPF[solnFuncsPF02,{1},aGSpec,1]

nextZsPF02=Private`prepNextZZks[solnFunc02Interp[[{2,3}]],solnFunc02Interp[[3+Range[3]]],{}]





latexSubs={ProtectedSymbols`epsVar$1->Subscript[epsilon,t],
ProtectedSymbols`zzzVar$1->Subscript[z,1t],ProtectedSymbols`zzzVar$2->Subscript[z,2t],ProtectedSymbols`zzzVar$3->Subscript[z,3t],ProtectedSymbols`zzzVar$4->Subscript[z,4t],
ProtectedSymbols`xxxtm1Var$3->Subscript[theta,t-1],ProtectedSymbols`xxxtm1Var$2->Subscript[k,t-1],ProtectedSymbols`xxxtm1Var$3->Subscript[c,t-1]}

xt00=Private`computeNextXt[{Private`bmat,Private`phimat,Private`fmat,Private`psieps,Private`psic,Private`psiz}]//N//Expand//Simplify
TeXForm[MatrixForm[xt00/.latexSubs]]

xtp100=Private`computeNextXtp1[{Private`bmat,Private`phimat,Private`fmat,Private`psieps,Private`psic,Private`psiz}]//N//Expand//Simplify
TeXForm[MatrixForm[xtp100/.latexSubs]]
Model.
subbed00=
Private`subXtXtp1[Private`hFunc,{Private`bmat,Private`phimat,Private`fmat,Private`psieps,Private`psic,Private`psiz}]//N//Expand//Simplify
TeXForm[MatrixForm[subbed00/.latexSubs]]



solnSubs00=
Private`makeConstraintFindRootFunc[Private`hFunc,{Private`bmat//N,Private`phimat//N,Private`fmat//N,Private`psieps//N,Private`psic//N,Private`psiz//N},{}]

solnFuncs00=Private`subsFuncToVecFunc[solnSubs00]

(*
Export["cFunc00.pdf",cf00=Plot3D[solnFuncs00[{0,kk,tt,0}][[1]],{kk,.0,2.0},{tt,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0]]]
i

Export["cFunc00Lin.pdf",oneVsLin=Plot3D[{solnFuncs00[{0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$3,0}][[1]],xt00[[1,1]]/.{ProtectedSymbols`zzzVar$3->0,ProtectedSymbols`zzzVar$2->0,ProtectedSymbols`zzzVar$1->0,ProtectedSymbols`epsVar$1->0}},{ProtectedSymbols`xxxtm1Var$2,.0,2.0},{ProtectedSymbols`xxxtm1Var$3,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0]]]


Export["cFunc00Exact.pdf",oneVsExac=Plot3D[{solnFuncs00[{0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$3,0}][[1]],condExp[0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$3,0,1][[4]]},{ProtectedSymbols`xxxtm1Var$2,.0,2.0},{ProtectedSymbols`xxxtm1Var$3,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0],PlotRange->{0,1.5}]]

solnFunc00Interp=Private`makeInterpFunc[solnFuncs00,{1},{1,{4,.01,2.0},{3,.9,1.1},{3,-.03,.03}}]


solnFunc00PF=Private`makeInterpFuncPF[solnFuncs00,{1},{1,{4,.01,2.0},{3,.9,1.1}},1]



nextZsPF00=Private`prepNextZZks[solnFunc00Interp[[{2,3}]],solnFunc00Interp[[3+Range[3]]],{}]

solnSubsPF01=
Private`makeConstraintFindRootFunc[Private`hFunc,{Private`bmat//N,Private`phimat//N,Private`fmat//N,Private`psieps//N,Private`psic//N,Private`psiz//N},nextZsPF00]



solnFuncsPF01=Private`subsFuncToVecFunc[solnSubsPF01]





Export["cFunc00.pdf",cf00=Plot3D[solnFuncs00[{0,kk,tt,0}][[1]],{kk,.0,2.0},{tt,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0]]]


Plot3D[{solnFunc00PF[[1]] @@{0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$3},condExp[0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$3,0,1][[4]]},{ProtectedSymbols`xxxtm1Var$2,.0,2.0},{ProtectedSymbols`xxxtm1Var$3,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0],PlotRange->{0,1.5}]

solnFunc00RE=Private`makeInterpFuncRE[solnFuncs00,{1},{1,{4,.01,2.0},{3,.9,1.1},{3,-2*sigma,2*sigma}}/.Private`paramSubs,{NormalDistribution[0,sigma/.Private`paramSubs]}]


Plot3D[{solnFunc00PF[[1]] @@{0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$3},solnFunc00RE[[1]] @@{0,ProtectedSymbols`xxxtm1Var$2,ProtectedSymbols`xxxtm1Var$3}},{ProtectedSymbols`xxxtm1Var$2,.0,2.0},{ProtectedSymbols`xxxtm1Var$3,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0],PlotRange->{0,1.5}]
*)
*)

Export["cFuncExt00PF.pdf",cfExt00=Plot3D[solnFuncExt00PF[[1]][kk,tt],{kk,.01,2},{tt,.9,1.1},AxesLabel->{Subscript[k,t-1],Subscript[\[Theta],t-1],Subscript[c,t]},PlotLabel->Subscript[c,t][Subscript[k,t-1],Subscript[\[Theta],t-1],0]]]

*)
